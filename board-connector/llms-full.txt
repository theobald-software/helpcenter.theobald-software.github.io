# Board Connector HelpCenter

> Access your SAP data directly from Board, without an additional data warehouse.  Learn how to use Board Connector by browsing our user documentation, knowledge base and more.

Full: https://helpcenter.theobald-software.com/board-connector/llms-full.txt

# Getting Started

This section shows how to install and set up Board Connector for the first time.

### Installation

Follow the steps below to install Board Connector for the first time:

1. [Download](https://theobald-software.com/en/download-trial/) a 30 day trial version of Board Connector.
1. Run the Board Connector executable (BOARDConnectorSetup.exe) to install the [Board Connector Designer and the Board Connector Server](../documentation/introduction/#software-architecture). For information on system requirements, see [Requirements](../documentation/setup/requirements/).
1. Make sure that the Board Connector Service is running on your windows system and that the default port 8097 is not blocked by your firewall.
1. Open the Board Connector Designer application and click **[ Connect]** to [connect to the Board Connector Server](../documentation/designer/#connect-the-designer-to-a-server) using the default settings.

For more information, see [Setup](../documentation/setup/).

### Connect to SAP

There are two types of SAP connections:

- connect via [RFC protocol](../documentation/sap-connection/settings/#source-type-rfc) (default)
- connect via [OData protocol](../documentation/sap-connection/settings/#source-type-odata)

Follow the steps below to connect to SAP using the standard RFC protocol.

1. Before connecting to SAP via RFC for the first time, set up an SAP dialog user with the necessary [SAP user rights](../documentation/setup-in-sap/sap-authority-objects/#general-authorization-objects).
1. In the main window of the Designer, click **[New]**. The window "Change Source" opens.
1. Enter a name for the SAP connection in the field **Name**, e.g., *s4hana*, *bw*, etc.
1. In the *General* tab, enter the system details of your SAP system. Input values for the SAP connection can be found in the *Properties* of the SAP Logon Pad or they can be requested from the SAP Basis team.
1. In the *Authentication* tab, enter the SAP credentials of the SAP dialog user.
1. Click **[Test designer connection]** to validate the connection between the Board Connector Designer and the SAP system.
1. Click **[Test server connection]** to validate the connection between the Board Connector Server and the SAP system.
1. Click **[OK]** to save the SAP source.

For more information, see [SAP Connection](../documentation/sap-connection/).

Tip

To edit a source or to create new sources, navigate to **Server > Manage Sources** in the menu bar.

### Create an Extraction

Extractions are the main entities of Board Connector. They define what data to extract from SAP and where to write the data. Follow the steps below to create a new extraction:

1. In the main window of the Designer, click **[New]**. The window "Create Extraction" opens.

1. Select an SAP Connection from the drop-down menu in **Source** .

1. Enter a name for the extraction .

1. Select one of the following extraction types :

   | Extraction Type | Connection Type | Description | | --- | --- | --- | | [BAPI](../documentation/bapi/) | RFC | Execute BAPIs and Function Modules. | | [BWCube](../documentation/bwcube/) | RFC | Extract data from SAP BW InfoCubes and BEx Queries. | | [BW Hierarchy](../documentation/hierarchy/) | RFC | Extract Hierarchies from an SAP BW / BI system. | | [DeltaQ](../documentation/deltaq/) | RFC | Extract data from DataSources (OLTP) and extractors from ERP and ECC systems. | | [OData](../documentation/odata/) | OData | Extract data via SAP OData services. | | [ODP(OData)](../documentation/odp-odata/) | OData | Extract ODP-based data using OData services. | | [ODP](../documentation/odp/) | RFC | Extract data via the SAP Operational Data Provisioning (ODP) framework. | | [OHS](../documentation/ohs/) | RFC | Extract data from InfoSpokes and OHS destinations. | | [Query](../documentation/query/) | RFC | Extract data from ERP queries. **Note: BEx queries are covered by BWCube**. | | [Report](../documentation/report/) | RFC | Extract data from SAP ABAP reports. | | [Table](../documentation/table/) | RFC | Extract data from SAP tables and views. | | [Table CDC](../documentation/table-cdc/) | RFC | Extract delta data from SAP tables and views. |

1. Click **[OK]**. The main window of the extraction type opens automatically.\
   Follow the instructions in the documentation of the selected extraction type to set up the extraction.

#### A Simple Extraction for Beginners

Follow the steps below to extract customer master data from the SAP table KNA1:

1. [Create an extraction](#create-an-extraction) that uses the Table extraction type.
1. In the main window of the extraction type, click **[Add]** to look up an SAP table. The window "Table Lookup" opens.
1. In the field **Table Name**, enter the name of the table to extract (KNA1) . Use wildcards (\*) if needed.
1. Click **[]** . Search results are displayed.
1. Select the table KNA1 and click **[OK]**. The application returns to the main window of the extraction type.
1. Optional: Select the table columns to extract. By default all columns are extracted. For more information on filter options and advanced settings, see [Define the Table Extraction Type](../documentation/table/#define-the-table-extraction-type)
1. Click **[Load live preview]** to display a live preview of the first 100 records.
1. Click **[OK]** to save the extraction type.

The extraction is now listed in the main window of the Designer. To edit an extraction, double-click the extraction.

### Run an Extraction

Extractions can be run directly in the Board Connector Designer or from Board, see [Run Extractions in Board](../documentation/run-extractions/#run-extractions-in-the-designer). Follow the steps below to testrun your extraction in the Designer:

1. In the main window of the Designer, select an extraction and click **[Run]** . The window "Run Extraction" opens.
1. Click **[Run in Browser]** to execute the extraction. If the extraction runs successfully, the extracted data is displayed in your browser.

For more information, see [Run Extractions](../documentation/run-extractions/).
# User Documentation

The user documentation of Theobald Software is designed to introduce readers to the main functions of Board Connector.

Theobald Software's claim is to keep the user documentation up to date according to the latest product version. Information concerning the older version is removed gradually from the documentation content. It is generally recommended to always install the latest version of the product.

Theobald Software's claim is to always update all the used screenshots of other software vendors, nevertheless this cannot be guaranteed.

©2024 Theobald Software GmbH. All rights reserved.

### Target group and audience

This documentation is created for all users of Board Connector. The user documentation offers an overview of the interface, of the navigation and of the basic information to the users who never or rarely worked with the product. Experienced users can find more detailed information on more complex topics and use the user documentation for reference.

Reading the "Getting Started" section is the prerequisite for working with the product. The documentation can also be useful during the evaluation phase.

### Typographical conventions

| Convention | Used for marking: | Example | | --- | --- | --- | | bold & square brackets | Buttons | **[Edit]** | | bold | URL buttons | **Subscriptions** | | bold | Fields within a window, tab names | **Name** | | italics | Input values | *MATNR* | | italics | Drop-down menu options | *TextAndCode* |

#### Notes and warning messages

There are three main types of warning messages with the corresponding colors.

| Signal word | Color | Severity and meaning | | --- | --- | --- | | Note | Blue | Additional information | | Warning | Yellow | Information that is important for executing an error free procedure | | Tip | Green | Tips | | Recommendation | Green | Theobald Software recommendations and best practices advice |

Warning Messages comply with EN 82079 and formulated according the SAFE-method that is derived from German. The SAFE method is a procedure for systematically designing safety instructions. The severity of the danger as well as the source of the danger.

**"SAFE"** stands for:

**S**chwere der Gefahr (Signalwort) **A**rt und Quelle der Gefahr **F**olgen bei Missachtung der Gefahr **E**ntkommen (Maßnahmen zur Abwehr der Gefahr)

Translation: Severity of the danger (Signal word) Type and source of the danger Consequences of disregarding the danger Escape (measures to avert the danger)

Example:

Warning

**RFC_ERROR_SYSTEM_FAILURE - No more storage space available for extending an internal table**\
To avoid a memory overflow on the SAP source system and to avoid huge overheads, choose a package size that suits your memory capacity.

Note

The corresponding SQL command is generated dynamically and executed on the SAP server.

This page shows how to connect the Board Connector Designer with a Board Connector Server.

## Connect the Designer to a Server

When starting the Board Connector Designer, the window "Connect to Board Connector Server" opens.\
Enter connection and user details to connect the Designer to a Board Connector Server.

1. Launch the Board Connector Designer.

1. When the Board Connector Server is a local server, the server address is *localhost*.\
   The default port (8096) may vary depending on the configuration.

1. If the service is not running on default port 8096, specify the port by adding :[port] after the host name. The default port can be configured in the [server settings](../server/server-settings/).

1. Select an authentication method. Once logged in, you can activate or deactivate methods of authentication, see [Access Management](../access-restrictions/#authentication-between-designer-and-server).

1. Click **[ Connect]** to connect the Designer to the Server. The main window of the Designer opens.

1. Launch the Board Connector Designer.

1. When the Board Connector Designer and the Board Connector Server run on different machines, enter the host name of the Board Connector Server. Make sure the port is not blocked by your firewall.

1. If the service does not run on default port 8096, specify the port by adding :[port] after the host name. The default port can be configured in the [server settings](../server/server-settings/).

1. Select an authentication method. Once logged in, you can activate or deactivate methods of authentication, see [Access Management](../access-restrictions/#authentication-between-designer-and-server).

1. Click **[ Connect]** to connect the Designer to the Server. The main window of the Designer opens.

Board Connector offers different methods of authenticating and securing the connection between the Board Connector Designer and the Board Connector Server. The default authentication methods are authentication via *Windows credentials (current user)* and *Anonymous (no encryption)*.

## Main Window of the Designer

The Designer features different functionalities to design and configure extractions.

Tip

Press `F1` to open the documentation page for particular windows.

### Main Menu Bar

| Icon | Menu Item | Description | Details | | --- | --- | --- | --- | | | Reset Preferences | Reset connection settings to server | [Connect the Designer to a Server](#connect-the-designer-to-a-server) | | | Disconnect | Log off the server | - | | | Exit | Close the Designer | - |

| Icon | Menu Item | Description | Details | | --- | --- | --- | --- | | | New | Create a new extraction | [Create an Extraction](../../getting-started/#create-an-extraction) | | | Edit | Edit an existing extraction | - | | | Delete | Delete an existing extraction | - | | | Clone | Clone an existing extraction | - | | | Add/Remove Keywords | Define keywords of selected extractions | [General Settings](../table/general-settings/) | | | Source | Select an existing SAP source system | [SAP Connection](../sap-connection/) | | | Log | Open extraction log | [Extraction Logs](../logs/) | | | Run | Run a selected extraction | [Run an Extraction](../run-extractions/#run-extractions-in-the-designer) | | | Abort | Abort a selected extraction | - | | | Clear Result Cache | Clear extraction cache | [Cache results](../table/general-settings/#misc-tab) | | | Refresh | Refresh extraction status | - | | | Filter | Define filters or keywords | [Define Keywords](../table/general-settings/#misc-tab) |

| Icon | Menu Item | Description | Details | | --- | --- | --- | --- | | | Logs | Open server logs | [Server Logs](../logs/) | | | Settings | Open server settings | [Server Settings](../server/server-settings/) | | | Manage Sources | Edit connection to source system | [SAP Connection](../sap-connection/) |

| Icon | Menu Item | Description | Details | | --- | --- | --- | --- | | | Set User Password | Set or change user password | [User Managements](../access-restrictions/user-management/) | | | Manage Users | Manage user groups | [User Groups](../access-restrictions/user-management/) |

| Icon | Menu Item | Description | Details | | --- | --- | --- | --- | | | Online Help (EN) | Open the HelpCenter | - | | | Submit Support Ticket | Open the Ticket Portal | [Support Portal](https://support.theobald-software.com/helpdesk/User/Register) | | | Download latest version | Link to My Theobald Software | [Customer Portal](https://my.theobald-software.com/) | | | Info | Product information | - | | | Version History | List of recent software changes | [Changelog](../../changelog/) |

### GUI Buttons

| Icon | Button | Description | Details | | --- | --- | --- | --- | | | New | Create a new extraction | [Create an Extraction](../../getting-started/#create-an-extraction) | | | Edit | Edit existing extraction | - | | | Delete | Delete existing extraction | - | | | Clone | Clone existing extraction | - | | | Refresh | Update of the extraction status | - | | | Search | Filter extraction names | [List of Extractions](#list-of-extractions) | | | Source | Select existing SAP source system | [SAP Connection](../sap-connection/) | | | Log | Open extraction log | [Extraction Logs](../logs/) | | | Run | Run a selected extraction | [Run an Extraction](../run-extractions/#run-extractions-in-the-designer) |

### List of Extractions

List of all extractions in the currently selected extraction group divided by name, type, modification and creation date etc.

Tip

Use the search bar above the list to filter extractions. Wildcards (\*) are not supported.\
More extensive filter options are available using the [GUI Buttons](#gui-buttons) .

Tip

To adjust the settings of multiple extractions at once, select multiple extractions using `Ctrl`+`Left Button`.\
You can now adjust the **[ Source]** settings for all selected extractions, see [GUI Buttons](#gui-buttons).

**Double Click:** Double-clicking an extraction works as a shortcut to the **[ Edit]** button.\
**Right-click:** Right-clicking an extraction in the list opens the following menu:

| Icon | Menu Item | Description | Details | | --- | --- | --- | --- | | | Edit | Edit an existing extraction | - | | | Delete | Delete an existing extraction | - | | | Clone | Clone an existing extraction | - | | | Add/Remove Keywords | Define keywords of selected extractions | [General Settings](../table/general-settings/) | | | Log | Open extraction log | [Extraction Logs](../logs/) | | | Source settings | Select an existing SAP source system | - | | | Run | Run a selected extraction | [Run an Extraction](../run-extractions/#run-extractions-in-the-designer) | | | Run in browser | Run a selected extraction in the default web browser | - | | | Abort | Abort a selected extraction | - |

### Status Bar

The status bar contains information about the following:

- Login username
- Server authentication method
- Designer access rights
- License type and validity period
- Connected BC server version
- Connected BC client version

This section contains user documentation for Board Connector.

Find more information on how to use and navigate through the user documentation in the section ["About this Documentation"](../about-this-documentation/).

### About Board Connector

The Board Connector is an SAP Connector that extracts data from SAP systems and loads it into Board. The main entities in Board Connector are called "extractions". An extraction is a combination of the following elements:

- A connection to a source system (SAP)
- A connection to a destination / target environment (Board)
- A defined extraction type (e.g., Table)

### Software Architecture

Board Connector consists of two components:

- A [Designer](../designer/) to design and configure extractions.\
  When designing extractions in the Designer, the user can create and modify extractions, sources and alter the server settings.
- A [Server](../server/) to execute extractions.\
  During the execution phase, the user can execute the extractions that were designed in the Designer. The execution of the extractions takes place on the server.

### Extraction Types

Board Connector offers the following extractions types to cover a wide range of data extraction scenarios.

Board Connector logs all steps performed on a system in log files.\
This page shows how to access server and extraction logs in the Designer. Logs can also be queried using the Board Connector [Web API](../../web-api/).

### Log Levels

Each log entry is assigned one of the following message types:

| Type of log entry | Description | | --- | --- | | *E - Errors* | Error messages issued during the extraction process. | | *I - Information* | Status messages, about processes that do not lead to an error. | | *W - Warnings* | Information about problems that do not lead to an extraction error, e.g., authentication errors. | | *D - Debug Details* | Detailed information that helps finding error cause. |

### Access Server Logs

To open the server logs, navigate to **Server > Log (Web Worker)** in the main window of the Designer.

The logs are created per TCP connection. To switch between logs, use the list of timestamps on the left. Server logs are automatically deleted after a defined period of time, see [server settings](../server/server-settings/).

For information on how to query server logs using the web API, see [Web API - Get Server Logs](../../web-api/#get-server-logs).

### Access Extraction Logs

To open the extraction logs, select an extraction from the list of extractions and click **[ Logs]** in the main window of the Designer.

The timestamp for each extraction process is displayed in the left part of the "View Extraction Log" window. Extraction logs are automatically deleted after a defined period of time, see [server settings](../server/server-settings/).

For information on how to query extraction logs using the web API, see [Web API - Get Extraction Logs](../../web-api/#get-extraction-logs).

- To filter the execution date of the logs, enter a time period in .
- To filter log levels, use the checkboxes underneath the log display .
- To copy the current log to the clipboard, click **[]** .

### Activate Tracing

The RFC communication with SAP can be recorded by tracing for troubleshooting purposes.\
Standard logging is always active and is independent of the tracing setting.

1. Open the [SAP connection settings](../sap-connection/settings/) of the source that is assigned to the failing extraction.
1. In the tab *RFC Options*, enter the path to an existing directory in the field **Trace directory** or create a new directory for the trace files.
1. Reproduce the error. XML files with the tracing information are created in the specified directory.
1. Compress the folder to a zip file ("Trace.zip") and send the zip file to the Theobald [support team](https://support.theobald-software.com/helpdesk/).
1. Reopen the SAP connection settings and delete the path in the field **Trace directory**.

Warning

**Increase of used hard drive memory.**\
A big amount of information is collected when debug logging is activated. This can decrease the capacity of your hard drives dramatically. Activate the debug logging only when necessary e.g., upon request of the support team.

### Generated Log Files

The log files are stored in the installation directory of Board Connector, e.g., `C:\Program Files\BOARDConnector\logs`. The following log files are created:

| Type | File Name | Description | Location path | | --- | --- | --- | --- | | Server | ServiceLog.txt | Contains the activities of XtractService.exe. | `C:\Program Files\BOARDConnector\logs` | | Server | WebServer-Log: yyyyMMddTHHmmss.fffZ.log, e.g., 20201013T055455.465Z.log | The name contains the timestamp in UTC. A new file is created when the server is started, additionally a new log file is created every 24 hours. [Theobald.BC.Web.Listener.exe](../server/server-tasks/#theobaldbcweblistenerexe) is the corresponding process. | `C:\Program Files\BOARDConnector\logs\servers\web\listener` | | Server | WebWorker-Logs: yyyyMMddTHHmmss.fffZ.log, e.g., 20201013T055455.465Z.log | The name contains the timestamp in UTC. A new file is created when a TCP connection is accepted.Theobald.BC.Web.Worker.exe is the corresponding process. | `C:\Program Files\BOARDConnector\logs\servers\web\worker` | | Extraction | Extraction logs: yyyyMMddTHHmmss.fffZ.log, e.g., 20201013T055455.465Z.log | The name contains the timestamp in UTC. A new file is created to start an extraction. Theobald.BC.Web.Worker.exe is the corresponding process. | `C:\Program Files\BOARDConnector\logs\extractions\[Name_der_Extaktion]` |

For more information on the server processes, see [Server Tasks](../server/server-tasks/).

Tip

To redirect logs to another location, symlink the logs folder of the installation directory to a custom directory.\
Example for PowerShell:

```shell
New-Item -ItemType SymbolicLink -Target "E:\log" -Path "C:\Program Files\BOARDConnector\logs"

```

This page shows how to run extractions directly in the Designer and in Board.\
Extractions are triggered by an HTTP request and executed on the [Board Connector Server](../server/).

The configuration of [source](../sap-connection/), destination and [extraction type](../introduction/#extraction-types) defines how the data transfer is performed. This configuration can contain dynamic elements, like [extraction parameters](../parameters/extraction-parameters/) and [script expressions](../parameters/script-expressions/).

### Run Extractions in the Designer

The Board Connector Designer offers a test run option for extractions to make sure that the extraction runs properly. You can define runtime parameters and other options to run an extraction directly in your web browser.

1. Select an extraction from the [list of extractions](/board-connector/documentation/designer/#list-of-extractions) and click **[Run]** . The window "Run Extraction" opens.
1. If needed, define [extraction parameters](../parameters/extraction-parameters/):
   - Select the checkbox of the parameter you want to override . The parameter is added to the extraction URL.
   - Enter a value for the parameter.
1. Click **[Run in Browser]** to display the extraction results in your browser.

Extractions are triggered by an HTTP request and executed on the Board Connector server.

### Run Extractions in Board

Extractions can be loaded in Board using the [Data Reader](https://www.boardmanual.com/board14/data-modeling/data-model-design-sections/data-reader/basic-concepts-data-reader.htm).\
The depicted example uses an extraction "Plants" that extracts data from the SAP table *T001W*.

1. In Board, select **[+ DATA READER]** to create a new Data Reader. Enter a name and a group . Select the source type **SAP**.
1. Create a new connection to the Board Connector Server or select an existing connection. Set a *name* and the *URL* of the Board Connector Server, e.g., localhost:8197.
1. Click the "Connect" icon to pull a list of extractions from Board Connector.
1. Select an extraction (here: T001W) from the EXTRACTOR box on the right hand-side. The extraction's metadata (field names, data types) is listed in the window below.
1. **Optionally:** Specify URL parameter(s) to add to the connection string. In the depicted scenario a WHERE-clause is specified, restricting the extraction to purchasing organization (EKORG) '1000'. For more information about URL parameters, see [Dynamic Connection Parameters](../parameters/extraction-parameters/).
1. Click **[Browse Table]** to get a preview of the extracted SAP data. The preview displays real or dummy data depending on the extraction type.
1. Click **[MAPPING]** to proceed to mapping the fields of the extraction with existing Board entities.
1. Select the corresponding fields for mapping (e.g., WERKS, NAME1, etc.).
1. In the column **Position**, map each field of the entity to an SAP field. Select the correct mode for *Insert* or *Update*. In the depicted example, the mode "ADD NEW ITEM" is selected for all fields.
1. Click **[Browse Query]** and **[OK]**.
1. Execute the Data Reader to extract the SAP data.

After executing the Data Reader, the Board protocol shows how many rows are loaded.

Note

When using Board SaaS with Board Connector, a recent software change requires users to update Board and to change the connection URL of the Data Reader. Set the connection URL of the Board Data Reader from TCP to an HTTP connection (port 8097) or an HTTPS (port 8197) connection. For more information, see [Board Release Notes Summer 2023](https://www.boardmanual.com/2021/summer/whats-new-release-notes/2023-summer-release/other-enhancements.htm?rhsearch=sap%20connector&rhhlterm=sap%20connector)

This section contains information on how to set up access restrictions to the Designer and the Server.

- Restrictions to the Designer affect the creation or modification of sources and extractions
- Restrictions to the Server affect the execution of extractions

There are two types of users and user groups, access can be restricted to:

- Windows AD users (Kerberos authentication)
- [Custom users](user-management/) (Basic authentication)

### Authentication Between Designer and Server

The connection between the Designer and the Server can be established using different authentication and encryption methods. The authentication method guarantees the verification of the identity of the logged in user.

Note

When running extractions in the Designer, the executing user is always the Windows account that runs the Designer, not the login user. To run extractions under a different user, start the Board Connector Designer application as a different user (`Shift` + ).

Note

To use Kerberos transport encryption or authenticate an Active Directory (AD) user, a Kerberos Target Principal Name (TPN) is required. TPN can either be a User Principal Name (UPN) or a Service Principal Name (SPN). For more information on TPN, see [Knowledge Base Article: Target Principal Field (TPN)](../../knowledge-base/target-principal-TPN/).

The following combinations of transport encryption and authentication are available:

| Authentication Method | Description | TPN required | | --- | --- | --- | | Windows credentials (current user) | The AD user, who runs the Designer authenticates themselves towards the Server via Kerberos. All data exchanged between Designer & Server is encrypted using Kerberos. | | | Windows credentials (different users) | The AD user, whose user name and password are entered in the login window, authenticates themselves to the BC server via Kerberos. All data exchanged between Designer & Server is encrypted using Kerberos. | | | Custom credentials (TLS encryption) | The custom user, whose user name and password are entered in the login window, authenticates themselves to the Server. All data exchanged between Designer & Server is encrypted via TLS. To use TLS transport encryption, an [X.509 server certificate](install-x.509-certificate/) is required for the Service (can be stored in the [server settings](../server/server-settings/). In the login window, the DNS hostname of the server for which the certificate is issued needs to be entered into the *Server* field. | | | Custom credentials (Kerberos encryption) | The custom user, whose user name and password are entered in the login window, authenticates themselves to the Server. All data exchanged between Designer & Server is encrypted using Kerberos. | | | Anonymous (no encryption) | There is no authentication. The data exchanged between Designer & Server is transferred in plain text without transport encryption. | |

### Activate / Deactivate Authentication

Follow the steps below to activate or deactivate authentication methods:

1. Open **Server > Settings** from the main window of the Designer.
1. In the tab *Configuration Server*, activate or deactivate your authentication methods.
1. Click **[OK]** to confirm your input. If prompted, restart the server.

When [starting the Designer](../designer/), only the activated authentication methods are available for the server connection.

The following article shows how to install an X.509 certificate for transport encryption.\
The installation of an X.509 certificate is required to use [Transport Layer Security (TLS)](https://learn.microsoft.com/en-us/windows/win32/secauthn/transport-layer-security-protocol) and secure authentication with Board Connector.

### About X.509 Certificates

There are two main approaches for creating an X.509 certificate:

- Certificate released by an (internal) certification authority (CA)
- Self-signed certificate

On test environments you can use a self-signed certificate. For production environment it is recommended to use a certificate released by an (internal) certificate authority (CA).

Note

When using Board Cloud, make sure to use a certificate released by a public certification authority (CA).

### Create and Import the X.509 Certificate

Make sure to have a TLS certificate issued by your IT network team considering the following points:

1. The certificate property “Subject Alternative Name” contains the DNS name of the server that runs the BOARD Connector Windows service. When activating TLS, the *Subject Alternative Name* is used as the new hostname.
1. The certificate common name (CN) attribute contains the DNS name of the server. To display the Common Name (CN) of the certificate, double-click the certificate in the Cetrificate Manager and navigate to the *Details* tab.
1. Import the certificate to the [Windows Certificate Store](<https://technet.microsoft.com/en-us/ms788967(v=vs.91)>) of the machine, that runs the BOARD Connector Windows service using the Microsoft Management Console (mmc.exe). The depicted example uses the server name "TODD":
1. Right-click the certificate and navigate to **All Tasks > Manage private keys** to add a new permission entry for the Windows user that runs the BOARD Connector Windows service.
1. Enter the object name "NT Service\\BOARD Connector Service" and click **[Check Names]** before applying the changes.

The certificate is now available on your machine.

Note

The Windows Certificate Store works with most browsers. NMozilla Firefox offers its own certificate storage. Configure your Firefox browser to trust certificates in the Windows certificate store or import the certificate via an enterprise policy, see [Mozilla Support: Setting Up Certificate Authorities (CAs) in Firefox](https://support.mozilla.org/en-US/kb/setting-certificate-authorities-firefox).

### Integrate the X.509 Certificate

1. Open **Server > Settings** from the main window of the Designer.
1. In the tab *Web Server*, click **[Select X.509 certificate]**. The window "Edit certificate location" opens.
1. Select the X.509 certificate created for your machine under **Local Machine > Personal**.
1. Click **[OK]** to confirm your input. If prompted, restart the server.

The Board Connector server is now accessible via https protocol.

______________________________________________________________________

#### Related Links

- [Knowledge Base Article: Enable Secure Network Communication (SNC) via X.509 certificate](../../../knowledge-base/enable-snc-using-pse-file/)
- [Knowledge Base Article: Certificate Renewal for TLS](../../../knowledge-base/certificate-renewal/)
- [Change Service Account](../../server/service-account/)

This page shows how to restrict access to Board Connector's Designer to Windows AD users or [custom users](../user-management/#create-custom-users). Access restrictions on the Designer ensure that only dedicated users can create or edit sources and extractions. Access restrictions can be performed on several levels.

### Restrict Access to the Designer

Follow the steps below to restrict the access to the Designer to specific [users or user groups](../user-management/). By default, the access restrictions also apply to extractions and sources.

1. Open **Server > Settings** from the main window of the Designer.
1. In the tab *Configuration Server*, activate the option **Restrict Designer access to the following users/groups**.
1. Activate or deactivate authentication methods for the users or user groups, see [Authentication Between Designer and Server](../#authentication-between-designer-and-server).
1. Click **[Add]** to add existing Windows AD users or [custom users](../user-management/#create-custom-users).
1. Assign access rights to the users or user groups.

After access restrictions are set up, only designated users can connect to the Board Connector server when [starting the Designer](../../designer/).

### Restriction Levels

A user group can have one of the following access rights. These rights only concern actions (read, create, modify) that can be performed within the Designer.

| Restriction Level | Description | | --- | --- | | Read | Members of this group have read access, but cannot edit extractions. | | Modify | Members of this group have the same access rights as users with "read" rights. Furthermore, users with "modify" rights can edit existing extractions, but cannot create or clone extractions. | | Create | Members of this group have identical access rights as the users with "modify" rights. In addition, users with "create" rights can create and clone extractions, but cannot perform any admin activities. | | Admin | Members of this group have all rights, no restrictions and can perform admin tasks. Admin activities include changing server settings, accessing server logs, or editing users and connections (SAP and target environments). Access restrictions on extractions or the source system are ignored. |

### Restrict Access to Extractions

Access control can be performed at extraction level.\
By default, the Designer access restrictions also apply to extractions and sources.

1. Double-click an extraction. The main window of the extraction type opens.
1. Click **[General Settings]**. The window "General Settings" opens.
1. In the tab *Security*, add or remove existing users and assign access rights to the users.

The access control on the extraction level overrides the settings at server level.

### Restrict Access to Sources

Access control can be performed at the SAP source level.\
By default, the Designer access restrictions also apply to extractions and sources.

1. Open **Server > Manage Sources** from the main window. The window "Manage Sources" opens.
1. Click **[]** to edit an existing connection. The window "Change Source" opens.
1. In the tab *Access Control*, add or remove existing users and assign access rights to the users.

The access control on the source level overrides the settings at server level.

This page shows how to restrict access to Board Connector's built in web server to Windows AD users or [custom users](../user-management/#create-custom-users). Access restrictions on the web server ensure that only dedicated users can execute extractions. Windows AD credentials or credentials of a custom user must be submitted when running an extraction.

Note

As of Board Server version 11.3 submitting credentials for Basic Authentication (custom users) is not supported by the SAP Data Reader. Securing web access to extractions can be accomplished by using network level security methods, e.g., firewalls.

### Activate TLS Encryption

Access restrictions require users to access the web server through an https connection (TLS encryption). This requires the installation of an X.509 certificate. If the certificate is not listed in the Windows certificate store, [install the X.509 certificate](../install-x.509-certificate/#create-and-import-the-x509-certificate).

1. Open **Server > Settings** from the main window of the Designer.

1. In the tab *Web Server* tab, select one of the following protocols:

   - **HTTPS - Restricted to AD users with Designer read access**
   - **HTTPS - Restricted to custom users with Designer read access**

1. Click **[Select X.509 certificate]**. The "Edit certificate location" window opens.

1. Select the X.509 certificate created for your machine under **Local Machine > Personal**.

1. Click **[OK]** to confirm your input. The window closes.

1. Optional: Change the port number of the *HTTPS port*.

1. Click **[OK]** to confirm your input. If prompted, restart the server.

### Restrict Access to Windows AD Users (Kerberos Authentication)

Follow the steps below to limit the execution of extractions to users that pass Windows AD credentials, when calling extractions. The caller must have at least *Read access* to the Designer.

1. Assign a Windows service account under which the Board Connector service runs, see [Change Service Account](../../server/service-account/).
1. [Activate TLS encryption](#activate-tls-encryption).
1. Open **Server > Settings** from the main window of the Designer.
1. In the tab *Web Server*, select **HTTPS - Restricted to AD users with Designer read access**.
1. In the tab *Configuration Server*, add the custom users or groups that are allowed to execute extractions. For more information, see [Designer Access](../restrict-designer-access/#restrict-access-to-the-designer).
1. Assign at least *Read* permission to the Windows AD users.
1. Close all windows with **[OK]**. If prompted, restart the server.

Note

This type of authentication uses Kerberos authentication via SPNEGO. NTLM is not supported.

### Restrict Access to Custom Users (Basic Authentication)

Follow the steps below to limit the execution of extractions to users that pass [custom credentials](../user-management/#create-custom-users), when calling extractions. The custom user must have at least *Read access* to the Designer.

1. [Activate TLS encryption](#activate-tls-encryption).
1. Open **Server > Settings** from the main window of the Designer.
1. In the tab *Web Server*, select **HTTPS - Restricted to custom users with Designer read access**.
1. In the tab *Configuration Server*, add the custom users or groups that are allowed to execute an extraction. For more information, see [Designer Access](../restrict-designer-access/#restrict-access-to-the-designer).
1. Assign at least *Read* permission to the custom users.
1. Close all windows with **[OK]**. If prompted, restart the server.

______________________________________________________________________

#### Related Links

- [Wikipedia: SPNEGO](https://en.wikipedia.org/wiki/SPNEGO)
- [Knowledge Base Article: Enable Secure Network Communication (SNC) via X.509 certificate](../../../knowledge-base/enable-snc-using-pse-file/)
- [Knowledge Base Article: Certificate Renewal for TLS](../../../knowledge-base/certificate-renewal/)
- [Server Settings](../../server/server-settings/)

This page shows how to create custom users and user groups in the Board Connector Designer. To restrict access to the Board Connector Designer or Server, you can use already existing [Windows AD Users](https://learn.microsoft.com/en-us/windows-server/identity/ad-ds/manage/understand-default-user-accounts) and Groups or create your own custom users and groups.

Note

Windows AD Users and Groups are created outside of the Designer. Be careful to only add Windows AD *Security Groups* to the Designer. Users that are assigned to *Distribution Groups* are denied access at logon.

### Create Custom Users

Follow the steps below to create custom users:

1. Open **Server > Manage Users** from the main window of the Designer.
1. Click **[Add]** to create a new user.
1. Enter a username and a password for the user.
1. Click **[OK]** to confirm your input.

At the time of user creation, no rights need to be assigned. For information on how to assign access rights, see [Designer Access](../restrict-designer-access/).

### Assign Custom Users to User Groups

Follow the steps below to assign custom users to user groups. It is recommended to assign users to groups and grant access to particular actions instead of adding single users and granting them access one by one.

1. Open **Server > Settings**.
1. In the tab *Configuration Server*, activate the option **Restrict Designer access to the following users/groups**.
1. Click **[New]** to create a custom user group.
1. Click **[OK]** to close the server settings. If prompted, restart the Designer.
1. Open **Server > Manage Users** from the main window of the Designer.
1. Select an existing custom user and click **[Edit]**. The "Edit user" window opens.
1. Use the arrows **[\<]** and **[>]** to assign and remove users to and from groups.
1. Click **[OK]** to confirm your input.

Custom users can only be assigned to custom user groups. Windows AD users can only be assigned to Windows AD groups, but not to custom user groups.

### User Groups after Migration

As custom users can only be assigned to custom user groups and Windows AD users can only be assigned to Windows AD groups, the created custom user groups may disappear when migrating to a newer product version. This does not affect access management, but the access at user level is resolved.

To grant access at group level, the Windows AD users need to be assigned to new Windows AD groups.

This page shows how to use the BAPI extraction type.\
The BAPI extraction type can be used to parameterize and execute SAP function modules and BAPIs for automation.

### About Function Modules / BAPIs

Function modules are procedures that encapsulate and reuse global functions in the SAP system. SAP systems contain several predefined functions modules that can be called from any ABAP program. A Business Application Programming Interface (BAPI) is a remote function module that can access business data and processes of an SAP system from different systems.

### Custom BAPIs

The use of custom BAPIs (Z function modules) is possible. Issues specific to Z function modules are not included in the scope of support provided by Theobald Software.

### Prerequisites

- A connection to an SAP system is available, see [SAP Connection](../sap-connection/).
- The SAP user has sufficient user rights, see [SAP Authority Objects](../setup-in-sap/sap-authority-objects/#bapi).

Warning

**Missing Authorization.**\
To use the BAPI extraction type, access to the designated authority objects (RFC) in SAP must be available. Adjust [SAP Authority Objects: BAPI](../setup-in-sap/sap-authority-objects/#bapi) accordingly.

### Create a BAPI Extraction

1. In the main window of the Designer, click **[New]** to create a new extraction. The window "Create Extraction" opens.
1. Select an [SAP Connection](../sap-connection/) of type **RFC** from the drop-down menu **Source**.
1. Enter a unique name for your extraction.
1. Select the extraction type **BAPI**.
1. Click **[OK]**. The main window of the extraction type opens automatically.

The majority of the functions of the extraction type can be accessed in the main window.

### Look up a Function Module / BAPI

1. In the main window of the extraction type, click **[]** to look up a Function Module / BAPI. The window "Function Module Lookup" opens.
1. In the window "Function Module Lookup" enter the name of the function module or BAPI . Use wildcards (\*) if needed.
1. Click **[]** . Search results are displayed.
1. Select a Function Module / BAPI and click **[OK]**.

The application returns to the main window of the extraction type.

### Define the BAPI Extraction Type

The BAPI extraction type offers the following options for defining parameters of a Function Module / BAPI:

1. Add input parameters (data you want to send to SAP) in **Imports**, see [Import Parameters](input-and-output/#import-parameters).\
   You can enter scalar values or structures .

1. Add output parameters (data you want to receive from SAP) in **Exports**, see [Export Parameters](input-and-output/#export-parameters).\
   Select output by activating the checkbox next to the items.

1. Optional: If available, define input and output parameters in **Changings**, see [Changings Parameters](input-and-output/#changing-parameters).

1. Add tables to the output of the extraction type or add table parameters to the input of the extraction type in **Tables**, see [Table Parameters](input-and-output/#table-parameters).

   - Click **[]** to check the names and data types of the table fields .
   - Activate the checkbox in the output column to add items to the output .
   - Click **[]** to edit the content of the table .

1. Optional: If available, define which exceptions thrown by the Function Module / BAPI are ignored during runtime, see [Exceptions](input-and-output/#exceptions).

1. Check the [General Settings](general-settings/) before running the extraction.

1. Click **[OK]** to save the extraction type.

You can now run the extraction, see [Run Extractions](../run-extractions/).

______________________________________________________________________

#### Related Links

- [Knowledge Base: Access Data in the SAP Public Cloud](../../knowledge-base/access-data-in-the-sap-public-cloud/)
- [Knowledge Base: Read Data from Cluster Fields in Tables PCL1 and PCL2 (Payroll)](../../knowledge-base/read-data-from-cluster-fields-in-the-tables-pcl1-and-pcl2-payroll/)

Runtime parameters are are placeholders for values that are passed at runtime, see [Extraction Parameters - Custom](../../parameters/extraction-parameters/#custom).

## Create Runtime Parameters

There are two types of runtime parameters:

- [Scalar parameters](#scalar-parameters) represent a single value.
- [List parameters](#list-parameters) represent multiple values.

### Scalar Parameters

Follow the steps below to create a scalar runtime parameter:

1. In the main window of the component click **Edit runtime parameters**. The window “Edit Runtime Parameters” opens.

1. Click **[Add Scalar]** to define scalar parameters to be used as placeholders for actual values. The placeholders need to be populated with actual values at runtime.

   Tip

   Parameter0..-n is the default naming for the added parameter. You can enter a name of your choice.

1. Select one of the following data types from the drop-down menu. The data types may correlate to SAP data types.

   | Type | Description | | --- | --- | | *Text* | Can be used for any type of SAP selection field. | | *Number* | Can be used for numeric SAP selection fields. | | *Flag* | Can only be used for SAP selection fields THAT require an ‘X’ (true) or a blank ‘‘ (false) as input value. |

1. Click **[OK]** to confirm.

The runtime parameters are now available in the extraction type.

### List Parameters

Follow the steps below to create a list runtime parameter:

1. In the main window of the component click **Edit runtime parameters**. The window “Edit Runtime Parameters” opens.

1. Click **[Add List]** to define list parameters that contain multiple values separated by commas e.g., 1,10 or “1”, “10”. The placeholders need to be populated with actual values at runtime.

   Tip

   Parameter0..-n is the default naming for the added parameter. You can enter a name of your choice.

1. Click **[OK]** to confirm.

The runtime parameters are now available in the extraction type.

## Assign Runtime Parameters

Follow the steps below to assign runtime parameters to input fields of import, changings or table parameters of a Function Module / BAPI:

1. Navigate to the item you want to parameterize in the **Imports**, **Changings** or **Tables** tab.
1. Click the icon button next to the item to switch from static values () to runtime parameters (). If no icon is available, [create a runtime parameter](#create-runtime-parameters).
1. Select a runtime parameter from the dropdown-list.

Pass values during runtime, see [Extraction Parameters - Custom](../../parameters/extraction-parameters/#custom).

This page contains an overview of the settings in the window "General Settings".\
To open the general settings, click **General Settings** in the main window of the extraction type.

### Misc. Tab

The *Misc.* tab covers cache settings, column encryption and keywords of an extraction type.

#### Cache results

This option can be neglected. Board Connector always uses the result cache, because Board always requests the results twice.

#### Keywords

One or more keywords (tags) can be assigned to an extraction. Keywords can be entered directly in the keyword field. You can use these keywords to filter extractions in the "Search Extractions" window. To open the "Search Extractions" window, click **[ Search]** in the main window of the Designer.

Tip

To add keywords to multiple extractions at once, select the extractions in the main window of the Designer.\
Right-click + **Add/Remove keywords** opens the window "Add/Remove Keywords To/From Multiple Extractions".

### Security Tab

Restrict user access to the extraction. For more information, see [Restrict Designer Access](../../access-restrictions/restrict-designer-access/).

### CSV Tab

The *CSV* tab covers data and date formatting.

#### Column Name Style

Defines the style of the column name. Following options are available:

| Option | Description | | --- | --- | | **Code** | The SAP technical column name is used as column name in the destination e.g. MAKTX. | | **PrefixedCode** | The SAP technical column name is prefixed by SAP object name and the tilde character e.g., MAKT~MAKTX | | **CodeAndText** | The SAP technical column name and the SAP description separated by an underscore are used as column name in the destination e.g., MAKTX_Material Description (Short Text) | | **TextAndCode** | The SAP description and the SAP technical column name description separated by an underscore are used as column name in the destination e.g., Material Description (Short Text)\_MAKTX |

#### Date Conversion

When **Convert dates** is active, the following date conversions apply:

| Option | Description | | --- | --- | | **Year 0** | Converts the SAP date 00000000 to the entered value. | | **Year 9999** | Converts the SAP date 9999XXXX to the entered value. | | **Invalid values** | If an SAP date cannot be converted to a valid date format, the invalid date is converted to the entered value. NULL is supported as a value. |

### Columns Order Tab

The "Columns Order" feature enables users to rearrange the order of result columns when running an extraction. To rearrange the result order, assign indexes to the available result columns. Index 0 defines the first column in the result set, index 1 the second columns, etc.

| Option | Description | | --- | --- | | **Enabled** | When this option is active, the defined column order is applied when running the extraction. | | **Swap** | Swaps the index of 2 columns. All other columns keep their indexes. | | **Insert** | Inserts the selected column into the selected index. All other indexes are recalculated. | | **Reset default** | Restores the original column order. |

This page contains an overview and description of the Import, Export, Changings and Tables parameter in the BAPI extraction type.

Each Import, Export, Changings and Tables parameter can have one of the following representations:

- A scalar field (e.g., characters, date, time, number, amount etc.).
- A structure consisting of several components.
- A table (tabular array of data) consisting of columns (data values of the same type) and rows (data records).

## Import Parameters

Import parameters represent the input values sent from the client to SAP. In the tab **Imports** you can define import parameters that can be presented as scalar values or structures .

To use the filtering function, enter text in the headers of the columns **Name** and **Description**.

### Scalar Parameters

Assign single values to an import parameter by using one of the following options:

- If the input field is empty, enter a static value.
- If a checkbox is displayed in the input field, the parameter is predefined in SAP. The value in SAP is displayed in a light gray font. To disable the predefined value, activate the checkbox and leave the field empty or enter a new value.
- If **[]** is displayed in the input field, enter a static value. Click **[]** to switch between static values and dynamic values that are set at runtime.
- If **[]** is displayed in the input field, select a [runtime parameter](../edit-runtime-parameters/). Click **[]** to switch between dynamic values and static values.

When using runtime parameters, make sure the data type of the input matches the data type in SAP.

### Structure Parameters

When a Function Module / BAPI uses structures as import parameters, you can assign structure elements (i.e. fields) similarly to single [scalar fields](#scalar-parameters). Setting a single value or a parameter for the whole structure is not possible.

1. Click **[]**. The window "Edit Structures" opens.
1. Enter static values ( **[]** icon or no icon) or assign runtime parameters ( **[]** icon).

Tip

It is possible to use tables as input parameters, see [Tables Parameters](#table-parameters).

## Export Parameters

Export parameters represent the output values sent from SAP back to the client after the execution of a Function Module. In the tab **Export** you can select the items you want to add to the output of the extraction type.

### Add Items to Output

Mark the checkbox in the output column to add an item to the output of the extraction type.

To use the filtering function, enter text in the headers of the columns **Name** and **Description**.

Tip

It is possible to use tables as output parameters, see [Add Tables to Output](#add-tables-to-output).

## Changing Parameters

Changing parameters represent parameters that can be used for input and output. In the tab **Changings** you can define the changing parameters.

## Table Parameters

Table parameters are parameters presented in a table structure consisting of multiple rows. Tables can be used for input and output. In the tab **Tables** you can define table parameters for importing and exporting data into and from an SAP Function Module or BAPI.

Tables represent a structure of multiple rows of the same data type.

To use the filtering function, enter text in the headers of the columns **Name** and **Description**.

Note

Only **5** tables are available for parallel exporting.

- Click **[]** to check the names and data types of the table fields .
- Activate the checkbox in the output column to add items to the output .
- Click **[]** to edit tables .

### Access Metadata of Tables

Click **[]** to display the metadata of a table. The metadata includes the name and the data type of all fields. After the function module was edited in SAP, refresh the metadata by clicking **Refresh metadata**

### Add Tables to Output

Mark the checkbox in the output column to add a table to the output.

### Edit Tables

You can assign tables elements (i.e. fields) similarly to single [scalar fields](#scalar-parameters):

1. Click **[]**. The window "Edit Table Contents" opens.
1. Click **[Add]** to add new set of parameters.
1. Enter values or runtime parameters.\
   When using runtime parameters, make sure the data type of the input matches the SAP data type.
1. Click **[Remove]** to delete a row.

## Exceptions

**Exceptions** refer to ABAP exceptions / errors messages of an SAP BAPI. If an exception occurs during runtime, Board Connector returns a corresponding error message.

By default, all exceptions result in errors when running the BAPI extraction type. To ignore exceptions during runtime, deselect the exceptions in the **Exceptions** tab.

This page shows how to use the BWCube extraction type.\
The BWCube extraction type can be used to extract MDX or BICS data directly from BW InfoProviders (e.g., Cubes) or from BW Queries. The BW Queries can be based on InfoProviders.

### Prerequisites

- A connection to an SAP system is available, see [SAP Connection](../sap-connection/).
- The SAP user has sufficient user rights, see [SAP Authority Objects](../setup-in-sap/sap-authority-objects/#bw-cube-bw-query).
- To extract a BW Query, the attribute *Allow External Access to this Query* of the Query must be active in the BEx Query Designer or the BW Modeling Tool, see [Troubleshooting Article: Allow external access to BW Queries](https://support.theobald-software.com/helpdesk/KB/View/13800-allow-external-access-to-bw-queries).

Warning

**Missing Authorization.**\
To use the BWCube extraction type, access to the designated authority objects (RFC) in SAP must be available. Adjust [SAP Authority Objects: BW Query / BW Cube](../setup-in-sap/sap-authority-objects/#bw-cube-bw-query) accordingly.

### MDX versus BICS

The BWCube extraction type can extract data using the OLAP BAPI Interface (MDX) or the native BICs interface. The following table shows the differences between the two extractors:

| MDX | BICS | | --- | --- | | **Lookup syntax for BEx Queries:** `[tech. name of InfoPovider]/[tech. name of BEx Query]` | **Lookup syntax for BEx Queries:** `[tech. name of BEx Query]` Example: `0SD_C03_Q0018` | | **Lookup syntax for InfoProviders:** `$[tech. name of InfoProvoider]` | **Lookup syntax for InfoProviders:** `[tech. name of InfoProvider]` Example: `0SD_C03` | | **Wildcards in lookup:** The BEx-Query setting [Allow External Access to BW Queries](https://support.theobald-software.com/helpdesk/KB/View/13800-allow-external-access-to-bw-queries) is required. Example: `*0SD_C03_Q0018` instead of `0SD_C03/0SD_C03_Q0018` | **Wildcards in lookup:** not required and therefore not supported | | **Supported InfoProviders:** InfoCubes, Multiproviders, Composite Providers | **Supported InfoProviders:** InfoCubes, MuliProviders, Composite Providers, DSOs | | **Column names of Key figures:** EnterpriseID | **Column names of Key figures:** Technical name If techn. name is empty: name of the base measure. If name of the base measure is empty: EnterpriseID. **Tip:** In case of duplicate names, change the technical name in the BEx Query Designer. | | **Limit of Dimensions:** max. 50 dimensions | **Limit of Dimensions:** - |

### Create a BW Cube Extraction

1. In the main window of the Designer, click **[New]** to create a new extraction. The window "Create Extraction" opens.
1. Select an [SAP Connection](../sap-connection/) of type **RFC** from the drop-down menu **Source**.
1. Enter a unique name for your extraction.
1. Select the extraction type **BW Cube**.
1. Click **[OK]**. The main window of the extraction type opens automatically.

The majority of the functions of the extraction type can be accessed in the main window.

### Look Up a BW Cube or Query

1. In the main window of the extraction type, click **[]**. The window “Cube and Query Lookup” opens.

1. Select the *Extractor*, *Datasource Type* and *Extraction Settings* of the object .

   | Option | Description | | --- | --- | | *Extractor* | defines if data is extracted using the OLAP BAPI Interface (MDX) or the native BICS Interface. BICS can only be used in combination with the [NetWeaver RFC protocol](../sap-connection/settings/#rfc-libraries). | | *Datasource Type* | defines if the look up searches for a BEx Query or an InfoProvider. | | *Extraction Settings* | only available for the MDX extractor. Use **Only Structure** if your BWCube extraction was created in an older software version, see [extraction settings](settings/) for more information. |

1. In the search bar, enter the name of a Query or a BW Cube / InfoProvider . Use wildcards (\*), if needed.

1. Click **[]**. Search results are displayed.\
   Alternatively click **[Direct Load]** to skip the lookup and load the BW Cube / InfoProvider directly. **[Direct Load]** only works if the full name is entered correctly in the search bar.

1. Select a Query or BW Cube / InfoProvider and click **[OK]** to confirm.

The application now returns to the main window of the component.

Note

Click **[Refresh Metadata]** to renew metadata. This is necessary if a data source has been adjusted in SAP, another source system has been connected, or the source system has been updated.

Warning

**Invalid action**\
A BW Query does not apprear in the list.\
Switch on the attribute *Allow External Access to this Query* in the BEx Query Designer or the BW Modeling Tool. For additional details see the [Troubleshooting Article: Allow external access to BW Queries](https://support.theobald-software.com/helpdesk/KB/View/13800-allow-external-access-to-bw-queries).

### Define the BWCube Extraction Type

The BWCube extraction type offers the following options for Query and BW Cube extractions:

1. In the tree structure of the extraction type, select the measure (key figures) you want to extract

   Tip

   The tree structure represents the metadata of the Query (or InfoProvider).\
   The first directory contains all the measures (key figures) . The following directories correspond to dimensions and often contain additional dimension properties .

1. Within the key figures directory, click the arrow to display the available units. Select a unit, if needed.

1. In the following directories, select the dimensions and properties you want to extract .

1. Optional: Right-click on a dimension to add filters to the dimension, see [Dimension Filters](variables-and-filters/#set-dimension-filters).

1. Optional: If a BW Query has a defined variable, click **[Edit Variables]** to edit the variable or provide input values, see [Variables](variables-and-filters/#edit-variables).

1. Click **[Load live preview]** to display a live preview of the data. For every selected dimension or property, a key figure and a unit is displayed in the result.

1. Check the [Extraction Settings](settings/) and the [General Settings](general-settings/) before running the extraction.

1. Click **[OK]** to save the extraction type.

You can now run the extraction, see [Run Extractions](../run-extractions/).

Runtime parameters are are placeholders for values that are passed at runtime. They can be created in context of [Query Variables](../variables-and-filters/#edit-variables) and [Dimension Filters](../variables-and-filters/#set-dimension-filters).

## Create Runtime Parameters

There are two types of runtime parameters:

- [Scalar parameters](#scalar-parameters) represent a single value.
- [List parameters](#list-parameters) represent multiple values.

### Scalar Parameters

Follow the steps below to create a scalar runtime parameter:

1. In the main window of the component click **Edit runtime parameters**. The window “Edit Runtime Parameters” opens.

1. Click **[Add Scalar]** to define scalar parameters to be used as placeholders for actual values. The placeholders need to be populated with actual values at runtime.

   Tip

   Parameter0..-n is the default naming for the added parameter. You can enter a name of your choice.

1. Select one of the following data types from the drop-down menu. The data types may correlate to SAP data types.

   | Type | Description | | --- | --- | | *Text* | Can be used for any type of SAP selection field. | | *Number* | Can be used for numeric SAP selection fields. | | *Flag* | Can only be used for SAP selection fields THAT require an ‘X’ (true) or a blank ‘‘ (false) as input value. |

1. Click **[OK]** to confirm.

The runtime parameters are now available in the extraction type.

### List Parameters

Follow the steps below to create a list runtime parameter:

1. In the main window of the component click **Edit runtime parameters**. The window “Edit Runtime Parameters” opens.

1. Click **[Add List]** to define list parameters that contain multiple values separated by commas e.g., 1,10 or “1”, “10”. The placeholders need to be populated with actual values at runtime.

   Tip

   Parameter0..-n is the default naming for the added parameter. You can enter a name of your choice.

1. Click **[OK]** to confirm.

The runtime parameters are now available in the extraction type.

## Assign Runtime Parameters

Follow the steps below to assign the runtime parameters to variables or dimension filters.

1. In the main window of the extraction type, click **[Edit Variables]**. The window "Edit Selections" opens.

1. Add a filter to the variable, see [Variables](../variables-and-filters/#edit-variables).

1. Click the icon button next to the input field to switch between static values () and runtime parameters (). If no icon button is available, [create a runtime parameter](#create-runtime-parameters).

1. Select a runtime parameter from the dropdown-list.

1. Click **[OK]** to confirm the input.

1. In the main window of the extraction type, right-click the dimension you want to parameterize.

1. Click **Edit Filters**. The window "Edit Selections" opens.

1. Add a filter for the dimension, see [Dimension Filter](../variables-and-filters/#set-dimension-filters).

1. Click the icon button next to the input field to switch between static values () and runtime parameters (). If no icon button is available, [create a runtime parameter](#create-runtime-parameters).

1. Select a runtime parameter from the dropdown-list.

1. Click **[OK]** to confirm the input.

Pass values during runtime, see [Extraction Parameters - Custom](../../parameters/extraction-parameters/#custom).

This page contains an overview of the settings in the window "General Settings".\
To open the general settings, click **General Settings** in the main window of the extraction type.

### Misc. Tab

The *Misc.* tab covers cache settings, column encryption and keywords of an extraction type.

#### Cache results

This option can be neglected. Board Connector always uses the result cache, because Board always requests the results twice.

#### Keywords

One or more keywords (tags) can be assigned to an extraction. Keywords can be entered directly in the keyword field. You can use these keywords to filter extractions in the "Search Extractions" window. To open the "Search Extractions" window, click **[ Search]** in the main window of the Designer.

Tip

To add keywords to multiple extractions at once, select the extractions in the main window of the Designer.\
Right-click + **Add/Remove keywords** opens the window "Add/Remove Keywords To/From Multiple Extractions".

### Security Tab

Restrict user access to the extraction. For more information, see [Restrict Designer Access](../../access-restrictions/restrict-designer-access/).

### CSV Tab

The *CSV* tab covers data and date formatting.

#### Column Name Style

Defines the style of the column name. Following options are available:

| Option | Description | | --- | --- | | **Code** | The SAP technical column name is used as column name in the destination e.g. MAKTX. | | **PrefixedCode** | The SAP technical column name is prefixed by SAP object name and the tilde character e.g., MAKT~MAKTX | | **CodeAndText** | The SAP technical column name and the SAP description separated by an underscore are used as column name in the destination e.g., MAKTX_Material Description (Short Text) | | **TextAndCode** | The SAP description and the SAP technical column name description separated by an underscore are used as column name in the destination e.g., Material Description (Short Text)\_MAKTX |

#### Date Conversion

When **Convert dates** is active, the following date conversions apply:

| Option | Description | | --- | --- | | **Year 0** | Converts the SAP date 00000000 to the entered value. | | **Year 9999** | Converts the SAP date 9999XXXX to the entered value. | | **Invalid values** | If an SAP date cannot be converted to a valid date format, the invalid date is converted to the entered value. NULL is supported as a value. |

### Columns Order Tab

The "Columns Order" feature enables users to rearrange the order of result columns when running an extraction. To rearrange the result order, assign indexes to the available result columns. Index 0 defines the first column in the result set, index 1 the second columns, etc.

| Option | Description | | --- | --- | | **Enabled** | When this option is active, the defined column order is applied when running the extraction. | | **Swap** | Swaps the index of 2 columns. All other columns keep their indexes. | | **Insert** | Inserts the selected column into the selected index. All other indexes are recalculated. | | **Reset default** | Restores the original column order. |

This page contains an overview of the extraction settings in the BW Cube extraction type.\
To open the extraction settings, click ****Extraction Settings**** in the main window of the extraction type.

### Extraction Settings

#### Package Size

The extracted data is split into packages of the defined size. The default value is 50000 lines.\
A package size between 20000 and 50000 is advisable for large amounts of data. 0 means no packaging. Not using packaging can lead to an RFC timeout for large data extractions.

Warning

**RFC_ERROR_SYSTEM_FAILURE - No more storage space available for extending an internal table**\
To avoid a memory overflow on the SAP source system and to avoid huge overheads, choose a package size that suits your memory capacity.

This option is not supported when using BICS mode.

#### Row Limit

Specifies the maximum number of extracted records. 0 extracts all data. You can use this option to perform tests with a small amount of data by entering a row limit of e.g., 1000.

This option is not supported when using BICS mode.

#### Member Display

This setting is only available for the BICS extractor.

- *Key*: Extracts the key of the dimension member.
- *Text* (default): Extracts the text of the dimension member.
- *Text and Key*: Adds an additional column for every dimension with the suffix `.KEY`. The original column contains the text of the dimension member, the column with the `.KEY` suffix contains the key of the dimension member.

#### Formatted Values

If this option is active, the values of key figures are formatted as defined in the Query Designer, e.g., scaling factor and number of decimal places.

#### Only Structure

Activate this option if the BWCube extraction type was created in an old version of the BWCube extraction type. The method for the metadata retrieval has changed, which affects especially BEx Queries with two structures.\
This option can only be activated and deactivated in the [Look Up](../#look-up-a-bw-cube-or-query) window of the component.

### Automatic Slicing Dimension

This option sets a dimension for an automatic slicing. Slicing is the act of picking a subset of a cube by choosing a single value for one of its dimensions. Automatic slicing means that a loop is executed for each single value of the chosen slicing dimension (characteristic) to extract the result from BW.

**Automatic Slicing Dimension** allows the extraction of a large amount of data (millions of records) from BW.

### Dimension on Columns

The following extraction setting is only available for MDX extractions. It appears in the extraction settings window after retrieving the metadata of an MDX extraction.

**Dimension on Columns** allows selecting other dimension/structure than the measure (key figures) dimension on the column axis. This swaps the measures and the selected dimension: the measures are placed on rows, the selected dimension is placed on columns.

Note the following:

- The BEx Query must contain a dimension structure
- Dimension filters on columns are not applied
- The selected properties for the new column dimension are ignored
- Unit columns are only supported when *key figures* are selected for the columns.
- Up to 1000 members are loaded when confirming the extraction settings window. These members are then the column names.

Recommendation

We recommend only using structures on columns.

Example:

- Output for **Dimension on Columns** = *Key Figures*
- Output for **Dimension on Columns** = *Cal. Year/Quarter [0CALQUARTER]*

### Experimental

The following settings are only available for BICS extractions. They appear in the extraction settings window after retrieving the metadata of a BICS extraction.

#### Create BICS Compatibility Report

When encountering an error using BICS, click **[Create BICS Compatibility Report]** to run a number of tests to help us analyze why and where the error occured.\
The test results are automatically stored in a .zip file. If you have multiple different SAP systems, perform this test on each of them.\
Send the resulting .zip files to the [Theobald Support](https://support.theobald-software.com) team.

This page shows how to use variables and dimension filters to filter the data that is extracted with the BWCube extraction type. There are two options to apply filters:

- [Variables](#edit-variables) are usually defined in SAP to create filter options for BW Queries. They can be edited in the BWCube extraction type.
- [Dimension Filters](#set-dimension-filters) are defined in the BWCube extraction type to filter data from InfoProviders or BW Queries that do not have variables.

### Edit Variables

BW queries often have defined variables to create filter options. Depending on the type of BEx variable (single value, multiple value, interval or complex selection) input fields of the variables are enabled or disabled.

1. [Look up](../#look-up-a-bw-cube-or-query) a BEx Query with defined variables .
1. Click **[Edit Variables]** . The window "Edit variables for [name of the query]" opens.
1. Select a field that uses variables from the drop-down menu .
1. Click **[Single]**, **[Range]** or **[List]** to add a corresponding filter, see [Filter Options](#filter-options).
1. In the column **Sign** , select *Include* to add the filtered data to the output or select *Exclude* to remove the filtered data from the output.
1. Select an operator in the column **Option** , see [Filter Options](#filter-options).
1. In the column **Value**, enter values directly into the input fields **Low** and **High**, assign existing [runtime parameters](../edit-runtime-parameters/) or look up pre-defined values in SAP.
   - Static values: Enter values directly into the Low and High input fields.
   - Runtime parameters: Select an existing runtime parameter from the drop-down list.
   - Pre-defined values: If available, select pre-defined values from SAP:
1. Click **[OK]** to confirm your input.
1. Click **[Load live preview]** in the main window of the component to check the result of the filter. If runtime parameters are defined, you are prompted to populate the parameters with actual values.

### Set Dimension Filters

Each dimension of a BEx Query or an InfoCube offers the possibility to set a filter to execute the MDX statement in BW using the selected filter values. Follow the steps below to create dimension filters in the BWCube extraction type.

1. In the tree structure of the extraction type, right-click a dimension to open the context menu.
1. Click **[Edit Filter]**. The window "Edit Selections" opens.
1. Click **[Single]**, **[Range]** or **[List]** to add a corresponding filter, see [Filter Options](#filter-options).
1. In the column **Sign** , select *Include* to add the filtered data to the output or select *Exclude* to remove the filtered data from the output.
1. In the column **Option**, select an operator , see [Filter options](#filter-options).
1. In the column **Value**, enter values directly into the input fields **Low** and **High**, assign existing [runtime parameters](../edit-runtime-parameters/) or look up pre-defined values in SAP.
   - Static values: Enter values directly into the Low and High input fields.
   - Runtime parameters: Select an existing runtime parameter from the drop-down list.
   - Pre-defined values: If available, select pre-defined values from SAP.
1. Click **[OK]** to confirm your input.
1. Click **[Load live preview]** in the main window of the extraction type to check the result of the filter. If runtime parameters are defined, you are prompted to populate the parameters with actual values.

When filters are applied, the symbol is displayed in the treeview of the dimensions.

Warning

**Extraction fails - Error message: Argument cannot be null or empty**\
When a filter is set, a value cannot be empty for an extraction to run.\
Make sure to pass a value (# is accepted).

### Filter Options

The BW Cube extraction type offers the following filter options:

| Type | Operator | Description | | --- | --- | --- | | Single | | Compare data to a single specified value. | | | *(not) like pattern* | True if data values do (not) contain to the specified value. | | | *(not) equal to* | True if data is (not) equal to the specified value. | | | *at least* | True if data is greater than or equal to the specified value. | | | *more than* | True if data is greater than the specified value. | | | *at most* | True if data is less than or equal to the specified value. | | | *less than* | True if data is less than the specified value. | | Range | | Check if the data is (not) within a specified range of values. | | | *(not) between* | True if data values do (not) lie between the 2 specified values. | | List | | Check if the data is part of a specified list of values. | | | *element of* | True if data values are part of the list. |

This page shows how to use the DeltaQ extraction type.\
The DeltaQ extraction type can be used to extract delta data from SAP DataSources. This means that only recently added or changed data is extracted, instead of a full load. For more information on the delta process, see [Initialize a Delta Process](update-mode/#initialize-a-delta-process).

### Prerequisites

- A connection to an SAP system is available, see [SAP Connection](../sap-connection/).
- The SAP user has sufficient user rights, see [SAP Authority Objects](../setup-in-sap/sap-authority-objects/#deltaq).
- Configure your SAP system to make DataSources accessible, see [SAP Customization for DeltaQ](../setup-in-sap/customization-for-deltaq/).
- To use DataSources in Board Connector, make sure that the DataSources are activated in SAP.

Warning

**Missing Authorization.**\
To use the DeltaQ extraction type, access to the designated authority objects (RFC) in SAP must be available. Adjust [SAP Authority Objects: DeltaQ](../setup-in-sap/sap-authority-objects/#deltaq) accordingly.

### SAP Transactions for Working with DeltaQ

The following SAP transaction can support you when working with DataSources:

- SBIW - SAP DataSources start page

- RSA3 - Extractor Checker

- RSA5 - Install DataSources and Hierarchies from Business Content

- RSA6 - Postprocess DataSources and Hierarchies

- SM59 - Configuration of RFC Connections

- SMQS - qRFC Monitor (QOUT Scheduler): Number of *Max.Conn.* should be at least 10

- SM37 - Background jobs

- SM58 - Transactional RFC

- SM50 - Process overview

- SMGW - Gateway Monitor

- RSA7 - Delta Queue Maintenance

- SMQ1 - qRFC Monitor (outbound queue)

- WE02 - IDoc list

- WE20 - Partner profiles

### Create a DeltaQ Extraction

1. In the main window of the Designer, click **[New]** to create a new extraction. The window "Create Extraction" opens.
1. Select an [SAP Connection](../sap-connection/) of type **RFC** from the drop-down menu **Source**.
1. Enter a unique name for your extraction.
1. Select the extraction type **DeltaQ**.
1. Click **[OK]**. The main window of the extraction type opens automatically.

The majority of the functions of the extraction type can be accessed in the main window.

### Look Up Extractors or Hierarchies

1. In the main window of the extraction type, click **[]**. The window “Look Up OLTP Source” opens.

1. In the field **Name**, enter the name of a DataSource . Use wildcards ( * ), if needed.

1. Click **[]**. Search results are displayed.

1. Select an extractor and click **[OK]** to confirm.

1. In the main window of the extraction type, click **[]**. The window “Look Up OLTP Source” opens

1. In the field **Name**, enter the name of a Hierarchy . Use wildcards ( * ), if needed. Alternatively, enter the description of a Hierarchy in the field **Description**.

1. Click **[]**. Search results are displayed.

1. Select an extractor of type *HIER* and click **[OK]** to confirm. All available Hierarchies are fetched and the window "Look Up DeltaQ Hierarchies" opens.

1. Select a Hierarchy and click **[OK]** to confirm.

The application now returns to the main window of the extraction type.

### Define the DeltaQ Extraction Type

The DeltaQ extraction type offers the following options for DataSource extractions:

1. Navigate to **Gateway** and click **[]** to look up an RFC destination. For more information, see [DeltaQ Customizing: Gateway](deltaq-customization/#gateway).

1. Navigate to **Logical Destination** and click **[]** to look up a logical RFC target system. For more information, see [DeltaQ Customizing: Logical Destination](deltaq-customization/#logical-destination).

1. Click **Customizing Check** to validate the DeltaQ Customizing on the SAP system. Make sure that all check marks are green. For more information, see [DeltaQ Customizing: Customizing Check](deltaq-customization/#customizing-check).

1. Select an [Update Mode](update-mode/), e.g., to initialize delta extractions.

1. Select the items you want to extract.

1. Optional: click the **Edit** option next to an item to [filter the data](selections/).

1. Click **[Run]** to testrun the extraction and validate your settings.

1. Click **[Activate]** to activate the extraction in SAP. After a successful activation, a corresponding status message opens:

   Note

   The activation is only required for the update modes *Delta*, *Full* or *Init*. Do not activate the extraction for the *Delta Update* mode.

1. Check the [Extraction Settings](settings/) and the [General Settings](general-settings/) before running the extraction.

1. Click **[OK]** to save the extraction type.

1. Navigate to **Gateway** and click **[]** to look up an RFC destination. For more information, see [DeltaQ Customizing: Gateway](deltaq-customization/#gateway).

1. Navigate to **Logical Destination** and click **[]** to look up a logical RFC target system. For more information, see [DeltaQ Customizing: Logical Destination](deltaq-customization/#logical-destination).

1. Click **Customizing Check** to validate the DeltaQ Customizing on the SAP system. Make sure that all check marks are green. For more information, see [DeltaQ Customizing: Customizing Check](deltaq-customization/#customizing-check).

1. Select an [Update Mode](update-mode/), e.g., to initialize delta extractions.

1. Select the items you want to extract.

1. Optional: click the **Edit** option next to an item to [filter the data](selections/).

1. Optional: click **Extraction Settings** to set the language and output format of the Hierarchy, see [extraction settings](settings/).

1. Check the [Extraction Settings](settings/) and the [General Settings](general-settings/) before running the extraction.

1. Click **[Run]** to testrun the extraction and validate your settings.

1. Click **[OK]** to save the extraction type.

Tip

Unlike attributes and transactions, Hierarchies do not have to be activated.

You can now run the extraction, see [Run Extractions](../run-extractions/).

### Execute DeltaQ in Parallel

When extracting multiple DataSources in parallel, it is recommended to use separate RFC destinations, e.g., XTRACT01, XTRACT02, etc.\
Parallel execution of DataSources with an identical RFC destination is possible, but not recommended.

______________________________________________________________________

#### Related Links

- [DeltaQ Troubleshooting Guide](../../troubleshooting/#deltaq-troubleshooting).
- [SAP Help: Activate the BI Content DataSource](https://help.sap.com/saphelp_scm70/helpdata/ru/d8/8f5738f988d439e10000009b38f842/content.htm?no_cache=true)
- [Knowledge Base Article: Create Generic DataSource using Function Module and Timestamps](../../knowledge-base/create-generic-datasource-using-function-module-and-timestamps/)

This page shows how to reference the SAP RFC destination in the DeltaQ extraction type.

Using the DeltaQ extraction type requires customization in SAP, see [Customizing for DeltaQ](../../setup-in-sap/customization-for-deltaq/). After an RFC Destination is set up in SAP, the RFC destination and the RFC target system must be entered in the DeltaQ extraction type.

### Settings in the DeltaQ Extraction Type

#### Gateway

Click **[]** to look up an [RFC destination](../../setup-in-sap/customization-for-deltaq/) or enter the data of your RFC destination manually:

| Input Field | Description | | --- | --- | | Host | The name (or IP address) of your SAP system. Make sure that the Gateway host is the same as in your [SAP Connection](../../sap-connection/). | | Service | The gateway service is generally *sapgwNN*, where *NN* is the instance number of your SAP system, e.g., a number between *00* and *99*. *NN* must have the same value as the *System No* field in your [SAP Connection](../../sap-connection/) or the instance number in your SAP logon. | | Program ID | The name of the registered RFC server. Make sure that the registration of the Program ID and the host is whitelisted in the reginfo ACL on the SAP Gateway, see [SAP Blog: RFC Gateway Security](https://blogs.sap.com/2021/01/26/rfc-gateway-security-part-1-basic-understanding/). |

#### Logical Destination

Click **[]** to look up a logical RFC target system or enter the name of the RFC target system manually.

### Customizing Check

In the main window of the component click **Customizing Check** to validate the DeltaQ customizing on the SAP system. Make sure that all check marks are green.

Runtime parameters are are placeholders for values that are passed at runtime. They can be created in context of [Selections](../selections/).

## Create Runtime Parameters

There are two types of runtime parameters:

- [Scalar parameters](#scalar-parameters) represent a single value.
- [List parameters](#list-parameters) represent multiple values.

### Scalar Parameters

Follow the steps below to create a scalar runtime parameter:

1. In the main window of the component click **Edit runtime parameters**. The window “Edit Runtime Parameters” opens.

1. Click **[Add Scalar]** to define scalar parameters to be used as placeholders for actual values. The placeholders need to be populated with actual values at runtime.

   Tip

   Parameter0..-n is the default naming for the added parameter. You can enter a name of your choice.

1. Select one of the following data types from the drop-down menu. The data types may correlate to SAP data types.

   | Type | Description | | --- | --- | | *Text* | Can be used for any type of SAP selection field. | | *Number* | Can be used for numeric SAP selection fields. | | *Flag* | Can only be used for SAP selection fields THAT require an ‘X’ (true) or a blank ‘‘ (false) as input value. |

1. Click **[OK]** to confirm.

The runtime parameters are now available in the extraction type.

### List Parameters

Follow the steps below to create a list runtime parameter:

1. In the main window of the component click **Edit runtime parameters**. The window “Edit Runtime Parameters” opens.

1. Click **[Add List]** to define list parameters that contain multiple values separated by commas e.g., 1,10 or “1”, “10”. The placeholders need to be populated with actual values at runtime.

   Tip

   Parameter0..-n is the default naming for the added parameter. You can enter a name of your choice.

1. Click **[OK]** to confirm.

The runtime parameters are now available in the extraction type.

## Assign Runtime Parameters

Follow the steps below to assign the runtime parameters to selections.

1. In the main window of the extraction type, click the **[Edit]** button next to the selection you want to parameterize. The window "Edit Selections" opens.
1. Add a filter to the selection, see [Edit Selections](../selections/#edit-selections).
1. Click the icon button next to the input field to switch between static values () and runtime parameters (). If no icon button is available, [create a runtime parameter](#create-runtime-parameters).
1. Select a runtime parameter from the dropdown-list.
1. Click **[OK]** to confirm the input.

Pass values during runtime, see [Extraction Parameters - Custom](../../parameters/extraction-parameters/#custom).

This page contains an overview of the settings in the window "General Settings".\
To open the general settings, click **General Settings** in the main window of the extraction type.

### Misc. Tab

The *Misc.* tab covers cache settings, column encryption and keywords of an extraction type.

#### Cache results

This option can be neglected. Board Connector always uses the result cache, because Board always requests the results twice.

#### Keywords

One or more keywords (tags) can be assigned to an extraction. Keywords can be entered directly in the keyword field. You can use these keywords to filter extractions in the "Search Extractions" window. To open the "Search Extractions" window, click **[ Search]** in the main window of the Designer.

Tip

To add keywords to multiple extractions at once, select the extractions in the main window of the Designer.\
Right-click + **Add/Remove keywords** opens the window "Add/Remove Keywords To/From Multiple Extractions".

### Security Tab

Restrict user access to the extraction. For more information, see [Restrict Designer Access](../../access-restrictions/restrict-designer-access/).

### CSV Tab

The *CSV* tab covers data and date formatting.

#### Column Name Style

Defines the style of the column name. Following options are available:

| Option | Description | | --- | --- | | **Code** | The SAP technical column name is used as column name in the destination e.g. MAKTX. | | **PrefixedCode** | The SAP technical column name is prefixed by SAP object name and the tilde character e.g., MAKT~MAKTX | | **CodeAndText** | The SAP technical column name and the SAP description separated by an underscore are used as column name in the destination e.g., MAKTX_Material Description (Short Text) | | **TextAndCode** | The SAP description and the SAP technical column name description separated by an underscore are used as column name in the destination e.g., Material Description (Short Text)\_MAKTX |

#### Date Conversion

When **Convert dates** is active, the following date conversions apply:

| Option | Description | | --- | --- | | **Year 0** | Converts the SAP date 00000000 to the entered value. | | **Year 9999** | Converts the SAP date 9999XXXX to the entered value. | | **Invalid values** | If an SAP date cannot be converted to a valid date format, the invalid date is converted to the entered value. NULL is supported as a value. |

### Columns Order Tab

The "Columns Order" feature enables users to rearrange the order of result columns when running an extraction. To rearrange the result order, assign indexes to the available result columns. Index 0 defines the first column in the result set, index 1 the second columns, etc.

| Option | Description | | --- | --- | | **Enabled** | When this option is active, the defined column order is applied when running the extraction. | | **Swap** | Swaps the index of 2 columns. All other columns keep their indexes. | | **Insert** | Inserts the selected column into the selected index. All other indexes are recalculated. | | **Reset default** | Restores the original column order. |

This page shows how to filter the data that is extracted by the DeltaQ extraction type.

### Edit Selections

Note

Do not define selections when using the update mode Delta Update, because the selections of the Init mode are automatically applied.

Follow the steps below to edit selection fields and filter data:

1. In the subsection *OLTP Fields*, click **Edit** next to the field you want to edit. The window “Edit selection” opens.

1. Click **[Single]**, **[Range]** or **[List]** to add a corresponding filter, see [Filter Options](#filter-options).

1. In the column **Sign** , select *Include* to add the filtered data to the output or select *Exclude* to remove the filtered data from the output.

1. In the column **Option** , select an operator, see [Filter Options](#filter-options).

1. In the column **Value**, enter values directly into the input fields **Low** and **High** or assign existing [runtime parameters](../edit-runtime-parameters/) to the selection fields .

   Note

   When runtime parameters are available, you can use the icon button next to the input field to switch between static values () and runtime parameters ().

1. Click **[OK]** to confirm your input.

1. Click **[Load live preview]** in the main window of the extraction type to check the result of your selection. If runtime parameters are defined, you are prompted to populate the parameters with actual values.

### Filter Options

The DeltaQ extraction type offers the following filter options:

| Type | Operator | Description | | --- | --- | --- | | Single | | Compare data to a single specified value. | | | *(not) like pattern* | True if data values do (not) contain to the specified value. | | | *(not) equal to* | True if data is (not) equal to the specified value. | | | *at least* | True if data is greater than or equal to the specified value. | | | *more than* | True if data is greater than the specified value. | | | *at most* | True if data is less than or equal to the specified value. | | | *less than* | True if data is less than the specified value. | | Range | | Check if the data is (not) within a specified range of values. | | | *(not) between* | True if data values do (not) lie between the 2 specified values. | | List | | Check if the data is part of a specified list of values. | | | *element of* | True if data values are part of the list. |

### Script Expressions for DeltaQ

Script expressions are usually used to determine a dynamic date based on the current date.

| Input | Description | | --- | --- | | `#{ DateTime.Now.ToString("yyyyMMdd") }#` | Current date in SAP format (yyyyMMdd) | | `#{ String.Concat(DateTime.Now.Year.ToString(), "0101") }#` | Current year concatenated with "0101" (yyyy0101) | | `#{ String.Concat(DateTime.Now.ToString("yyyy"), "0101") }#` | Current year concatenated with "0101" (yyyy0101) | | `#{ String.Concat(DateTime.Now.ToString("yyyyMMdd").Substring(0,4), "0101") }#` | Current year concatenated with "0101" (yyyy0101) |

### Data Format

Use the following internal SAP representation for input:

- Date: The date 01.01.1999 has the internal representation 19990101 (YYYYMMDD).
- Year period: The year period 001.1999 has the internal representation 1999001 (YYYYPPP).
- Numbers: Numbers must contain the leading zeros, e.g., customer number 1000 has the internal representation 0000001000.

Warning

**Values accept only the internal SAP representation.**\
Input that does not use the internal SAP representation results in error messages. Use the internal SAP representation. Example:

```text
ERPConnect.ABAPProgramException: RfcInvoke failed(RFC_ABAP_MESSAGE): Enter date in the format \_.\_.\_

```

This page contains an overview of the extraction settings in the DeltaQ extraction type.\
To open the extraction settings, click ****Extraction Settings**** in the main window of the extraction type.

The DeltaQ settings consist of the following tabs:

- [*Base*](#base-settings)
- [*Hierarchy*](#hierarchy-settings)

## Base Settings

### Transfer Mode

The raw data packages can be sent by SAP via *tRFC* call or *Data-IDoc*. *tRFC* is is the default setting.\
Switch to *IDoc* to monitor the raw data packages in the transaction WE02 (IDoc-Monitoring) for debugging reasons.

### Misc. Settings

#### Automatic Synchronization

Option to prevent manual changes in the transactional system when switching from test environment to production environment.\
Example: To use DeltaQ extractions in the production environment, the data source has to be enabled in the production environment. If **Automatic Synchronization** is active, the activation is performed automatically and the timestamp of the data source is changed to be consistent with the settings of the SAP system.

Note

If the data source is modified in the SAP system, manually activate the data source in the DeltaQ component, even when **Automatic Synchronization** is active. Otherwise data load will fail. This behavior belongs to the SAP design, see [SAP Help: Replication of DataSources](https://help.sap.com/viewer/ccc9cdbdc6cd4eceaf1e5485b1bf8f4b/7.4.19/en-US/4a12eaff76df1b42e10000000a42189c.html).

#### Add Serialization Info to Output

Adds the columns *DataPackageID* and *RowCounter* to the output.\
Example: the following columns that are a composite key of the SAP records are included in the output:

- *RequestID*
- *DataPackageID*
- *RowCounter*

Note

Newer data has a higher PackageID. In the same package newer data has a higher RowCounter.

#### Accept Gaps in DataPackage ID

At the end of each extraction the DeltaQ component performs a consistency check. The extraction is considered consistent if all data packages arrive correctly. Example: When using a filter function in the user exit of an OLTP source, certain data packages are not sent. In this case the filter function is an inconsistency. If **Accept Gaps in DataPackage ID** is active, gaps in the package numbering are not considered inconsistencies. Only use this option when a filter function exists in the user exit.

#### Timeout (sec)

Enter a time period (in seconds). The timeout applies when an extraction finishes on the SAP side, but not all tRFC calls have been received.

## Hierarchy Settings

The following settings only apply to Hierarchy extractions.

### Extraction

#### Language

Enter the language of the Hierarchy, e.g., ‘E’ or ‘D’.

#### Hierarchy Name

Enter the name of the Hierarchy.

#### Hierarchy Class

Enter the class of the Hierarchy.

#### Representation

- *ParentChild*: The Hierarchy is represented in the SAP parent-child format, see [Output Formats: ParentChild](../../hierarchy/output-format/#parentchild-format). Example:
- *Natural*: The SAP parent-child Hierarchy is transformed into a regular hierarchy, see [Output Formats: Natural](../../hierarchy/output-format/#natural-format). Example:
- *ParentChildWithNodeNames*: The Hierarchy is represented in a reduced SAP parent-child format that only includes single nodes and their parent, see [Output Formats: ParentChildWithNodeNames](../../hierarchy/output-format/#parentchildwithnodenames-format). Example:

### Natural Representation

Note

The subsection *Natural Settings* is only active, when the **Representation** is set to *Natural*.

#### Level Count

Defines the maximum number of levels. The following example shows a Hierarchy with four levels.

#### Fill empty levels

Copies the bottom element of the Hierarchy until the last level. The following example depicts the previously shown Hierarchy with the activated *Repeat Leaves* option.

#### Description texts for levels

Sets the output field *LevelTextN* for each field *LevelN* containing the text based on the system language settings.

#### Leaves only

Returns only the leaves as data records.

## Maintenance

Click **[Maintenance]** to open a list of Init requests of the DataSource (SAP transaction RSA7).

Select an Init request and click **[]** to delete it. This is necessary when re-initializing a delta process.

The DeltaQ extraction type is primarily used for delta extractions. This means that only recently added or changed data is extracted, instead of a full load. The data that is extracted is defined by the **Update Mode** setting in the main window of the extraction type.

### Update Modes

The DeltaQ extraction type offers the following update modes:

| Mode | Parameter Value | Description | | --- | --- | --- | | Full | *Full* | Extracts all data that match the set selection criteria. | | Delta Update | *Delta* | Only extracts data added or changed on the SAP system since the last delta request. [Initialize a delta process](#initialize-a-delta-process) before running a delta update. To prevent errors, aborts and gaps in your data during a delta run, run the next extraction in the update mode **Repeat**. | | Delta Initialization | *Init* | Extracts all data as full load and initializes the delta process. When re-initializing a delta process, first delete any existing Inits using the **[Maintenance]** button in the [extraction settings](../settings/) menu. | | Repeat | *Repeat* | Repeats the last delta run and updates and any delta data accumulated since the last run. Deletes any data from the last (unsuccessful) delta update before running a repeat. You can run a repeat multiple times. | | Delta Init (without data) | *InitNoData* | Initializes the delta process without extracting any data from the SAP DataSources. The result of the *Delta Init* on the SAP side. When re-initializing a delta process, first delete any existing Inits using the **[Maintenance]** button in the [extraction settings](../settings/) menu. | | Non-cumulative init | *InitNoncumulative* | Relevant for DataSources like *2LIS_03_BX*. | | Activate (don't extract) | *Activate* | Activates a DataSource similar to the **[Activate]** button, but it is more practical when activating DataSources in a batch. No data is extracted. |

Tip

**Update mode** can be set dynamically at runtime using the parameters values to overwrite the extraction parameter *updateType*, see [Run an Extraction](../../run-extractions/#run-extractions-in-the-designer).

For more information about when to use which update mode, see [Initialize a Delta Process](#initialize-a-delta-process)

### Initialize a Delta Process

To start a delta process with the DeltaQ extraction type, the delta must be initialized first. The following delta process shows when to use which [Update Modes](#update-modes).

#### Step 1: Delta Initialization [C]

This mode requests all data that meets the selection criteria.

Set **Update Mode** to *Delta Initialization* and run the extraction.\
The initialization selections are copied to load the delta records. You can now use *Delta Update*.

Note

When re-initializing a delta process, first delete any existing Inits (initialization requests) by clicking **[Maintenance]** in the [extraction settings](../settings/).

#### Alternative Step 1: Delta Init (without data) [S]

This mode is similar to *Delta Initialization*, but no data is extracted from the SAP DataSource.

Set **Update Mode** to *Delta Init (without data)* and run the extraction.\
You can now use *Delta Update*.

Note

When re-initializing a delta process, first delete any existing Inits (initialization requests) by clicking **[Maintenance]** in the [extraction settings](../settings/).

#### Step 2: Delta Update [D]

*Delta Update* only extracts data added or changed on the SAP system since the last delta request.

Run the extraction with *Delta Initialization* or *Delta Init (without data)* once before setting the **Update Mode** to *Delta Update*.

Note

To prevent errors, aborts and gaps run the next extraction in the update mode *Repeat*.

#### Optional: Repeat [R]

This mode repeats the last delta run and updates all data accumulated since the last run. If the last run was unsuccessful, all data from the last delta update are deleted before a new run is started.\
A **Repeat** can be started several times.

Many DataSources have the field ROCANCEL. This field defines if records are added or overwritten depending on the delta process type of the DataSource. It defines how a record is updated in the delta process.\
In an ABR mode:

- *blank* returns an after image
- *'X'* returns a before image
- *'D'* deletes the record
- *'R'* returns a reverse image

#### Optional: Delta Queue - RSA7

Once delta is activated, you can view the queued datasets in the Delta queue in SAP transaction RSA7.\
If there is no new data to be transferred, a corresponding protocol message is displayed and the data pipeline is empty.

Note

Before initiating the next update, make sure that a delta update has been executed successfully. Running a new delta update removes the last one.

______________________________________________________________________

#### Related Links

- [SAP Help: Delta Transfer to BI](https://help.sap.com/doc/saphelp_nw70/7.0.31/en-US/37/4f3ca8b672a34082ab3085d3c22145/content.htm?no_cache=true)
- [SAP Help: Delta Process](https://help.sap.com/viewer/ccc9cdbdc6cd4eceaf1e5485b1bf8f4b/7.4.23/en-US/4f18f6aa3fca410ae10000000a42189d.html)

This page shows how to use the BW Hierarchy extraction type. The BW Hierarchy extraction type can be used to extract Hierarchies and InfoObjects from SAP BW systems.

Note

To extract hierarchies from a BW system, use the BW Hierarchy extraction type. To extract hierarchies from an ERP system like ECC or S4, use the [ODP](../odp/) extraction type.

### Prerequisites

- A connection to an SAP system is available, see [SAP Connection](../sap-connection/).
- The SAP user has sufficient user rights, see [SAP Authority Objects](../setup-in-sap/sap-authority-objects/#bw-hierarchy).

Warning

**Missing Authorization.**\
To use the BW Hierarchy extraction type, access to the designated authority objects (RFC) in SAP must be available. Adjust [SAP Authority Objects](/board-connector/documentation/setup-in-sap/sap-authority-objects#bw-hierarchy) accordingly.

### Create a BW Hierarchy Extraction

1. In the main window of the Designer, click **[New]** to create a new extraction. The window "Create Extraction" opens.
1. Select an [SAP Connection](../sap-connection/) of type **RFC** from the drop-down menu **Source**.
1. Enter a unique name for your extraction.
1. Select the extraction type **BW Hierarchy**.
1. Click **[OK]**. The main window of the extraction type opens automatically.

The majority of the functions of the extraction type can be accessed in the main window.

### Look Up a Hierarchy

1. In the main window of the component, click **[]**. The window “Hierarchy Lookup” opens.
1. Enter the name of a Hierarchy in the field **Hierarchy Name** or the name of an InfoObject in the field **InfoObject** . Use wildcards (\*) if needed.
1. Click **[]**. Search results are displayed.
1. Select a Hierarchy and click **[Select]**.

The application returns to the main window of the extraction type.

### Define the BW Hierarchy Extraction Type

The BW Hierarchy extraction type offers the following options for Hierarchy extractions:

1. Define the output format of the Hierarchy in the [extraction settings](settings/#extraction-settings) . The BW Hierarchy extraction type supports the following output formats:

   - [ParentChild Format](output-format/#parentchild-format)
   - [Natural Format](output-format/#natural-format)
   - [ParentChildWithNodeNames Format](output-format/#parentchildwithnodenames-format)

1. Click **[Load live preview]** to display a live preview of the first 100 records.

1. Check the [General Settings](general-settings/) before running the extraction..

1. Optional: The default value for **Date To** is *99991231*. To change the value, override the *dateTo* [extraction parameter](../parameters/extraction-parameters/) when calling the extraction.

1. Click **[OK]** to save the extraction type.

You can now run the extraction, see [Run Extractions](../run-extractions/).

______________________________________________________________________

#### Related Links

- [Extraction Settings](settings/)
- [SAP Help: Uploading Hierarchies from Flat Files](https://help.sap.com/saphelp_scm700_ehp02/helpdata/en/fa/e92637c2cbf357e10000009b38f936/frameset.htm)

This page contains an overview of the settings in the window "General Settings".\
To open the general settings, click **General Settings** in the main window of the extraction type.

### Misc. Tab

The *Misc.* tab covers cache settings, column encryption and keywords of an extraction type.

#### Cache results

This option can be neglected. Board Connector always uses the result cache, because Board always requests the results twice.

#### Keywords

One or more keywords (tags) can be assigned to an extraction. Keywords can be entered directly in the keyword field. You can use these keywords to filter extractions in the "Search Extractions" window. To open the "Search Extractions" window, click **[ Search]** in the main window of the Designer.

Tip

To add keywords to multiple extractions at once, select the extractions in the main window of the Designer.\
Right-click + **Add/Remove keywords** opens the window "Add/Remove Keywords To/From Multiple Extractions".

### Security Tab

Restrict user access to the extraction. For more information, see [Restrict Designer Access](../../access-restrictions/restrict-designer-access/).

### CSV Tab

The *CSV* tab covers data and date formatting.

#### Column Name Style

Defines the style of the column name. Following options are available:

| Option | Description | | --- | --- | | **Code** | The SAP technical column name is used as column name in the destination e.g. MAKTX. | | **PrefixedCode** | The SAP technical column name is prefixed by SAP object name and the tilde character e.g., MAKT~MAKTX | | **CodeAndText** | The SAP technical column name and the SAP description separated by an underscore are used as column name in the destination e.g., MAKTX_Material Description (Short Text) | | **TextAndCode** | The SAP description and the SAP technical column name description separated by an underscore are used as column name in the destination e.g., Material Description (Short Text)\_MAKTX |

#### Date Conversion

When **Convert dates** is active, the following date conversions apply:

| Option | Description | | --- | --- | | **Year 0** | Converts the SAP date 00000000 to the entered value. | | **Year 9999** | Converts the SAP date 9999XXXX to the entered value. | | **Invalid values** | If an SAP date cannot be converted to a valid date format, the invalid date is converted to the entered value. NULL is supported as a value. |

### Columns Order Tab

The "Columns Order" feature enables users to rearrange the order of result columns when running an extraction. To rearrange the result order, assign indexes to the available result columns. Index 0 defines the first column in the result set, index 1 the second columns, etc.

| Option | Description | | --- | --- | | **Enabled** | When this option is active, the defined column order is applied when running the extraction. | | **Swap** | Swaps the index of 2 columns. All other columns keep their indexes. | | **Insert** | Inserts the selected column into the selected index. All other indexes are recalculated. | | **Reset default** | Restores the original column order. |

This page shows the which output formats are supported by the BW Hierarchy extraction type. The output format can be selected in the [extraction settings](../settings/) of the BW Hierarchy extraction type.

### ParentChild Format

The default output of the BW Hierarchy extraction type contains the following columns:

| Column | Description | | --- | --- | | **NodeID** | Unique node key. | | **ParentNodeID** | Key for parent node. | | **FirstChildNodeID** | Key for first child node. | | **NextNodeID** | Key for next node in the same hierarchical level. | | **InfoObjectName** | Name of InfoObject behind the corresponding node. | | **NodeName** | The node’s (technical) name. | | **NodeText** | The description text of the node. This column is only created when [**Fetch description texts**](../settings/#fetch-description-texts) is active. | | **DateFrom** | Date from which the node is valid. | | **DateTo** | Date the node is valid to. | | **Link** | If the value in *Link* is greater than 0, the node is a link node. The ID of the original node that was linked from is displayed. | | **Row** | Number of the row. The row number can be used as an ID or sort criterion when processing the extracted data. |

Example:

### Natural Format

| Column | Description | | --- | --- | | **LevelN** | Technical name of the node of the nth level. The number of levels is set in [**Level Count**](../settings/#level-count). The level count starts at level 0. | | **LevelTextN** | The description text of the nth level's node. This column is only created when [**Description texts for levels**](../settings/#description-texts-for-levels) is active. | | **InfoObjectName** | Name of InfoObject behind the node of the highest level. | | **NodeName** | Technical name of the node of the highest level. | | **NodeText** | The description text of the node of the highest level. This column is only created when [**Fetch description texts**](../settings/#fetch-description-texts) is active. | | **DateFrom** | Date from which the node is valid | | **DateTo** | Date the node is valid to. | | **Link** | If the value in *Link* is greater than 0, the node is a link node. The ID of the original node that was linked from is displayed. | | **Row** | Number of the row. The row number can be used as an ID or sort criterion when processing the extracted data. |

Example:

### ParentChildWithNodeNames Format

| Column | Description | | --- | --- | | **NodeID** | Unique node key. | | **NodeName** | The node’s (technical) name. | | **NodeText** | The description text of the node. This column is only created when [**Fetch description texts**](../settings/#fetch-description-texts) is active. | | **ParentNodeID** | Key for parent node. | | **ParentNodeName** | Name of the parent node. | | **InfoObjectName** | Name of InfoObject behind the corresponding node. | | **DateFrom** | Date from which the node is valid. | | **DateTo** | Date the node is valid to. | | **Link** | If the value in *Link* is greater than 0, the node is a link node. The ID of the original node that was linked from is displayed. | | **Row** | Number of the row. The row number can be used as an ID or sort criterion when processing the extracted data. |

Example:

This page contains an overview of the extraction settings in the BW Hierarchy extraction type.\
To open the extraction settings, click ****Extraction Settings**** in the main window of the extraction type.

### Extraction Settings

#### Representation

- *ParentChild*: The Hierarchy is represented in the SAP parent-child format, see [Output Formats: ParentChild](../output-format/#parentchild-format). Example:
- *Natural*: The SAP parent-child Hierarchy is transformed into a regular hierarchy, see [Output Formats: Natural](../output-format/#natural-format). Example:
- *ParentChildWithNodeNames*: The Hierarchy is represented in a reduced SAP parent-child format that only includes single nodes and their parent, see [Output Formats: ParentChildWithNodeNames](../output-format/#parentchildwithnodenames-format). Example:

#### Remove Leading Zeros

If this option is active, all leading zeros in the column *NodeName* of the leaves are removed. *NodeName* can then be used in a JOIN-condition with the corresponding Dimension-Key of a BW Cube extraction.\
The conversion works for compound InfoObjects, too. Example: 0CO_AREA (1000) and 0COSTCENTER (0000003100) become 1000/3100.

#### Fetch description texts

Sets the node text in the column *NodeText*.\
All texts of InfoObjects that have language dependent texts will be retrieved in the language that the SAP source connection uses. If no texts exist, the result does not contain any texts for entries of that InfoObject.

### Natural Settings

Note

The subsection *Natural Settings* is only active, when the **Representation** is set to *Natural*.

#### Level Count

Defines the maximum number of levels. The following example shows a Hierarchy with four levels.

#### Fill empty levels

Copies the bottom element of the Hierarchy until the last level. The following example depicts the previously shown Hierarchy with the activated *Repeat Leaves* option.

#### Description texts for levels

Sets the output field *LevelTextN* for each field *LevelN* containing the text based on the system language settings.

#### Leaves only

Returns only the leaves as data records.

### Debug

#### Enable Debug Logging

Adds more detailed logs for the BW Hierarchy extraction type to the extraction logs. Activate **Enable Debug Logging** only when necessary, e.g., upon request of the support team.

______________________________________________________________________

#### Related Links

- [SAP Help: About SAP BW Hierarchies](https://help.sap.com/saphelp_scm41/helpdata/en/90/fd36709c6411d5b4000050dadfb23f/content.htm?no_cache=true)

This page shows how to use the OData extraction type.\
The OData extraction type can be used to extract data provided by SAP OData services.

Note

OData extraction type ist still in **beta** phase. This means, the OData extraction type is subject to change. Extractions that use the OData extraction type can stop working with future updates and might require manual changes.

### About OData Services

The OData extraction type in Board Connector consumes the data provided by SAP OData services. The OData (Open Data) protocol defines a set of rules to create, edit and consume resources through RESTful interfaces (HTTP requests). Furthermore, the OData protocol describes the data and the data model, meaning the data has its respective metadata, including the following items:

- Column name
- Description
- Length
- Data type

OData services can be build in SAP on-premise systems using the [SAP Gateway Service Builder](https://help.sap.com/docs/SAP_NETWEAVER_AS_ABAP_751_IP/68bf513362174d54b58cddec28794093/cddd22512c312314e10000000a44176d.html). On SAP cloud systems, the OData services are accessible via [Communication Arrangements](https://learning.sap.com/learning-journeys/implement-sap-s-4hana-cloud-public-edition-for-sourcing-and-procurement/setting-up-communication-management_a913171c-c96d-47a9-81ec-dc9ee8754320).

The OData extraction type supports [OData V2](https://www.odata.org/documentation/odata-version-2-0/overview/) and [OData V4](https://www.odata.org/documentation/).

Tip

For information on how to create OData services that provide ODP based data, refer to the [Knowledge Base Article: Create OData Services using the SAP Gateway Builder](../../knowledge-base/create-odata-services-using-the-sap-gateway-builder/).

### Prerequisites

- Enable OData services in SAP, see [SAP Help: How to Enable OData Services in SAP S/4HANA](https://help.sap.com/docs/advanced-financial-closing/administration/how-to-enable-odata-services-in-sap-s4hana). For more information on how to build OData services, see [SAP Learning: Building OData Services with SAP Gateway](https://learning.sap.com/learning-journeys/building-odata-services-with-sap-gateway).

- Create an SAP connection of [type OData](../sap-connection/settings/#source-type-odata).

- Enable the fllowing Communication Scenarios:

  - General communication integration:
    - SAP_COM_0A06 (Communication System Read Integration)
    - SAP_COM_0A07 (Communication Arrangement Read Integration)
    - SAP_COM_0A48 (Communication Management Integration)
  - Metadata integration:
    - SAP_COM_0181 (OData Metadata Integration)
  - To extract CDS data:
    - SAP_COM_0531 (SAP Datasphere - ABAP CDS Extraction - OData Integration)
    - SAP_COM_0532 (SAP Datasphere - ABAP CDS Extraction - WebSocket Integration)

- Expose SAP OData services to 3rd party systems using Communication Arrangements, see [SAP Learning: Setting up Communication Management](https://learning.sap.com/learning-journeys/implement-sap-s-4hana-cloud-public-edition-for-sourcing-and-procurement/setting-up-communication-management_a913171c-c96d-47a9-81ec-dc9ee8754320). For more information on predefined OData services in the SAPS/4HANA Public Cloud, see [OData V4 List](https://api.sap.com/products/SAPS4HANACloud/apis/ODATAV4) and [OData V2 List](https://api.sap.com/products/SAPS4HANACloud/apis/ODATA).

- Create an SAP connection of [type OData](../sap-connection/settings/#source-type-odata).

### Create an OData Extraction

1. In the main window of the Designer, click **[New]** to create a new extraction. The window "Create Extraction" opens.
1. Select an [SAP Connection](../sap-connection/) of type **Odata** from the drop-down menu **Source**.
1. Enter a unique name for your extraction.
1. Select the extraction type **OData**. The **OData** extraction type is only available if the SAP source connection uses the [OData protocol](../sap-connection/settings/#source-type-odata).
1. Click **[OK]**. The main window of the extraction type opens automatically.

The majority of the functions of the extraction type can be accessed in the main window.

### Look up OData Services

1. In the main window of the extraction type, click **[]**. The window “Service Selection” opens.
1. In the field **Search pattern**, enter the technical service name of an OData V2 service or the service ID of an OData V4 service . Use wildcards (\*), if needed.
1. Click **[Search]**. Search results are displayed.
1. Click **[]** to select a service . The SAP objects that are available via the service are displayed in the right screen of the menu.
1. Select a service entity and click **[OK]** to confirm.

The application now returns to the main window of the extraction type.

### Define the OData Extraction Type

The OData extraction type offers the following options for data extractions:

1. In the section *Service Fields*, select the items to extract.
1. Click **[Load Preview]** to display a live preview of the first 100 records.
1. Optional: edit selections to apply (dynamic) filters. For more information, see [Edit Selections](selections/#edit-selections).
1. Check the [Extraction Settings](settings/) and the [General Settings](general-settings/) before running the extraction.
1. Click **[OK]** to save the extraction type.

You can now run the extraction, see [Run Extractions](../run-extractions/).

Note

The OData data types **DateTime** and **DateTimeOffset** (original format: *yyyy-mm-ddThh:mm\[:ss[.fffffff]\]*) are truncated to the following format: *yyyyMMdd*.

Runtime parameters are are placeholders for values that are passed at runtime, see [Extraction Parameters - Custom](../../parameters/extraction-parameters/#custom). They can be created in context of [Selections](../selections/).

## Create Runtime Parameters

The OData extraction type supports the use of [scalar parameters](#scalar-parameters) that represent single values.

### Scalar Parameters

Follow the steps below to create a scalar runtime parameter:

1. In the main window of the component click **Edit runtime parameters**. The window “Edit Runtime Parameters” opens.

1. Click **[Add Scalar]** to define scalar parameters to be used as placeholders for actual values. The placeholders need to be populated with actual values at runtime.

   Tip

   Parameter0..-n is the default naming for the added parameter. You can enter a name of your choice.

1. Select one of the following data types from the drop-down menu. The data types may correlate to SAP data types.

   | Type | Description | | --- | --- | | *Text* | Can be used for any type of SAP selection field. | | *Number* | Can be used for numeric SAP selection fields. | | *Flag* | Can only be used for SAP selection fields THAT require an ‘X’ (true) or a blank ‘‘ (false) as input value. |

1. Click **[OK]** to confirm.

The runtime parameters are now available in the extraction type.

## Assign Runtime Parameters

Follow the steps below to assign the runtime parameters to selections.

1. In the main window of the extraction type, click the **[Edit]** button next to the selection you want to parameterize. The window "Edit Selections" opens.
1. Add a filter to the selection, see [Selections and Filters](../selections/#edit-selections).
1. Click the icon button next to the input field to switch between static values () and runtime parameters (). If no icon button is available, [create a runtime parameter](#create-runtime-parameters).
1. Select a runtime parameter from the dropdown-list.
1. Click **[OK]** to confirm the input.

Pass values during runtime, see [Extraction Parameters - Custom](../../parameters/extraction-parameters/#custom).

This page contains an overview of the settings in the window "General Settings".\
To open the general settings, click **General Settings** in the main window of the extraction type.

### Misc. Tab

The *Misc.* tab covers cache settings, column encryption and keywords of an extraction type.

#### Cache results

This option can be neglected. Board Connector always uses the result cache, because Board always requests the results twice.

#### Keywords

One or more keywords (tags) can be assigned to an extraction. Keywords can be entered directly in the keyword field. You can use these keywords to filter extractions in the "Search Extractions" window. To open the "Search Extractions" window, click **[ Search]** in the main window of the Designer.

Tip

To add keywords to multiple extractions at once, select the extractions in the main window of the Designer.\
Right-click + **Add/Remove keywords** opens the window "Add/Remove Keywords To/From Multiple Extractions".

### Security Tab

Restrict user access to the extraction. For more information, see [Restrict Designer Access](../../access-restrictions/restrict-designer-access/).

### CSV Tab

The *CSV* tab covers data and date formatting.

#### Column Name Style

Defines the style of the column name. Following options are available:

| Option | Description | | --- | --- | | **Code** | The SAP technical column name is used as column name in the destination e.g. MAKTX. | | **PrefixedCode** | The SAP technical column name is prefixed by SAP object name and the tilde character e.g., MAKT~MAKTX | | **CodeAndText** | The SAP technical column name and the SAP description separated by an underscore are used as column name in the destination e.g., MAKTX_Material Description (Short Text) | | **TextAndCode** | The SAP description and the SAP technical column name description separated by an underscore are used as column name in the destination e.g., Material Description (Short Text)\_MAKTX |

#### Date Conversion

When **Convert dates** is active, the following date conversions apply:

| Option | Description | | --- | --- | | **Year 0** | Converts the SAP date 00000000 to the entered value. | | **Year 9999** | Converts the SAP date 9999XXXX to the entered value. | | **Invalid values** | If an SAP date cannot be converted to a valid date format, the invalid date is converted to the entered value. NULL is supported as a value. |

### Columns Order Tab

The "Columns Order" feature enables users to rearrange the order of result columns when running an extraction. To rearrange the result order, assign indexes to the available result columns. Index 0 defines the first column in the result set, index 1 the second columns, etc.

| Option | Description | | --- | --- | | **Enabled** | When this option is active, the defined column order is applied when running the extraction. | | **Swap** | Swaps the index of 2 columns. All other columns keep their indexes. | | **Insert** | Inserts the selected column into the selected index. All other indexes are recalculated. | | **Reset default** | Restores the original column order. |

This page shows how to filter the data that is extracted by the OData extraction type. Selections limit the result set of the OData extraction type to extract only records that match the selection.

### Edit Selections

Follow the steps below to edit selection fields and filter data:

1. In the subsection *Selection Screen*, click **[Edit]** next to the field you want to edit. The window “Edit selection” opens.

1. Click **[Single]**, **[Range]** or **[List]** to add a corresponding filter, see [Filter Options](#filter-options).

1. In the column **Sign** , select *Include* to add the filtered data to the output or select *Exclude* to remove the filtered data from the output.

1. In the column **Option** , select an operator, see [Filter Options](#filter-options).

1. In the column **Value**, enter values directly into the input fields **Low** and **High** or assign existing [runtime parameters](../edit-runtime-parameters/) to the selection fields .

   Note

   When runtime parameters are available, you can use the icon button next to the input field to switch between static values () and runtime parameters ().

1. Click **[OK]** to confirm your input.

1. Click **[Load live preview]** in the main window of the extraction type to check the result of your selection. If runtime parameters are defined, you are prompted to populate the parameters with actual values.

Note that edited selection fields overwrite the selection fields in the variant.

Tip

If you use multiple selection parameters, it is more efficient to create a variant in SAP.

The number of defined filters is displayed in square brackets next to the **[Edit]** button.

### Filter Options

The OData extraction type offers the following filter options:

| Type | Operator | Description | | --- | --- | --- | | Single | | Compare data to a single specified value. | | | *(not) like pattern* | True if data values do (not) contain to the specified value. | | | *(not) equal to* | True if data is (not) equal to the specified value. | | | *at least* | True if data is greater than or equal to the specified value. | | | *more than* | True if data is greater than the specified value. | | | *at most* | True if data is less than or equal to the specified value. | | | *less than* | True if data is less than the specified value. | | Range | | Check if the data is (not) within a specified range of values. | | | *(not) between* | True if data values do (not) lie between the 2 specified values. | | List | | Check if the data is part of a specified list of values. | | | *element of* | True if data values are part of the list. |

### Data Format

Use the following internal SAP representation for input:

- Date: The date 01.01.1999 has the internal representation 19990101 (YYYYMMDD).
- Year period: The year period 001.1999 has the internal representation 1999001 (YYYYPPP).
- Numbers: Numbers must contain the leading zeros, e.g., customer number 1000 has the internal representation 0000001000.

Warning

**Values accept only the internal SAP representation.**\
Input that does not use the internal SAP representation results in error messages. Use the internal SAP representation. Example:

```text
ERPConnect.ABAPProgramException: RfcInvoke failed(RFC_ABAP_MESSAGE): Enter date in the format \_.\_.\_

```

This page contains an overview of the extraction settings in the OData extraction type.\
To open the extraction settings, click ****Extraction Settings**** in the main window of the extraction type.

### Extraction Settings

#### Package Size

The extracted data is split into packages of the defined size. The default value is 50000 lines.\
A package size between 20000 and 50000 is advisable for large amounts of data. 0 means no packaging. Not using packaging can lead to an RFC timeout for large data extractions.

Warning

**RFC_ERROR_SYSTEM_FAILURE - No more storage space available for extending an internal table**\
To avoid a memory overflow on the SAP source system and to avoid huge overheads, choose a package size that suits your memory capacity.

#### Row Limit

Specifies the maximum number of extracted records. 0 extracts all data. You can use this option to perform tests with a small amount of data by entering a row limit of e.g., 1000.

This page shows how to use the ODP extraction type.\
The ODP extraction type can be used to extract data via the SAP Operational Data Provisioning (ODP) framework.

### About ODP

Operational data provisioning (ODP) is a framework in SAP ABAP applications for transferring data between systems. ODP provides a technical infrastructure for data extraction and replication from different SAP (ABAP) Systems, e.g.:

- ECC
- S/4 HANA
- BW
- BW/4 HANA

The ODP extraction type acts as a subscriber (consumer) and [subscribes](subscriptions/) to a data provider. ODP supports mechanisms to load data incrementally from data providers. For SAP BW/4HANA, ODP is the central infrastructure for data extraction and replication from SAP (ABAP) applications to an SAP BW/4HANA Data Warehouse.

The ODP extraction type provides data transfer from the following providers (also called [Provider Context](provider-context/)):

| Provider Context | SAP Source Objects | | --- | --- | | ABAP Core Data Services \[[ABAP_CDS](provider-context/#abap-cds-views)\] | - CDS Views | | SAP NetWeaver Business Warehouse or BW4/HANA \[[BW](provider-context/#bw-infoproviders)\] | **BW/4HANA:** - DSO / aDSO - CompositeProvider - InfoObjects - Query as InfoProvider **BW systems:** - CompositeProvider - InfoCubes - Semantically partitioned objects - HybridProviders - MultiProviders - InfoSets | | SAP HANA Information Views \[[HANA](provider-context/#hana-views)\] | - Analysis Views - Calculation Views - Associated Attribute Views | | DataSources/Extractors \[[SAPI](provider-context/#extractors)\] | - DataSources and Extractors | | SAP LT Queue Alias \[[SLT~your_queue_alias](provider-context/#slt-server)\] | - SAP Tables - Cluster tables - Pool tables |

Depending on the connected SAP source system there are differences in available provider contexts.\
For more information on SAP ODP, see [SAP Wiki: Operational Data Provisioning (ODP) and Delta Queue (ODQ)](https://wiki.scn.sap.com/wiki/pages/viewpage.action?pageId=449284646).

### Prerequisites

- A connection to an SAP system is available, see [SAP Connection](../sap-connection/).
- The SAP user has sufficient user rights, see [SAP Authority Objects](../setup-in-sap/sap-authority-objects/#odp).
- Implement the following SAP notes to use ODP:
  - [1931427 - ODP Data Replication API 2.0](https://launchpad.support.sap.com/#/notes/1931427)
  - [2232584 - Release of SAP extractors for ODP replication (ODP SAPI)](https://launchpad.support.sap.com/#/notes/2232584)
  - [1560241 - Release of DataSources for ODP data replication API](https://launchpad.support.sap.com/#/notes/1560241)
  - [2196500 - ODP Package size cannot be reduced below 50 MB](https://launchpad.support.sap.com/#/notes/2196500/D)
  - [2191995 - ODQ Package Size cannot be reduced below 50 MByte](https://launchpad.support.sap.com/#/notes/2191995/D)
- DataSources have to be activated in SAP, see [SAP Help: Activating DataSources in the SAP OLTP System](https://help.sap.com/docs/SLH_advanced_compliance_reporting_service/7a60944343e543a1ab99e9b2904dab09/e5d447257a95416190d29638a64a5dfa.html).
- Before creating ODP extractions, test the ODP source in SAP using the ABAP report RODPS_REPL_TEST to rule out and troubleshoot ODP problems in the ODP source. For more information, see [SAP Wiki: Replication test with RODPS_REPL_TEST](https://wiki.scn.sap.com/wiki/display/BI/Replication+test+with+RODPS_REPL_TEST).

Note

The ODP API 1.0 has limitations compared to ODP API 2.0, e.g., ODP API 1.0 does not support the extraction of Hierarchy DataSources. For more information, see [SAP Wiki: Limitation of ODP API 1.0](https://wiki.scn.sap.com/wiki/display/BI/Limitation+of+ODP+API+1.0).

Warning

**Missing Authorization.**\
To use the ODP extraction type, access to the designated authority objects (RFC) in SAP must be available. Adjust [SAP Authority Objects](../setup-in-sap/sap-authority-objects/#odp) accordingly.

### Create an ODP Extraction

1. In the main window of the Designer, click **[New]** to create a new extraction. The window "Create Extraction" opens.
1. Select an [SAP Connection](../sap-connection/) of type **RFC** from the drop-down menu **Source**.
1. Enter a unique name for your extraction.
1. Select the extraction type **ODP**.
1. Click **[OK]**. The main window of the extraction type opens automatically.

The majority of the functions of the extraction type can be accessed in the main window.

### Look up Data Objects

1. In the main window of the extraction type, click **[]**. The window “Operational Data Provider Lookup” opens.
1. In the field **Name**, enter the name of an extractor . Use wildcards (\*), if needed.
1. Select a *Context* . Depending on the connected SAP source system there are differences in available [Provider Contexts](provider-context/).
1. Click **[]**. Search results are displayed.
1. Select an extractor and click **[OK]** to confirm.

The application now returns to the main window of the extraction type.

Note

To find DataSources, they have to be activated in SAP.

### Define the ODP Extraction Type

The ODP extraction type offers the following options for data extractions:

1. In the section *Fields*, select the items you want to extract.

   Note

   TS_SEQUENCE_NUMBER is a technical primary key that can be added to the output. When working with identical data sets, the data set with the highest sequence number is the most current data set.

1. Optional: edit selections to apply (dynamic) filters. For more information, see [Edit Selections](selections/#edit-selections).

   Note

   If your data source is a Hierarchy, see [Hierarchy Segments](provider-context/#segments-to-extract) for filter options.

1. Select an [Update Mode](update-mode/), e.g., to initialize delta extractions.

1. Click **[Load live preview]** to display a live preview of the first 100 records.

1. Check the [Extraction Settings](settings/) and the [General Settings](general-settings/) before running the extraction.

1. Click **[OK]** to save the extraction type.

You can now run the extraction, see [Run Extractions](../run-extractions/).

Runtime parameters are are placeholders for values that are passed at runtime. They can be created in context of [Selections](../selections/).

## Create Runtime Parameters

There are two types of runtime parameters:

- [Scalar parameters](#scalar-parameters) represent a single value.
- [List parameters](#list-parameters) represent multiple values.

### Scalar Parameters

Follow the steps below to create a scalar runtime parameter:

1. In the main window of the component click **Edit runtime parameters**. The window “Edit Runtime Parameters” opens.

1. Click **[Add Scalar]** to define scalar parameters to be used as placeholders for actual values. The placeholders need to be populated with actual values at runtime.

   Tip

   Parameter0..-n is the default naming for the added parameter. You can enter a name of your choice.

1. Select one of the following data types from the drop-down menu. The data types may correlate to SAP data types.

   | Type | Description | | --- | --- | | *Text* | Can be used for any type of SAP selection field. | | *Number* | Can be used for numeric SAP selection fields. | | *Flag* | Can only be used for SAP selection fields THAT require an ‘X’ (true) or a blank ‘‘ (false) as input value. |

1. Click **[OK]** to confirm.

The runtime parameters are now available in the extraction type.

### List Parameters

Follow the steps below to create a list runtime parameter:

1. In the main window of the component click **Edit runtime parameters**. The window “Edit Runtime Parameters” opens.

1. Click **[Add List]** to define list parameters that contain multiple values separated by commas e.g., 1,10 or “1”, “10”. The placeholders need to be populated with actual values at runtime.

   Tip

   Parameter0..-n is the default naming for the added parameter. You can enter a name of your choice.

1. Click **[OK]** to confirm.

The runtime parameters are now available in the extraction type.

## Assign Runtime Parameters

Follow the steps below to assign the runtime parameters to selections.

1. In the main window of the extraction type, click the **[Edit]** button next to the selection you want to parameterize. The window "Edit Selections" opens.
1. Add a filter to the selection, see [Selections and Filters](../selections/#edit-selections).
1. Click the icon button next to the input field to switch between static values () and runtime parameters (). If no icon button is available, [create a runtime parameter](#create-runtime-parameters).
1. Select a runtime parameter from the dropdown-list.
1. Click **[OK]** to confirm the input.

Pass values during runtime, see [Extraction Parameters - Custom](../../parameters/extraction-parameters/#custom).

This page contains an overview of the settings in the window "General Settings".\
To open the general settings, click **General Settings** in the main window of the extraction type.

### Misc. Tab

The *Misc.* tab covers cache settings, column encryption and keywords of an extraction type.

#### Cache results

This option can be neglected. Board Connector always uses the result cache, because Board always requests the results twice.

#### Keywords

One or more keywords (tags) can be assigned to an extraction. Keywords can be entered directly in the keyword field. You can use these keywords to filter extractions in the "Search Extractions" window. To open the "Search Extractions" window, click **[ Search]** in the main window of the Designer.

Tip

To add keywords to multiple extractions at once, select the extractions in the main window of the Designer.\
Right-click + **Add/Remove keywords** opens the window "Add/Remove Keywords To/From Multiple Extractions".

### Security Tab

Restrict user access to the extraction. For more information, see [Restrict Designer Access](../../access-restrictions/restrict-designer-access/).

### CSV Tab

The *CSV* tab covers data and date formatting.

#### Column Name Style

Defines the style of the column name. Following options are available:

| Option | Description | | --- | --- | | **Code** | The SAP technical column name is used as column name in the destination e.g. MAKTX. | | **PrefixedCode** | The SAP technical column name is prefixed by SAP object name and the tilde character e.g., MAKT~MAKTX | | **CodeAndText** | The SAP technical column name and the SAP description separated by an underscore are used as column name in the destination e.g., MAKTX_Material Description (Short Text) | | **TextAndCode** | The SAP description and the SAP technical column name description separated by an underscore are used as column name in the destination e.g., Material Description (Short Text)\_MAKTX |

#### Date Conversion

When **Convert dates** is active, the following date conversions apply:

| Option | Description | | --- | --- | | **Year 0** | Converts the SAP date 00000000 to the entered value. | | **Year 9999** | Converts the SAP date 9999XXXX to the entered value. | | **Invalid values** | If an SAP date cannot be converted to a valid date format, the invalid date is converted to the entered value. NULL is supported as a value. |

### Columns Order Tab

The "Columns Order" feature enables users to rearrange the order of result columns when running an extraction. To rearrange the result order, assign indexes to the available result columns. Index 0 defines the first column in the result set, index 1 the second columns, etc.

| Option | Description | | --- | --- | | **Enabled** | When this option is active, the defined column order is applied when running the extraction. | | **Swap** | Swaps the index of 2 columns. All other columns keep their indexes. | | **Insert** | Inserts the selected column into the selected index. All other indexes are recalculated. | | **Reset default** | Restores the original column order. |

This page shows how to use the Provider Contexts of the ODP extraction type. The ODP extraction type supports the following Provider Contexts:

| Provider Context | SAP Source Objects | | --- | --- | | ABAP Core Data Services \[[ABAP_CDS](#abap-cds-views)\] | - CDS Views | | SAP NetWeaver Business Warehouse or BW4/HANA \[[BW](#bw-infoproviders)\] | **BW/4HANA:** - DSO / aDSO - CompositeProvider - InfoObjects - Query as InfoProvider **BW systems:** - CompositeProvider - InfoCubes - Semantically partitioned objects - HybridProviders - MultiProviders - InfoSets | | SAP HANA Information Views \[[HANA](#hana-views)\] | - Analysis Views - Calculation Views - Associated Attribute Views | | DataSources/Extractors \[[SAPI](#extractors)\] | - DataSources and Extractors | | SAP LT Queue Alias \[[SLT~your_queue_alias](#slt-server)\] | - SAP Tables - Cluster tables - Pool tables |

## ABAP CDS Views

According to the Core Data Service (CDS) concept, data models based on CDS serve as central definitions that can be used in many different domains, such as transactional and analytical applications.

CDS is defined using an SQL-based data definition language (DDL). DLL leverages the standard SQL with several additional concepts, such as associations, which define the relationships between CDS views, and annotations that direct the domain-specific use of CDS artifacts.

### Available CDS

There are two types of CDS available:

- HANA CDS (defined in XS engine)
- ABAP CDS

For each ABAP CDS entity defined in the DDL source code, an SQL view is generated in the ABAP Dictionary. The same way as the views created with Dictionary tools (transaction SE11), ABAP CDS entities can be accessed in ABAP using Open SQL statements.

CDS is important for SAP application development. For example, S/4HANA uses CDS to provide both core transactional functionality as well as analytical content for reporting. In BW/4 HANA, ABAP based CDS views can be used for data extraction.

Two possible use cases for CDS:

- Direct access to a CDS view from BW/4 HANA
- Delta extraction from a CDS view in S/4 HANA to BW

CDS Views support Full and Delta Extraction.

### Replace BW Extractors with CDS Views in S/4HANA

In majority of cases traditional BW extractors can be used to extract data from an S/4HANA systems. Due to simplifications in the S/4HANA system, several extractors are now deprecated or can no longer be used in a usual manner. To use the deprecated or altered extractors, SAP may deliver extraction relevant (via the analytical annotations) CDS Views.

### Use ABAP CDS Views

Note

To find an ABAP CDS view it must have the following Annotation: `@Analytics.dataExtraction.Enabled: true`. If the source SAP system is not on a HANA DB, an additional Annotation is needed: `@Analytics.dataCategory: #CUBE/#FACT/#DIMENSION`.

Things that need to be considered when using BW InfoProviders:

1. When looking up ABAP CDS Views in the ODP extraction type, make sure to select the correct context.
1. When the delta load is available for the source object in the SAP source system, the **Delta Update** option is available in the ODP extraction type.
1. Click **[Load live preview]** to preview the data without running an extraction.

## BW InfoProviders

The Operational Data Provisioning (ODP) framework allows you to extract data from the InfoProviders in your source BW and BW/4 HANA systems. Available InfoProvider types are dependent on your source BW and BW/4 HANA system.

### Available InfoProviders

- **Available InfoProviders in SAP BW∕4HANA**

  ______________________________________________________________________

  - CompositeProvider - object type HCPR (full extraction)
  - DataStore objects (with delta extraction)
    - InfoObjects
    - Master data
    - Texts
    - Hierarchies
  - Query as InfoProvider

- **Additional InfoProviders in BW Systems**

  ______________________________________________________________________

  - CompositeProvider - object type HCPR (full extraction)
  - InfoCubes (with delta extraction)
  - Semantically partitioned objects
  - HybridProviders
  - MultiProviders
  - InfoSets

### Use BW InfoProviders

Things that need to be considered when using BW InfoProviders:

1. When looking up BW InfoProviders in the ODP extraction type, make sure to select the correct context.
1. When the delta load is available for the source object in the SAP source system, the **Delta Update** option is available in the ODP extraction type.
1. Click **[Load live preview]** to preview the data without running an extraction.

## Extractors

The ODP extraction type can be used to extract data from Business Content DataSource (Extractors). The majority of DataSources, including generic (custom) DataSources, can be released for Operational Data Provisioning.

The ODP extraction type does not change the implementation of application extractors. All features and capabilities remain unchanged.

An extractor (in ERP or S/4 HANA) is an encapsulated business object, representing multiple source tables already in the source system

### Available Extractors

- Transactional data
- Master data
- Text data
- Hierarchy data

There are standard delta extraction methods available for master data and transaction data.

### Use Extractors

Things that need to be considered when using Extractors:

- DataSources have to be activated in SAP, see [SAP Help: Set Up and Activate DataSources](https://help.sap.com/viewer/7a60944343e543a1ab99e9b2904dab09/CLOUD/en-US/e5d447257a95416190d29638a64a5dfa.html).
- When looking up DataSources or Extractors, make sure to select the correct context.
- If delta load is available for the source object in the SAP source system, the **Delta Update** option is available in the ODP extraction type.
- If the DataSource is a Hierarchy, there are additional settings, see [Hierarchies](#hierarchies).

### Hierarchies

If the selected source object is of type Hierarchy, the window "Select Hierarchy" opens.

1. Select a Hierarchy from the list of Hierarchies in the "Select Hierarchy" window.
1. Confirm your selection with **[OK]**.\
   The name of the selected Hierarchy is displayed under *Selected Hierarchy* .
1. Select which segments to extract .

#### Segment(s) to extract

Hierarchies are divided into segments by the API. Choose which segments of the Hierarchy to extract . The selected data is displayed in the *Fields* section.

| Option | Description | | --- | --- | | **Merges** | All segments contain the field Node ID. Using the Node ID *Merges* automatically combines all 3 segments. | | **Elements** | The segment *Elements* contains information about the elements of the Hierarchy e.g., name, parent, child, etc. | | **Texts** | The segment *Texts* contains the description texts of the *Elements*. The language of the descriptions depends on the language settings of the SAP connection. | | **Intervals** | The segment *Intervals* contains additional information if an element is an interval. In ODP no TO and FROM columns are displayed, see [SAP Note 3090500](https://launchpad.support.sap.com/#/notes/3090500). |

Note

Hierarchies can be passed as runtime parameters at runtime.

## HANA Views

Operational Data Provisioning (ODP) can be used to connect SAP HANA database of an SAP ABAP source system. The connection is provided via RFC.

### Available HANA Views:

- Analysis Views
- Calculation Views
- Associated Attribute Views

### Use HANA Views

Things that need to be considered when using HANA Views:

1. When looking up HANA Views in the ODP extraction type, make sure to select the correct context.
1. When the delta load is available for the source object in the SAP source system, the **Delta Update** option is available in the ODP extraction type.
1. Click **[Load live preview]** to preview the data without running an extraction.

## SLT Server

The Operational Data Provisioning (ODP) framework allows you to extract tables and simple views from SAP HANA systems via an SAP Landscape Transformation Replication Server (SLT). The SLT server is a trigger-based CDC solution that can replicate SAP tables and views and make them available as delta extracts.

### Available Tables

- Regular SAP tables
- Cluster tables
- Pool tables

### Requirements

The SLT server context requires an SAP Landscape Transformation Replication Server (SLT) that is set up for ODP, see [SAP Help: Transferring Data from SLT Using Operational Data Provisioning](https://help.sap.com/docs/SAP_NETWEAVER_750/ccc9cdbdc6cd4eceaf1e5485b1bf8f4b/6ca2eb9870c049159de25831d3269f3f.html?locale=en-US).

The following requirements apply to the SLT server:

- Minimum release version of the SLT server:
  - Add-On DMIS 2011 SP05
  - SAP NetWeaver 7.3 SPS10, 7.31 SPS09 or 7.4 SPS04 (ODP infrastructure)
- Add-On DMIS_2011 SP03/SP04 or higher or 2010 SP08/SP09 is installed in the SAP source system.
- The following SAP Notes are published in the SAP source system:
  - SAP Note 1863476
  - SAP Note 1817467 when using Add-On DMIS 2011 SP05

### Use SLT Server

Consider the following when using an SLT server:

1. When looking up data via an SLT server, make sure to select the correct context.
1. A live preview of the data is not available in the SLT server context.

For more information on SLT servers, see [SAP Help: Transferring Data from SLT Using Operational Data Provisioning](https://help.sap.com/docs/SAP_NETWEAVER_750/ccc9cdbdc6cd4eceaf1e5485b1bf8f4b/6ca2eb9870c049159de25831d3269f3f.html?locale=en-US) or download the [SLT-Performance-Guide (Nov 2022)](../../../assets/files/SLT-Performance-Guide_Nov_2022.pdf).

This page shows how to filter the data that is extracted by the ODP extraction type. Selections limit the result set of the ODP extraction type to extract only records that match the selection.

### Edit Selections

Follow the steps below to edit selection fields and filter data:

1. In the subsection *Fields*, click **Edit** next to the field you want to edit. The window “Edit selection” opens.

1. Click **[Single]**, **[Range]** or **[List]** to add a corresponding filter, see [Filter Options](#filter-options).

1. In the column **Sign** , select *Include* to add the filtered data to the output or select *Exclude* to remove the filtered data from the output.

1. In the column **Option** , select an operator, see [Filter Options](#filter-options).

1. In the column **Value**, enter values directly into the input fields **Low** and **High** or assign existing [runtime parameters](../edit-runtime-parameters/) to the selection fields .

   Note

   When runtime parameters are available, you can use the icon button next to the input field to switch between static values () and runtime parameters ().

1. Click **[OK]** to confirm your input.

1. Click **[Load live preview]** in the main window of the extraction type to check the result of your selection. If runtime parameters are defined, you are prompted to populate the parameters with actual values.

The number of defined filters is displayed in square brackets next to the **Edit** option.

### Filter Options

The ODP extraction type offers the following filter options:

| Type | Operator | Description | | --- | --- | --- | | Single | | Compare data to a single specified value. | | | *(not) like pattern* | True if data values do (not) contain to the specified value. Not not all ODP contexts and data sources support this option. | | | *(not) equal to* | True if data is (not) equal to the specified value. | | | *at least* | True if data is greater than or equal to the specified value. | | | *more than* | True if data is greater than the specified value. | | | *at most* | True if data is less than or equal to the specified value. | | | *less than* | True if data is less than the specified value. | | Range | | Check if the data is (not) within a specified range of values. | | | *(not) between* | True if data values do (not) lie between the 2 specified values. | | List | | Check if the data is part of a specified list of values. | | | *element of* | True if data values are part of the list. |

### Data Format

Use the following internal SAP representation for input:

- Date: The date 01.01.1999 has the internal representation 19990101 (YYYYMMDD).
- Year period: The year period 001.1999 has the internal representation 1999001 (YYYYPPP).
- Numbers: Numbers must contain the leading zeros, e.g., customer number 1000 has the internal representation 0000001000.

Warning

**Values accept only the internal SAP representation.**\
Input that does not use the internal SAP representation results in error messages. Use the internal SAP representation. Example:

```text
ERPConnect.ABAPProgramException: RfcInvoke failed(RFC_ABAP_MESSAGE): Enter date in the format \_.\_.\_

```

This page contains an overview of the extraction settings in the ODP extraction type.\
To open the extraction settings, click ****Extraction Settings**** in the main window of the extraction type.

### Extraction Settings

#### Package Size

The extracted data is split into packages of the defined size. The default package size is 14400000 bytes. When the package size is set to 0, SAP uses the default ODP packaging size.

Make sure that your SAP version includes the necessary notes, see [Prerequisites](../#prerequisites).

#### Adjust Currency Decimals

The default number of decimal places for a currency in the SAP database is 2 decimals. Currencies that do not have decimals are also stored in this format, e.g. JPY, VND, KRW, etc.

Example:

| Currency | Actual Amount | Amount stored in SAP database | | --- | --- | --- | | JPY | 100 | 1.00 | | KRW | 10000 | 100.00 |

When extracting currencies with no decimals, the amount stored in SAP is returned e.g., 100 JPY are extracted as 1.00. To correct the decimal placement of the extracted data, activate **Adjust Currency Decimals**. If **Adjust Currency Decimals** is active, currencies without decimals are multiplied by a factor that balances out the decimals.

**Adjust Currency Decimals** also requires the extraction of the corresponding CURRENCY field that can be used as a reference for the multiplication factor. Use the **[Load live preview]** function to find the correct currency field/s.

- If the currency field is part of the table, add it to the output.
- If the currency field is in another table, join the tables.
- If the reference is not part of a table, **Adjust Currency Decimals** cannot be used.

Note

The multiplication factor used in *Adjust Currency Decimals* is determined by the SAP currency table TCURX. To access the table, the following SAP Authority objects must be set in SAP: *S_TABU_NAM ACTVT=03; TABLE=TCURX*.

This page contains a description of the "Show active subscriptions" menu in the ODP extraction type. To open the menu, click **Show active subscriptions** in the main window of the extraction type.

### Show Active Subscriptions

The ODP extraction type acts as a subscriber (consumer) to [data providers](../provider-context/) to extract data from the data provider. The window "Delta Subscriptions for product" displays details about subscribers.

| Column Name | Description | | --- | --- | | Name | Technical name of all subscriptions of a specific Theobald Software Xtract product (e.g., Xtract Universal). | | Process | Technical name of a subscription | | R. (number of requests) | Number of executed delta requests | | Last request | Timestamp of the last delta request |

To delete a subscription, click **[]** on the right side of the window.

Tip

The information displayed in the "Delta Subscriptions for product" window can also be viewed in SAP transaction *ODQMON*.

The ODP extraction type can be used for delta extractions. This means that only recently added or changed data is extracted, instead of a full load. The data that is extracted is defined by the **Update Mode** setting in the main window of the extraction type.

### Update Modes

#### Full update

Extracts all data (full mode).

#### Delta update

Note

The **Delta update** option is ready for input only if the ODP provider in the SAP source system supports delta updates.

Runs a delta initialization, if no delta initialization is available for the selected subscriber. Runs a delta update, if there is a delta initialization for the selected subscriber. A delta update only extracts data that was added or changed on the SAP system since the last delta request.

- **Extract data**\
  Allows extracting data when running a delta initialization. Leaving this checkbox unchecked runs a delta initialization without extracting data.
- **Auto-sync subscription**\
  Allows deletion of the existing subscription and creates a new subscription, if required. Each extraction has an internal ID, which is part of the subscriber. If you change the filter of an extraction after the delta initialization, the *Auto-sync subscription* option automatically deletes the existing subscription and creates a new one. A subscription is deleted, if the error message "Illegal change in selection parameters" returns from the SAP system. To delete subscriptions manually, see [Subscriptions](../subscriptions/).

#### Delta recovery

Re-runs the last delta update.

#### Direct read (without ODQ)

Directly reads all available data, bypassing the ODQ (Operational Delta Queue). Direct read is the only update mode that supports data aggregation functions (*Maximum*, *Minimum* and *Sum*).

This page shows how to use the ODP(OData) extraction type.\
The ODP(OData) extraction type can be used to extract ODP-based data via OData services.

Note

As the use of the RFC modules of the ODP Data Replication API is prohibited by SAP ([SAP Note 3255746](https://me.sap.com/notesLatestChanges/0003255746/E/diff)), the ODP(OData) extraction type is the recommended tool for extracting ODP data.

### About ODP via OData

Open Data Protocol (OData) is a web protocol for querying and updating data. OData can be used to access the [Open Data Provisioning (ODP)](../odp/#about-odp) framework and extract ODP data, e.g., Hierarchies, Tables, Views, DataSources, etc.

To extract ODP data via OData, a corresponding OData service is required. The data model of the service specifies, which data sets are accessible and how the data is structured. Once the service is registered in the SAP Gateway system, Board Connector can consume the service.

For more information, see [SAP Help: ODP-Based Data Extraction via OData](https://help.sap.com/doc/saphelp_nw75/7.5.5/en-US/11/853413cf124dde91925284133c007d/frameset.htm).

Tip

For information on how to create OData services that provide ODP based data, refer to the [Knowledge Base Article: Create OData Services using the SAP Gateway Builder](../../knowledge-base/create-odata-services-using-the-sap-gateway-builder/).

### Prerequisites

- OData services for ODP extractions are available in the SAP system, see [SAP Help: Generating a Service for Extracting ODP Data via OData](https://help.sap.com/doc/saphelp_nw75/7.5.5/en-US/69/b481859ef34bab9cc7d449e6fff7b6/frameset.htm).
- To extract a DataSource, the DataSource is activated in SAP, see [SAP Help: Set Up and Activate DataSources](https://help.sap.com/docs/SLH_advanced_compliance_reporting_service/7a60944343e543a1ab99e9b2904dab09/e5d447257a95416190d29638a64a5dfa.html).
- Before creating ODP (OData) extractions, test the ODP source in SAP using the ABAP report RODPS_REPL_TEST to rule out and troubleshoot ODP problems in the ODP source. For more information, see [SAP Wiki: Replication test with RODPS_REPL_TEST](https://help.sap.com/docs/SUPPORT_CONTENT/bwdabc/3361385256.html).

#### Supported Features

- All available [ODP contexts](../odp/provider-context/) of an SAP system are accessible.
- Delta extractions (with initial full load) if the ODP data source supports deltas, see [Subscriptions](subscriptions/).
- Data packaging for large amounts of data, see [Package Size](settings/#package-size).
- Selections to filter the data before extraction, see [Selections](selections/).

#### Limitations

Delta subscriptions are limited to one SAP user per service. The ODP framework has to be exposed in multiple different services for a single user to have multiple delta subscriptions.

### Create a ODP(OData) Extraction

1. In the main window of the Designer, click **[New]** to create a new extraction. The window "Create Extraction" opens.
1. Select an [SAP Connection](../sap-connection/) of type **RFC** from the drop-down menu **Source**.
1. Enter a unique name for your extraction.
1. Select the extraction type **ODP(OData)**. The **ODP(OData)** extraction type is only available if the SAP source connection uses the [OData protocol](../sap-connection/settings/#source-type-odata).
1. Click **[OK]**. The main window of the extraction type opens automatically.

The majority of the functions of the extraction type can be accessed in the main window.

### Look Up OData Services

1. In the main window of the extraction type, click **[]**. The window “Service Selection” opens.

1. In the field **Search pattern** , enter one of the following characteristics:

   - name of an OData service
   - description of an OData service
   - name of the entity inside the OData service

   Use wildcards (\*), if needed.

1. Click **[Search]** . Search results are displayed.

1. Select an OData service and click **[OK]** to confirm.

The application now returns to the main window of the extraction type.

Note

To find DataSources, they have to be activated in SAP.

### Define the ODP(OData) Extraction Type

The ODP(OData) extraction type offers the following options for data extractions:

1. In the section *Fields*, select the items you want to extract.
1. Optional: Edit a selection you want to change or dynamize. For more information, see [Edit Selections](selections/#edit-selections).
1. Optional: Activate the option **Delta / Change tracking** to initialize delta extractions. For more information, see [Subscriptions](subscriptions/).
1. Click **[Load live preview]** to display a live preview of the first 100 records.
1. Check the [Extraction Settings](settings/) and the [General Settings](general-settings/) before running the extraction.
1. Click **[OK]** to save the extraction type.

You can now run the extraction, see [Run Extractions](../run-extractions/).

Runtime parameters are are placeholders for values that are passed at runtime. They can be created in context of [Selections](../selections/).

## Create Runtime Parameters

There are two types of runtime parameters:

- [Scalar parameters](#scalar-parameters) represent a single value.
- [List parameters](#list-parameters) represent multiple values.

### Scalar Parameters

Follow the steps below to create a scalar runtime parameter:

1. In the main window of the component click **Edit runtime parameters**. The window “Edit Runtime Parameters” opens.

1. Click **[Add Scalar]** to define scalar parameters to be used as placeholders for actual values. The placeholders need to be populated with actual values at runtime.

   Tip

   Parameter0..-n is the default naming for the added parameter. You can enter a name of your choice.

1. Select one of the following data types from the drop-down menu. The data types may correlate to SAP data types.

   | Type | Description | | --- | --- | | *Text* | Can be used for any type of SAP selection field. | | *Number* | Can be used for numeric SAP selection fields. | | *Flag* | Can only be used for SAP selection fields THAT require an ‘X’ (true) or a blank ‘‘ (false) as input value. |

1. Click **[OK]** to confirm.

The runtime parameters are now available in the extraction type.

### List Parameters

Follow the steps below to create a list runtime parameter:

1. In the main window of the component click **Edit runtime parameters**. The window “Edit Runtime Parameters” opens.

1. Click **[Add List]** to define list parameters that contain multiple values separated by commas e.g., 1,10 or “1”, “10”. The placeholders need to be populated with actual values at runtime.

   Tip

   Parameter0..-n is the default naming for the added parameter. You can enter a name of your choice.

1. Click **[OK]** to confirm.

The runtime parameters are now available in the extraction type.

## Assign Runtime Parameters

Follow the steps below to assign the runtime parameters to selections.

1. In the main window of the component, click the **[Edit]** button next to the selection you want to parameterize. The window "Edit Selections" opens.
1. Select a filter option, see [Edit Selections](../selections/#edit-selections).
1. Click the icon button next to the input field to switch between static values () and runtime parameters (). If no icon button is available, [create a runtime parameter](#create-runtime-parameters).
1. Select a runtime parameter from the dropdown-list.
1. Click **[OK]** to confirm the input.

Pass values during runtime, see [Extraction Parameters - Custom](../../parameters/extraction-parameters/#custom).

This page contains an overview of the settings in the window "General Settings".\
To open the general settings, click **General Settings** in the main window of the extraction type.

### Misc. Tab

The *Misc.* tab covers cache settings, column encryption and keywords of an extraction type.

#### Cache results

This option can be neglected. Board Connector always uses the result cache, because Board always requests the results twice.

#### Keywords

One or more keywords (tags) can be assigned to an extraction. Keywords can be entered directly in the keyword field. You can use these keywords to filter extractions in the "Search Extractions" window. To open the "Search Extractions" window, click **[ Search]** in the main window of the Designer.

Tip

To add keywords to multiple extractions at once, select the extractions in the main window of the Designer.\
Right-click + **Add/Remove keywords** opens the window "Add/Remove Keywords To/From Multiple Extractions".

### Security Tab

Restrict user access to the extraction. For more information, see [Restrict Designer Access](../../access-restrictions/restrict-designer-access/).

### CSV Tab

The *CSV* tab covers data and date formatting.

#### Column Name Style

Defines the style of the column name. Following options are available:

| Option | Description | | --- | --- | | **Code** | The SAP technical column name is used as column name in the destination e.g. MAKTX. | | **PrefixedCode** | The SAP technical column name is prefixed by SAP object name and the tilde character e.g., MAKT~MAKTX | | **CodeAndText** | The SAP technical column name and the SAP description separated by an underscore are used as column name in the destination e.g., MAKTX_Material Description (Short Text) | | **TextAndCode** | The SAP description and the SAP technical column name description separated by an underscore are used as column name in the destination e.g., Material Description (Short Text)\_MAKTX |

#### Date Conversion

When **Convert dates** is active, the following date conversions apply:

| Option | Description | | --- | --- | | **Year 0** | Converts the SAP date 00000000 to the entered value. | | **Year 9999** | Converts the SAP date 9999XXXX to the entered value. | | **Invalid values** | If an SAP date cannot be converted to a valid date format, the invalid date is converted to the entered value. NULL is supported as a value. |

### Columns Order Tab

The "Columns Order" feature enables users to rearrange the order of result columns when running an extraction. To rearrange the result order, assign indexes to the available result columns. Index 0 defines the first column in the result set, index 1 the second columns, etc.

| Option | Description | | --- | --- | | **Enabled** | When this option is active, the defined column order is applied when running the extraction. | | **Swap** | Swaps the index of 2 columns. All other columns keep their indexes. | | **Insert** | Inserts the selected column into the selected index. All other indexes are recalculated. | | **Reset default** | Restores the original column order. |

This page shows how to filter the data that is extracted by the ODP(OData) extraction type. Selections limit the result set of the ODP(OData) extraction type to extract only records that match the selection.

### Edit Selections

Follow the steps below to edit selection fields and filter data:

1. In the subsection Fields, click **Edit** next to the field you want to edit. The window “Edit selection” opens.

1. Select one of the following filter types:

   - **Single** : only extract data that equals a single specified value.
   - **Interval**: only extract data that lies within a specified range of values.

1. Enter values directly into the input fields or assign existing [runtime parameters](../edit-runtime-parameters/) to the selection.

   Note

   When runtime parameters are available, you can use the icon button next to the input field to switch between static values () and runtime parameters ().

1. Click **[OK]** to confirm your input.

1. Click **[Load live preview]** in the main window of the component to check the result of your selection. If runtime parameters are defined, you are prompted to populate the parameters with actual values.

When a filter is defined, the filter statement is displayed next to the **Edit** option.

### Data Format

Use the following internal SAP representation for input:

- Date: The date 01.01.1999 has the internal representation 19990101 (YYYYMMDD).
- Year period: The year period 001.1999 has the internal representation 1999001 (YYYYPPP).
- Numbers: Numbers must contain the leading zeros, e.g., customer number 1000 has the internal representation 0000001000.

Warning

**Values accept only the internal SAP representation.**\
Input that does not use the internal SAP representation results in error messages. Use the internal SAP representation. Example:

```text
ERPConnect.ABAPProgramException: RfcInvoke failed(RFC_ABAP_MESSAGE): Enter date in the format \_.\_.\_

```

This page contains an overview of the extraction settings in the ODP(OData) extraction type.\
To open the extraction settings, click ****Extraction Settings**** in the main window of the extraction type.

### Extraction Settings

#### Package Size

The extracted data is split into packages of the defined size. The default value is 50000 lines.\
A package size between 20000 and 50000 is advisable for large amounts of data. 0 means no packaging. Not using packaging can lead to an RFC timeout for large data extractions.

Warning

**RFC_ERROR_SYSTEM_FAILURE - No more storage space available for extending an internal table**\
To avoid a memory overflow on the SAP source system and to avoid huge overheads, choose a package size that suits your memory capacity.

The ODP(OData) extraction type acts as a subscriber to data providers to extract delta data from the data provider.

### Subscribe to a Data provider

To initialize delta extractions, activate the checkbox **Delta / Change tracking** and run the extraction once. The first run extracts all the data that matches the set selection criteria. After the initialization, the ODP(OData) extraction type only extracts data added or changed on the SAP system since the last run.

Tip

Use SAP transaction *ODQMON* to display information about active subscribers in SAP.

#### Limitations

Delta subscriptions are limited to one SAP user per service. The ODP framework has to be exposed in multiple different services for a single user to have multiple delta subscriptions.

### Terminate Subscriptions

To terminate a subscription in Board Connector, click **[Terminate subscription]** and deactivate the checkbox **Delta / Change tracking** .

This page shows how to use the OHS extraction type.\
The OHS extraction type can be used to extract data from Open Hub Services (OHS).

### Prerequisites

- A connection to an SAP system is available, see [SAP Connection](../sap-connection/).
- The SAP user has sufficient user rights, see [SAP Authority Objects](../setup-in-sap/sap-authority-objects/#table).
- Configure your SAP BW system to make data sources accessible, see [Customization for OHS in BW](../setup-in-sap/customization-for-ohs-in-bw/).

Warning

**Missing Authorization.**\
To use the OHS extraction type, access to the designated authority objects (RFC) in SAP must be available. Adjust [SAP Authority Objects](../setup-in-sap/sap-authority-objects/#ohs) accordingly.

### Create an OHS Extraction

1. In the main window of the Designer, click **[New]** to create a new extraction. The window "Create Extraction" opens.
1. Select an [SAP Connection](../sap-connection/) of type **RFC** from the drop-down menu **Source**.
1. Enter a unique name for your extraction.
1. Select the extraction type **OHS**.
1. Click **[OK]**. The main window of the extraction type opens automatically.

The majority of the functions of the extraction type can be accessed in the main window.

### Look up an OHS Destination

1. In the main window of the extraction type, select an **Extraction type** in the main window of the component.

   - Select **Table** if you use BW4Hana2.0 and make sure that the open hub destination type in SAP is set to *database table*.
   - Select **Third party tool (legacy)** if you use BW4Hana2.0 and make sure that the open hub destination type in SAP is set to *third party tool*.

1. Click **[ Lookup]**. The window “OHS Lookup” opens.

1. In the field **OHS Destination**, enter the name of an OHS destination . Use wildcards (\*) if needed.

1. Click **[]**. Search results are displayed .

1. Select an OHS destination and click **[OK]** to confirm.

The application now returns to the main window of the extraction type.

### Define the OHS Extraction Type

The OHS extraction type offers the following options for OHS extractions:

1. If **Process Chain** is empty, enter an SAP process chain assigned to your OHS destination, see [SAP Help: Display/Maintenance of Process Chain Attributes](https://help.sap.com/docs/SAP_NETWEAVER_701/6da591e86c4b1014b43de329b9ffb859/4a2cf30c6ed91c62e10000000a42189c.html?locale=en-US).

   Note

   If **Process Chain** is left empty, the extraction fails.

1. Optional: Use the **Timeout** setting to set a maximum time period to wait for a notification from the BW system. If the time limit is reached, the extraction fails.

1. Check the [Extraction Settings](settings/) and the [General Settings](general-settings/) before running the extraction.

1. Click **[OK]** to save the extraction type.

You can now run the extraction, see [Run Extractions](../run-extractions/).

This page contains an overview of the settings in the window "General Settings".\
To open the general settings, click **General Settings** in the main window of the extraction type.

### Misc. Tab

The *Misc.* tab covers cache settings, column encryption and keywords of an extraction type.

#### Cache results

This option can be neglected. Board Connector always uses the result cache, because Board always requests the results twice.

#### Keywords

One or more keywords (tags) can be assigned to an extraction. Keywords can be entered directly in the keyword field. You can use these keywords to filter extractions in the "Search Extractions" window. To open the "Search Extractions" window, click **[ Search]** in the main window of the Designer.

Tip

To add keywords to multiple extractions at once, select the extractions in the main window of the Designer.\
Right-click + **Add/Remove keywords** opens the window "Add/Remove Keywords To/From Multiple Extractions".

### Security Tab

Restrict user access to the extraction. For more information, see [Restrict Designer Access](../../access-restrictions/restrict-designer-access/).

### CSV Tab

The *CSV* tab covers data and date formatting.

#### Column Name Style

Defines the style of the column name. Following options are available:

| Option | Description | | --- | --- | | **Code** | The SAP technical column name is used as column name in the destination e.g. MAKTX. | | **PrefixedCode** | The SAP technical column name is prefixed by SAP object name and the tilde character e.g., MAKT~MAKTX | | **CodeAndText** | The SAP technical column name and the SAP description separated by an underscore are used as column name in the destination e.g., MAKTX_Material Description (Short Text) | | **TextAndCode** | The SAP description and the SAP technical column name description separated by an underscore are used as column name in the destination e.g., Material Description (Short Text)\_MAKTX |

#### Date Conversion

When **Convert dates** is active, the following date conversions apply:

| Option | Description | | --- | --- | | **Year 0** | Converts the SAP date 00000000 to the entered value. | | **Year 9999** | Converts the SAP date 9999XXXX to the entered value. | | **Invalid values** | If an SAP date cannot be converted to a valid date format, the invalid date is converted to the entered value. NULL is supported as a value. |

### Columns Order Tab

The "Columns Order" feature enables users to rearrange the order of result columns when running an extraction. To rearrange the result order, assign indexes to the available result columns. Index 0 defines the first column in the result set, index 1 the second columns, etc.

| Option | Description | | --- | --- | | **Enabled** | When this option is active, the defined column order is applied when running the extraction. | | **Swap** | Swaps the index of 2 columns. All other columns keep their indexes. | | **Insert** | Inserts the selected column into the selected index. All other indexes are recalculated. | | **Reset default** | Restores the original column order. |

This page contains an overview of the extraction settings in the OHS extraction type.\
To open the extraction settings, click ****Extraction Settings**** in the main window of the extraction type.

The OHS settings consist of two tabs:

- [*Table*](#table-settings)
- [*Third party tool (legacy)*](#third-party-tool-settings)

The settings correspond to the selected extraction type. Set either *Table* or *Third party tool (legacy)* settings.

Warning

**Could not load list of available function modules because permission for table ENLFDIR is missing**\
This warning appears if a technical SAP user does not have authorization rights to access the SAP table *ENLFDIR*. Confirm the warning as the user can **still** adjust the extraction settings.

## Table Settings

### Extraction Settings

#### Package Size

The extracted data is split into packages of the defined size. The default value is 50000 lines.\
A package size between 20000 and 50000 is advisable for large amounts of data. 0 means no packaging. Not using packaging can lead to an RFC timeout for large data extractions.

Warning

**RFC_ERROR_SYSTEM_FAILURE - No more storage space available for extending an internal table**\
To avoid a memory overflow on the SAP source system and to avoid huge overheads, choose a package size that suits your memory capacity.

#### Row Limit

Specifies the maximum number of extracted records. 0 extracts all data. You can use this option to perform tests with a small amount of data by entering a row limit of e.g., 1000.

### Function Module

Specifies the name of the function module used for data extraction. This field is filled automatically depending on what function modules are installed on your SAP system. Custom function modules are supported.

The following function modules can be used to extract tables:

- RFC_READ_TABLE (TAB512)
- /BODS/RFC_READ_TABLE (TAB2048)
- /SAPDS/RFC_READ_TABLE (TAB2048)
- /BODS/RFC_READ_TABLE2
- /SAPDS/RFC_READ_TABLE2
- Z_THEO_READ_TABLE
- [/THEO/READ_TABLE](/board-connector/documentation/setup-in-sap/custom-function-module-for-table-extraction) (recommended)

Warning

**Duplicates in the target environment.**\
The SAP standard modules for table extraction do not have pointers for table fields. In larger tables this may cause low performance and duplicates in the target environment. Use the function module [THEO/READ_TABLE](../../setup-in-sap/custom-function-module-for-table-extraction/#installation-of-theoread_table) from Theobald Software to ensure smooth extractions.

Note the necessary [SAP Authority Objects](../../setup-in-sap/sap-authority-objects/#table):

```text
S_TABU_NAM ACTVT=03; TABLE=ENLFDIR

```

### Extract Data in Background Job

If *Background job timeout (seconds)* checkbox is activated, the table extraction is executed as a background job in SAP. This setting is optional and is supported in combination with function module THEO/READ_TABLE or Z_THEO_READ_TABLE version 2.0. Activate the setting *Background job timeout (seconds)* for long-running extractions with a large amounts of data that may run into a timeout error (“Time limit exceeded”), when using the foreground mode.

Tip

The extraction jobs can be found in the SAP JobLog (**SM37**) under the JobName *theo_read_table*.

Warning

**Shared Memory ran out of memory!**\
If this error message pops up when running an extraction in the background, adjust the size of the Shared Memory. SAP recommends a Shared Memory size of 800MB~1.5GB for a production/test system or 2GB~4GB for S/4 systems, see [SAP Support: How to solve SYSTEM_NO_SHM_MEMORY runtime error](https://ga.support.sap.com/dtp/viewer/#/tree/1080/actions/12107).

### Advanced Settings

#### Background Job Timeout (seconds)

Sets a timeout period for extractions that run in background mode.\
The default value is 180 seconds. The maximum timeout value is 3600 seconds.

Note

The background job timeout setting only takes effect if the extractions run in background mode using [/THEO/READ_TABLE](../../setup-in-sap/custom-function-module-for-table-extraction/).

#### Adjust Currency Decimals

The default number of decimal places for a currency in the SAP database is 2 decimals. Currencies that do not have decimals are also stored in this format, e.g. JPY, VND, KRW, etc.

Example:

| Currency | Actual Amount | Amount stored in SAP database | | --- | --- | --- | | JPY | 100 | 1.00 | | KRW | 10000 | 100.00 |

When extracting currencies with no decimals, the amount stored in SAP is returned e.g., 100 JPY are extracted as 1.00. To correct the decimal placement of the extracted data, activate **Adjust Currency Decimals**. If **Adjust Currency Decimals** is active, currencies without decimals are multiplied by a factor that balances out the decimals.

**Adjust Currency Decimals** also requires the extraction of the corresponding CURRENCY field that can be used as a reference for the multiplication factor. Use the **[Load live preview]** function to find the correct currency field/s.

- If the currency field is part of the table, add it to the output.
- If the currency field is in another table, join the tables.
- If the reference is not part of a table, **Adjust Currency Decimals** cannot be used.

Note

The multiplication factor used in *Adjust Currency Decimals* is determined by the SAP currency table TCURX. To access the table, the following SAP Authority objects must be set in SAP: *S_TABU_NAM ACTVT=03; TABLE=TCURX*.

## Third Party Tool Settings

#### Gateway host

Enter the data of your gateway host. It is often the same host as the SAP application server.

#### Gateway service

Enter the data of your gateway service (*sapgwXX*, where XX is the system number).

#### Program ID

Enter the program ID of the SAP RFC destination.

Board Connector supports multiple options to dynamize extractions:

- [Extraction parameters](extraction-parameters/)
- [Script expressions](script-expressions/)

While script expressions compute values, extraction parameters require users to pass actual values when running an extraction. Extraction parameters affect the extraction settings, the SAP connection settings, and the user-defined (custom) runtime parameters of an extraction.

### About Custom Runtime Parameters

User-defined runtime parameters can be used to filter SAP data before writing the data to the destination. They are part of the [extraction parameters](extraction-parameters/#custom). There are two types of custom runtime parameters:

- scalar parameters that represent a single value.
- list parameters that represent multiple values separated by a comma, e.g., 1,10 or “1”, “10”.

Most extractions types offer an *Edit runtime parameters* menu that allows users to create custom runtime parameters.

Once runtime parameters are available, a switch is added to all input fields that support runtime parameters. The switch allows users to switch between a static input value () and an existing runtime parameter (), e.g., *Parameter0*.

The following table shows what extractions types and settings support custom runtime parameters:

| Extraction Type | Settings that Support Custom Runtime Parameters | | --- | --- | | BAPI | [Import parameters](../bapi/input-and-output/#import-parameters), [Table parameters](../bapi/input-and-output/#table-parameters) | | BWCube | [BEx variables](../bwcube/variables-and-filters/#edit-variables), [dimension filters](../bwcube/variables-and-filters/#set-dimension-filters) | | DeltaQ | [Selections](../deltaq/selections/#edit-selections) | | ODP | [Selections](../odp/selections/#edit-selections) | | Query | [Selections](../query/variants-and-selections/#edit-selections) | | Report | [Selections](../report/variants-and-selections/#edit-selections) | | Table | [WHERE clause](../table/where-clause/), [HAVING clause](../table/having-clause/) | | Table CDC | [WHERE clause](../table-cdc/where-clause/) |

The Board Connector Designer can run extractions by passing parameters that define how data is extracted from the source.

The following categories of extraction parameters are available:

- [Extraction](#extraction) parameters affect the extraction and destination settings.
- [Source](#source) parameters affect the SAP connection settings.
- [Custom](#custom) parameters correspond to the user-defined runtime parameters of an extraction.

The parameters can be accessed in the "Run Extraction" window.\
To open the "Run Extraction" window, select an extraction from the [list of extractions](../../designer/#list-of-extractions) and click **[Run]**. For more information, see [Run Extractions](../../run-extractions/#run-extractions-in-the-designer).

### Extraction

The number of available parameters depends on the extraction type and destination.\
Example: *decimalSeparator* is a parameter specific to CSV destinations.

| Parameter | Description | Information | | --- | --- | --- | | clearBuffer | Clears/Keeps the result buffer | Default value is *false* | | preview | Enables/Disables the preview mode | Default value is *false* | | source | Selects the SAP source system from which data is extracted (e.g., SAP_DEV and SAP_PROD). Applies only if more than one SAP system is used. | - | | destination | Selects the destination to which extraction is written (e.g., db_1 and db_2). Applies only if more than one destination is used. | - | | rows | Sets the maximum number of rows to be extracted | Available for [Table](../../table/settings/#row-limit) | | whereClause | Sets a WHERE clause. SAP system variables are applicable. | Available for [Table](../../table/where-clause/) | | packageSize | Sets the package size | Available for [Table](../../table/settings/#package-size) | | updateMode | Sets the update mode to use for the run: Full, Delta, Recovery | Available for [ODP](../../odp/update-mode/) | | subscriptionSuffix | Suffix to use multiple inits on a single SAP system | Available for [ODP](../../odp/) | | extractDataOnDeltaInit | Extracts data if request is *delta init* | Available for [ODP](../../odp/update-mode/) | | hierarchyName | The name of the hierarchy to extract | Available for ODP, DeltaQ & Hierarchy | | representation | The representation / output format of the hierarchy to extract: "ParentChild", "Natural" or "ParentChildWithNodeNames" | Available for [Hierarchy](../../hierarchy/output-format/) | | dateTo | The valid-to-date of the hierarchy to extract in the format YYYYMMDD | Available for [Hierarchy](../../hierarchy/) | | variant | Name of a variant | Available for [Report](../../report/variants-and-selections/) & [SAP Query](../../query/variants-and-selections/) | | batchJobName | Name of the Batch Job | Available for [Report](../../report/settings/) | | gatwewayHost | Gateway Host | Available for [DeltaQ](../../deltaq/deltaq-customization/) | | gatewayService | Gateway Service | Available for [DeltaQ](../../deltaq/deltaq-customization/) | | programID | Program ID | Available for [DeltaQ](../../deltaq/deltaq-customization/) | | logicalDestination | Logical Destination | Available for [DeltaQ](../../deltaq/deltaq-customization/) | | requestID | Request ID (for Repair Request only) | Available for [DeltaQ](../../deltaq/deltaq-customization/) | | updateMode | Sets the update mode to use for the run: Init, Full, Delta, Activate, InitNoDelta, InitNoncumulative, Repeat | Available for [DeltaQ](../../deltaq/update-mode/) | | updateType (deprecated) | Sets the update mode to use for the run: F (Full), C (Delta Init), S (Init no data), D (Delta Update), R (Repeat), A (Activate) | Available for [DeltaQ](../../deltaq/update-mode/) | | decimalSeparator | Sets a symbol between integer and fractional part | Available for CSV destinations | | columnSeparator | Sets a symbol which indicates the start of a new column | Available for CSV destinations |

#### Example

1. Select the checkbox of the parameter you want to override.
1. Enter the value and confirm by pressing enter.
   - Extraction URL before changing the parameter:\
     `http://sherri.theobald.local:8065/start/KNA1/`
   - Extraction URL after editing the parameter **source** (name of the SAP source system):\
     `http://sherri.theobald.local:8065/start/KNA1/?source=SAP_PROD`

### Source

The connection settings to an SAP source can be changed dynamically. In the *Source* tab you can override the values that are defined in [SAP source details](../../sap-connection/settings/).

| Parameter name | Parameter description | | --- | --- | | lang | Changes the logon language of the SAP source system | | logonTicket | Changes the ticket issuer of the [SAP logon ticket](../../sap-connection/sso-with-logon-ticket/) |

Note

The parameter **logonTicket** can only be set if SAP logon ticket is selected as the authentication method in [SAP source details](../../sap-connection/sso-with-logon-ticket/#configure-sso-with-logon-ticket-in-the-sap-source).

#### Example

1. Select the checkbox of the parameter you want to override.
1. Enter the value and confirm by pressing enter.
   - Extraction URL before changing the parameter:\
     `http://sherri.theobald.local:8065/start/KNA1/`
   - Extraction URL after editing the parameter **lang** (language setting for the SAP source system):\
     `http://sherri.theobald.local:8065/start/KNA1/&lang=EN`

### Custom

The tab *Custom* is only active when [user-defined runtime parameters](../#about-custom-runtime-parameters) are available.\
Check the checkbox and enter a new value to set the user defined parameter.

#### Example

1. Select the checkbox of the parameter you want to override.
1. Enter the value and confirm by pressing enter.
   - Extraction URL before changing the parameter:\
     `http://sherri.theobald.local:8065/start/KNA1/`
   - Extraction URL after editing the parameter **myParameter** (name of a runtime parameter):\
     `http://sherri.theobald.local:8065/start/KNA1/&myParameter=EN`

______________________________________________________________________

#### Related Links:

- [Web API](../../../web-api/)
- [Script Expressions](../script-expressions/)

Script expressions offer a way of adding dynamic parameters to Board Connector. Script expressions are resolved at extraction runtime. The output of a script expression is a string. This string can be used as input for further .NET string operations.

Script expressions can be used as selection parameters for [Table](../../table/where-clause/#script-expressions) or [DeltaQ](../../deltaq/selections/#script-expressions-for-deltaq) extractions.

### Syntax of Script Expressions

Script expressions use the C# syntax. They must begin and end with a hash symbol (#). The formula starts and ends with curly brackets ({}), e.g., `#{ Extraction.TableName }#`

Note

Expressions that are specific to Board Connector are case sensitive. Make sure to use the exact syntax as documented below.

#### IF-Statements

An IF-statement (ternary operator) is supported and uses the following syntax:

```c#
iif([bool condition], [string trueResult], [string falseResult])

```

**Examples:**

| Input | Output | Description | | --- | --- | --- | | `#{ iif(DateTime.Now.Month==7, "July","Unknown")}#` | July | In month 7 the output is "July", all else is "Unknown". | | `#{Extraction.ExtractionName}##{ iif(string.IsNullOrEmpty(Extraction.Context), string.Empty, "/" + Extraction.Context)}#` | | \*Extraction.Context\* returns a result only with ODP extractions. With all other extraction types the result is empty. - If the extraction name is 'SAP_1' and the extraction type is 'Table', the resulting file path would be `SAP_1/[filename]`. - If the extraction name is 'SAP_2' and the extraction type is 'ODP' and a SAP DataSource (extraction context: SAPI) is being extracted, the resulting file path would be `SAP_2/SAPI/[filename]`. |

### Script Expressions based on .NET

Board Connector script expressions support the following .NET objects, properties and methods from the .NET System Namespace of Board Connector's current [.NET framework](../../setup/requirements/#other-applications-and-frameworks):

*Object*, *Boolean*, *Char*, *String*, *SByte*, *Byte*, *Int16*, *UInt16*, *Int32*, *UInt32*, *Int64*, *UInt64*, *Single*, *Double*, *Decimal*, *DateTime*, *TimeSpan*, *Guid*, *Math*, *Convert*.

Note

The most common usage scenario is using the methods and properties of the .NET *DateTime* and *String* classes. For further information of supported [.NET classes and their properties and methods](https://docs.microsoft.com/en-us/dotnet/api/system?redirectedfrom=MSDN&view=netframework-4.7.2) including [DateTime](https://docs.microsoft.com/en-us/dotnet/api/system.datetime?view=net-5.0) and [String](https://docs.microsoft.com/en-us/dotnet/api/system.string?view=netframework-4.7.2) see the Microsoft online documentation.

#### Supported Keywords

The following key words are supported:

*true*, *false*, *null*.

### List of available Script Expressions

Script expressions are usually used to determine a dynamic date based on the current date. When using script expressions in a [WHERE Clause](../../table/where-clause/#script-expressions), the value must be entered in single quotation marks.

| Input | Description | | --- | --- | | `#{ DateTime.Now.ToString("yyyyMMdd") }#` | Current date in SAP format (yyyyMMdd) | | `#{ String.Concat(DateTime.Now.Year.ToString(), "0101") }#` | Current year concatenated with "0101" (yyyy0101) | | `#{ String.Concat(DateTime.Now.ToString("yyyy"), "0101") }#` | Current year concatenated with "0101" (yyyy0101) | | `#{ String.Concat(DateTime.Now.ToString("yyyyMMdd").Substring(0,4), "0101") }#` | Current year concatenated with "0101" (yyyy0101) |

This page shows how to use the Query extraction type.\
The Query extraction type can be used to extract data via SAP queries.

### About SAP Queries

SAP Queries are used to access data sets in SAP, see [SAP Help - Working with Queries](https://help.sap.com/viewer/b1c834a22d05483b8a75710743b5ff26/7.51.6/en-US/0e05493bbccf41a79caed7099c82bd48.html) for more information. The SAP queries that can be used with Query extraction type are created by the SAP transactions SQ02 and SQ01. To use a BW Query as a data source, see [BW InfoCubes and BExQueries](../bwcube/).

### Prerequisites

- A connection to an SAP system is available, see [SAP Connection](../sap-connection/).
- The SAP user has sufficient user rights, see [SAP Authority Objects](../setup-in-sap/sap-authority-objects/#query).

Warning

**Missing Authorization.**\
To use the Query extraction type, access to the designated authority objects (RFC) in SAP must be available. Adjust [SAP Authority Objects: SAP Query](../setup-in-sap/sap-authority-objects/#query) accordingly.

### Create a Query Extraction

1. In the main window of the Designer, click **[New]** to create a new extraction. The window "Create Extraction" opens.
1. Select an [SAP Connection](../sap-connection/) of type **RFC** from the drop-down menu **Source**.
1. Enter a unique name for your extraction.
1. Select the extraction type **Query**.
1. Click **[OK]**. The main window of the extraction type opens automatically.

The majority of the functions of the extraction type can be accessed in the main window.

### Look up an SAP Query

1. In the main window of the extraction type, click **[]**. The window "Query Lookup" opens.
1. Enter the name of an SAP query in the field **Query Name** or the name of a user group in the field **User group** . Use wildcards (\*) if needed.
1. Select the query work area that contains the query object . For more information, see [SAP Help: Query Areas](https://help.sap.com/doc/saphelp_nw74/7.4.16/en-us/4e/3bdad0b8503b0fe10000000a42189e/frameset.htm).
1. Click **[]**. Search results are displayed.
1. Select a query and click **[OK]**.

The application returns to the main window of the extraction type.

### Define the Query Extraction Type

The Query extraction type offers the following options for query extractions:

1. If the SAP query has variants, select a variant from the drop-down-list *Variant*. For more information, see [Choose a Variant](variants-and-selections/#choose-a-variant).
1. In the section *Selection Screen*, edit a selection criterion you want to change or dynamize . For more information, see [Edit Selections](variants-and-selections/#edit-selections).
1. Check the [Extraction Settings](settings/) and the [General Settings](general-settings/) before running the extraction.
1. Click **[OK]** to save the extraction type.

You can now run the extraction, see [Run Extractions](../run-extractions/).

Runtime parameters are are placeholders for values that are passed at runtime. They can be created in context of [Selections](../variants-and-selections/#edit-selections).

## Create Runtime Parameters

There are two types of runtime parameters:

- [Scalar parameters](#scalar-parameters) represent a single value.
- [List parameters](#list-parameters) represent multiple values.

### Scalar Parameters

Follow the steps below to create a scalar runtime parameter:

1. In the main window of the component click **Edit runtime parameters**. The window “Edit Runtime Parameters” opens.

1. Click **[Add Scalar]** to define scalar parameters to be used as placeholders for actual values. The placeholders need to be populated with actual values at runtime.

   Tip

   Parameter0..-n is the default naming for the added parameter. You can enter a name of your choice.

1. Select one of the following data types from the drop-down menu. The data types may correlate to SAP data types.

   | Type | Description | | --- | --- | | *Text* | Can be used for any type of SAP selection field. | | *Number* | Can be used for numeric SAP selection fields. | | *Flag* | Can only be used for SAP selection fields THAT require an ‘X’ (true) or a blank ‘‘ (false) as input value. |

1. Click **[OK]** to confirm.

The runtime parameters are now available in the extraction type.

### List Parameters

Follow the steps below to create a list runtime parameter:

1. In the main window of the component click **Edit runtime parameters**. The window “Edit Runtime Parameters” opens.

1. Click **[Add List]** to define list parameters that contain multiple values separated by commas e.g., 1,10 or “1”, “10”. The placeholders need to be populated with actual values at runtime.

   Tip

   Parameter0..-n is the default naming for the added parameter. You can enter a name of your choice.

1. Click **[OK]** to confirm.

The runtime parameters are now available in the extraction type.

## Assign Runtime Parameters

Follow the steps below to assign the runtime parameters to selections.

1. In the main window of the extraction type, click the **[Edit]** button next to the selection you want to parameterize. The window "Edit Selections" opens.
1. Add a filter to the selection, see [Edit Selections](../variants-and-selections/#edit-selections).
1. Click the icon button next to the input field to switch between static values () and runtime parameters (). If no icon button is available, [create a runtime parameter](#create-runtime-parameters).
1. Select a runtime parameter from the dropdown-list.
1. Click **[OK]** to confirm the input.

Pass values during runtime, see [Extraction Parameters - Custom](../../parameters/extraction-parameters/#custom).

This page contains an overview of the settings in the window "General Settings".\
To open the general settings, click **General Settings** in the main window of the extraction type.

### Misc. Tab

The *Misc.* tab covers cache settings, column encryption and keywords of an extraction type.

#### Cache results

This option can be neglected. Board Connector always uses the result cache, because Board always requests the results twice.

#### Keywords

One or more keywords (tags) can be assigned to an extraction. Keywords can be entered directly in the keyword field. You can use these keywords to filter extractions in the "Search Extractions" window. To open the "Search Extractions" window, click **[ Search]** in the main window of the Designer.

Tip

To add keywords to multiple extractions at once, select the extractions in the main window of the Designer.\
Right-click + **Add/Remove keywords** opens the window "Add/Remove Keywords To/From Multiple Extractions".

### Security Tab

Restrict user access to the extraction. For more information, see [Restrict Designer Access](../../access-restrictions/restrict-designer-access/).

### CSV Tab

The *CSV* tab covers data and date formatting.

#### Column Name Style

Defines the style of the column name. Following options are available:

| Option | Description | | --- | --- | | **Code** | The SAP technical column name is used as column name in the destination e.g. MAKTX. | | **PrefixedCode** | The SAP technical column name is prefixed by SAP object name and the tilde character e.g., MAKT~MAKTX | | **CodeAndText** | The SAP technical column name and the SAP description separated by an underscore are used as column name in the destination e.g., MAKTX_Material Description (Short Text) | | **TextAndCode** | The SAP description and the SAP technical column name description separated by an underscore are used as column name in the destination e.g., Material Description (Short Text)\_MAKTX |

#### Date Conversion

When **Convert dates** is active, the following date conversions apply:

| Option | Description | | --- | --- | | **Year 0** | Converts the SAP date 00000000 to the entered value. | | **Year 9999** | Converts the SAP date 9999XXXX to the entered value. | | **Invalid values** | If an SAP date cannot be converted to a valid date format, the invalid date is converted to the entered value. NULL is supported as a value. |

### Columns Order Tab

The "Columns Order" feature enables users to rearrange the order of result columns when running an extraction. To rearrange the result order, assign indexes to the available result columns. Index 0 defines the first column in the result set, index 1 the second columns, etc.

| Option | Description | | --- | --- | | **Enabled** | When this option is active, the defined column order is applied when running the extraction. | | **Swap** | Swaps the index of 2 columns. All other columns keep their indexes. | | **Insert** | Inserts the selected column into the selected index. All other indexes are recalculated. | | **Reset default** | Restores the original column order. |

This page contains an overview of the extraction settings in the Query extraction type.\
To open the extraction settings, click ****Extraction Settings**** in the main window of the extraction type.

### Extraction Settings

#### Max Rows

Specifies the maximum number of extracted records. 0 extracts all data. You can use this option to perform tests with a small amount of data by entering a row limit of e.g., 1000.

#### Treat 'No Data Selected' as Error

If this option is active, an error message is displayed when there is no data to be extracted.

Most queries allow entering selections before query execution. Selections limit the result set of the query to extract only records that match the selection.\
A selection variant can be created in SAP, see [SAP Help: Query Variants](https://help.sap.com/docs/SAP_NETWEAVER_750/40d2cb3a4f9249d58e9bbc95f4dbaff8/4e535406a32c4f49e10000000a42189e.html?locale=en-US). The purpose of a variant is to minimize the necessity to enter selections when running a query.

Note

Manual selections and variants can be combined. Manual selections overwrite any selections in the variant.

### Choose a Variant

Choose a variant from the drop-down-list *Variant*.\
When creating a new variant in SAP after creating the extraction, click **[]** to load the new variant.

The selections of the variant are **not** displayed in the *Selection Screen* section of the window. To see the definition of a variant, open the variant in SAP.

### Edit Selections

The *Selection Screen* in the main window of the component corresponds to the input screen in SAP.

Note

Some selection fields only have a technical name and no description. To understand which field corresponds to a field in SAP, open the input screen in SAP. Click on a selection field and press the function key `F1` to display the technical name of the selection field.

Follow the steps below to edit selection fields and filter data:

1. In the subsection *Selection Screen*, click **[Edit]** next to the field you want to edit. The window “Edit selection” opens.

1. Click **[Single]**, **[Range]** or **[List]** to add a corresponding filter, see [Filter Options](#filter-options).

1. In the column **Sign** , select *Include* to add the filtered data to the output or select *Exclude* to remove the filtered data from the output.

1. In the column **Option** , select an operator, see [Filter Options](#filter-options).

1. In the column **Value**, enter values directly into the input fields **Low** and **High** or assign existing [runtime parameters](../edit-runtime-parameters/) to the selection fields .

   Note

   When runtime parameters are available, you can use the icon button next to the input field to switch between static values () and runtime parameters ().

1. Click **[OK]** to confirm your input.

Note that edited selection fields overwrite the selection fields in the variant.

Tip

If you use multiple selection parameters, it is more efficient to create a variant in SAP.

### Filter Options

The Query extraction type offers the following filter options:

| Type | Operator | Description | | --- | --- | --- | | Single | | Compare data to a single specified value. | | | *(not) like pattern* | True if data values do (not) contain to the specified value. | | | *(not) equal to* | True if data is (not) equal to the specified value. | | | *at least* | True if data is greater than or equal to the specified value. | | | *more than* | True if data is greater than the specified value. | | | *at most* | True if data is less than or equal to the specified value. | | | *less than* | True if data is less than the specified value. | | Range | | Check if the data is (not) within a specified range of values. | | | *(not) between* | True if data values do (not) lie between the 2 specified values. | | List | | Check if the data is part of a specified list of values. | | | *element of* | True if data values are part of the list. |

### Data Format

Use the following internal SAP representation for input:

- Date: The date 01.01.1999 has the internal representation 19990101 (YYYYMMDD).
- Year period: The year period 001.1999 has the internal representation 1999001 (YYYYPPP).
- Numbers: Numbers must contain the leading zeros, e.g., customer number 1000 has the internal representation 0000001000.

Warning

**Values accept only the internal SAP representation.**\
Input that does not use the internal SAP representation results in error messages. Use the internal SAP representation. Example:

```text
ERPConnect.ABAPProgramException: RfcInvoke failed(RFC_ABAP_MESSAGE): Enter date in the format \_.\_.\_

```

This page shows how to use the Report extraction type.\
The Report extraction type can be used to extract data from most standard and custom ABAP reports and SAP transactions. A report extraction is possible if the report returns a table-like structure in SAP.

### About Reports

ABAP report programs extract and present huge amounts of data for SAP business applications. SAP offers predefined standard reports that cover the basic needs of customers. They can be executed via transaction codes.

Tip

Use transaction code SAP1 to get a list of all reports for all modules.

### Custom Reports

The extraction of custom reports (Z reports) is possible if the report returns a table-like structure in SAP. Issues specific to Z reports are not included in the scope of support provided by Theobald Software.

### Prerequisites

- A connection to an SAP system is available, see [SAP Connection](../sap-connection/).
- The SAP user has sufficient user rights, see [SAP Authority Objects](../setup-in-sap/sap-authority-objects/#report).
- The custom function module `Z_XTRACT_IS_REMOTE_REPORT` is installed in your SAP system, see [Function Module for Reports](../setup-in-sap/custom-function-module-for-reports/#installation-of-z_xtract_is_remote_report). As of `Z_XTRACT_IS_REMOTE_REPORT` version 1.2 access to reports must be explicitly granted, see [Knowledge BAse Article: Authorize Access to Specific Reports](../../knowledge-base/authorize-access-to-specific-reports/).
- The report must return a table-like structure in SAP.

Warning

**Missing Authorization.**\
To use the Report extraction type, access to the designated authority objects (RFC) in SAP must be available. Adjust [SAP Authority Objects: Report](../setup-in-sap/sap-authority-objects/#report) accordingly.

### General Workflow

The following graphic shows the general workflow of using the Report extraction type:

### Create a Report Extraction

1. In the main window of the Designer, click **[New]** to create a new extraction. The window "Create Extraction" opens.
1. Select an [SAP Connection](../sap-connection/) of type **RFC** from the drop-down menu **Source**.
1. Enter a unique name for your extraction.
1. Select the extraction type **Report**.
1. Click **[OK]**. The main window of the extraction type opens automatically.

The majority of the functions of the extraction type can be accessed in the main window.

### Look up a Report or Transaction

1. In the main window of the extraction type, click **[]**. The window “Report Lookup” opens.

1. In the field **Report Name**, enter the name of a report to extract . Use wildcards (*), if needed. Alternatively, select* *TCODE*\* to look up SAP Transaction codes.

   Tip

   In certain cases reports cannot be determined based on the TCODE. You can check the report name of a TCODE using the SAP GUI menu **System > Status...**.

1. Click **[]** . Search results are displayed.

1. Select a report and click **[OK]** to confirm.

The application now returns to the main window of the extraction type.

### Define the Report Extraction Type

The Report extraction type offers the following options for report extractions:

1. If the report has variants, select a variant from the drop-down-list *Variant*. For more information, see [Choose a Variant](variants-and-selections/#choose-a-variant).
1. Optional: In the section *Selection Screen*, edit a selection criterion you want to change or dynamize . For more information, see [Edit Selections](variants-and-selections/#edit-selections).
1. Click **[Load live preview]** to display a live preview of the first 100 records.
1. Optional: If your report has varying column widths, activate **Dynamic column widths and offsets**. The column widths and offsets are then adjusted dynamically at report runtime.
1. Click **[Automatically detect columns]** to execute the report based on the selected variant or selections and detect columns automatically.
1. Check if the automatically detected columns are accurate.\
   When automatic column detection is not possible, the column names, widths and offsets must be set manually, see [Define Columns manually](report-columns-define/#define-columns-manually).
1. Optional: Define row settings to remove or parse certain rows, see [Define Rows](report-rows-define/).
1. Check the [Extraction Settings](settings/) and the [General Settings](general-settings/) before running the extraction.
1. Click **[OK]** to save the extraction type.

You can now run the extraction, see [Run Extractions](../run-extractions/).

### Example Extraction

The depicted example shows how to set up a simple report extraction:

1. Look up report RLT10010 (Evaluation of Movements per Storage Type).
1. Select variant *VAR01*.
1. Load a live preview.
1. Automatically detect columns.
1. Remove the header (skip the first 8 rows).

______________________________________________________________________

#### Related Links

- [SAP Wiki: Types of ABAP Reports](https://wiki.scn.sap.com/wiki/display/ABAP/Types+of+Reports)
- [Knowledge Base Article: Authorize Access to Specific Reports](../../knowledge-base/authorize-access-to-specific-reports/)

Runtime parameters are are placeholders for values that are passed at runtime, see [Extraction Parameters - Custom](../../parameters/extraction-parameters/#custom). They can be created in context of [Selections](../variants-and-selections/#edit-selections).

## Create Runtime Parameters

There are two types of runtime parameters:

- [Scalar parameters](#scalar-parameters) represent a single value.
- [List parameters](#list-parameters) represent multiple values.

### Scalar Parameters

Follow the steps below to create a scalar runtime parameter:

1. In the main window of the component click **Edit runtime parameters**. The window “Edit Runtime Parameters” opens.

1. Click **[Add Scalar]** to define scalar parameters to be used as placeholders for actual values. The placeholders need to be populated with actual values at runtime.

   Tip

   Parameter0..-n is the default naming for the added parameter. You can enter a name of your choice.

1. Select one of the following data types from the drop-down menu. The data types may correlate to SAP data types.

   | Type | Description | | --- | --- | | *Text* | Can be used for any type of SAP selection field. | | *Number* | Can be used for numeric SAP selection fields. | | *Flag* | Can only be used for SAP selection fields THAT require an ‘X’ (true) or a blank ‘‘ (false) as input value. |

1. Click **[OK]** to confirm.

The runtime parameters are now available in the extraction type.

### List Parameters

Follow the steps below to create a list runtime parameter:

1. In the main window of the component click **Edit runtime parameters**. The window “Edit Runtime Parameters” opens.

1. Click **[Add List]** to define list parameters that contain multiple values separated by commas e.g., 1,10 or “1”, “10”. The placeholders need to be populated with actual values at runtime.

   Tip

   Parameter0..-n is the default naming for the added parameter. You can enter a name of your choice.

1. Click **[OK]** to confirm.

The runtime parameters are now available in the extraction type.

## Assign Runtime Parameters

Follow the steps below to assign the runtime parameters to selections.

1. In the main window of the extraction type, click the **[Edit]** button next to the selection you want to parameterize. The window "Edit Selections" opens.
1. Add a filter to the selection, see [Edit Selections](../variants-and-selections/#edit-selections).
1. Click the icon button next to the input field to switch between static values () and runtime parameters (). If no icon button is available, [create a runtime parameter](#create-runtime-parameters).
1. Select a runtime parameter from the dropdown-list.
1. Click **[OK]** to confirm the input.

Pass values during runtime, see [Extraction Parameters - Custom](../../parameters/extraction-parameters/#custom).

This page contains an overview of the settings in the window "General Settings".\
To open the general settings, click **General Settings** in the main window of the extraction type.

### Misc. Tab

The *Misc.* tab covers cache settings, column encryption and keywords of an extraction type.

#### Cache results

This option can be neglected. Board Connector always uses the result cache, because Board always requests the results twice.

#### Keywords

One or more keywords (tags) can be assigned to an extraction. Keywords can be entered directly in the keyword field. You can use these keywords to filter extractions in the "Search Extractions" window. To open the "Search Extractions" window, click **[ Search]** in the main window of the Designer.

Tip

To add keywords to multiple extractions at once, select the extractions in the main window of the Designer.\
Right-click + **Add/Remove keywords** opens the window "Add/Remove Keywords To/From Multiple Extractions".

### Security Tab

Restrict user access to the extraction. For more information, see [Restrict Designer Access](../../access-restrictions/restrict-designer-access/).

### CSV Tab

The *CSV* tab covers data and date formatting.

#### Column Name Style

Defines the style of the column name. Following options are available:

| Option | Description | | --- | --- | | **Code** | The SAP technical column name is used as column name in the destination e.g. MAKTX. | | **PrefixedCode** | The SAP technical column name is prefixed by SAP object name and the tilde character e.g., MAKT~MAKTX | | **CodeAndText** | The SAP technical column name and the SAP description separated by an underscore are used as column name in the destination e.g., MAKTX_Material Description (Short Text) | | **TextAndCode** | The SAP description and the SAP technical column name description separated by an underscore are used as column name in the destination e.g., Material Description (Short Text)\_MAKTX |

#### Date Conversion

When **Convert dates** is active, the following date conversions apply:

| Option | Description | | --- | --- | | **Year 0** | Converts the SAP date 00000000 to the entered value. | | **Year 9999** | Converts the SAP date 9999XXXX to the entered value. | | **Invalid values** | If an SAP date cannot be converted to a valid date format, the invalid date is converted to the entered value. NULL is supported as a value. |

### Columns Order Tab

The "Columns Order" feature enables users to rearrange the order of result columns when running an extraction. To rearrange the result order, assign indexes to the available result columns. Index 0 defines the first column in the result set, index 1 the second columns, etc.

| Option | Description | | --- | --- | | **Enabled** | When this option is active, the defined column order is applied when running the extraction. | | **Swap** | Swaps the index of 2 columns. All other columns keep their indexes. | | **Insert** | Inserts the selected column into the selected index. All other indexes are recalculated. | | **Reset default** | Restores the original column order. |

This page shows how to define the columns in the result set of a report extraction.

A report column is defined by its name, offset and length. Per default, all columns are of data type *string*. To identify a columns, the report needs to be executed. Columns can then be identified based on the output.

Tip

At this stage, use a selection or variant that returns only a few records. This can be adapted later on.

- Certain classical ABAP reports are developed to use the pipe symbol '|' as a delimiter for the output columns. In this case the Report extraction type can automatically identify the columns. Automatic column detection also works for most ALV reports. Example:
- For reports where the output is not separated by the pipe symbol, the columns must be identified manually. Example:

For information on how to parse rows as columns, see [Parse Header Row as New Column](../report-rows-define/#parse-header-row-as-new-column).

### Define Columns Automatically

#### Automatically detect columns

Click **[Automatically detect columns]** to execute the report based on the selected variant or selections. If they can be identified automatically, the column name, width and offset are displayed in the *Columns* section in the main window of the extraction type.

#### Dynamic column width and offset

If this option is active, the column width and offset is adjusted dynamically at report runtime. This can be required for reports that have varying column widths depending on the report's selection criteria.

### Define Columns Manually

When automatic column detection is not possible, the column names, widths and offsets must be set manually.

1. Make sure no columns are defined yet. If columns are defines, click **[]** in the *Columns* section in the main window of the extraction type to delete the columns.
1. Click **[Load live preview]**. The report is executed based on the selected report variant or selections. The output of the report is displayed in the *Load Preview* section.
1. To define the beginning (offset) of a column, press and hold down the left mouse button in the *Load Preview* section.
1. To define the length of a column, move the mouse pointer to the right while still holding down the left mouse button.
1. Let go of the cursor. The report column is highlighted with a green background and an entry is added to the *Columns* section.
1. To change the column name, offset and width, click in the respective fields in the *Columns* section and enter a new value.
1. Repeat steps 3 to 6 until all columns are defined.

Note

Once a column is set and highlighted with a green background, its width and offset cannot be changed via the graphics editor. Change it using the *Columns* section.

______________________________________________________________________

#### Related Links

- [Knowledge Base Article: Parse Reports in Board Connector](../../../knowledge-base/parse-reports/).

This page shows how to define the rows in the result set of a report extraction.\
The row settings are located in the tab *Skip and Parse Rows*.

### Row Settings

The Report extraction type offers the following options to remove rows from the result set of a report extraction:

| Option | Description | | --- | --- | | [Skip rows from top](#skip-rows-from-top) | Removes the first n number of rows from the top of the report. | | [Skip rows from button](#skip-rows-from-bottom) | Removes the last n number of rows from the button of the report. | | [Skip rows by pattern](#skip-rows-from-bottom) | Uses a pattern or regular expression to remove rows that contain the pattern. | | [Skip rows by keyword](#add-row-to-skip) | Uses a keyword to remove all rows that contain the keyword. |

For more information on how to remove and parse rows to merge groups of data sets into a single data set, see [Knowledge Base Article: Parse Reports in Board Connector](../../../knowledge-base/parse-reports/).

#### Skip rows from top

Enter the number of rows you want to skip at the beginning of the report. Some reports display meta information in the header section of the report, before the actual report body. This setting allows skipping the meta information.

#### Skip rows from bottom

Similar to *skip rows from top*. Enter the number of rows you want to skip in the footer section of the report.

#### Report rows per data row

Use this setting for ABAP reports that return two or more "physical" rows to display a single "semantic" data row. Enter the number of physical rows that represent a single data row.\
Example: Report RIEQUI20

#### Report width

Use this setting in combination with **Report rows per data row**. **Report width** defines the length of each physical row. The maximum width of extracted reports is limited to 1024 characters per row.

#### Header pattern

Enter a search pattern to detect the table header, e.g., *Created on*.\
The Report extraction type scans the report output for this pattern and uses the row that contains this pattern as the report header. Any duplicates of the header row are removed from the result set.

Rows that contain the header pattern are displayed in a blue font in the preview section.

Tip

Alternatively, right-click the row that you want to use as a header and select **Select as header** from the context menu.

This setting is usually not required if the report's columns can be [detected automatically](../report-columns-define/#define-columns-automatically) and *Dynamic column widths and offsets* is active in the main window of the extraction type.

#### Skip rows by pattern

Enter a search pattern. All report rows that contain the pattern are removed from the result set.\
The skip row setting can be used to skip header rows that are repeated in the output body of reports, see also [Skip rows by keyword](#skip-rows-by-keyword).\
The live preview in the Report extraction type does not include the **Row Skip Pattern** option, because the rows are only removed after the report data is extracted from SAP.

- Regular expressions are supported.
- Multiple row skip patterns can be entered, separated by the pipe symbol "`|`", e.g., `2020|2021|-|Sum` removes all rows containing ‘2020’, ‘2021’, ‘-‘ and ‘Sum’.
- To process special symbols, add `\`before the symbol, e.g., `\*` removes rows that contain the sum symbol * .

Note

The setting *Skip rows by pattern* is usually not required if the report columns can be [detected automatically](../report-columns-define/#define-columns-automatically) and *Dynamic column widths and offsets* is checked in the Report window.

### Skip rows by keyword

Define rows that are removed from the result set of the report extraction. This option can be used to skip header rows that are repeated in the output body of reports.

#### Add Row to Skip

Click **[Add row to skip]** to define a row that is removed from the result set of the report extraction.\
Enter a unique keyword from the row you want to remove.\
Example: `**` removes all rows that contain the characters `**`.

Rows that are excluded from the result set are displayed in a gray font in the preview section.

Tip

Alternatively, right-click the row you want to remove and select **Ignore/unignore row** from the context menu.

### Parse Header Row as new Column

Define rows that are added to the result set as columns.\
This option can be used for reports that contain groups with multiple headers.

#### Add row to parse as column

Click **[Add row to parse as column]** to add a new column to the result set.\
Enter the following column properties manually or use the [parse helper](#parse-helper) to define the column properties:

| Property | Description | | --- | --- | | *Keyword* | Enter a unique keyword from the row to include it as a column in the result set. The report is scanned for rows that contain the string. The keyword search is case sensitive. | | *Name* | Enter a name for the new column. | | *Offset* | Define the beginning (offset) of the content that is written into the new column. *Example:* Enter 0 if the content for the new column is located at the start of the row. Enter 25 if the content starts 25 characters into the row. | | *Width* | Define the width of the new column. |

Tip

Alternatively, to add row to parse as column, right-click a header row you want to use as a column and select **Parse header row as new column** from the context menu.

Rows that are parsed as a column are displayed in a red font in the preview section.\
For more information, see [Knowledge Base Article: Parse Reports in Board Connector](../../../knowledge-base/parse-reports/).

#### Parse Helper

The parse helper is a feature that helps you define properties for new columns:

1. In the subsection *Parse Header Row as new Column*, click **[Add row to parse as column]** to add a new column to the result set.

1. Click **[]** . The window "Parse Helper" opens and a new preview of the report data is fetched. This process may take several seconds to complete.

1. Under **Search keyword** enter a unique keyword from the row you want to parse as a column. Matching rows are displayed in the preview section of the window.

   Note

   The keyword search is case sensitive.

1. Make sure only header rows are displayed in the preview section. If the preview includes regular rows, edit the keyword until only header rows remain.

1. Under **New Column Name** enter a name for the new column.

1. Mark the content of the column in the preview section by pressing and dragging the mouse pointer over the length of the content.

1. Click **[OK]** to save the column properties.

The new column is added at the beginning of the report *after* running the extraction. Therefore, the new column is not included in the preview section of the extraction type.

Rows that are parsed as a column are displayed in a red font in the preview section.

______________________________________________________________________

#### Related Links

- [Knowledge Base Article: Parse Reports in Board Connector](../../../knowledge-base/parse-reports/).

This page contains an overview of the extraction settings in the Report extraction type.\
To open the extraction settings, click ****Extraction Settings**** in the main window of the extraction type.

### Batch Processing

#### Use Background Mode

If you choose this option, the ABAP report is executed as a batch job in SAP. Use this option for long running reports in SAP that would run into an RFC timeout when called in dialog mode. Certain reports that throw an error message when running in dialog mode can be extracted when run in background mode.

#### Background Job Timeout

Enter a time period (in seconds). The Report extraction type polls the status of the batch job in SAP for the specified time period. If the SAP batch job is not finished by the specified time period, the extraction aborts.

#### Background Job Name

The name of the background job under which the report is run in SAP.

#### Spool Destination

Enter the name of the spool destination (printer). If the ABAP report produces an output, a spool destination is generated. The spool destination defines where the output would go if printed, e.g., LP01 or LOCL. You can display all spool requests in SAP using the SAP transaction SP01.

### Function Module

The Report component requires installation of the custom function module `Z_XTRACT_IS_REMOTE_REPORT` in your SAP system, see [Install Report Custom Function Module](../../setup-in-sap/custom-function-module-for-reports/). If you manually created the function module in your SAP system and gave it a different name, enter that name in this field. The default is `Z_XTRACT_IS_REMOTE_REPORT`.

______________________________________________________________________

#### Related Links

- [Microsoft: Regular Expressions in the Microsoft Online Help](http://msdn.microsoft.com/en-us/library/az24scfc.aspx)
- [Knowledge Base Article: Parse Reports in Board Connector](../../../knowledge-base/parse-reports/)
- [Install Report Custom Function Module](../../setup-in-sap/custom-function-module-for-reports/)

Most reports allow entering selections before report execution. Selections limit the result set of the report to extract only records that match the selection.

In SAP a [selection variant](https://help.sap.com/docs/btp/ABAP/3353524716.html) can be created in the input screen of an ABAP report. The purpose of a variant is to save selection settings on your input screen and to minimize the necessity to enter selections when running a report.

Note

Manual selections and variants can be combined. Manual selections overwrite any selections in the variant.

### Choose a Variant

Choose a variant from the drop-down-list *Variant*.\
When creating a new variant in SAP after creating the extraction, click **[]** to load the new variant.

The selections of the variant are **not** displayed in the *Selection Screen* section of the window. To see the definition of a variant, open the variant in SAP.

### Edit Selections

The *Selection Screen* in the main window of the component corresponds to the input screen in SAP.

Note

Some selection fields only have a technical name and no description. To understand which field corresponds to a field in SAP, open the input screen in SAP. Click on a selection field and press the function key `F1` to display the technical name of the selection field.

Follow the steps below to edit selection fields and filter data:

1. In the subsection *Selection Screen*, click **[Edit]** next to the field you want to edit. The window “Edit selection” opens.

1. Click **[Single]**, **[Range]** or **[List]** to add a corresponding filter, see [Filter Options](#filter-options).

1. In the column **Sign** , select *Include* to add the filtered data to the output or select *Exclude* to remove the filtered data from the output.

1. In the column **Option** , select an operator, see [Filter Options](#filter-options).

1. In the column **Value**, enter values directly into the input fields **Low** and **High** or assign existing [runtime parameters](../edit-runtime-parameters/) to the selection fields .

   Note

   When runtime parameters are available, you can use the icon button next to the input field to switch between static values () and runtime parameters ().

1. Click **[OK]** to confirm your input.

1. Click **[Load live preview]** in the main window of the extraction type to check the result of your selection. If runtime parameters are defined, you are prompted to populate the parameters with actual values.

Note that edited selection fields overwrite the selection fields in the variant.

Tip

If you use multiple selection parameters, it is more efficient to create a variant in SAP.

### Filter Options

The Report extraction type offers the following filter options:

| Type | Operator | Description | | --- | --- | --- | | Single | | Compare data to a single specified value. | | | *(not) like pattern* | True if data values do (not) contain to the specified value. | | | *(not) equal to* | True if data is (not) equal to the specified value. | | | *at least* | True if data is greater than or equal to the specified value. | | | *more than* | True if data is greater than the specified value. | | | *at most* | True if data is less than or equal to the specified value. | | | *less than* | True if data is less than the specified value. | | Range | | Check if the data is (not) within a specified range of values. | | | *(not) between* | True if data values do (not) lie between the 2 specified values. | | List | | Check if the data is part of a specified list of values. | | | *element of* | True if data values are part of the list. |

### Data Format

Use the following internal SAP representation for input:

- Date: The date 01.01.1999 has the internal representation 19990101 (YYYYMMDD).
- Year period: The year period 001.1999 has the internal representation 1999001 (YYYYPPP).
- Numbers: Numbers must contain the leading zeros, e.g., customer number 1000 has the internal representation 0000001000.

Warning

**Values accept only the internal SAP representation.**\
Input that does not use the internal SAP representation results in error messages. Use the internal SAP representation. Example:

```text
ERPConnect.ABAPProgramException: RfcInvoke failed(RFC_ABAP_MESSAGE): Enter date in the format \_.\_.\_

```

______________________________________________________________________

#### Related Links

- [SAP Help: Report variants in SAP](https://help.sap.com/docs/btp/ABAP/3353524716.html)

This page shows how to connect to SAP.\
An SAP connection is required to use any Board Connector extraction type.

Warning

**Missing Authorization.**\
To establish a connection to SAP, the access to general authority objects must be available. Adjust the [SAP Authority Objects](/board-connector/documentation/setup-in-sap/sap-authority-objects#general-authorization-objects) accordingly.

**Supported Connection Methods**

- Connection to a single application server via [RFC protocol](settings/#source-type-rfc)
- Connection to a message server (Load Balancing) via [RFC protocol](settings/#source-type-rfc)
- Connection to a single application server or [public or private cloud instance via RFC over WebSocket](../../knowledge-base/access-data-in-the-sap-public-cloud/)
- Connection to SAP on-premise systems and SAP cloud systems via [OData protocol](settings/#source-type-odata)

**Supported Authentication Methods**

The RFC protocol supports the following authentication methods:

- Plain login using SAP username and password (system or dialogue user)
- [Secure Network Communication (SNC)](snc-authentication/) using username and password via basic authentication
- [SSO with Logon-Ticket](sso-with-logon-ticket/) using username and password via basic authentication

### Connect to SAP via RFC Protocol

Follow the steps below to create a source that connects to SAP via RFC protocol:

1. In the main window of the Designer, navigate to the menu bar and select **Server > Manage Sources**. The window "Manage Sources" opens.

1. Click **[Add]** to add a new SAP connection or click **[]** to edit an existing connection. The window "Change Source" opens.

1. Enter a name for the SAP connection in the field **Name**.

1. Select **RFC** as the source type.

1. In the *General* tab, select a connection method and enter the [system details](settings/#general) of your SAP system.

   Tip

   Input values for the SAP connection can be found in the Properties of the SAP Logon Pad, alternatively request the input values from the SAP Basis team.

1. In the *Authentication* tab, select one of the following authentication methods:

   - *Plain* uses the SAP username and password.
   - [*Secure Network communication (SNC)*](snc-authentication/) uses an encrypted connection between Board Connector and SAP with an SAP username and password.
   - [*SAP Logon Ticket*](sso-with-logon-ticket/) uses SAP Logon-Tickets in place of user credentials. This connection is not encrypted.

1. In the *RFC Options* tab, select an [RFC library](settings/#rfc-libraries) for the SAP connection. The default is the NetWeaver RFC library.

1. Optional: In the *Access Control* tab, you can restrict read and write access to the SAP source, see [Access Management](../access-restrictions/restrict-designer-access/#restrict-access-to-the-designer).

1. Click **[Test designer connection]** to validate the connection between the Board Connector Designer and the SAP system.

1. Click **[Test server connection]** to validate the connection between the Board Connector Server and the SAP system.

1. Click **[OK]** to save the SAP source.

For more information on the input options, see [Connection Settings](settings/#source-type-rfc).

### Connect to SAP via OData Protocol

Follow the steps below to create a source that connects to SAP via OData protocol:

1. In the main window of the Designer, navigate to the menu bar and select **Server > Manage Sources**. The window "Manage Sources" opens.
1. Click **[Add]** to add a new SAP connection or click **[]** to edit an existing connection. The window "Change Source" opens.
1. Enter a name for the SAP connection in the field **Name**.
1. Select **OData** as the source type.
1. Enter the [base URL](settings/#base-url) of your SAP system.
1. Enter login [credentials](settings/#username) for your SAP system.
1. Click **[Test Connect]** to validate the connection between the Board Connector Designer and the SAP system.
1. Optional: In the *Access Control* tab, you can restrict read and write access to the SAP source, see [Access Management](../access-restrictions/restrict-designer-access/#restrict-access-to-the-designer).
1. Click **[OK]** to save the SAP source.

For more information on the input options, see [Connection Settings](settings/#source-type-odata).

### Assign an SAP Source to Extractions

An SAP source is assigned when [creating an extraction](../../getting-started/#create-an-extraction).\
Follow the steps below to change the SAP source of an existing extraction:

1. Select an extraction from the list of extractions in the main window of the Designer.
1. Click **[Source]**. The window “Change Source” opens.
1. Select an SAP source from the dropdown list.
1. Click **[OK]** to confirm your input.

### Single-Sign-On (SSO)

BI client tools such as Power BI, Power Pivot, Alteryx, etc. can start extractions in Board Connector. Board Connector loads the extracted data directly into the tools. In this use case, it is often required that the extraction is executed with the SAP credentials of the (Windows AD) user, whose BI client triggered the extraction. This means that the SAP authorizations of the user apply. This is especially important when extracting BW/BEx queries.

The Windows credentials of the user are forwarded to SAP using Board Connector. On the way to SAP or on the SAP side, the Windows user and its SAP credentials are mapped.

#### Supported SSO Scenarios

Board Connector supports the following procedures for Single Sign-On (SSO):

- [Secure Network Communication (SNC) with Client Certificates](../../knowledge-base/sso-with-client-certificates/)
- [Secure Network Communication (SNC) with PSE and External ID](../../knowledge-base/sso-with-external-id/)
- [Secure Network Communication (SNC) with SAP’s Kerberos Wrapper Library (deprecated)](../../knowledge-base/sso-with-kerberos-snc/)
- [SAP Logon Ticket](../../knowledge-base/sso-with-logon-ticket/)

The authentication method can be selected in the SAP source connection settings.

### Connect via Router

If you access the SAP source system (Application server or Message server) via an SAP router, set the router string before the host name. For more information on SAP routers, see [SAP Help: SAP-Router](https://help.sap.com/viewer/6d9a59096c4b1014b507f15bed51571f/7.01.22/en-US/486b41efb74c07bee10000000a42189d.html).

Example:\
If the application server is "hamlet" and the router string is `/H/lear.theobald-software.com/H/`, set the host property to `/H/lear.theobald-software.com/H/hamlet`.

______________________________________________________________________

#### Related Links

- [Connection Settings](settings/)

This page contains an overview of the SAP connection settings in the window "Change Source".\
To open the server settings, navigate to **[Server] > [Manager Sources]** in the main window of the Designer and click **[]**.

## Source Type RFC

The source type **RFC** enables users to access SAP data using the RFC (Remote Function Call) protocol. The RFC connectivity supports connections to single application servers, message servers (Load Balancing) and public or private cloud instances (WebSocket).

For more information, see [SAP Help: RFC](https://help.sap.com/doc/saphelp_gbt10/1.0/en-US/48/88068ad9134076e10000000a42189d/frameset.htm).

### General

Certain input fields for the SAP connection vary depending on the selected connection method.

#### Host

Host name or IP address of the application server (Property Host).

#### Instance No.

A two-digit number between 00 and 99 (Property SystemNumber).

#### Client

A three-digit number of the SAP client between 000 and 999, e.g., 800.

#### Language

The logon language for the SAP system, e.g., EN for English or DE for German.

#### Message Server

Name or IP address of the message server (Property MessageServer).

#### System ID

Three-digit System ID (Property SID e.g., MSS).

#### Logon group

Property LogonGroup, usually *PUBLIC*.

#### Client

A three-digit number of the SAP client between 000 and 999, e.g., 800.

#### Language

The logon language for the SAP system, e.g., EN for English or DE for German.

#### Host

Name or IP address of the SAP (cloud) system.

#### Port

Port of the SAP (cloud) system, e.g., 443.

#### Library

Path to the SAP Cryptographic Library (download available in the SAP Service Marketplace).

#### Client PSE

Path to the client .pse file, see [Knowledge Base Article: Create a Client PSE to connect to SAP Cloud Systems](../../../knowledge-base/create-personal-security-environment/)

#### Client

A three-digit number of the SAP client between 000 and 999, e.g., 800.

#### Language

The logon language for the SAP system, e.g., EN for English or DE for German.

### Authentication

Certain input fields for the SAP connection vary depending on the selected authentication method.

#### User

SAP username.

#### Password

Password of the SAP user.

#### User name is alias

If this option is active, the name entered in the field **User** is used as the internet user alias, e.g., the communication user in the SAP Public Cloud. Activate this option when connecting to an SAP cloud system using the WebSocket connection method, see [Knowledge Base Article: Access Data in the SAP Public Cloud](../../../knowledge-base/access-data-in-the-sap-public-cloud/).

#### Request SAP credentials from caller when running extractions

If this option is active, SAP credentials entered in the **User** and **Password** fields are ignored. Provide SAP credentials via basic authentication when running an extraction. Caching the result of extractions is inactive.

#### User

SAP username.

#### Password

Password of the SAP user.

#### User name is alias

Activate this option when connecting to an SAP cloud system using the WebSocket connection method. When this option is active, the name entered in the field **User** is used as the internet user alias.

#### SNC library

Path to the SNC library, e.g., `C:\Program Files\SAP\FrontEnd\SecureLogin\sapcrypto.dll`

#### SNC Partner Name

The SAP Partner Name configured for the SAP application server, e.g., `p:SAPserviceERP/Alice@THEOBALD.LOCAL`.

#### Use static SAP credentials / Windows service account

This option activates SNC without SSO. If available, the SAP credentials in the fields **User** and **Password** are used for authentication. The Windows Active Directory user that opens the connection is the service account under which the Board Connector Windows service runs.

#### Request SAP credentials from caller

This option activates SNC with user and password. If this option is active, SAP credentials entered in the fields **User** and **Password** are ignored.\
Provide SAP credentials via basic authentication when running an extraction.

#### SSO - Log in as caller via External ID

This option activates SSO with External ID. SSO with External ID uses a Personal Security Environment (PSE) to create a trust relationship between the SAP application server and the service account that runs Board Connector. This allows Board Connector to impersonate any SAP user. For more information, see [Knowledge Base Article: SSO with External ID](../../../knowledge-base/sso-with-external-id/).

#### SSO - Impersonate caller via Kerberos

This option activates Kerberos SSO. The Windows Active Directory user is used for authentication. For this scenario “HTTPS - Restricted to AD users with Designer read access” must be selected and configured in the [Server Settings](../../server/server-settings/#web-server). For more information, see [Knowledge Base Article: SSO with Kerberos SNC](../../../knowledge-base/sso-with-kerberos-snc/).

#### SSO - Enroll certificate on behalf of caller

This option activates Certificate SSO. The Certificate SSO authentication uses Certificate Enrollment (Enroll-On-Behalf-Of) via Active Directory Certificate Services for the Windows Active Directory user that calls the extraction. For this scenario “HTTPS - Restricted to AD users with Designer read access” must be configured in the [Server Settings](../../server/server-settings/#web-server). For more information, see [Knowledge Base Article: SSO with Client Certificates](../../../knowledge-base/sso-with-client-certificates/).

#### Ticket issuer URL

URL of an Application Server Java (AS Java) that is configured to issue logon tickets. For more information, see [SAP Help: Configuring the AS Java to Issue Logon Tickets](https://help.sap.com/doc/saphelp_nw75/7.5.5/EN-US/4a/412251343f2ab1e10000000a42189c/frameset.htm).

#### Impersonate caller when running extractions (Kerberos SSO)

Activate this option to open the connection in the Windows Active Directory user context of the caller. Otherwise the connection is opened in the context of the service account running the Board Connector Windows service. For more information, see [Knowledge Base Article: SSO with Logon-Ticket](../../../knowledge-base/sso-with-logon-ticket/).

### RFC Options

#### RFC Libraries

Select an RFC library. The following RFC libraries are supported:

- NetWeaver RFC library (sapnwrfc.dll)
- Classic RFC library (librfc32.dll)

The RFC API (Remote Function Call) allows to establish an RFC connection to an SAP system from an external system that communicates as Client or Server with the SAP system. For more information on SAP libraries, see [SAP Help: RFC Libraries](https://help.sap.com/saphelp_nwpi71/helpdata/de/45/18e96cd26321a1e10000000a1553f6/frameset.htm).

SAP does not [support librfc32.dll](https://blogs.sap.com/2012/08/15/support-for-classic-rfc-library-ends-march-2016/) anymore.

Note

For certain older SAP releases, e.g., R/3 4.6C, it is necessary to enter the user name in upper case when using the NetWeaver RFC library.

Note

When using the NetWeaver RFC library with the [DeltaQ](../../deltaq/) extraction type or the [OHS](../../ohs/) extraction type, the RFC destination in SAP transaction SM59 must be set to *Unicode*. We recommend using the not supported librfc32.dll for certain extractions types, e.g., DeltaQ as it runs more stable than the NetWeaver RFC library.

#### Trace Directory

You can log debug information and save it locally.\
Enter a path to a local directory in the field **Trace directory** to save the debug information. For more information, see [Troubleshooting: Trace Directory](https://support.theobald-software.com/helpdesk/KB/View/14455-how-to-activate-tracing-for-xtract-products).

Clear the **Trace Directory** field when it is not needed.

Warning

**Increase of used hard drive memory.**\
A big amount of information is collected when debug logging is activated. This can decrease the capacity of your hard drives dramatically. Activate the debug logging only when necessary e.g., upon request of the support team.

#### Use SAPGUI

There are SAP Reports and BAPIs that require an installed SAP GUI even when they are called remotely. Activate this option only if necessary.

Warning

**'sapgui' start failed.**\
Sometimes SAP opens a pop-up window that requires input when running extractions. To deactivate pop-up windows, open the SAP GUI Logon pad and navigate to **Options... > Security Settings**. Click the **[Open Security Configuration]** button and select *Allow* as the **Default Action**. Apply the changes and close the SAP GUI Logon pad.

## Source Type OData

The source type **OData** enables users to access data from SAP on-premises and cloud systems using the OData (Open Data) protocol. OData defines a set of rules to create, edit and consume resources through RESTful interfaces (HTTP messages exchanging).

For more information, see [SAP Help: OData Services](https://help.sap.com/doc/77979cd206da4b7f9bd264b390d373fc/CLOUD/en-US/OData_Services.pdf).

#### Base URL

The base URL (protocol, hostname and port) of your SAP system. Examples:

- SAP on-premises systems: `http://sap-erp-as05.example.com:50000`
- SAP cloud systems: `https://my123456.s4hana.cloud.sap`

The URL can be requested from the SAP Basis team.

#### Username

When connecting to an SAP on-premises system, enter the username of an SAP dialog user. When connecting to an SAP private or public cloud system, enter the username of an [SAP Communication User](https://learning.sap.com/learning-journeys/implement-sap-s-4hana-cloud-public-edition-for-sourcing-and-procurement/setting-up-communication-management_a913171c-c96d-47a9-81ec-dc9ee8754320).

#### Password

Password of the SAP user.

#### Test Connect

Click **[Test Connect]** to test the OData connection.\
The radio buttons **OData V2** and **OData V4** indicate which OData protocol versions are enabled.\
For more information about the OData protocol version, refer to [OData V2](https://www.odata.org/documentation/odata-version-2-0/) and [OData V4](https://www.odata.org/documentation/).

## Access Control

Access control can be performed at the source level. This access control overrides the settings at the server level. For more information, see [Access Management](../../access-restrictions/restrict-designer-access/#restrict-access-to-the-designer).

### RFC Options

#### RFC Libraries

Select an RFC library. The following RFC libraries are supported:

- NetWeaver RFC library (sapnwrfc.dll)
- Classic RFC library (librfc32.dll)

The RFC API (Remote Function Call) allows to establish an RFC connection to an SAP system from an external system that communicates as Client or Server with the SAP system. For more information on SAP libraries, see [SAP Help: RFC Libraries](https://help.sap.com/saphelp_nwpi71/helpdata/de/45/18e96cd26321a1e10000000a1553f6/frameset.htm).

SAP does not [support librfc32.dll](https://blogs.sap.com/2012/08/15/support-for-classic-rfc-library-ends-march-2016/) anymore.

Note

For certain older SAP releases, e.g., R/3 4.6C, it is necessary to enter the user name in upper case when using the NetWeaver RFC library.

Note

When using the NetWeaver RFC library with the [DeltaQ](../../deltaq/) extraction type or the [OHS](../../ohs/) extraction type, the RFC destination in SAP transaction SM59 must be set to *Unicode*. We recommend using the not supported librfc32.dll for certain extractions types, e.g., DeltaQ as it runs more stable than the NetWeaver RFC library.

#### Trace Directory

You can log debug information and save it locally.\
Enter a path to a local directory in the field **Trace directory** to save the debug information. For more information, see [Troubleshooting: Trace Directory](https://support.theobald-software.com/helpdesk/KB/View/14455-how-to-activate-tracing-for-xtract-products).

Clear the **Trace Directory** field when it is not needed.

Warning

**Increase of used hard drive memory.**\
A big amount of information is collected when debug logging is activated. This can decrease the capacity of your hard drives dramatically. Activate the debug logging only when necessary e.g., upon request of the support team.

#### Use SAPGUI

There are SAP Reports and BAPIs that require an installed SAP GUI even when they are called remotely. Activate this option only if necessary.

Warning

**'sapgui' start failed.**\
Sometimes SAP opens a pop-up window that requires input when running extractions. To deactivate pop-up windows, open the SAP GUI Logon pad and navigate to **Options... > Security Settings**. Click the **[Open Security Configuration]** button and select *Allow* as the **Default Action**. Apply the changes and close the SAP GUI Logon pad.

### Access Control

Access control can be performed at the source level. This access control overrides the settings at the server level. For more information, see [Access Managements](../../access-restrictions/restrict-designer-access/#restrict-access-to-the-designer).

This page shows how to encrypt communication between Board Connector and the SAP system via [Secure Network Communication (SNC)](https://help.sap.com/doc/saphelp_nw73ehp1/7.31.19/en-US/e6/56f466e99a11d1a5b00000e835363f/content.htm?no_cache=true).

### Prerequisites

- SNC must be configured in your SAP system. For more information about SNC configuration in SAP, see [SAP Help: Configuring the Application Server](http://help.sap.com/saphelp_nw73/helpdata/en/44/0e2e0cc7330d19e10000000a114a6b/frameset.htm).
- Check the SAP profile parameter *snc/gssapi_lib* in SAP (transaction RZ10) to determine, which library is used for encryption in your SAP system. Your SAP Basis has to import and configure the same library on the application server and on the machine that runs Board Connector, e.g., `sapcrypto.dll`.
- The Board Connector server must be set up to use the HTTPS protocol, see [Server Settings](../../server/server-settings/#web-server).

For information on how to set up SNC via X.509 certificate, refer to the [Knowledge Base Article: Enable Secure Network Communication (SNC) via X.509 certificate](../../../knowledge-base/enable-snc-using-pse-file/).

### Configure SNC in the SAP Source

Follow the steps below to set up an SAP connection that uses SNC:

1. Create or open an SAP source. For more information, see [Connect to SAP](../).

1. In the *General* tab, enter the system details of your SAP system.

   Tip

   Input values for the SAP connection can be found in the Properties of the SAP Logon Pad or they can be requested from the SAP Basis team.

1. In the *Authentication* tab, select the authentication method **Secure Network Communication (SNC)**.

1. Enter the SAP username and password of an SAP system or dialogue user in the fields **User** and **Password**.

1. Enter the path to the SNC library in the field **SNC library**, e.g., `C:\Program Files\SAP\FrontEnd\SecureLogin\sapcrypto.dll`.

1. Enter the SAP Partner Name configured for the SAP application server in the field **SNC Partner Name**, e.g., `p:SAPserviceERP/Alice@THEOBALD.LOCAL`.

1. In the subsection *When running extractions*, select one of the following SNC implementations:

   - [Use static SAP credentials / Windows service account](../settings/#use-static-sap-credentials-windows-service-account)
   - [Request SAP credentials from caller](../settings/#request-sap-credentials-from-caller)
   - [SSO - Log in as caller via External ID](../settings/#sso-log-in-as-caller-via-external-id)
   - [SSO - Impersonate caller via Kerberos](../settings/#sso-impersonate-caller-via-kerberos)
   - [SSO - Enroll certificate on behalf of caller](../settings/#sso-enroll-certificate-on-behalf-of-caller)

1. Click **[Test designer connection]** to validate the connection between the Board Connector Designer and the SAP system.

1. Click **[Test server connection]** to validate the connection between the Board Connector Server and the SAP system.

1. Click **[OK]** to save the SAP source.

### Download Kerberos DLLs

It is possible to use Kerberos libraries for encryption between the client and the SAP server. For more information, see [SAP Note 2115486](https://launchpad.support.sap.com/#/notes/2115486).\
Different DLLs for 32-bit (`gsskrb5.dll`) and 64-bit (`gx64krb5.dll`) platforms are provided with [SAP Note 2115486](https://launchpad.support.sap.com/#/notes/2115486).

______________________________________________________________________

#### Related Links

- [Knowledge Base Article: SSO with External ID](../../../knowledge-base/sso-with-external-id/)
- [Knowledge Base Article: SSO with Kerberos SNC](../../../knowledge-base/sso-with-kerberos-snc/)
- [Knowledge Base Article: SSO with Client Certificates](../../../knowledge-base/sso-with-client-certificates/)

This page shows how to use SSO via Logon-Tickets between Board Connector and SAP. Note that this connection is not encrypted.

### Prerequisites

- SSO with Logon-Tickets must be configured on the SAP system and and the application server, see [Knowledge Base Article: SSO with Logon-Ticket](../../../knowledge-base/sso-with-logon-ticket/#requirements).
- The Board Connector service must run under an [BC Service Account](../../server/service-account/).
- The Board Connector server must be set up to use the HTTPS protocol, see [Server Settings](../../server/server-settings/#web-server).

### Configure SSO with Logon-Ticket in the SAP Source

Follow the steps below to set up an SAP connection that uses SSO with Logon-Ticket:

1. Create or open an SAP source. For more information, see [Connect to SAP](../).

1. In the *General* tab, enter the system details of your SAP system.

   Tip

   Input values for the SAP connection can be found in the Properties of the SAP Logon Pad or they can be requested from the SAP Basis team.

1. In the *Authentication* tab, select the authentication method **SAP Logon Ticket**.

1. Enter the URL of an Application Server Java (AS Java) that is configured to issue logon tickets in the field **Ticket issuer Url**. For more information, see [SAP Help: Configuring the AS Java to Issue Logon Tickets](https://help.sap.com/doc/saphelp_nw75/7.5.5/EN-US/4a/412251343f2ab1e10000000a42189c/frameset.htm).

1. To open the connection in the Windows Active Directory user context of the caller, activate the option **Impersonate caller when running extractions (Kerberos SSO)**. Otherwise the connection is opened in the context of the service account under which the Board Connector Windows service runs.

1. Click **[Test designer connection]** to validate the connection between the Board Connector Designer and the SAP system.

1. Click **[Test server connection]** to validate the connection between the Board Connector Server and the SAP system.

1. Click **[OK]** to save the SAP source.

______________________________________________________________________

#### Related Links

- [Single Sign-On (SSO)](../#single-sign-on-sso)
- [Knowledge Base Article: SSO with Logon-Ticket](../../../knowledge-base/sso-with-logon-ticket/)

Board Connector is created for [distributed use](../introduction/#software-architecture). The Board Connector Service can be installed on a central server instance, e.g., a company-wide application server. As a result, several users can connect their Board Connector Designer to the server instance to create and modify extractions. The users must have access to the `C:\Program Files\BOARDConnector\config` directory on the server instance.

Tip

Use the [access restrictions](../access-restrictions/) in Board Connector to allow only users with administrator rights to perform fundamental changes on the central repository.

### Install the Board Connector Server

When executing *BOARDConnectorSetup.exe*, the Board Connector server is installed and started as a standard Windows service. Make sure to mark the option **Server > Install Service** during the [Installation](../setup/installation/).

The Board Connector Service can be installed and removed using the `C:\Program Files\BOARDConnector\BCService.exe` application. BCService.exe is used via the Windows command line and supports the following commands:

- `/i` - install Windows service
- `/u` - uninstall Windows service

**Example:**

```console
C:\Program Files\BOARDConnector>BCService.exe /i
C:\Program Files\BOARDConnector>BCService.exe /u

```

### Windows Service

After installation, the Windows service can be started, stopped and configured via the Windows Services administration or the Task Manager. For information on how to run the service under a dedicated Windows service account, see [Change Service Account](service-account/).

### Ports

The Board Connector Server runs as a Windows service with the main process being the BCService.exe that is located in the installation directory of Board Connector, e.g., `C:\Program Files\BOARDConnector\XtractService.exe`. The BCService.exe starts two listener processes that listen on the following ports by default:

| Listener Process | Default Port | Comment | | --- | --- | --- | | [*Theobald.Bc.Web.Listener.exe*](server-tasks/#theobaldbcweblistenerexe) | 8097 (HTTP) and 8197 (HTTPS) | Port can be changed. The web server accepts extraction calls from the Board server via HTTP(S). | | [*Theobald.Bc.Rpc.Listener.exe*](server-tasks/#theobaldbcrpclistenerexe) | 8096 | Port can be changed. The configuration server communicates with the Board Connector Designer. | | *BCAPIServer.exe* | 8098 | Port can not be changed, no encryption. The API Server makes the extractions’ metadata available to the Board server’s data reader. |

If manual adjustments of the port number are necessary, ask your network team for the correct ports.

Note

In the case of distributed use, create corresponding [Inbound Port Rules](https://docs.microsoft.com/en-us/windows/security/threat-protection/windows-firewall/create-an-inbound-port-rule) for the protocol type **TCP** of the listener processes mentioned above.

Warning

**Changing the default ports**\
After manually adjusting the default ports, the Board Connector service does not start. The stored ports are already assigned and must be adapted in the following config files. Administrator access rights are required for altering the [config files](../setup/migration/#configuration-files).\
`C:\Program Files\BOARDConnector\config\server\config\general.json`\
`C:\Program Files\BOARDConnector\config\server\web\general.json`

This page contains an overview of the server settings of Board Connector. To open the server settings, navigate to **[Server] > [Settings]** in the main window of the Designer.

Note

The settings are stored in the following directory: `C:\Program Files\BOARDConnector\config\server` (by default).

## Configuration Server

The configuration server communicates with the Board Connector Designer.

### Designer Connection

#### Port

Defines the port number for communication between Server and Designer. The default is 8096. If you set a different port, add the new port number to the host name on the [logon screen](../../designer/#connect-the-designer-to-a-server) (`[host name]:[port]`).

#### Max. age of log files (days)

Defines the maximum age of the config server [log files](../../logs/#access-server-logs) in days. After this period the log files are deleted.

### Authentication Methods

Defines the authentication methods that are available when connecting a Designer to the Board Connector Server. For more information, see [Authentication Between Designer and Server](../../access-restrictions/#authentication-between-designer-and-server).

#### Select X.509 certificate

Select an X.509 certificate that is used for for transport encryption and authentication, when [custom users](../../access-restrictions/user-management/) connect a Designer to the Server. For more information, see [Install an X.509 certificate](../../access-restrictions/install-x.509-certificate/).

### Access Management

Defines which users and user groups have access to the Designer. For more information, see [Access Management](../../access-restrictions/).

## Web Server

The web server accepts extraction calls via HTTP(S).

### Protocol

| Protocol | Description | | --- | --- | | **HTTP - Unrestricted** | Runs extractions as an HTTP-URL. | | **HTTPS - Unrestricted** | Runs extractions as an HTTPS-URL. This enables secure data transfer via HTTPS. | | **HTTPS - Restricted to AD users with Designer read access** | This setting enables an additional access control for running an extraction. Extractions can only be executed by Windows AD users with at least a read permission (*Read*) in the *Configuration Server* tab. For more information, see [Restrict Access to Windows AD Users (Kerberos Authentication)](../../access-restrictions/restrict-server-access/#restrict-access-to-windows-ad-users-kerberos-authentication). | | **HTTPS - Restricted to custom users with Designer read access** | This setting enables an additional access control for running an extraction. Extractions can only be executed by custom users with at least a read permission (*Read*) in the *Configuration Server* tab. For more information, see [Restrict Access to Custom Users (Basic Authentication)](../../access-restrictions/restrict-server-access/#restrict-access-to-custom-users-basic-authentication). |

Note

To receive data via HTTPS, the [installation of a TLS certificate](../../access-restrictions/install-x.509-certificate/) is required on the server that runs the Board Connector service.

#### HTTP Port

Defines the port number, on which the Server receives HTTP requests of an extraction.

#### HTTPS Port

Defines the port number, on which the Server receives HTTPS requests of an extraction.

#### Select X.509 certificate

Select an X.509 certificate that is used for for transport encryption and authentication, when running extractions. For more information, see [Install an X.509 certificate](../../access-restrictions/install-x.509-certificate/).

### Misc

#### Keep log files (days)

Defines the maximum age of the web server [log files](../../logs/#access-extraction-logs) in days. After this period the log files are deleted.

#### Collect Usage Data

When this checkbox is active, usage data is stored in your local installation directory. If this checkbox is deactivated, no usage data is collected.

#### Upload Usage Data

When this checkbox is active, usage data is sent to Theobald Software for analysis. An internet connection is required to use this option.

#### Transfer SAP Object Names

When this checkbox is active, the names of the SAP objects that are used in extractions are included in the usage data upload.

#### Enable setup distribution for clients

Defines whether the setup of the product version that runs on the server needs to be downloaded. When an older Designer version is connected to a newer Server version, you are prompted to download and update the Designer with the product version.

### Result cache

#### Target directory

Sets the directory for the buffer files. The default directory is the result-cache folder in the installation directory, e.g., `C:\Program Files\BOARDConnector\result-cache`.

#### Max. cached runs

Defines the maximum count of results of different extractions in the buffer.

#### Max. age (minutes)

Defines the maximum age in minutes of an extraction in the buffer.

This page contains an overview of the Board Connector server tasks and the underlying server architecture to execute the tasks. The server performs two main tasks:

- Run extractions stored in the [Config](../../setup/migration/#configuration-files) directory.
- Make extractions stored in the [Config](../../setup/migration/#configuration-files) directory available to the Designer.

### Run Extractions on the Server

The execution of an extraction is triggered by an HTTP request.

Tip

The process can be traced in the [Extraction Log](../../logs/#access-extraction-logs).

1. The Theobald.bc.Web.Worker.exe checks the authentication and authorization of the request.
1. The target environment is prepared for writing the extracted data (e.g. establish database connection, create file).
1. The license is checked.
1. A connection to the SAP source system is established.
1. The data of the defined extraction type is requested.
1. Each extracted data package is written to the target environment.
1. After all packages are received, the Theobald.bc.Web.Worker.exe terminates the connection to the SAP source system and informs the target environment that the extraction is complete.

Tip

The Theobald.bc.Web.Worker.exe logs its actions in log files. The log files are located in the logs subdirectory of the program directory:`C:\Program Files\BOARDConnector\logs\servers\web\worker` (default) The logs can also be displayed in the Designer under **[Server]>[Logs (Web Worker)]**.

### Access the Settings using the Designer

The steps below show what happens when a Designer connects to the Server and changes settings.

1. The Theobald.bc.Rpc.Worker.exe checks the authentication and authorization of the request.
1. The Designer requests a certain setting, e.g., list of all extractions.
1. The Theobald.bc.Rpc.Worker.exe reads the requested settings from the [config directory](../../setup/migration/#configuration-files) and sends these settings to the Designer.
1. The user changes settings in the Designer, e.g., destination settings.
1. The Designer sends the changed settings back to the Theobald.bc.Rpc.Worker.exe. Theobald.bc.Rpc.Worker.exe saves the changed settings in the [config directory](../../setup/migration/#configuration-files).

Tip

The Theobald.bc.Rpc.Worker.exe logs its actions in log files. The log files are located in the logs subdirectory of the program directory: `C:\Program Files\BOARDConnector\logs\server\rpc\worker` (default).

### Server Architecture

The server runs as a Windows Service and the main process of the service is the BCService.exe. The XtractService.exe starts two listener processes:

- Theobald.bc.Web.Listener.exe
- Theobald.bc.Rpc.Listener.exe

Both listener processes listen on the [Ports](../#ports) defined in the [Server Settings](../server-settings/).

Tip

The XtractService.exe logs its actions in ServiceLog.txt The log file is located in the logs subdirectory of the program directory: `C:\Program Files\BOARDConnector\logs` (default).

#### Theobald.bc.Rpc.Listener.exe

The Theobald.bc.Rpc.Listener.exe waits for new connection requests from the Designer.\
For each TCP connection the Theobald.bc.Rpc.Listener.exe starts a new instance of Theobald.bc.Rpc.Worker.exe, which processes all Designer requests coming in over the particular TCP connection, see [Access the Settings using the Designer](#access-the-settings-using-the-designer).

Tip

The Theobald.bc.Rpc.Listener.exe logs its actions in log files. The log files are located in the logs subdirectory of the program directory: `C:\Program Files\BOARDConnector\logs\server\rpc\listener` (default).

#### Theobald.bc.Web.Listener.exe

The Theobald.bc.Web.Listener.exe waits for HTTP requests.\
For each TCP connection the Theobald.bc.Web.Listener.exe starts a new instance of Theobald.bc.Web.Worker.exe, which processes all HTTP requests coming in over the particular TCP connection, see [Run Extraction on the Server](#run-extractions-on-the-server).

The following HTTP requests are possible:

- running an extraction
- emptying the result cache of an extraction
- canceling all runs of an extraction
- [Web API requests](../../../web-api/)

Tip

The Theobald.bc.Web.Listener.exe logs its actions in log files. The log files are located in the logs subdirectory of the program directory: `C:\Program Files\BOARDConnector\logs\server\web` (default).

This page shows how to run the Board Connector service under a dedicated Windows domain user account. After the installation, the Board Connector service runs under a [virtual service account](https://learn.microsoft.com/en-us/windows-server/identity/ad-ds/manage/understand-service-accounts#virtual-accounts) by default.

The following scenarios require the service to run under a dedicated Windows domain user account:

- Enabling [Kerberos authentication](../../access-restrictions/restrict-server-access/#restrict-access-to-windows-ad-users-kerberos-authentication) for the Board Connector web server
- Enabling Windows authentication for Board Connector
- Enabling [SSO with Kerberos SNC](../../../knowledge-base/sso-with-kerberos-snc/)
- Enabling [SSO with SAP Logon Tickets](../../../knowledge-base/sso-with-logon-ticket/)

### Basic Settings

1. Create a Windows AD service account and assign an SPN (Service Principle Name) to the service account in the following format: `HTTP/[FQDN of BC Server]`.

   Tip

   Use the `setspn` command to check the SPNs of a user account.

1. Grant access rights to the installation folder of Board Connector and all sub folders to the service account as shown in the following screenshot:

1. If applicable, make sure the service account has *Read* access to the private key of the [X.509 certificate](../../access-restrictions/install-x.509-certificate/) used by Board Connector.

1. Let the Board Connector service run under the service account. Make sure to use the correct domain, e.g., *.company.local* instead of *.company.com*.

1. In the Board Connector Designer startup window "Connect to Board Connector Server", set **Authentication** to *Windows credentials* or *Custom Credentials (Kerberos authentication)*.

1. Enter the User Principal Name (UPN) of the service account in the **Target Principal** field. For more information, see [Knowledge Base Article: Target Principal Field](../../../knowledge-base/target-principal-TPN/).

### Settings for SSO with Kerberos SNC

When using [SSO with Kerberos SNC](../../../knowledge-base/sso-with-kerberos-snc/) additional steps are necessary:

1. Set *constrained delegation* for the Windows domain account under which the Board Connector Service runs.
1. Enter the SPN of the service account under which the SAP ABAP application server is running (SAP Service Account), e.g., `SAPServiceERP/do_not_care`.\
   For more information about the partner name notation in SAP, see the [SAP Help: Preparing the Primary Application Server Instance](https://help.sap.com/viewer/e815bb97839a4d83be6c4fca48ee5777/7.5.9/en-US/440ebb40b9920d1be10000000a114a6b.html).

______________________________________________________________________

#### Related Links

- [Microsoft Documentation: About Service Logon Accounts](https://docs.microsoft.com/en-us/windows/win32/ad/about-service-logon-accounts)
- [Microsoft Documentation: Service Principal Names](https://docs.microsoft.com/en-us/windows/win32/ad/service-principal-names)
- [Knowledge Base Article: Target Principal Field](../../../knowledge-base/target-principal-TPN/)

This section covers installation and maintenance topics for IT admins. This includes system requirements, backups and license information.

### Popular Topics

- [System Requirements](requirements/)
- [Backup & Update](update/)
- [Supported SAP Releases & Databases](requirements/#supported-sap-systems-and-releases)
- [License Installation](license/#about-the-licensing-concept-of-board-connector)
- [Configuration Files](migration/#configuration-files)
- [Migration to a Different Machine](migration/#migration-to-a-different-machine)

### Related Topics

### Download Board Connector

You can download a 30 day trial version from the [Theobald Software website](https://theobald-software.com/en/download-trial/). The trial version is only time limited and works otherwise without any restrictions.

### Evaluate Board Connector

You are guaranteed to get unrestricted support by the Theobald Software support team during the evaluation phase. In case of questions or doubts, feel free to contact Theobald Software at any time:

- [Support Portal](https://support.theobald-software.com)
- [Contact Forms](https://theobald-software.com/en/contact/)

### Technical Support

Theobald Software offers support in English and German.

1. Open a ticket in our [Support Portal](https://support.theobald-software.com).
1. Provide as much information as possible for the Theobald Software support team to understand and analyze the issue.
1. If there is an error message, copy and paste the error message into the ticket.
1. Copy and paste the software logs in the ticket, see [Required Support Information for Board Connector](https://support.theobald-software.com/helpdesk/KB/View/14975-required-support-information-for-board-connector).

Disclaimer

SAP versions that are no longer supported by the manufacturer are excluded from the Theobald Software support. Issues specific to custom BAPIs (Z function modules) or custom reports (Z reports) are also excluded from the scope of support.

This page shows how and where to install Board Connector.

### Prerequisites

Administrator permissions are required to install Board Connector.

### Setup

`BOARDConnectorSetup.exe` is an industry standard setup. Execute the `BOARDConnectorSetup.exe` file and follow the instructions of the setup program.

When starting the installation program, optional components can be selected during the setup.

| Component | Description | | --- | --- | | Main Product Files | All required files to use Board Connector. | | Designer | Installs the Designer application, uncheck this option if you want to use Board Connector without a graphical interface. | | Server | Installs the Board Connector Server. | | Convert config files | Converts extractions, sources, destinations, etc. from previous version format to new format. Crucial when installing major releases and upgrading from e.g., version 3.x to 4.x. | | Install Service | Installs the server component as a windows service that runs under a [virtual service account](https://learn.microsoft.com/en-us/windows-server/identity/ad-ds/manage/understand-service-accounts#virtual-accounts) with the least required privileges, see [Server](../../server/). | | Start Menu Shortcuts | Component that adds shortcuts to the start menu. |

Note

Make sure to mark the option “Server > Install Service” during the installation, as installing a server without the service is only used for development purposes.

For information on how to install a license, see [Licensing](../license/#install-the-board-connector-license).

### Installation Directory Files

The list below shows several most important files that are placed into the default directory `C:\Program Files\BOARDConnector` after installation:

| Filename | Description | | --- | --- | | ABAP directory | Directory with customer-specific function modules (.txt) corresponding to SAP transport requests (.zip). | | logs directory | Directory with server and extraction logs. See also [Logs](../../logs/). | | config directory | Directory created automatically with the first extraction, containing all extractions and the corresponding log files, see [Backup](../update/). | | private directory | Directory containing keys for encrypted SAP passwords. This directory contains sensitive information and must be to be secured accordingly. | | result-cache directory | Directory with extraction cache files. | | BCDesigner.exe | Application that launches Board Connector Designer to create, test and monitor extractions. | | BCService.exe | Application that launches Board Connector Server as Windows Service. Usually boots automatically and runs in the background. | | BCApiServer.exe | Unencrypted WCF service for retrieving metadata to the Designer. | | Theobald.Bc.Web.Listener.exe | Theobald.Bc.Web.Listener.exe a listener process that waits for HTTP requests. | | Theobald.Bc.Web.Worker.exe | For each TCP connection the Theobald.Bc.Web.Listener.exe starts a new instance of Theobald.Bc.Web.Worker.exe, which processes all HTTP requests coming in over the TCP connection. | | BCCleanup.exe | Application that cleans up the old server logs, as defined in the [server settings](../../server/server-settings/). | | BCConfigServer.exe | Listener process waits for new connection requests from the Designer. | | ConfigConverter.exe | Application that converts extractions, sources, etc. from previous version format to new format. Crucial when installing major releases and upgrading from e.g., version 3.x to 4.x. | | uninstall.exe | Tool for uninstalling and removing Board Connector with all its components from your machine. | | BOARDConnectorSetup.exe | Setup of the currently installed version. See also [Migration to a Different Machine](../migration/#migration-to-a-different-machine). | | Eula_Board Connector.rtf | Document containing the license agreement for the use of the software Board Connector. | | BOARDConnectorLicense.json | License file with information about the server, the component and runtime. |

Note

The Board Connector Server can be started as a console program for test purposes. For more details on starting Board Connector Server as a console program, see [Knowledge Base Article: Target Principal Field](../../../knowledge-base/target-principal-TPN/).

The installation of Board Connector can be initiated unattended without the GUI in a non-interactive way via the Windows Command Prompt. Execute the `BOARDConnectorSetup.exe` via command line and use the switch `--unattended`.

```console
start /wait BOARDConnectorSetup.exe --unattended

```

`BOARDConnectorSetup.exe` is Windows applications, meaning the Windows Command Prompt does not wait until the installation is complete. To wait until the installation is complete, use the [start](https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/start) command with the `/wait` switch.

Note

All switches are case sensitive.

### Version Number

When installing Board Connector, the version of the product is displayed in the installation menu. To check the version of the installed product in Windows, open the Windows Settings and navigate to **Apps > Installed apps**.

### About the Licensing Concept of Board Connector

Board Connector is licensed per Windows server. The license is bound to your company and a specific server name. If you run the Board Connector Designer and the Board Connector Server on different machines, it is only necessary to replace the license on the server.

A trial license is automatically installed with the installation of Board Connector.\
A regular license is provided in the [customer portal - My Theobald Software](https://my.theobald-software.com/) after purchasing the product.

### Install the Board Connector License

Place the "BOARDConnectorLicense.json" file that is provided in the [Customer Portal - My Theobald Software](https://my.theobald-software.com) into the installation directory on the server, e.g., `C:\Program Files\BOARDConnector`.

Tip

To inspect your current license data, open the Board Connector Designer and navigate to **[Help] > [Info]** in the main menu bar. Alternatively, press **[F12]**.

### Move a License to a new Server

When moving your setup to a new server, a new license file must be issued for that server. Contact our sales team at [sales@theobald-software.com](mailto:sales@theobald-software.com) to let us know the name of the new server.

For more information on the migration process, see [Migration to a Different Machine](../migration/#migration-to-a-different-machine).

### Maintenance

Contact the [sales department](mailto:sales@theobald-software.com) for information about available maintenance options.\
In case of technical difficulties, contact our [support](https://support.theobald-software.com/helpdesk).

______________________________________________________________________

#### Related Links

- [My Theobald Software - Portal for Customers and Partners](https://my.theobald-software.com/)

This page shows how to migrate the Board Connector configuration from one machine to another.

### Prerequisites

- [Create a backup](../update/#create-a-backup) of the `config` folder that is located in the installation directory of the current machine, e.g., `C:\Program Files\BOARDConnector\config`.
- Make sure that the same version of Board Connector is installed on both machines.

Tip

To install a matching version of Board Connector on the new machine, use the `BOARDConnectorSetup.exe` from the installation directory of the current machine, e.g., in `C:\Program Files\BOARDConnector`.

### Migration to a Different Machine

The Board Connector configuration can be migrated entirely (full migration) or partially.

- Conduct a **full migration** when replacing a machine completely.\
  For a full migration, restore the entire `config` and `private` folders from your backup on the new machine (full migration).
- Conduct a **partial migration** when moving parts of your setup to a different machine, e.g., if you transport defined extractions types from a test environment to a production environment.\
  For a partial migration, restore the parts of the backup you want to migrate by copying only the relevant [configuration files](#configuration-files), e.g., the `sources` or `extractions` folder, on the new machine.

Restart the [Board Connector Service](../../server/) if you copy the `server` folder to the new machine.

Note

When migrating to a new server, a new license file must be issued for that server. Contact our sales team at [sales@theobald-software.com](mailto:sales@theobald-software.com) for more information.

### Configuration Files

All configuration files of defined extractions types, sources and the server are stored in the sub-directory `config` of the Board Connector installation directory, e.g., `C:\Program Files\BOARDConnector\config`. Use the `config` directory to set up a version control system or to create manual backups.

| Filename | Description | | --- | --- | | `extractions` | Directory containing the defined extractions types. Each sub-directory contains an extraction of the same name. | | `servers` | Directory containing the [server settings](../../server/server-settings/). | | `connections` | Directory containing [SAP connections](../../sap-connection/). Each sub-directory contains a source of the same name. | | `version.txt` | Text file containing the product version of the current configuration, see [Installation](../installation/#installation-directory-files). |

______________________________________________________________________

#### Related Links

- [Installation](../installation/)
- [Changelog](../../../changelog/)

This page contains information about system requirements and compatible SAP systems for Board Connector.

### Board Server

Version 7.3.1 or higher

### Supported SAP Systems and Releases

The following SAP Systems are supported:

- All SAP ABAP based systems that provide RFC connectivity and all SAP S/4 HANA (Cloud) systems that provide OData connectivity are supported.
- SAP ABAP systems on any database are supported (including HANA). The database used by the SAP system is irrelevant, because the integration occurs at SAP application server level.
- SAP systems running on Big Endian and Little Endian hardware are supported.
- SAP industry solutions like IS-U, IS-R, etc. are supported.
- SAP releases 4.6C and newer are supported.
- All operating systems are supported.

Examples

- [SAP S/4HANA](/board-connector/knowledge-base/supported-sap-and-hana-versions)
- mySAP
- SAP Application Server ABAP
- Message Server
- Router
- Standalone Gateway
- SAP Business Suite 7 (CRM, SRM, SCM etc.)
- SAP Business All in One, CAR, APO, PI
- SAP BW 3.1 and later
- SAP BW/BI 7.x
- SAP ERP / ECC 5.0 / ECC 6.0 (including all EhPs)
- SAP R/3 Version 4.6C and later
- SAP BW/4HANA
- ...and more.

**Disclaimer**

While SAP versions that are no longer supported by SAP still work with Theobald Software products, they are excluded from the Theobald Software support service.

#### Not Supported SAP Systems

The following SAP Systems are not supported:

- SAP systems that don’t run on ABAP systems
- SAP systems that don't provide RFC connectivity.

Examples

- Business By Design
- Business One
- Business Objects
- Sybase
- Ariba
- Success Factors
- Concur

### HANA Database

You can use Operational Data Provisioning (ODP) to connect the SAP HANA database of an SAP ABAP source system. Communication is done via RFC. With the ODP context for SAP HANA (HANA) the following HANA View types are available for extracting:

- Analysis Views
- Calculation Views
- Associated Attribute Views

Direct access to a HANA database without an SAP ABAP source system running on the corresponding HANA database is not supported.

### Ports

The following ports between the Windows server that runs Board Connector and the SAP server, must be open:

| SAP NetWeaver Component | Port (NN = System number of the SAP system) | | --- | --- | | SAP Application Server | 33<NN> | | SAP Message Server | 36<NN> | | Secure Network Communication (SNC) | 48<NN> | | SAP-Router | 3299 |

For more information, see [SAP Help: TCP/IP Ports of All SAP Products](https://help.sap.com/viewer/ports).

### Installation and Configuration on SAP

| Extraction Type | SAP Release | Requirements on the SAP System | | --- | --- | --- | | [Table](/board-connector/documentation/table/) | Rel. > 4.6C | Installation of a custom function module [/THEO/READ_TABLE](/board-connector/documentation/setup-in-sap/custom-function-module-for-table-extraction/#installation-of-theoread_table) is recommended. | | [BAPI](/board-connector/documentation/bapi/) | Rel. > 4.6C | No requirements. Only remote-enabled functions are supported. | | [Query](/board-connector/documentation/query/) | Rel. > 4.6C | No requirements. | | [Report](/board-connector/documentation/report/) | Rel. > 4.6C | Installation of a custom function module [Z_XTRACT_IS_REMOTE_REPORT](/board-connector/documentation/setup-in-sap/custom-function-module-for-reports/) is required. | | [BWCube](/board-connector/documentation/bwcube/) | Rel. > BW 3.1 | No requirements. BEx Queries require external access ("Allow External Access to this Query" option must be active). | | [BW Hierarchy](/board-connector/documentation/hierarchy/) | Rel. > BW 3.1 | No requirements. | | [ODP](/board-connector/documentation/odp/) | SAP_BASIS >= 730, BW >= 7,3X | No requirements. | | [DeltaQ](/board-connector/documentation/deltaq/) | Rel. > 4.6C | Customization required, see [Customization for DeltaQ](/board-connector/documentation/setup-in-sap/customization-for-deltaq/). | | [OHS](/board-connector/documentation/ohs/) | Rel. > BW 3.5 | Customization required, see [Customization for OHS in BW](/board-connector/documentation/setup-in-sap/customization-for-ohs-in-bw/). | | [Table CDC](/board-connector/documentation/table-cdc/) | SAP ECC 5.0 or above | Installation of a custom function modules is necessary, see [Table CDC Requirements](/board-connector/documentation/table-cdc/#prerequisites). |

For Information about the installation of the custom function modules and the SAP customization, check the section [SAP Customization](/board-connector/documentation/setup-in-sap/).

### SAP Licenses

Additional SAP licenses might be required for extracting data from SAP. Contact SAP to verify these requirements.

### Operating Systems

- Windows 11
- Windows Server 2022 (until 2031-10-14)
- Windows 10 (until 2025-10-14)
- Windows Server 2022
- Windows Server 2019 (until 2029-01-09)
- Windows Server 2016 (until 2027-01-12)

### Other Applications and Frameworks

- .NET Framework 4.7.2 or higher, see [Download .NET Framework from Microsoft](https://support.microsoft.com/en-us/help/4054530/microsoft-net-framework-4-7-2-offline-installer-for-windows).

### Hardware

The following requirements apply to the hardware:

| Hardware | Minimum Requirement | | --- | --- | | Processor Cores | 2 Cores, 1 additional core is required for each additional parallel extraction | | Processor Speed | 1.4 GHz, recommended: 2.0 GHz or faster | | Main Memory | 8 GB, recommended: 12 GB for up to two parallel extractions 4 GB dedicated memory in average for each additional parallel extraction. Check the exact storage requirements of an extraction in your scenario. | | Disk Space | min. 150 MB total for Installation | | 64-Bit Environment | 64-Bit operating systems only | | Display Resolution | 1920x1080x1.25 with 1.25 display scaling |

This page shows how to backup and update an already installed Board Connector version.

### Preparations

Recommendations:

- Use a working test environment with a valid license and maintenance. The test environment is a copy of the current production environment.
- Update the software regularly, see [recommended update interval](../../../changelog/#recommended-update-interval).
- Create a [backup](#create-a-backup) of the current installation.

Before updating, check the [Changelog](../../../changelog/) for breaking changes:

- Make any necessary preparations and changes as described in the Release Notes.
- Note the current product version so that you can switch back to the same version in the event of an error.

Tip

Subscribe to our [technical newsletter](https://theobald-software.com/en/newsletter/) that informs you about new software releases.

### Create a Backup

On the machine that runs the Board Connector service, copy the following files and directories and store them in a secure location:

- copy the complete `config` and `private` directories into the Board Connector installation directory, e.g., `C:\Program Files\BOARDConnector\config`.
- optionally, copy the complete `logs` directory to create a backup of the log files.
- copy the `BOARDConnectorLicense.json` file to backup your license.

Warning

**Data security.**\
The `config`, `private` and `logs` directories may contain sensitive information. Unauthorized access may lead to data breaches.\
Make sure to secure the backup location.

It is recommended to create backups at regular intervals or use a versioning tool to switch back to the previous version, if necessary.

Recommendation

A version control system helps manage the data transfer from test environment to production environment by keeping track of all modifications. Git or Azure DevOps are version control systems that can be used to ensure the following:

- The deployment of new extractions, sources and destinations can **not** cause fundamental damage to the data load of the productive landscape.
- User rights and other features allow for changes to be checked and corrected in advance.
- Quick and easy rollbacks of changes.

For more information on how to set up version control, refer to the knowledge base article [Deploy Extractions Using Git Version Control](../../../knowledge-base/deploy-extractions-using-Git-version-control/).

#### Restore a Backup

1. On the machine that runs the Board Connector service, remove the `config` directory from the installation directory of Board Connector, e.g., `C:\Program Files\BOARDConnector`.
1. Remove `private` directory from the installation directory.
1. Copy the backup of the `config` and `private` directories into the installation directory.
1. To restore the license, replace the `BOARDConnectorLicense.json` file in the installation directory with the backup.
1. Restore the previous Board Connector version as listed in the `version.txt`within the `config` directory.

Warning

**Data loss.**\
Restoring the backup of the `config` and `private` directories replaces the existing configuration.\
Make sure to remove the existing files before restoring the backups.

### Update a Test Environment

A newer version can be installed over the old version. It is not necessary to uninstall the previous version. New versions are available in the [Theobald Software Customer Portal](https://my.theobald-software.com).

During the installation, the setup program checks whether other processes are running in the background that are related to the software being installed. If this is the case, a message with various options is displayed:

| Option | Description | | --- | --- | | **Check Again** | Close the affected programs and click **[Check Again]** to continue the installation. | | **Kill Process** | Kill the affected process and continue with the installation. | | **Ignore** | Ignore the message, but the installation may be canceled due to the locking of certain files. | | **Quit Install** | Cancel the installation and resume it at another time. |

#### Upgrade with Breaking Changes

The setup checks if an older version of Board Connector is already installed on the machine. If an older version is found, the setup displays a list of all (breaking) changes that were released between the old version and the current version. If there are breaking changes, make sure to follow the instructions in the release notes of the breaking changes to ensure a smooth update.

#### Upgrade Major Releases - ConfigConverter

When upgrading from one major product version to another, it can be necessary to convert components of your extractions. For this purpose, Board Connector provides the conversion tool *ConfigConverter*. The *ConfigConverter* ensures that all defined extractions types, source systems, server and user settings from the previous version are available in the new version.

There are two ways to use the *ConfigConverter*:

1. Execute the Board Connector setup.
1. During the setup, activate the option **Convert config files**. The option **Convert config files** starts the *ConfigConverter* application.
1. Confirm the conversion process in the command line pop-up window.

If the *ConfigConverter* is not executed automatically during installation, the converter can also be started manually. Run the *ConfigConverter.exe* in the Board Connector installation directory, e.g., `C:\Program Files\BOARDConnector`.

Note

Any issues that may occur during the conversion process are displayed in the command line window. Copy and send the command line context to the support team, if required.

#### Test the Update

Install the software update on the test environment and test the new version carefully.

1. Test all your existing extractions.
1. After successful testing, install the current version on the production environment.
1. In the case of an error, create a ticket in the [Support Portal](https://support.theobald-software.com).\
   Register if you do not have a customer account yet. Use your backup until a solution is provided.

### Update a Production Environment

After successfully testing the update on the test environment, install the update on the production environment. Make sure to create a backup beforehand and conduct all the necessary preparations and changes.

Warning

**Critical errors. Support cannot be provided.**\
The versions of the test environment and of the production environment must be identical. Different versions can cause critical errors. No support can be provided, if the versions are not identical.\
Make sure to keep the versions of the test environment and production environment identical - upgrade or downgrade, if needed.

______________________________________________________________________

#### Related Links

- [Knowledge Base: Deploy Extractions Using Git Version Control](../../../knowledge-base/deploy-extractions-using-Git-version-control/)
- [Customer Portal](https://my.theobald-software.com)
- [Changelog](../../../changelog/)
- [Support Portal](https://support.theobald-software.com)

This section covers [user rights](sap-authority-objects/) and customization topics for the SAP Basis.\
For information on [supported SAP systems](../setup/requirements/#supported-sap-systems-and-releases) and other IT topics, see [Setup](../setup/).

### Custom Function Modules

The following extractions types require the installation of a custom function module:

| Extraction Type | Custom Function Module | Installation | | --- | --- | --- | | Report | [Z_XTRACT_IS_REMOTE_REPORT](custom-function-module-for-reports/) | Required | | Table | [/THEO/READ_TABLE](custom-function-module-for-table-extraction/) | Recommended | | Table CDC | [/THEO/READ_TABLE](custom-function-module-for-table-extraction/) and [THEO_CDC](custom-function-module-for-tablecdc/) | Required |

Theobald Software distributes custom function modules as part of Board Connector. The custom function modules can be installed in SAP using transport requests. The transport requests are available in the installation directory of Board Connector, e.g., `C:\Program Files\BOARDConnector\ABAP\`.

For information on how to use transport request, see [Import an SAP Transport Request](/board-connector/knowledge-base/import-an-sap-transport-request).

Note

All objects that come with any of the transport requests, can be deleted by importing the `Z_THEO_READ_TABLE-deletion_request.zip` transport request.

### Customizations in SAP

The following extractions types require a customization in the SAP system:

- DeltaQ, see [Customization for DeltaQ](customization-for-deltaq/).
- OHS, see [Customization for OHS in BW](customization-for-ohs-in-bw/).

### Popular Topics

- [SAP User Rights](sap-authority-objects/)
- [Download SAP Roles](sap-authority-objects/#sap-authorization-profiles)
- [Function Module for Table Extractions](custom-function-module-for-table-extraction/)
- [Function Module for TableCDC Extractions](custom-function-module-for-tablecdc/)
- [Function Module for Report Extractions](custom-function-module-for-reports/)
- [Customization for DeltaQ](customization-for-deltaq/)
- [Customization for OHS](customization-for-ohs-in-bw/)

The extraction of reports requires the installation of a custom function module in your SAP system.\
If you cannot install the function module, turn to your SAP Basis team for help.

Note

As of version 1.2 of the custom function module `Z_XTRACT_IS_REMOTE_REPORT` access to reports must be explicitly granted, see [Authority Objects for Z_XTRACT_IS_REMOTE_REPORT](#authority-objects-for-z_xtract_is_remote_report).

### Installation of Z_XTRACT_IS_REMOTE_REPORT

Install the function module using the transport request *Z_XTRACT_IS_REMOTE_REPORT-transport.zip*.\
The transport request is located in the following installation directory: `C:\Program Files\[XtractProduct]\ABAP\Report\Z_XTRACT_IS_REMOTE_REPORT-transport.zip`.

The transport request needs to be imported into SAP by your SAP Basis team.

### Authority Objects for Z_XTRACT_IS_REMOTE_REPORT

As of Z_XTRACT_IS_REMOTE_REPORT version 1.2 access to reports must be explicitly granted.\
There are 2 ways to verify that the SAP user is allowed to extract a report:

- Use authentication groups, see [Authorizing Access to Reports via Authorization Groups](../../../knowledge-base/authorize-access-to-specific-reports/).
- Use the custom authorization object Z_TS_PROG.

______________________________________________________________________

#### Related Links

- [Knowledge Base: Import an SAP Transport Request](../../../knowledge-base/import-an-sap-transport-request/)
- [Knowledge Base: Authorizing Access to Specific Reports](../../../knowledge-base/authorize-access-to-specific-reports/)
- [SAP Help: Create Function Group](https://help.sap.com/viewer/bd833c8355f34e96a6e83096b38bf192/7.52.0/en-US/d1801ef5454211d189710000e8322d00.html)

SAP customization for the Table extraction type is optional. The installation of the custom function module `/THEO/READ_TABLE` is recommended to improve performance and to bypass restrictions of the SAP standard function module RFC_READ_TABLE.

### RFC_READ_TABLE Restrictions

Especially with older SAP releases you may encounter a few restrictions when using the SAP standard function module (RFC_READ_TABLE) for table extraction:

- The overall width of all columns to be extracted must not exceed 512 bytes.
- It is not possible to extract data from tables that contain one or more columns of the data type f (FLTP, floating point), DEC (decimal, e.g. for percentage) or x (RAW, LRAW).
- Poor extraction performance with larger tables. Can cause also duplicates.
- Depending on the SAP version there may be other restrictions.

When facing restrictions, install the Theobald Software custom function module [/THEO/READ_TABLE](./#installation-of-theoread_table) on your SAP system.

Warning

**Converting issues**\
Error while converting value '\*.0' of row 1530, column 3.\
The SAP standard module *RFC_READ_TABLE* for table extraction can only extract the ABAP data type DEC to a limited extent. This leads to the mentioned example error during extraction. Use the function module */THEO/READ_TABLE*.

### Installation of /THEO/READ_TABLE

An SAP transport request for the installation of the function module is provided in the installation directory of Board Connector: `C:\Program Files\BOARDConnector\ABAP\`.\
Transport requests are imported into SAP by your SAP Basis team. For more information, see [Knowledge Base: Import an SAP Transport Request](/board-connector/knowledge-base/import-an-sap-transport-request/).

Note

Take a look at the README.pdf in the installation directory (e.g.,`C:\Program Files\BOARDConnector\ABAP\README.pdf`) before installing any custom function modules.

It is recommended to install the latest custom function module THEO/READ_TABLE:

| Transport Request | Compatible SAP Systems | | --- | --- | | `THEO_READ_TABLE_740SP05.zip` | ABAP version 7.40 SP05 and higher | | `THEO_READ_TABLE_710.zip` | ABAP version 7.10 to 7.40 SP04 | | `THEO_READ_TABLE_640.zip` | ABAP versions from 6.40 until 7.03 | | `THEO_READ_TABLE_46C.zip` | ABAP versions from 4.6C |

When importing the transport requests on older SAP releases a syntax error may occur. Contact [Theobald Support](https://support.theobald-software.com) and send the dedicated error message text.

Warning

**Generating Short Dumps.**\
Testing the function modules on an SAP system is not possible. Function modules /THEO/READ_TABLE and Z_THEO_READ_TABLE can only be called by Theobald Software products due to the callback function of the module. Avoid calling function modules /THEO/READ_TABLE and Z_THEO_READ_TABLE directly from an SAP system.

### Supported Features

| Supported Features by THEO_READ_TABLE | \_740SP05 | \_710 | \_640 | 46C | | --- | --- | --- | --- | --- | | WHERE Clause | | | | | | HAVING Clause | | | | | | INNER JOIN | | | | | | LEFT OUTER JOIN | | | | | | Conversion exits | | | | | | Aggregate functions | | | | | | SQL expressions (subqueries) | | | | | | Background jobs | | | | |

______________________________________________________________________

#### Related Links

- [Knowledge Base: Import an SAP Transport Request](/board-connector/knowledge-base/import-an-sap-transport-request/)
- [Table Extraction Type](../../table/)

The Table CDC extraction type requires the installation of the custom function modules /THEO/CDC and /THEO/READ_TABLE in your SAP system. If you cannot install the function modules, turn to your SAP Basis team for help.

### Installation of THEO_CDC_ECC or THEO_CDC_S4

All transport requests for the custom function groups are provided in the installation directory of Board Connector, e.g., `C:\Program Files\BOARDConnector`. Make sure to install the correct transport request for your SAP system:

| SAP System | Function Group | Directory | | --- | --- | --- | | SAP ECC Systems | THEO_CDC_ECC | *C:\\Program Files\\BOARDConnector\\ABAP\\TableCDC\\THEO_CDC_ECC.zip* | | SAP S/4 Systems with SAP_BASIS Version < 7.55 | THEO_CDC_S4 | *C:\\Program Files\\BOARDConnector\\ABAP\\TableCDC\\THEO_CDC_S4.zip* | | SAP S/4 Systems with SAP_BASIS Version ≥ 7.55 | THEO_CDC_S4_755 | *C:\\Program Files\\BOARDConnector\\ABAP\\TableCDC\\THEO_CDC_S4_755.zip* |

The transport request needs to be imported into SAP by your SAP Basis team.\
The function groups /THEO/CDC_ECC and /THEO/CDC_S4 both contain the following function modules:

| Function Modules | Description | | --- | --- | | /THEO/CLEAR_LOGTAB | Clear entries of log tab up to a given sequence number | | /THEO/COUNT_LOGTAB_ENTRIES | Count log table entries | | /THEO/CREATE_LOG_TABLE | Function module for creating log tables | | /THEO/CREATE_TRIGGERS | Function module for creating DB triggers for CDC | | /THEO/DELETE_LOG_TABLE | Function module for deleting log tables | | /THEO/DELETE_TRIGGERS | Function module for deleting DB triggers for CDC | | /THEO/GET_DB | Get database system identifier | | /THEO/GET_INFO | Get package information | | /THEO/GET_TRIGGERS | Function module to retrieve triggers |

Note

Take a look at the README.pdf in the installation directory (e.g.,`C:\Program Files\BOARDConnector\ABAP\README.pdf`) before installing any custom function modules.

### Installation of /THEO/READ_TABLE

Install the custom function module /THEO/READ_TABLE, see [Function Module for Tables](../custom-function-module-for-table-extraction/#installation-of-theoread_table).

Note

Take a look at the README.pdf in the installation directory (e.g.,`C:\Program Files\BOARDConnector\ABAP\README.pdf`) before installing any custom function modules.

______________________________________________________________________

#### Related Links

- [Knowledge Base: Import an SAP Transport Request](../../../knowledge-base/import-an-sap-transport-request/)
- [Knowledge Base: Delta Mechanism of Table CDC](../../../knowledge-base/table-cdc-mechanism/)
- [Table CDC - Prerequisites](../../table-cdc/#prerequisites)

Before using the DeltaQ extraction type, an RFC destination has to be created in the SAP system. This page shows how to create and configure the RFC destination.

Follow the steps on this page in the following order:

1. [Create an RFC Destination of Type R/3](#create-an-rfc-destination-of-type-r3)
1. [Execute the Function Module RSAP_BIW_CONNECT_40](#execute-the-function-module-rsap_biw_connect_40)
1. [Delete the RFC Destination](#delete-the-rfc-destination)
1. [Create an RFC Destination of Type T](#create-an-rfc-destination-of-type-t)
1. [Execute the Function Module RSAS_RBWBCRL_STORE](#execute-the-function-module-rsas_rbwbcrl_store)
1. [Register the RFC Server](#register-the-rfc-server)
1. [qRFC Monitor (QOUT Scheduler)](#qrfc-monitor-qout-scheduler)

### Create an RFC Destination of Type R/3

1. Go to SAP transaction *SM59* to create an RFC destination of type *R/3*.
1. Enter a name in the field **RFC Destination**, e.g., *XTRACT01*. The name of the RFC Destination is needed again for later configuration.

### Execute the Function Module RSAP_BIW_CONNECT_40

Note

Executing the Function Module RSAP_BIW_CONNECT_40 can be performed on modifiable that the SAP systems.

The function module RSAP_BIW_CONNECT_40 creates a connection to a Business Information Warehouse. Go to SAP transaction *SE37* and execute the function module RSAP_BIW_CONNECT_40 with the following import parameters:

| Import Parameter | Example Value | Comment | | --- | --- | --- | | I_LANGU | EN | | | I_SLOGSYS | T90CLNT090 | Logical name of the source system. If you do not know this, look in table **T000** for the respective client (LOGSYS field). | | I_LOGSYS | XTRACT01 | | | I_STEXT | Xtract Destination | | | I_BASIC_IDOC | ZXTIDOC | Unique name of the RFC destinations. | | I_TSPREFIX | XT | Unique name of the RFC destinations. | | I_SAPRL | 700 | Automatically set by the SAP system. | | I_RESTORE | X | |

### Delete the RFC Destination

Go to SAP transaction *SM59* and delete the RFC destination of type *R/3* via **Detailed View > Menu > Delete**.

### Create an RFC Destination of Type T

1. Go to SAP transaction *SM59* to create an RFC destination of type *T=TCP/IP* that has the same name as the deleted RFC destination of type *R/3*.

1. Select the activation type **Registered Server Program**.

1. Set the following parameters:

   | Tab | Field | Example Value | Comment | | --- | --- | --- | --- | | Technical Settings | RFC Destination | XTRACT01 | | | Technical Settings | Connection Type | TCP/IP Connection | | | Technical Settings | Description 1 | Xtract Destination | | | Technical Settings | Activation Type | Registered Server Program | | | Technical Settings | Program ID | XTRACT01 | | | Technical Settings | Gateway Host | sap-erp-as05.example.com | Name or IP address of the SAP system. | | Technical Settings | Gateway service | sapgw00 | In the form sapgwnn, where nn is the SAP instance number (between *00* and *99*). | | Special Options | Serializer | Classic Serializer | Select the "Classic serializer". |

### Execute the Function Module RSAS_RBWBCRL_STORE

Go to SAP transaction *SE37* and execute the function module **RSAS_RBWBCRL_STORE** to activate the target system.

| Import Parameter | Example Value | Comment | | --- | --- | --- | | I_RBWBCRL | 700 | The current SAP system release number | | I_RLOGSYS | XTRACT01 | |

### Register the RFC Server

Note

Registering an RFC Server in SAP Releases is only necessary for SAP kernel version 720 and higher.

1. [Set the profile parameter *gw/acl_mode*](../../../knowledge-base/register-rfc-server-in-sap-releases-in-kernel-release-720-and-higher/#change-the-profile-parameter-gwacl_mode) to 0 (default is 1).
1. [Add the RFC Destination to the whitelist](../../../knowledge-base/register-rfc-server-in-sap-releases-in-kernel-release-720-and-higher/#define-a-whitelist-of-programs-at-the-sap-gateway) of programs that can register at the SAP Gateway.

For more information, refer to the [Knowledge Base Article: Register an RFC Server in SAP with Kernel Release 720 and higher](../../../knowledge-base/register-rfc-server-in-sap-releases-in-kernel-release-720-and-higher/).

### qRFC Monitor (QOUT Scheduler)

1. Go to SAP transaction *SMQS*.
1. Select the created RFC destination, e.g., *XTRACT01*.
1. Click **Register without activation** and set the parameter **Max.Verb.** to 10. Increase this value in case of parallel execution of several DeltaQ extractions types on the same RFC destination.

Note

For DeltaQ customizing errors, refer to the [DeltaQ Troubleshooting](../../../troubleshooting/#deltaq-troubleshooting).

Before using the OHS extraction type, an RFC destination has to be created in the SAP system. This page shows how to set up the RFC destination and SAP process chain.

Depending on the SAP release, OHS can be used as follows:

| SAP Release | SAP Object | Details | | --- | --- | --- | | BI < 7.0 | InfoSpoke | [InfoSpokes and Process Chains (BI < 7.0)](#infospokes-and-process-chains-bi-70) | | BI >= 7.0 | OHS-Destination | [OHS Destinations and Data Transfer Processes (BI >= 7.0)](#ohs-destinations-and-data-transfer-processes-bi-70) |

### Create an RFC destination

1. Go to SAP transaction *SM59* to create an RFC destination of type *TCP/IP* .
1. Select the activation type **Registered Server Program** .
1. Enter a name in the field **Program ID** , e.g., *XTRACT01*. The name of the Program ID is needed again for later configuration.

### InfoSpokes and Process Chains (BI < 7.0)

1. Go to SAP transaction *RSA1* to open the Administrator Workbench.
1. Navigate to **Tools > Open Hub Service > Infospoke** to create an InfoSpoke.
1. Store data source in the InfoSpoke, e.g. an ODS object or a cube.
1. Define an InfoSpoke for data extraction into an external system in the *Destination* tab.
1. Specify the RFC destination created in advance.
1. Fill in the columns to be transferred and, if necessary, a selection.
1. Save and activate the InfoSpoke.
1. Generate a process chain with transaction *RSA1* in the menu **Edit -> Process Chains**.
1. Activate **Start by API** in the variant for the process chain.
1. Insert the created InfoSpoke into the process chain.
1. Save and activate the process chain.

### OHS Destinations and Data Transfer Processes (BI >= 7.0)

1. Go to SAP transaction *RSA1* to open the Administrator Workbench.
1. Navigate to **Open Hub Destination** in the left tree and right-click on an InfoArea. Select **Create Open Hub Destination** in the context menu.
1. In the edit mode of the destination, set the *Destination Type* to **Third Party Tool** and select your RFC destination.
1. Save and activate the OHS destination.
1. Click on the newly created OHS destination in the middle tree of the InfoAreas and select **Create Data Transfer Process** to create a new data transfer process (DTP).
1. Save and activate the DTP. If necessary, change the extraction type from *Delta* to *Full* before activating) The arrangement of Destination, Transformations and DTP in the OHS tree is done afterwards.
1. Create a process chain that contains the new DTP.
1. Make sure that the planning option **Start Using Meta Chain or API** is selected in the process chain start variant.
1. Activate the process chain.

______________________________________________________________________

#### Related Links

- [SAP Note 2437637](https://launchpad.support.sap.com/#/notes/2437637)
- [SAP Note 1983356](https://launchpad.support.sap.com/#/notes/1983356)

Before using the DeltaQ extraction type, an RFC destination has to be created in the SAP system. This page shows how to create and configure the RFC destination.

Follow the steps on this page in the following order:

1. [Create an RFC Destination of Type R/3](#create-an-rfc-destination-of-type-r3)
1. [Execute the Function Module RSAP_BIW_CONNECT_40](#execute-the-function-module-rsap_biw_connect_40)
1. [Delete the RFC Destination](#delete-the-rfc-destination)
1. [Create an RFC Destination of Type T](#create-an-rfc-destination-of-type-t)
1. [Execute the Function Module RSAS_RBWBCRL_STORE](#execute-the-function-module-rsas_rbwbcrl_store)
1. [Register the RFC Server](#register-the-rfc-server)
1. [qRFC Monitor (QOUT Scheduler)](#qrfc-monitor-qout-scheduler)

### Create an RFC Destination of Type R/3

1. Go to SAP transaction *SM59* to create an RFC destination of type *R/3*.
1. Enter a name in the field **RFC Destination**, e.g., *XTRACT01*. The name of the RFC Destination is needed again for later configuration.

### Execute the Function Module RSAP_BIW_CONNECT_40

Note

Executing the Function Module RSAP_BIW_CONNECT_40 can be performed on modifiable that the SAP systems.

The function module RSAP_BIW_CONNECT_40 creates a connection to a Business Information Warehouse. Go to SAP transaction *SE37* and execute the function module RSAP_BIW_CONNECT_40 with the following import parameters:

| Import Parameter | Example Value | Comment | | --- | --- | --- | | I_LANGU | EN | | | I_SLOGSYS | T90CLNT090 | Logical name of the source system. If you do not know this, look in table **T000** for the respective client (LOGSYS field). | | I_LOGSYS | XTRACT01 | | | I_STEXT | Xtract Destination | | | I_BASIC_IDOC | ZXTIDOC | Unique name of the RFC destinations. | | I_TSPREFIX | XT | Unique name of the RFC destinations. | | I_SAPRL | 700 | Automatically set by the SAP system. | | I_RESTORE | X | |

### Delete the RFC Destination

Go to SAP transaction *SM59* and delete the RFC destination of type *R/3* via **Detailed View > Menu > Delete**.

### Create an RFC Destination of Type T

1. Go to SAP transaction *SM59* to create an RFC destination of type *T=TCP/IP* that has the same name as the deleted RFC destination of type *R/3*.

1. Select the activation type **Registered Server Program**.

1. Set the following parameters:

   | Tab | Field | Example Value | Comment | | --- | --- | --- | --- | | Technical Settings | RFC Destination | XTRACT01 | | | Technical Settings | Connection Type | TCP/IP Connection | | | Technical Settings | Description 1 | Xtract Destination | | | Technical Settings | Activation Type | Registered Server Program | | | Technical Settings | Program ID | XTRACT01 | | | Technical Settings | Gateway Host | sap-erp-as05.example.com | Name or IP address of the SAP system. | | Technical Settings | Gateway service | sapgw00 | In the form sapgwnn, where nn is the SAP instance number (between *00* and *99*). | | Special Options | Serializer | Classic Serializer | Select the "Classic serializer". |

### Execute the Function Module RSAS_RBWBCRL_STORE

Go to SAP transaction *SE37* and execute the function module **RSAS_RBWBCRL_STORE** to activate the target system.

| Import Parameter | Example Value | Comment | | --- | --- | --- | | I_RBWBCRL | 700 | The current SAP system release number | | I_RLOGSYS | XTRACT01 | |

### Register the RFC Server

Note

Registering an RFC Server in SAP Releases is only necessary for SAP kernel version 720 and higher.

1. [Set the profile parameter *gw/acl_mode*](../../../knowledge-base/register-rfc-server-in-sap-releases-in-kernel-release-720-and-higher/#change-the-profile-parameter-gwacl_mode) to 0 (default is 1).
1. [Add the RFC Destination to the whitelist](../../../knowledge-base/register-rfc-server-in-sap-releases-in-kernel-release-720-and-higher/#define-a-whitelist-of-programs-at-the-sap-gateway) of programs that can register at the SAP Gateway.

For more information, refer to the [Knowledge Base Article: Register an RFC Server in SAP with Kernel Release 720 and higher](../../../knowledge-base/register-rfc-server-in-sap-releases-in-kernel-release-720-and-higher/).

### qRFC Monitor (QOUT Scheduler)

1. Go to SAP transaction *SMQS*.
1. Select the created RFC destination, e.g., *XTRACT01*.
1. Click **Register without activation** and set the parameter **Max.Verb.** to 10. Increase this value in case of parallel execution of several DeltaQ extractions types on the same RFC destination.

Note

For DeltaQ customizing errors, refer to the [DeltaQ Troubleshooting](../../../troubleshooting/#deltaq-troubleshooting).

To use Board Connector you need an SAP connection user with sufficient authorization in SAP. Authorizations are assigned via authorization objects in SAP. Redirect this page to your SAP Basis administrators to get the relevant authorization objects for your SAP connection user.

The authorizations in the section [General authorization objects](#general-authorization-objects) are required to establish an SAP connection with the SAP application server. The required authorizations for each extraction type are listed in their respective section.

### SAP Authorization Profiles

Theobald Software collected and combined the necessary authorizations for all extractions types into SAP roles. You can download the SAP profiles and upload them to your SAP system:

| Extraction Type | SAP Role File | | --- | --- | | [General Authorization Objects](#general-authorization-objects) | [ZXTGENERAL.SAP](/board-connector/assets/files/sap_roles/ZXTGENERAL.SAP) | | [BAPI](#bapi) | [ZXTBAPI.SAP](/board-connector/assets/files/sap_roles/ZXTBAPI.SAP) | | [BW Cube](#bw-cube-bw-query) | [ZXTBWCUBE.SAP](/board-connector/assets/files/sap_roles/ZXTBWCUBE.SAP) | | [BW Hierarchy](#bw-hierarchy) | [ZXTBWHIERARCHY.SAP](/board-connector/assets/files/sap_roles/ZXTBWHIERARCHY.SAP) | | [ODP (Operational Data Provisioning)](#odp) | [ZXTODP.SAP](/board-connector/assets/files/sap_roles/ZXTODP.SAP) | | [OHS (Open Hub Services)](#ohs) | [ZXTOHS.SAP](/board-connector/assets/files/sap_roles/ZXTOHS.SAP) | | [Query](#query) | [ZXTQUERY.SAP](/board-connector/assets/files/sap_roles/ZXTQUERY.SAP) | | [Report](#report) | [ZXREPORT.SAP](/board-connector/assets/files/sap_roles/ZXREPORT.SAP) | | [Table](#table) | [ZXTABLE.SAP](/board-connector/assets/files/sap_roles/ZXTABLE.SAP) | | [Table CDC](#table-cdc) | [ZXTABLECDC.SAP](/board-connector/assets/files/sap_roles/ZXTABLECDC.SAP) | | [DeltaQ](#deltaq) | [ZXTDELTAQ.SAP](/board-connector/assets//files/sap_roles/ZXTDELTAQ.SAP), [DELTAQ_CUSTOMIZING_CHECK](/board-connector/assets/files/sap_roles/DELTAQ_CUSTOMIZING_CHECK.SAP) |

Note

If you still get an authorization error, ask SAP Basis to record an ST01-/ or SU53-authorization trace in SAP. This trace shows which authorizations objects are missing.

### General Authorization Objects

The following authorization objects are required to establish a connection to SAP.

Necessary SAP authorizations

```text
S_RFC           RFC_TYPE=FUGR; RFC_NAME=SYST; ACTVT=16
S_RFC           RFC_TYPE=FUGR; RFC_NAME=SRFC; ACTVT=16
S_RFC           RFC_TYPE=FUGR; RFC_NAME=RFC1; ACTVT=16
S_RFC           RFC_TYPE=FUGR; RFC_NAME=OCS_CRM; ACTVT=16

```

[Download SAP profile for general authorization](/board-connector/assets/files/sap_roles/ZXTGENERAL.SAP)

### BAPI

Necessary SAP authorizations

```text
S_RFC            ACTVT=16; RFC_TYPE=FUGR; RFC_NAME=DDIF_FIELDINFO_GET, SDIFRUNTIME     

```

[Download SAP profile for BAPI Extractions](/board-connector/assets/files/sap_roles/ZXTBAPI.SAP)

### BW Cube / BW Query

Authorizations for the underlying Queries, Cubes, InfoAreas and analysis need to be assigned via:

- `S_RS_COMP`
- `S_RS_COMP1`
- `S_RS_AUTH`

Necessary SAP authorizations

```text
S_RFC            RFC_TYPE=FUGR; RFC_NAME=RSOB; ACTVT=16
S_RFC            RFC_TYPE=FUGR; RFC_NAME=RRX1; ACTVT=16
S_TABU_NAM       ACTVT=03; TABLE=RSRREPDIR
S_TABU_NAM       ACTVT=03; TABLE=RSZGLOBV
S_TABU_NAM       ACTVT=03; TABLE=RSADMINC

```

Necessary SAP authorizations

```text
S_RFC            RFC_TYPE=FUGR;RFC_NAME=SYST;ACTVT=16;type=RF;name=RFCPING;
S_RFC            RFC_TYPE=FUGR; RFC_NAME=RSOBJS_RFC_INTERFACE; ACTVT=16; type=RF;name=RSOBJS_GET_NODES;
S_RFC            RFC_TYPE=FUGR;RFC_NAME=RSAO_CORE;ACTVT=16;type=RF;name=RSAO_BICS_SESSION_INITIALIZE
S_RFC            RFC_TYPE=FUGR;RFC_NAME=RSBOLAP_BICS_CONSUMER;ACTVT=16;type=RF;name=BICS_CONS_CREATE
S_RFC            RFC_TYPE=FUGR;RFC_NAME=RSBOLAP_BICS_PROVIDER;ACTVT=16;type=RF;name=BICS_PROV_OPEN;
S_RFC            RFC_TYPE=FUGR;RFC_NAME=RSBOLAP_BICS_PROVIDER_VAR;ACTVT=16;type=RF;name=BICS_PROV_VA
S_ADMI_FCD       S_ADMI_FCD=PADM;

```

Necessary SAP authorizations

```text
S_TABU_NAM       ACTVT=03; TABLE=DD03L

```

Alternatively, you can assign the SAP role template `S_RS_RREPU`.

[Download SAP profile for BW Cube / BW Query](/board-connector/assets/files/sap_roles/ZXTBWCUBE.SAP)

### BW Hierarchy

Necessary SAP authorizations

```text
S_RFC          RFC_TYPE=FUNC, FUGR; RFC_NAME=RSNDI_SHIE; ACTVT=16
S_RFC          RFC_TYPE=FUNC, FUGR; RFC_NAME=BAPI_IOBJ_GETDETAIL; ACTVT=16
S_RFC          RFC_TYPE=FUNC, FUGR; RFC_NAME=DDIF_FIELDINFO_GET; ACTVT=16
S_RFC          RFC_TYPE=FUNC, FUGR; RFC_NAME=RFC1; ACTVT=16
S_RFC          RFC_TYPE=FUNC, FUGR; RFC_NAME=RFC_GET_FUNCTION_INTERFACE; ACTVT=16
S_RFC          RFC_TYPE=FUNC, FUGR; RFC_NAME=RFC_READ_TABLE; ACTVT=16
S_RFC          RFC_TYPE=FUNC, FUGR; RFC_NAME=RSBAPI_IOBJ; ACTVT=16 
S_RFC          RFC_TYPE=FUNC, FUGR; RFC_NAME=RSNDI_SHIE; ACTVT=16
S_RFC          RFC_TYPE=FUNC, FUGR; RFC_NAME=SDIFRUNTIME; ACTVT=16
S_RFC          RFC_TYPE=FUNC, FUGR; RFC_NAME=SDTX; ACTVT=16
S_RFC          RFC_TYPE=FUNC, FUGR; RFC_NAME=SYST; ACTVT=16
S_RS_ADMWB     RSADMWBOBJ=INFOOBJECT; ACTVT=03
S_TABU_DIS     ACTVT=03; DICBERCLS=BWC
S_TABU_DIS     ACTVT=03; DICBERCLS=BWG
S_TABU_NAM     ACTVT=03; TABLE=/BIC/*
S_TABU_NAM     ACTVT=03; TABLE=ENLFDIR
S_TABU_NAM     ACTVT=03; TABLE=RSHIEDIR

```

[Download SAP profile for BW Hierarchy](/board-connector/assets/files/sap_roles/ZXTBWHIERARCHY.SAP)

### ODP

For a complete and detailed list of authorization objects refer to [SAP Note 2855052](https://launchpad.support.sap.com/#/notes/2855052) - Authorizations required for ODP Data Replication API 2.0.

Necessary SAP authorizations

```text
S_TABU_NAM       ACTVT=03; TABLE=TCURX

```

[Download SAP profile for ODP](/board-connector/assets/files/sap_roles/ZXTODP.SAP)

### OHS

Alternatively, you can assign the SAP role template `S_BI-WHM_RFC`.

Necessary SAP authorizations

```text
S_RFC      RFC_TYPE=FUGR; RFC_NAME=RSB3RD; ACTVT=16
S_RFC      RFC_TYPE=FUGR; RFC_NAME=SDTX; ACTVT=16
S_RFC      RFC_TYPE=FUGR; RFC_NAME=BAPT; ACTVT=16
S_RFC      RFC_TYPE=FUGR; RFC_NAME=BATG; ACTVT=16
S_RFC      RFC_TYPE=FUGR; RFC_NAME=RSPC_API; ACTVT=16
S_TABU_DIS RC=0 ACTVT=03; DICBERCLS=&NC& 
S_RS_PC    RSPCCHAIN=*;RSPCAPPLNM=*; RSPCPART=DEFINITION; ACTVT=03
S_RS_PC    RSPCCHAIN=*;RSPCAPPLNM=*; RSPCPART=RUNTIME; ACTVT=16
S_CTS_ADMI CTS_ADMFCT=TABL
S_RS_DTP   RSTLDTPSRC=CUBE; RSSTDTPSRC=*; RSONDTPSRC=0D_DECU; RSTLDTPTGT=DEST; RSSTDTPTGT=*; ACTVT=16
S_BTCH_ADM BTCADMIN=Y
S_BTCH_JOB JOBGROUP=*; JOBACTION=RELE
S_RS_TR    RSTLOGOSRC=CUBE; RSSTTRSRC=*; RSOBJNMSRC=0D_DECU; RSTLOGOTGT=DEST; RSSTTRTGT=' '; RSOBJNMTG=*; ACTVT=16
S_RS_AUTH  BIAUTH=0BI_ALL
S_ADMI_FCD S_ADMI_FCD=ST0R

```

[Download SAP profile for OHS](/board-connector/assets/files/sap_roles/ZXTOHS.SAP)

### Query

Necessary SAP authorizations

```text
S_RFC            RFC_TYPE=FUGR; RFC_NAME=AQRC; ACTVT=16 

```

[Download SAP profile for SAP Query](/board-connector/assets/files/sap_roles/ZXTQUERY.SAP)

### Report

Necessary SAP authorizations

```text
S_RFC            RFC_TYPE=FUGR; RFC_NAME=ZXTRACTABAP; ACTVT=16
S_TABU_NAM       ACTVT=03; TABLE=TRDIR, TRDIRT, TSTC, VARID
S_GUI            ACTVT=61 
S_TABU_DIS       ACTVT=03; DICBERCLS=&NC& 
S_TABU_DIS       ACTVT=03; DICBERCLS=SS
S_BTCH_ADM       BTCADMIN=Y
S_BTCH_JOB       JOBGROUP=*; JOBACTION=RELE

```

Note

The necessary transport request for function group *ZXTRACTABAP* is located in the following path: `C:\Program Files\[XtractProduct]\ABAP\Report\Z_XTRACT_IS_REMOTE_REPORT-transport.zip` of the default installation.

[Download SAP profile for Report](/board-connector/assets/files/sap_roles/ZXREPORT.SAP)

To execute a report with Board Connector, the SAP connection user needs explicit authorization to execute the report. Authorization can be granted using one of the following methods:

- [Assign the authorization object Z_TS_PROG](../../../knowledge-base/create-the-custom-authority-object-z-ts-prog/)
- [Assign an authorization group](../../../knowledge-base/authorize-access-to-specific-reports/)

### Table

Necessary SAP authorizations

```text
S_RFC            ACTVT=16; RFC_TYPE=FUGR; RFC_NAME=SDTX, SDIFRUNTIME, /THEO/READ_TABLE                   
S_TABU_DIS       ACTVT=03; DICBERCLS=XXXX
S_TABU_NAM       ACTVT=03; TABLE=DD02V, DD17S, DD27S, ENLFDIR
S_DSAUTH         ACTVT=16;    

```

XXXX (stands for a placeholder) is the authorization group for the table. To determine, which authorization group belongs to which table, check the table TDDAT - Maintenance Areas for Tables. If the table is not listed, the authorization group is &NC&. For authorizing specific tables use authorization object S_TABU_NAM instead of S_TABU_DIS.

Note

The transport request for function group */THEO/READ_TABLE* and *Z_THEO_READ_TABLE* is located in the following path: `C:\Program Files\[XtractProduct]\ABAP\Table` of the default installation.

Additional options:

Necessary SAP authorizations

```text
S_BTCH_ADM       BTCADMIN=Y
S_BTCH_JOB       JOBGROUP=*; JOBACTION=RELE

```

Necessary SAP authorizations

```text
S_RFC            RFC_TYPE=FUNC; RFC_NAME=EM_GET_NUMBER_OF_ENTRIES; ACTVT=16  

```

Necessary SAP authorizations

```text
S_TABU_NAM       ACTVT=03; TABLE=TCURX

```

[Download SAP profile for Table](/board-connector/assets/files/sap_roles/ZXTABLE.SAP)

### Table CDC

Necessary SAP authorizations

```text
S_RFC            ACTVT=16; RFC_TYPE=FUGR, FUNC; RFC_NAME=SDTX, SDIFRUNTIME, /THEO/CDC_*, /THEO/READ_TABLE            
S_TABU_DIS       ACTVT=02, 03; DICBERCLS=*
S_TABU_CLI       CLIIDMAINT=X 
S_TABU_NAM       ACTVT=03; TABLE=DD02V, D17S, D27S, ENLFDIR
S_DEVELOP        ACTVT=02; DEVCLASS=$TMP; OBJNAME=ZTSCDC_*; OBJTYPE=*; P_GROUP=*

```

XXXX (stands for a placeholder) is the authorization group for the source table. To determine, which authorization group belongs to which table, check the table TDDAT - Maintenance Areas for Tables. If the table is not listed, the authorization group is &NC&. For authorizing specific tables use authorization object S_TABU_NAM instead of S_TABU_DIS.

Note

The transport requests for the required function groups */THEO/READ_TABLE* are located in `C:\Program Files\[XtractProduct]\ABAP\TableCDC` and `C:\Program Files\[XtractProduct]\ABAP\Table`.

[Download SAP profile for Table CDC](/board-connector/assets/files/sap_roles/ZXTABLECDC.SAP)

### DeltaQ

Necessary SAP authorizations

```text
S_RFC           RFC_TYPE=FUGR; RFC_NAME=SUSR; ACTVT=16  
S_RFC           RFC_TYPE=FUNC; RFC_NAME=RFC_GET_SYSTEM_INFO; ACTVT= 16 
S_ADMI_FCD      S_ADMI_FCD=NADM
S_TABU_DIS      ACTVT = 02; DICBERCLS=SA
S_TABU_DIS      ACTVT = 03; DICBERCLS=SA
S_TABU_NAM      ACTVT = 02; TABLE=EDIPOA
S_TABU_NAM      ACTVT = 03; TABLE=EDIPOA

```

Necessary SAP authorizations

```text
S_RFC            RFC_TYPE=FUGR; RFC_NAME=SDIFRUNTIME; ACTVT=16 
S_RFC            RFC_TYPE=FUGR; RFC_NAME=RSAG; ACTVT=16 
S_TABU_DIS       ACTVT=03; DICBERCLS=SS                                                
S_TABU_DIS       ACTVT=03; DICBERCLS=SC                                               
S_IDOCDEFT       EDI_TCD=WE30; ACTVT=01; EDI_CIM=*; EDI_DOC=*                            
S_IDOCDEFT       EDI_TCD=WE30; ACTVT=03; EDI_CIM=*; EDI_DOC=*   

```

Necessary SAP authorizations

```text
S_RFC           RFC_TYPE=FUGR; RFC_NAME=SDIFRUNTIME; ACTVT=16
S_TABU_DIS      ACTVT=03; DICBERCLS=SS                                 
S_TABU_DIS      ACTVT=03; DICBERCLS=SC                                               
S_IDOCDEFT      EDI_TCD=WE30; ACTVT=02; EDI_CIM=*; EDI_DOC=*

```

Necessary SAP authorizations

```text
S_RFC            RFC_TYPE=FUGR; RFC_NAME=EDI1; ACTVT=16
S_RFC            RFC_TYPE=FUGR; RFC_NAME=BATG; ACTVT=16
S_RFC            RFC_TYPE=FUGR; RFC_NAME=EDIMEXT; ACTVT=16 
S_RFC            RFC_TYPE=FUGR; RFC_NAME=ARFC; ACTVT=16 
S_RFC            RFC_TYPE=FUGR; RFC_NAME=ERFC; ACTVT=16 
S_RFC            RFC_TYPE=FUGR; RFC_NAME=EDIN; ACTVT=16 
S_RFC            RFC_TYPE=FUGR; RFC_NAME=/BIC/*; ACTVT=16 
S_RFC            RFC_TYPE=FUGR; RFC_NAME=/BI0/*; ACTVT=16
S_RFC            RFC_TYPE=FUGR; RFC_NAME=RSAK; ACTVT=16
S_RFC            RFC_TYPE=FUGR; RFC_NAME=EDIW; ACTVT=16
S_RFC            RFC_TYPE=FUGR; RFC_NAME=SDTX; ACTVT=16
S_RFC            RFC_TYPE=FUGR; RFC_NAME=EDIMEXT; ACTVT=16
S_RFC            RFC_TYPE=FUGR; RFC_NAME=SYSU; ACTVT=16
S_RFC            RFC_TYPE=FUGR; RFC_NAME=RSC1; ACTVT=16
S_RFC            RFC_TYPE=FUNC; RFC_NAME=RSAP_REMOTE_HIERARCHY_CATALOG;  ACTVT=16
S_RFC            RFC_TYPE=FUNC; RFC_NAME=RSA1_OLTPSOURCE_GET_ALL;  ACTVT=16
S_RFC            RFC_TYPE=FUNC; RFC_NAME=RSA1_OLTPSOURCE_GET_SELECTIONS;  ACTVT=16
S_RFC_ADM        ACTVT=03; RFCDEST=XTRACT*; RFCTYPE = T; ICF_VALUE=* 
B_ALE_RECV       EDIMES=RSRQST
S_IDOCMONI       ACTVT=03; EDI_DIR=*; EDI_MES=*; EDI_PRN=*; EDI_PRT=*; EDI_TCD=WE*
S_IDOCDEFT       EDI_TCD=WE30; ACTVT=02; EDI_CIM=*; EDI_DOC=*
S_IDOCDEFT       EDI_TCD=WE30; ACTVT=03; EDI_CIM=*; EDI_DOC=*
S_TABU_DIS       ACTVT=03; DICBERCLS=SS                                   
S_TABU_DIS       ACTVT=03; DICBERCLS=SC
S_TABU_DIS       ACTVT=03; DICBERCLS=&NC&  
S_BTCH_ADM       BTCADMIN=Y          
S_BTCH_JOB       JOBGROUP=*; JOBACTION=RELE
S_SPO_DEV        SPODEVICE=*
S_RO_OSOA        OLTPSOURCE=*; OSOAAPCO=*; OSOAPART=DATA; ACTVT=03;  | Only in SAP Releases  7.0 and higher

```

[Download SAP profile for DeltaQ](/board-connector/assets/files/sap_roles/ZXTDELTAQ.SAP)

[Download SAP profile for DeltaQ Customizing Check](/board-connector/assets/files/sap_roles/DELTAQ_CUSTOMIZING_CHECK.SAP)

______________________________________________________________________

#### Related Links

- [SAP Help: Role Administration](https://help.sap.com/doc/saphelp_nw74/7.4.16/en-us/52/6714a9439b11d1896f0000e8322d00/content.htm)
- [SAP ONE Support Launchpad](https://launchpad.support.sap.com/#/notes/2855052)

This page shows how to use the Table extraction type.\
The Table extraction type can be used to extract data from SAP Tables and Views.

### Supported SAP Objects

- Transparent tables
- Views
- ABAP CDS Views (without parameters)
- HANA CDS Views
- Pool tables (joining not possible)
- Cluster tables (joining not possible)

### RFC_READ_TABLE Restrictions

Especially with older SAP releases you may encounter a few restrictions when using the SAP standard function module (RFC_READ_TABLE) for table extraction:

- The overall width of all columns to be extracted must not exceed 512 bytes.
- It is not possible to extract data from tables that contain one or more columns of the data type f (FLTP, floating point), DEC (decimal, e.g. for percentage) or x (RAW, LRAW).
- Poor extraction performance with larger tables. Can cause also duplicates.
- Depending on the SAP version there may be other restrictions.

When facing restrictions, install the Theobald Software custom function module [/THEO/READ_TABLE](../setup-in-sap/custom-function-module-for-table-extraction/#installation-of-theoread_table) on your SAP system.

Warning

**Converting issues**\
Error while converting value '\*.0' of row 1530, column 3.\
The SAP standard module *RFC_READ_TABLE* for table extraction can only extract the ABAP data type DEC to a limited extent. This leads to the mentioned example error during extraction. Use the function module */THEO/READ_TABLE*.

### Prerequisites

- A connection to an SAP system is available, see [SAP Connection](../sap-connection/).
- The SAP user has sufficient user rights, see [SAP Authority Objects](../setup-in-sap/sap-authority-objects/#table).

Warning

**Missing Authorization.**\
To use the Table extraction type, access to the designated authority objects (RFC) in SAP must be available. Adjust [SAP Authority Objects](../setup-in-sap/sap-authority-objects/#table) accordingly.

### Create a Table Extraction

1. In the main window of the Designer, click **[New]** to create a new extraction. The window "Create Extraction" opens.
1. Select an [SAP Connection](../sap-connection/) of type **RFC** from the drop-down menu **Source**.
1. Enter a unique name for your extraction.
1. Select the extraction type **Table**.
1. Click **[OK]**. The main window of the extraction type opens automatically.

The majority of the functions of the extraction type can be accessed in the main window.

### Look up an SAP Table

1. In the main window of the extraction type, click **[Add]** to add a table. The window "Table Lookup" opens.
1. In the field **Table Name**, enter the name of the table to extract . Use wildcards (\*) if needed.
1. Click **[]** . Search results are displayed.
1. Select a table and click **[OK]**.

All relevant metadata information of the table is retrieved from SAP. The application returns to the main window of the extraction type.

### Define the Table Extraction Type

The Table extraction type offers the following options for table extractions:

1. Select the columns you want to extract. By default all columns are selected. Deselect the columns you do not want to extract.
1. Optional: Define a [WHERE clause](where-clause/) or a [HAVING clause](having-clause/) to filter table records. By default all data is extracted.
1. Optional: Join two or more tables and extract the result of the join. For more information, see [Table Joins](table-join/).
1. Click **[Load live preview]** to display a live preview of the first 100 records.
1. Check the [Extraction Settings](settings/) and the [General Settings](general-settings/) before running the extraction.
1. Click **[OK]** to save the extraction type.

You can now run the extraction, see [Run Extractions](../run-extractions/).

______________________________________________________________________

#### Related Links

- [Knowledge Base Article: Delta Table Extraction](../../knowledge-base/delta-table-extraction/)
- [Knowledge Base Article: Read data from Cluster Fields in Tables PCL1 and PCL2 (Payroll)](../../knowledge-base/read-data-from-cluster-fields-in-the-tables-pcl1-and-pcl2-payroll/)

Runtime parameters are are placeholders for values that are passed at runtime, see [Extraction Parameters - Custom](../../parameters/extraction-parameters/#custom). They can be created in context of using the [WHERE Clause](../where-clause/).

## Create Runtime Parameters

There are two types of runtime parameters:

- [Scalar parameters](#scalar-parameters) represent a single value.
- [List parameters](#list-parameters) represent multiple values.

### Scalar Parameters

Follow the steps below to create a scalar runtime parameter:

1. Open the *Edit Runtime Parameters* tab.

1. Click **[Add Scalar]** to define scalar parameters to be used as placeholders for actual values. The placeholders need to be populated with actual values at runtime.

   Tip

   Parameter0..-n is the default naming for the added parameter. You can enter a name of your choice.

1. Select one of the following data types from the drop-down menu. The data types may correlate to SAP data types.

   | Type | Description | | --- | --- | | *Text* | Can be used for any type of SAP selection field. | | *Number* | Can be used for numeric SAP selection fields. | | *Flag* | Can only be used for SAP selection fields THAT require an ‘X’ (true) or a blank ‘‘ (false) as input value. |

1. Click **[OK]** to confirm.

The runtime parameters are now available in the extraction type.

### List Parameters

Follow the steps below to create a list runtime parameter:

1. In the main window of the component click **Edit runtime parameters**. The window “Edit Runtime Parameters” opens.

1. Click **[Add List]** to define list parameters that contain multiple values separated by commas e.g., 1,10 or “1”, “10”. The placeholders need to be populated with actual values at runtime.

   Tip

   Parameter0..-n is the default naming for the added parameter. You can enter a name of your choice.

1. Click **[OK]** to confirm.

The runtime parameters are now available in the extraction type.

## Use Runtime Parameters in the WHERE Clause Editor

1. Navigate to the WHERE clause tab in the main window of the extraction and open the WHERE clause editor.
1. Add a new WHERE clause criteria that uses the **[Default with Parameter]** template.
1. Click the *Parameter* component. A drop-down list that displays all available parameters opens. Select a parameter from the list.
1. To test the WHERE clause, click **[Load live preview]**. Provide parameter values when prompted.

## Use Runtime Parameters in the WHERE Clause Text Mode

Add an @ symbol before a value to mark it as a runtime parameter, e.g., enter `@myParameter` instead of a value. Example: `T001W~WERKS BETWEEN @PlantLow AND @PlantHigh`.

Pass values during runtime, see [Extraction Parameters - Custom](../../parameters/extraction-parameters/#custom).

This page contains an overview of the settings in the window "General Settings".\
To open the general settings, click **General Settings** in the main window of the extraction type.

### Misc. Tab

The *Misc.* tab covers cache settings, column encryption and keywords of an extraction type.

#### Cache results

This option can be neglected. Board Connector always uses the result cache, because Board always requests the results twice.

#### Keywords

One or more keywords (tags) can be assigned to an extraction. Keywords can be entered directly in the keyword field. You can use these keywords to filter extractions in the "Search Extractions" window. To open the "Search Extractions" window, click **[ Search]** in the main window of the Designer.

Tip

To add keywords to multiple extractions at once, select the extractions in the main window of the Designer.\
Right-click + **Add/Remove keywords** opens the window "Add/Remove Keywords To/From Multiple Extractions".

### Security Tab

Restrict user access to the extraction. For more information, see [Restrict Designer Access](../../access-restrictions/restrict-designer-access/).

### CSV Tab

The *CSV* tab covers data and date formatting.

#### Column Name Style

Defines the style of the column name. Following options are available:

| Option | Description | | --- | --- | | **Code** | The SAP technical column name is used as column name in the destination e.g. MAKTX. | | **PrefixedCode** | The SAP technical column name is prefixed by SAP object name and the tilde character e.g., MAKT~MAKTX | | **CodeAndText** | The SAP technical column name and the SAP description separated by an underscore are used as column name in the destination e.g., MAKTX_Material Description (Short Text) | | **TextAndCode** | The SAP description and the SAP technical column name description separated by an underscore are used as column name in the destination e.g., Material Description (Short Text)\_MAKTX |

#### Date Conversion

When **Convert dates** is active, the following date conversions apply:

| Option | Description | | --- | --- | | **Year 0** | Converts the SAP date 00000000 to the entered value. | | **Year 9999** | Converts the SAP date 9999XXXX to the entered value. | | **Invalid values** | If an SAP date cannot be converted to a valid date format, the invalid date is converted to the entered value. NULL is supported as a value. |

### Columns Order Tab

The "Columns Order" feature enables users to rearrange the order of result columns when running an extraction. To rearrange the result order, assign indexes to the available result columns. Index 0 defines the first column in the result set, index 1 the second columns, etc.

| Option | Description | | --- | --- | | **Enabled** | When this option is active, the defined column order is applied when running the extraction. | | **Swap** | Swaps the index of 2 columns. All other columns keep their indexes. | | **Insert** | Inserts the selected column into the selected index. All other indexes are recalculated. | | **Reset default** | Restores the original column order. |

The HAVING clause can be used to filter groups of rows, see [SAP ABAP Documentation: SELECT-HAVING](https://help.sap.com/doc/abapdocu_750_index_htm/7.50/en-US/abaphaving_clause.htm).

### Create a HAVING Clause

The following example shows how many materials are assigned to a material type (MTART). After applying the HAVING Clause, the preview shows only the material types with more than 10 materials assigned.

1. Select an aggregate function for a field you want to use in the HAVING-clause.

   Note

   Aggregate functions are only supported for numeric field types, which is why the field BRGEW (Gross Weight) is used in the example.

1. Navigate to tab *HAVING Clause* .

1. Enter a HAVING Clause using the [syntax](#having-clause-syntax) in accordance to your SAP Release, e.g., `COUNT(BRGEW) > 10`.

1. Click **[Load live preview]** to display the results in the *Preview* section.

Note

When fields with the same name exist in different tables, the field names must be formatted as [Table]~[Column], e.g., MAKT~MATNR. This can be the case with [table joins](../table-join/).

### HAVING Clause Syntax

With regard to syntax and formulas, the same rules apply as for the [WHERE Clause](../where-clause/#where-clause-syntax). Depending on your SAP release the syntax may varry, see [SAP Help - ABAP SQL - SQL Expressions sql_exp](https://help.sap.com/doc/abapdocu_latest_index_htm/latest/en-US/abenabap_sql_strictmode_754.htm) .

This section contains an overview and description of the *Tables and Fields* tab in the main window of the Table extraction type.

### Tables

The subsection *Tables* lists all SAP Tables and Views that were added to the extraction type.

- Click **[Add]** to add an SAP Table or View to the extraction type.
- Click **[Remove]** to remove an SAP Table or View from the extraction type.

Tip

Select an SAP Table to define the corresponding settings, e.g, output columns, WHERE clause, etc. You can switch between the SAP Tables.

### Fields

The subsection *Fields* displays all columns in the selected SAP Table or View.

The Table extraction type imports and highlights the dedicated indexes of an SAP Table, such as primary key and/or sorting options.

Note

Use the indicated fields for filtering increases performance when applying WHERE-clause.

| Columns | Description | | --- | --- | | / | Defines whether or not a table column is added to the output of the extraction type. By default, all table columns are extracted. | | **Name** | Name of a column in the SAP Table. The column name can be filtered. | | **Description** | Description of the column. The column description can be filtered. | | **Aggregate Function** | Applies [aggregate functions](#aggregate-functions) to numeric fields. | | **Conv.** | Activates SAP [conversion routines](#conversion-routines). |

#### Aggregate Functions

Aggregate functions are only available for numeric field data types, e.g., INT, FLOAT, DECIMAL. The following aggregation functions are available:

- *None*: No aggregation
- *MEAN*: Average
- *COUNT*: Number
- *MAX*: Maximum
- *MIN*: Minimum
- *SUM*: Total

#### Conversion Routines

Conversion routines are stored in the Data Dictionary that is used for the respective fields. Activating the conversion routines in SAP leads to significant performance decrease. After the conversion, the value is displayed as it appears in the transaction *SE16N* in the SAP GUI.

Examples:

- Language keys, e.g., `D` in the database becomes `DE` after conversion
- Project numbers, e.g., `T000012738GT` becomes `T/12738/GT` after conversion.

| State | Description | Safety | | --- | --- | --- | | | no conversion routines selected | - | | | conversion routines enabled requires the function module Z_XTRACT_IS_TABLE_COMPRESSION | no data type safety | | | conversion routines enabled requires the function module [/THEO/READ_TABLE](../../setup-in-sap/custom-function-module-for-table-extraction/) | assured data type safety |

### Preview

The subsection *Preview* displays a real-time preview of the first 100 fields of the SAP table when clicking the button **[Load live preview]**.

Note

The use non-indexed fields in the WHERE-clause can lead to timeouts during the preview of large tables.

### Buttons

**[Load live preview]**\
Allows a real-time preview of the extraction data without executing the extraction.\
You can also preview the data with aggregation functions.

**[Count rows]**\
Returns the number of rows/data records of an extraction, considering the WHERE and HAVING clauses stored.

**[Refresh metadata]**\
A new lookup is performed on the selected table(s). Existing mappings and field selections are retained, which is not the case when the table is added again.\
It can be necessary to refresh the metadata when a table has been adjusted in SAP, when another source system is assigned to the extraction type, or when the source system was updated. In such cases, data inconsistencies can occur that are resolved by this function.

This page contains an overview of the extraction settings in the Table extraction type.\
The extraction settings are located in the tab *Extraction Settings*.

Warning

**Could not load list of available function modules because permission for table ENLFDIR is missing**\
This warning appears if a technical SAP user does not have authorization rights to access the SAP table *ENLFDIR*. Confirm the warning as the user can **still** adjust the extraction settings.

### Extraction Settings

#### Package Size

The extracted data is split into packages of the defined size. The default value is 50000 lines.\
A package size between 20000 and 50000 is advisable for large amounts of data. 0 means no packaging. Not using packaging can lead to an RFC timeout for large data extractions.

Warning

**RFC_ERROR_SYSTEM_FAILURE - No more storage space available for extending an internal table**\
To avoid a memory overflow on the SAP source system and to avoid huge overheads, choose a package size that suits your memory capacity.

#### Row Limit

Specifies the maximum number of extracted records. 0 extracts all data. You can use this option to perform tests with a small amount of data by entering a row limit of e.g., 1000.

### Function Module

Specifies the name of the function module used for data extraction. This field is filled automatically depending on what function modules are installed on your SAP system. Custom function modules are supported.

The following function modules can be used to extract tables:

- RFC_READ_TABLE (TAB512)
- /BODS/RFC_READ_TABLE (TAB2048)
- /SAPDS/RFC_READ_TABLE (TAB2048)
- /BODS/RFC_READ_TABLE2
- /SAPDS/RFC_READ_TABLE2
- Z_THEO_READ_TABLE
- [/THEO/READ_TABLE](/board-connector/documentation/setup-in-sap/custom-function-module-for-table-extraction) (recommended)

Warning

**Duplicates in the target environment.**\
The SAP standard modules for table extraction do not have pointers for table fields. In larger tables this may cause low performance and duplicates in the target environment. Use the function module [THEO/READ_TABLE](../../setup-in-sap/custom-function-module-for-table-extraction/#installation-of-theoread_table) from Theobald Software to ensure smooth extractions.

Note the necessary [SAP Authority Objects](../../setup-in-sap/sap-authority-objects/#table):

```text
S_TABU_NAM ACTVT=03; TABLE=ENLFDIR

```

### Extract Data in Background Job

If *Background job timeout (seconds)* checkbox is activated, the table extraction is executed as a background job in SAP. This setting is optional and is supported in combination with function module THEO/READ_TABLE or Z_THEO_READ_TABLE version 2.0. Activate the setting *Background job timeout (seconds)* for long-running extractions with a large amounts of data that may run into a timeout error (“Time limit exceeded”), when using the foreground mode.

Tip

The extraction jobs can be found in the SAP JobLog (**SM37**) under the JobName *theo_read_table*.

Warning

**Shared Memory ran out of memory!**\
If this error message pops up when running an extraction in the background, adjust the size of the Shared Memory. SAP recommends a Shared Memory size of 800MB~1.5GB for a production/test system or 2GB~4GB for S/4 systems, see [SAP Support: How to solve SYSTEM_NO_SHM_MEMORY runtime error](https://ga.support.sap.com/dtp/viewer/#/tree/1080/actions/12107).

### Advanced Settings

#### Background Job Timeout (seconds)

Sets a timeout period for extractions that run in background mode.\
The default value is 180 seconds. The maximum timeout value is 3600 seconds.

Note

The background job timeout setting only takes effect if the extractions run in background mode using [/THEO/READ_TABLE](../../setup-in-sap/custom-function-module-for-table-extraction/).

#### Adjust Currency Decimals

The default number of decimal places for a currency in the SAP database is 2 decimals. Currencies that do not have decimals are also stored in this format, e.g. JPY, VND, KRW, etc.

Example:

| Currency | Actual Amount | Amount stored in SAP database | | --- | --- | --- | | JPY | 100 | 1.00 | | KRW | 10000 | 100.00 |

When extracting currencies with no decimals, the amount stored in SAP is returned e.g., 100 JPY are extracted as 1.00. To correct the decimal placement of the extracted data, activate **Adjust Currency Decimals**. If **Adjust Currency Decimals** is active, currencies without decimals are multiplied by a factor that balances out the decimals.

**Adjust Currency Decimals** also requires the extraction of the corresponding CURRENCY field that can be used as a reference for the multiplication factor. Use the **[Load live preview]** function to find the correct currency field/s.

- If the currency field is part of the table, add it to the output.
- If the currency field is in another table, join the tables.
- If the reference is not part of a table, **Adjust Currency Decimals** cannot be used.

Note

The multiplication factor used in *Adjust Currency Decimals* is determined by the SAP currency table TCURX. To access the table, the following SAP Authority objects must be set in SAP: *S_TABU_NAM ACTVT=03; TABLE=TCURX*.

The *Join* functionality allows joining two or more tables and extract the result of the join. To perform the extraction the corresponding SQL command is generated dynamically and the join is executed on the SAP server.

Possible scenarios can be joining tables for header and item data or tables for master data and texts.

### Supported Join Types

The following join types are supported:

- Inner Join
- Left Outer Join, also referred to as *Left Join*.

For more information on join types see [SAP Help: Inner Join and Outer Join](https://help.sap.com/doc/saphelp_nwpi71/7.1/en-US/cf/21ec77446011d189700000e8322d00/content.htm?no_cache=true).

Note

Joining of cluster or pool tables is not supported. Cluster or pool tables need to be extracted individually and joined in the destination.

### Prerequisites

To use table join, the function module [/THEO/READ_TABLE](../../setup-in-sap/custom-function-module-for-table-extraction/#installation-of-theoread_table) needs to be available in SAP.

### Join Tables

The following example shows how to join the tables KNA1 and KNVV.

1. In the tab *Tables and Fields*, click **[Add]** to add two tables (e.g., KNA1 and KNVV).

1. Select both tables on the left and check the fields you want to extract .

1. Optional: Switch to the *WHERE clause* tab and specify a [WHERE clause](../where-clause/).

1. Switch to the *Joins* tab . A Join condition with default values is automatically available. The join condition is based on the foreign key relationship of the joined tables.

1. Click **[]** to edit the join condition. The window "Join" opens.

1. Select a table column in the *Left Table* field and in the *Right Table* field to map the table contents. In the depicted example a left outer join on tables KNA1 (left table) and KNVV (right table) on the field KUNNR is performed. It is possible to add multiple join conditions.

   - Click **[Add]** to extend the join condition to more fields.
   - Click **[]** to delete existing joins.

   Tip

   Different tables can have identical field / column names. Defining a join condition based on the identical field names not always delivers the expected result, e.g., VBAK~VBELN \<> LIPS~VBELN. Make sure the fields you use in a join condition contain the same content/data.

1. Click **[OK]** to save the join.

You can join additional tables by adding tables more in the tab *Tables and Fields*.

Warning

**RFC_ERROR_SYSTEM_FAILURE - Illegal access to the right table of a LEFT OUTER JOIN.**\
Using a WHERE clause on the right table of a LEFT OUTER JOIN is only possible as of SAP Release 7.40, SP05.

#### Auto Mapping

The **[Auto-map]** button deletes existing join conditions and performs a new field mapping based on the foreign key relationship of the joined tables.

Recommendation

To avoid poor extraction performance, do not join more than five tables.

A WHERE clause can be used to filter table records, see [SAP ABAP Documentation: SELECT-WHERE](https://help.sap.com/doc/abapdocu_750_index_htm/7.50/en-us/abapwhere.htm). Enter WHERE clauses manually in *Text mode* or use the [WHERE Clause Editor](#where-clause-editor) in *Editor Mode*.

## Create a WHERE Clause

1. Open a Table extraction type.
1. Navigate to the tab *WHERE Clause*.
1. Enter a WHERE clause [manually](#where-clause-text-mode) or use the [WHERE Clause Editor](#where-clause-editor).
1. Click **[Load live preview]** to display the results in the *Preview* section.

## WHERE Clause Text Mode

The WHERE clause text mode allows you to directly enter a WHERE clauses. The text mode of the WHERE clause supports script expressions.

Warning

**Extraction fails due to incorrect syntax.**\
The extractions fail, if incorrect syntax is used in the WHERE clause.\
Make sure to use correct SAP OpenSQL syntax. Several important syntax rules are listed in this help section.

Tip

To check the syntax of the WHERE clause, click **[Load live preview]**. This way there is no need to run an extraction to see, if the syntax is correct.

### WHERE Clause Syntax

The WHERE Clause syntax generally uses the following structure:

```bash
[Table]~[Column][Space][Operator][Space][Filter-Value]

```

**Example:**

```text
KNA1~LAND1 = 'US'

```

The following rules apply to filter values:

| Rule | Correct | Wrong | | --- | --- | --- | | Enter a space before and after the equal sign | *YEAR = '1999'* | *YEAR= '1999 '*, *YEAR ='1999'* or *YEAR='1999'* | | Set floating point numbers in single quotation mark | *KMENG > '10.3'* | *KMENG > 10.3* | | Values must use the internal SAP representation: Date: YYYYMMDD Year Period: YYYYPPP Numbers with leading zeroes, e.g., customer numbers | 19990101 1999001 0000001000 | 01.01.1999 001.1999 1000 |

The following operations are supported in the WHERE clause:

| Operator | Description | | --- | --- | | =, EQ | True if the content of operand1 is equal to the content of operand2. | | \<>, NE | True if the content of operand1 is not equal to the content of operand2. | | \<, LT | True if the content of operand1 is less than the content of operand2. | | >, GT | True if the content of operand1 is greater than the content of operand2. | | \<=, LE | True if the content of operand1 is less than or equal to the content of operand2. | | >=, GE | True if the content of operand1 is greater than or equal to the content of operand2. | | (NOT) LIKE | True if the value of operand1 matches (does not match) the pattern in operand2. | | (NOT) IN | True if the content of operand1 is (not) part of the content of operand2. Operand2 must be of type LIST or SQL. |

For more details on the OpenSQL syntax, see [SAP Help: Select WHERE](https://help.sap.com/doc/abapdocu_752_index_htm/7.52/en-US/abapwhere.htm?file=abapwhere.htm)

Tip

To increase extracting performance, make sure to place the indexed fields as the first selection filter operation in the WHERE clause.

Note

When fields with the same name exist in different tables, the field names must be formatted as [table name]~[field name], e.g., MARC~MATNR. This can be the case when extracting multiple tables.

### Script Expressions

The **[Text Mode]** of the WHERE clause supports script expressions. Script expressions are usually used to determine a dynamic date based on the current date. When using script expressions in a WHERE Clause, the value must be entered in single quotation marks.

**Syntax:**

```text
[Table]~[Column][Space][Operator][Space]'#[Script-Expression]#'

```

`BKPF~BUDAT >= '#{DateTime.Now.AddYears(-5).ToString("yyyyMMdd")}#'`

**Examples:**

| Input | Description | | --- | --- | | `#{ DateTime.Now.ToString("yyyyMMdd") }#` | Current date in SAP format (yyyyMMdd) | | `#{ String.Concat(DateTime.Now.Year.ToString(), "0101") }#` | Current year concatenated with "0101" (yyyy0101) | | `#{ String.Concat(DateTime.Now.ToString("yyyy"), "0101") }#` | Current year concatenated with "0101" (yyyy0101) | | `#{ String.Concat(DateTime.Now.ToString("yyyyMMdd").Substring(0,4), "0101") }#` | Current year concatenated with "0101" (yyyy0101) |

For more information on script expression, see [Script Expressions](../../parameters/script-expressions/).

### Subqueries

Note

The usage of subqueries is only possible as of SAP Release 7.40, SP05.

A subquery is an SQL query nested inside a larger query. Subqueries are nested queries that provide data to the enclosing query. Subqueries need be enclosed with parenthesis and can return individual values or a list of records. Get more details about subqueries on the [SAP Help: Conditions](https://help.sap.com/doc/abapdocu_752_index_htm/7.52/en-US/abenwhere_logexp_in_subquery.htm).

**Example:**

In the following example a subquery is used with the *IN* operator. The following statement returns all the *active* customers (rows in the table KNA1) that have i.e. a sales document in the table VBAK for sales document header data.

```text
KUNNR IN ( SELECT KUNNR FROM VBAK )

```

## WHERE Clause Editor

The WHERE clause editor offers a toolkit for those who are not familiar with the syntax of the WHERE clause. Click **[Editor mode]** to open the editor.

There are 2 options for adding criteria to the WHERE clause:

- **[Add Criteria]** adds single criteria.
  - The default structure for a single criteria with static values is `[Table~Column][Operator][Filer-Value]` e.g., *MARC~WERKS = 1000*.
  - The default structure for a single criteria with parameters is `[Column][Operator][Parameter]` e.g., *MARC~WERKS = [p_WERKS]*.
- **[Add Criteria Group]** adds a group of criteria.
  - The default structure for a criteria group is `([Table~Column1][Operator1][Filter-Value1][Boolean][Table~Column2][Operator2][Filter-Value2])` e.g., *(MARC~PSTAT = 'L' OR MARC~PSTAT = 'LB')*.

Tip

Combine multiple criteria and criteria groups to create complex filters e.g., *MARC~WERKS = 1000 AND (MARC~PSTAT = 'L' OR MARC~PSTAT = 'LB')* extracts only data where the column WERKS equals 1000 and the column PSTAT equals either 'L' or 'LB'.

### Components of the WHERE Clause Editor

The following buttons and options are available in the WHERE Clause Editor:

| Icon | Component | Function | | --- | --- | --- | | | Delete row | deletes a criteria. | | | Move row up | changes the sequence of the criteria. The selected criteria moves up. The sequence of criteria can also be changed with Drag and drop. | | | Move row down | changes the sequence of the criteria. The selected criteria moves down. The sequence of criteria can also be changed with Drag and drop. | | | Column | adds a column. Click on the component to select a column from the available tables. | | | SQL | adds an Open SQL statement, see [SAP Help: Open SQL](https://help.sap.com/doc/abapdocu_750_index_htm/7.50/en-us/abenopensql.htm). | | | Operator | adds an operator e.g., =, \<, >, etc. | | | Value | adds a static value of type *String*, *Number*, *Flag* or *List*. *List* offers a separate editor to create lists of type *String*, *Number* or *Select*. *Select* enables usage of SELECT statements. For more information, see [Working with Lists in the WHERE-Clause Editor](../../../knowledge-base/where-clause-editor-lists/). | | | Criteria | adds a new criteria after the selected criteria. | | | Group | adds a new group of criteria the selected criteria. | | | Parameter | adds a previously defined runtime parameter, see [Runtime Parameters](../edit-runtime-parameters/). |

Note

When adding or editing a criteria only the relevant components are displayed e.g., **Add Operator** is only available if there is a column or SQL statement to use an operator on.

#### Edit and Delete Components

- Click on a component to edit it. All areas that are marked green can be edited.
- To delete a component, click the (x) icon above the component.

### SAP System Fields

You can use [SAP system fields for date and time](https://help.sap.com/doc/abapdocu_751_index_htm/7.51/en-US/abentime_system_fields.htm) in a WHERE clause. The usage of SAP system fields requires SAP NW 7.4 SP5 or higher and the custom function module [/THEO/READ_TABLE](../../setup-in-sap/custom-function-module-for-table-extraction/#installation-of-theoread_table).

Example:

1. Navigate to [WHERE Clause Editor](#where-clause-editor) and select a column of the type Date *here: BUDAT* .
1. Delete the criterion "Value" and use the criterion "SQL" .
1. Within the "SQL" criterion, use the supported system fields for date and time with a preceding "@" character, *here: @sy-datum* .
1. Click **[Load live preview]** to check the result.

______________________________________________________________________

#### Related Links

- [Knowledge Base Article: Delta Table Extraction](../../../knowledge-base/delta-table-extraction/)
- [Knowledge Base Article: Working with Lists in the WHERE-Clause Editor](../../../knowledge-base/where-clause-editor-lists/)
- [Knowledge Base Article: LIKE Operand in WHERE Clauses](../../../knowledge-base/like-operand-where-clause/)

This page shows how to use the Table CDC extraction type.\
The Table CDC extraction type can be used to map data from SAP Tables to various target environments. Unlike a full data load, where all records in a table are transferred from the source to the target environment, Table CDC captures only the data changes since the last load.

Note

Table CDC is an Add-On that requires a separate license. For more information, contact Theobald Software's sales team at [sales@theobald-software.com](mailto:sales@theobald-software.com).

### About Table CDC

Change Data Capture (CDC) is a method to keep track of data changes such as insert, update and delete in SAP tables. The Table CDC component creates a log table in SAP that records any changes made to a selected table. The content of the log table is cleared after every successful run of the extraction. Data that was not extracted is not cleared from the log table.

For a detailed overview of this process, refer to the Knowledge Base article [Delta Mechanism of TableCDC](../../knowledge-base/table-cdc-mechanism/).

Note

Clusters, pool tables and views are not supported by the Table CDC extraction type.

### System Requirements

- The Table CDC extraction type is compatible with SAP ECC 5.0 and higher
- Supported databases:
  - HANA
  - SQL Server
  - Oracle
  - IBM Db2
  - IBM for i (Db4)
  - IBM for z/os (Db6)
  - MaxDB

### Prerequisites

- SAP custom function module [/THEO/CDC_ECC or /THEO/CDC_S4](../setup-in-sap/custom-function-module-for-tablecdc/) is installed in SAP.
- SAP custom function module [/THEO/READ_TABLE](../setup-in-sap/custom-function-module-for-table-extraction/) is installed in SAP.
- A connection to an SAP system is available, see [SAP Connection](../sap-connection/).
- The SAP user has sufficient user rights, see [SAP Authority Objects](../setup-in-sap/sap-authority-objects/#table-cdc).

The SAP transport requests for the function modules are provided in the installation directory: `C:\Program Files\BOARDConnector\ABAP\`, see [Custom function module for TableCDC](../setup-in-sap/custom-function-module-for-tablecdc/).

Warning

**Missing Authorization.**\
To use the Table CDC extraction type, access to the designated authority objects (RFC) in SAP must be available. Adjust [SAP Authority Objects](../setup-in-sap/sap-authority-objects/#table) accordingly.

### Create a Table CDC Extraction

1. In the main window of the Designer, click **[New]** to create a new extraction. The window "Create Extraction" opens.
1. Select an [SAP Connection](../sap-connection/) of type **RFC** from the drop-down menu **Source**.
1. Enter a unique name for your extraction.
1. Select the extraction type **Table CDC**.
1. Click **[OK]**. The main window of the extraction type opens automatically.

The majority of the functions of the extraction type can be accessed in the main window.

### Look Up a Table

1. In the main window of the extraction type, click **[]**. The window “Table Lookup” opens.
1. In the field **Table Name**, enter the name of the table to track and extract . Use wildcards (\*) if needed.
1. Click **[]** . Search results are displayed.
1. Select a table and click **[OK]**.

All relevant metadata information of the table is retrieved from SAP. The application returns to the main window of the extraction type.

### Define the Table CDC Extraction Type

The Table CDC extraction type offers the following options for tracking SAP tables:

1. Select the table columns you want to track and extract. By default all columns are selected. Deselect the columns you do not want to extract.

1. If you want to extract the table when first running the extraction, activate **[Extract table on first run]**.

1. Optional: You can set a maximum number of rows that the log table can contain. The default is disabled (Value 0). If the row limit is reached, the extraction fails with an exception. The maximum row limit of a log table is 500.000.

   Note

   Once a log table is initialized, you cannot change the size limit anymore.

1. Optional: Define a [WHERE Clause](where-clause/) to filter table records. By default all data is extracted.

1. Click **[Load live preview]** to display a live preview of the first 1000 records.

   - The column *TS_TIMESTAMP* contains a timestamp of when the data was last changed.
   - The column *TS_OPERATION* indicates if a row was inserted (I), updated (U) or deleted (D).

1. Check the [Extraction Settings](settings/) and the [General Settings](general-settings/) before running the extraction.

1. Click **[OK]** to confirm your settings.

To initialize the tracking of the selected SAP table, run the extraction once.

### Run the Extraction for the First Time

Run the extraction for the first time to create a log table in SAP that records any changes made to a selected table or view.

1. Select the extraction in the main window of the Designer.
1. Click **[Run]**. The window “Run Extraction” opens.
1. Click **[Run in Browser]** to run the extraction.

The log table in SAP is now available for the Table CDC component. The extracted SAP table is now available in your destination.

Note

When running the extraction regularly the content of the log table in SAP is extracted and written to the destination. The content of the log table in SAP is cleared after every successful run of the extraction. Data that was not extracted is not cleared.

### Delete Log Table and Triggers

When a Table CDC extraction is no longer in use or if you need to change the structure of the source table, simply deleting the extraction is not enough. To delete the log table and all associated triggers from your SAP system, open the Table CDC extraction and click **[Delete CDC resources]**.

To delete the SAP resources of multiple extractions or extractions that are already deleted, see [Active CDC Watches](active-cdc-watches/).

Warning

**Table change not possible**\
The source table cannot be changed, if any CDC-related resources connected to the source table in SAP exist.\
Clear the CDC-related resources connected to the source table in SAP, see [SAP Note 2284776](https://launchpad.support.sap.com/#/notes/2284776).

This page shows how to keep track of Table CDC log tables and triggers in your SAP system.\
The *Active CDC Watches* menu lists all active log tables and their DB triggers in the SAP source system. All listed Table CDC resources can be deleted from the SAP source system.

To open the *Active CDC Watches* menu, click **Show Active CDC Watches** in the main window of the extraction type.

### Active CDC Watches

#### Source Table

Name of the source table that is tracked by the Table CDC component.

#### Log Table

Name of the log table that tracks changes in the source table.

#### Created on

Timestamp when the log table was created.

#### Created by

SAP username that was used to create the initial log table.

#### Rows

Number of rows in the log table.

#### Show Details

Click **[]** to display more information about the DB triggers in the "CDC watch details" window.

#### Delete CDC resources

Click **[]** to delete the log table and all associated triggers from your SAP system.\
It is not possible to delete the log table and the triggers of the current extraction, see [Delete Log Table and DB Triggers](../#delete-log-table-and-triggers).

This page contains an overview of the settings in the window "General Settings".\
To open the general settings, click **General Settings** in the main window of the extraction type.

### Misc. Tab

The *Misc.* tab covers cache settings, column encryption and keywords of an extraction type.

#### Cache results

This option can be neglected. Board Connector always uses the result cache, because Board always requests the results twice.

#### Keywords

One or more keywords (tags) can be assigned to an extraction. Keywords can be entered directly in the keyword field. You can use these keywords to filter extractions in the "Search Extractions" window. To open the "Search Extractions" window, click **[ Search]** in the main window of the Designer.

Tip

To add keywords to multiple extractions at once, select the extractions in the main window of the Designer.\
Right-click + **Add/Remove keywords** opens the window "Add/Remove Keywords To/From Multiple Extractions".

### Security Tab

Restrict user access to the extraction. For more information, see [Restrict Designer Access](../../access-restrictions/restrict-designer-access/).

### CSV Tab

The *CSV* tab covers data and date formatting.

#### Column Name Style

Defines the style of the column name. Following options are available:

| Option | Description | | --- | --- | | **Code** | The SAP technical column name is used as column name in the destination e.g. MAKTX. | | **PrefixedCode** | The SAP technical column name is prefixed by SAP object name and the tilde character e.g., MAKT~MAKTX | | **CodeAndText** | The SAP technical column name and the SAP description separated by an underscore are used as column name in the destination e.g., MAKTX_Material Description (Short Text) | | **TextAndCode** | The SAP description and the SAP technical column name description separated by an underscore are used as column name in the destination e.g., Material Description (Short Text)\_MAKTX |

#### Date Conversion

When **Convert dates** is active, the following date conversions apply:

| Option | Description | | --- | --- | | **Year 0** | Converts the SAP date 00000000 to the entered value. | | **Year 9999** | Converts the SAP date 9999XXXX to the entered value. | | **Invalid values** | If an SAP date cannot be converted to a valid date format, the invalid date is converted to the entered value. NULL is supported as a value. |

### Columns Order Tab

The "Columns Order" feature enables users to rearrange the order of result columns when running an extraction. To rearrange the result order, assign indexes to the available result columns. Index 0 defines the first column in the result set, index 1 the second columns, etc.

| Option | Description | | --- | --- | | **Enabled** | When this option is active, the defined column order is applied when running the extraction. | | **Swap** | Swaps the index of 2 columns. All other columns keep their indexes. | | **Insert** | Inserts the selected column into the selected index. All other indexes are recalculated. | | **Reset default** | Restores the original column order. |

This page contains an overview of the extraction settings in the Table CDC extraction type.\
To open the extraction settings, click ****Extraction Settings**** in the main window of the extraction type.

### Initial Load

#### Package size

The extracted data is split into packages of the defined size. The default value is 50000 lines.\
A package size between 20000 and 50000 is advisable for large amounts of data. 0 means no packaging. Not using packaging can lead to an RFC timeout for large data extractions.

Warning

**RFC_ERROR_SYSTEM_FAILURE - No more storage space available for extending an internal table**\
To avoid a memory overflow on the SAP source system and to avoid huge overheads, choose a package size that suits your memory capacity.

#### Extract data in background job

If *Background job timeout (seconds)* checkbox is activated, the table extraction is executed as a background job in SAP. This setting is optional and is supported in combination with function module THEO/READ_TABLE or Z_THEO_READ_TABLE version 2.0. Activate the setting *Background job timeout (seconds)* for long-running extractions with a large amounts of data that may run into a timeout error (“Time limit exceeded”), when using the foreground mode.

Tip

The extraction jobs can be found in the SAP JobLog (**SM37**) under the JobName *theo_read_table*.

Warning

**Shared Memory ran out of memory!**\
If this error message pops up when running an extraction in the background, adjust the size of the Shared Memory. SAP recommends a Shared Memory size of 800MB~1.5GB for a production/test system or 2GB~4GB for S/4 systems, see [SAP Support: How to solve SYSTEM_NO_SHM_MEMORY runtime error](https://ga.support.sap.com/dtp/viewer/#/tree/1080/actions/12107).

#### Background job timeout (seconds)

Sets a timeout period for extractions that run in background mode.\
The default value is 180 seconds. The maximum timeout value is 3600 seconds.

Note

The background job timeout setting only takes effect if the extractions run in background mode using [/THEO/READ_TABLE](../../setup-in-sap/custom-function-module-for-table-extraction/).

A WHERE clause can be used to filter table records, see [SAP ABAP Documentation: SELECT-WHERE](https://help.sap.com/doc/abapdocu_750_index_htm/7.50/en-us/abapwhere.htm). Enter WHERE clauses manually in *Text mode* or use the [WHERE Clause Editor](#where-clause-editor) in *Editor Mode*.

## Create a WHERE Clause

1. Open a Table CDC extraction type.
1. Navigate to the tab *WHERE Clause*.
1. Enter a WHERE clause using the [WHERE Clause Editor](#where-clause-editor).
1. Click **[Load live preview]** to display the results in the *Preview* section.

## WHERE Clause Syntax

The WHERE Clause syntax generally uses the following structure:

```bash
[Table~Column][Operator][Filter-Value]

```

Filter values in the WHERE clause must use the internal SAP representation:

| Examples | Correct | Wrong | | --- | --- | --- | | Date: YYYYMMDD | 19990101 | 01.01.1999 | | Year Period: YYYYPPP | 1999001 | 001.1999 | | Numbers with leading zeroes, e.g., customer numbers | 0000001000 | 1000 |

The following operations are supported in the WHERE clause:

| Operator | Description | | --- | --- | | =, EQ | True if the content of operand1 is equal to the content of operand2. | | \<>, NE | True if the content of operand1 is not equal to the content of operand2. | | \<, LT | True if the content of operand1 is less than the content of operand2. | | >, GT | True if the content of operand1 is greater than the content of operand2. | | \<=, LE | True if the content of operand1 is less than or equal to the content of operand2. | | >=, GE | True if the content of operand1 is greater than or equal to the content of operand2. | | (NOT) LIKE | True if the value of operand1 matches (does not match) the pattern in operand2. | | (NOT) IN | True if the content of operand1 is (not) part of the content of operand2. Operand2 must be of type LIST or SQL. |

For more details on the OpenSQL syntax, see [SAP Help: Select WHERE](https://help.sap.com/doc/abapdocu_752_index_htm/7.52/en-US/abapwhere.htm?file=abapwhere.htm)

Tip

To increase extracting performance, make sure to place the indexed fields as the first selection filter operation in the WHERE clause.

## WHERE Clause Editor

There are 2 options for adding criteria to the WHERE clause:

- **[Add Criteria]** adds single criteria.

  - The default structure for a single criteria with static values is `[Table~Column][Operator][Filer-Value]` e.g., *MARC~WERKS = 1000*.

- **[Add Criteria Group]** adds a group of criteria.

  - The default structure for a criteria group is `([Table~Column1][Operator1][Filter-Value1][Boolean][Table~Column2][Operator2][Filter-Value2])` e.g., *(MARC~PSTAT = 'L' OR MARC~PSTAT = 'LB')*.

Tip

Combine multiple criteria and criteria groups to create complex filters e.g., *MARC~WERKS = 1000 AND (MARC~PSTAT = 'L' OR MARC~PSTAT = 'LB')* extracts only data where the column WERKS equals 1000 and the column PSTAT equals either 'L' or 'LB'.

### Components of the WHERE Clause Editor

The following buttons and options are available in the WHERE Clause Editor:

| Icon | Component | Function | | --- | --- | --- | | | Delete row | deletes a criteria. | | | Move row up | changes the sequence of the criteria. The selected criteria moves up. The sequence of criteria can also be changed with Drag and drop. | | | Move row down | changes the sequence of the criteria. The selected criteria moves down. The sequence of criteria can also be changed with Drag and drop. | | | Column | adds a column. Click on the component to select a column from the available tables. | | | SQL | adds an Open SQL statement, see [SAP Help: Open SQL](https://help.sap.com/doc/abapdocu_750_index_htm/7.50/en-us/abenopensql.htm). | | | Operator | adds an operator e.g., =, \<, >, etc. | | | Value | adds a static value of type *String*, *Number*, *Flag* or *List*. *List* offers a separate editor to create lists of type *String*, *Number* or *Select*. *Select* enables usage of SELECT statements. For more information, see [Working with Lists in the WHERE-Clause Editor](../../../knowledge-base/where-clause-editor-lists/). | | | Criteria | adds a new criteria after the selected criteria. | | | Group | adds a new group of criteria the selected criteria. |

Note

When adding or editing a criteria only the relevant components are displayed e.g., **Add Operator** is only available if there is a column or SQL statement to use an operator on.

#### Edit and Delete Components

- Click on a component to edit it. All areas that are marked green can be edited.
- To delete a component, click the (x) icon above the component.

### SAP System Fields

You can use [SAP system fields for date and time](https://help.sap.com/doc/abapdocu_751_index_htm/7.51/en-US/abentime_system_fields.htm) in a WHERE clause. The usage of SAP system fields requires SAP NW 7.4 SP5 or higher and the custom function module [/THEO/READ_TABLE](../../setup-in-sap/custom-function-module-for-table-extraction/#installation-of-theoread_table).

Example:

1. Navigate to [WHERE Clause Editor](#where-clause-editor) and select a column of the type Date *here: BUDAT* .
1. Delete the criterion "Value" and use the criterion "SQL" .
1. Within the "SQL" criterion, use the supported system fields for date and time with a preceding "@" character, *here: @sy-datum* .
1. Click **[Load live preview]** to check the result.

______________________________________________________________________

#### Related Links

- [Knowledge Base Article: Working with Lists in the WHERE-Clause Editor](../../../knowledge-base/where-clause-editor-lists/)
- [Knowledge Base Article: LIKE Operand in WHERE Clauses](../../../knowledge-base/like-operand-where-clause/)
# Knowledge Base Articles

This section contains in-depth articles and sample use cases for Board Connector.

### Board Connector

- [Certificate Renewal for TLS](certificate-renewal/)
- [Deactivate Usage Data Collection](deactivate-usage-analytics/)
- [Deploy Extractions Using Git Version Control](deploy-extractions-using-Git-version-control/)
- [Load Balancing](load-balancer/)
- [Proxy Server Settings](proxy-server-settings/)
- [Target Principal Field (TPN)](target-principal-TPN/)

______________________________________________________________________

### SAP

- [Check the Accessibility to an SAP System](check-the-accessibility-to-an-sap-system/)
- [Access Data in the SAP Public Cloud](access-data-in-the-sap-public-cloud/)
- [Authorize Access to Reports via Authorization Groups](authorize-access-to-specific-reports/)
- [Create / Configure the Custom Authorization Object Z_TS_PROG](create-the-custom-authority-object-z-ts-prog/)
- [Create a Client PSE to connect to SAP Cloud Systems](create-personal-security-environment/)
- [Enable Secure Network Communication (SNC) via X.509 certificate](enable-snc-using-pse-file/)
- [Import an SAP Transport Request](import-an-sap-transport-request/)
- [Register an RFC Server in SAP with Kernel Release 720 and higher](register-rfc-server-in-sap-releases-in-kernel-release-720-and-higher/)
- [Supported SAP S/4HANA Versions](supported-sap-and-hana-versions/)

______________________________________________________________________

### SSO Scenarios

- [SSO with Client Certificates](sso-with-client-certificates/)
- [SSO with External ID](sso-with-external-id/)
- [SSO with Kerberos SNC](sso-with-kerberos-snc/)
- [SSO with Logon Ticket](sso-with-logon-ticket/)

______________________________________________________________________

### BAPI

- [Access Data in the SAP Public Cloud](access-data-in-the-sap-public-cloud/)
- [Read Data from Cluster Fields in Tables PCL1 and PCL2 (Payroll)](read-data-from-cluster-fields-in-the-tables-pcl1-and-pcl2-payroll/)

______________________________________________________________________

### DeltaQ

- [Create Generic DataSources](create-generic-datasource-using-function-module-and-timestamps/)
- [Register an RFC Server in SAP with Kernel Release 720 and higher](register-rfc-server-in-sap-releases-in-kernel-release-720-and-higher/)

______________________________________________________________________

### OData

- [Create OData Services using the SAP Gateway Builder](create-odata-services-using-the-sap-gateway-builder/)

______________________________________________________________________

### ODP

- [Alternatives for the ODP Extraction Type](alternatives-for-odp/)

______________________________________________________________________

### Report

- [Authorize Access to Reports via Authorization Groups](authorize-access-to-specific-reports/)
- [Create / Configure the Custom Authorization Object Z_TS_PROG](create-the-custom-authority-object-z-ts-prog/)
- [Extract Reports with ALV Layouts](extract-report-layouts/)
- [Parse Reports in Board Connector](parse-reports/)

______________________________________________________________________

### Table

- [Extraction Mechanism of Table](table-extraction-mechanism/)
- [Delta Table Extraction](delta-table-extraction/)
- [Read data from Cluster Fields in Tables PCL1 and PCL2 (Payroll)](read-data-from-cluster-fields-in-the-tables-pcl1-and-pcl2-payroll/)
- [Working with Lists in the WHERE-Clause Editor](where-clause-editor-lists/)
- [Working with LIKE operand in WHERE-Clauses](like-operand-where-clause/)

______________________________________________________________________

### Table CDC

- [Delta Mechanism of Table CDC](table-cdc-mechanism/)
- [Initial Table Load in SAP Versions < 7.10](table-cdc-initial-table-load/)

The following article shows how to access data from the SAP S/4HANA Public Cloud. Board Connector can access BAPIs / Function Modules that are available via SAP *Communication Scenarios*.

### About Communication Scenarios

*Communication Scenarios* are used to exchange data between the SAP Cloud and external systems.\
You can use the **Display Communication Scenarios** app in the SAP Public Cloud to look up available *Communication Scenarios* that provide access to BAPIs / Function Modules, e.g., the *Communication Scenario* SAP_COM_0109 includes BAPIS that are used for Sales Order Integration.

In *Communication Scenarios* BAPIs / Function Modules are listed as Service Type *RFC*:

### Prerequisites

- The Administrator role in the SAP Public Cloud is required to set up communication on the SAP side.
- The *Communication Scenario* SAP_COM_0636 (Remote Function Call - RFC Metadata Integration) must be accessible in the SAP Public Cloud.
- [Download the SAP Cryptographic Library](https://help.sap.com/doc/saphelp_em900/9.0/en-US/48/a324e7ccfc062de10000000a42189d/frameset.htm) (sapcrypto.dll) from the SAP Service Marketplace.
- [Create a Client PSE to connect Board Connector to SAP Cloud Systems](../create-personal-security-environment/).
- Make sure to use Board Connector version 6.3.1.0 (2024-04-19) or higher.

### Enable Communication in the SAP Public Cloud

Use the **Communication Management** apps in the SAP Public Cloud to make BAPIs / Function Modules accessible for external systems:

1. Create a *Communication User* in the **Maintain Communication Users** app.
1. Create a *Communication System* that handles inbound service calls in the **Communication Systems** app.
1. Assign a *Communication User* to the *Communication System* in the subsection *Users for Inbound Communication*.
1. Create *Communication Arrangements* to define, which *Communication Scenarios* can be accessed by the *Communication System* and the *Communication User*. The *Communication Scenario* SAP_COM_0636 (Remote Function Call - RFC Metadata Integration) is mandatory for using the BAPI extraction type in Board Connector.

For more information, see [SAP Help: Setting up Communication Management](https://learning.sap.com/learning-journeys/implement-sap-s-4hana-cloud-public-edition-for-sourcing-and-procurement/setting-up-communication-management_a913171c-c96d-47a9-81ec-dc9ee8754320).

### Enable Communication in Board Connector

Follow the steps below to create an Board Connector source that connects to an SAP Public Cloud:

1. In the main window of the Designer, navigate to the menu bar and select **Server > Manage Sources**. The window "Manage Sources" opens.
1. Click **[Add]** to add a new SAP connection or click **[]** to edit an existing connection. The window "Change Source" opens.
1. Enter a name for the SAP connection in the field **Name**, e.g., *SAPCloud*.
1. In the *General* tab, select the connection method **WebSocket**.
1. Fill out the connection details, see [Connection Settings](../../documentation/sap-connection/settings/#general).
   - In the field **Library**, enter the path to the SAP Cryptographic Library (sapcrypto.dll).
   - In the field **Client PSE**, enter the path to the client .pse file.
1. In the *Authentication* tab, enter the username and password of the SAP *Communication User*.
1. Activate the checkbox **User name is alias**.
1. Click **[Test designer connection]** to validate the connection between the Board Connector Designer and the SAP system.
1. Click **[Test server connection]** to validate the connection between the Board Connector Server and the SAP system.
1. Click **[OK]** to save the SAP source.

### Look Up and Execute BAPIs

Follow the regular workflow to look up and execute BAPIS:

1. [Create a new BAPI / Function Module extraction](../../documentation/bapi/#create-a-bapi-extraction).

1. [Look up a BAPI / Function Module](../../documentation/bapi/#look-up-a-function-module-bapi) included in the *Communication Scenarios* that your *Communication User* has access to.

   Note

   The lookup returns a list of all BAPIS in the SAP Public Cloud with no consideration for *Communication Scenarios*. Make sure to only select BAPIS that are available via *Communication Scenarios*, see [About Communication Scenarios](#about-communication-scenarios).

1. [Define all mandatory parameters of the BAPI](../../documentation/bapi/#define-the-bapi-extraction-type).

1. [Run the extraction](../../documentation/run-extractions/#run-extractions-in-the-designer).

______________________________________________________________________

#### Related Links

- [SAP Help: Setting up Communication Management](https://learning.sap.com/learning-journeys/implement-sap-s-4hana-cloud-public-edition-for-sourcing-and-procurement/setting-up-communication-management_a913171c-c96d-47a9-81ec-dc9ee8754320)
- [SAP Community: Calling BAPIs in the SAP S/4HANA Public Cloud](https://community.sap.com/t5/enterprise-resource-planning-blogs-by-sap/calling-bapis-in-the-sap-s-4hana-public-cloud/ba-p/13411902)
- [Knowledge Base Article: Create a Client PSE to connect to SAP Cloud Systems](../create-personal-security-environment/)

The following article shows how to replace most ODP [provider contexts](../../documentation/odp/provider-context/) with other extractions types.

Aside from the extractions types presented in this article, Board Connector offers ODP data extraction via OData protocol. While [OData](../../documentation/odata/) covers all provider contexts, the extraction time for large data sets is longer compared to components that use the standard RFC protocol.

| Provider Context | Alternative | | --- | --- | | ABAP Core Data Services \[[ABAP_CDS](../../documentation/odp/provider-context/#abap-cds-views)\] | [Table](../../documentation/table/) | | HANA Information Views \[[HANA](../../documentation/odp/provider-context/#hana-views)\] | [Table](../../documentation/table/) [BWCube](../../documentation/bwcube/) | | SAP NetWeaver Business Warehouse or BW4/HANA \[[BW](../../documentation/odp/provider-context/#bw-infoproviders)\] | [BWCube](../../documentation/bwcube/) [Table](../../documentation/table/) [Table CDC](../../documentation/table-cdc/) [DeltaQ](../../documentation/deltaq/) [OHS](../../documentation/ohs/) | | Datasources/Extractors \[[SAPI](../../documentation/odp/provider-context/#extractors)\] | [DeltaQ](../../documentation/deltaq/) | | SAP LT Queue Alias \[[SLT~your_queue_alias](../../documentation/odp/provider-context/#slt-server)\] | [Table](../../documentation/table/) [Table CDC](../../documentation/table-cdc/) |

### Extract Data from CDS Views

Alternative for the *ABAP Core Data Services [ABAP_CDS]* provider context:\
To extract data from CDS Views, use the [Table](../../documentation/table/) extraction type.

Note

When looking up CDS Views in Board Connector, make sure to look up the name of the DDL SQL View (CDS Database View) instead of the CDS View name.

### Extract Data from HANA Views

Alternative for the *HANA Information Views [HANA]* provider context:\
To extract data from HANA Views, use the [BWCube](../../documentation/bwcube/) extraction type or the [Table](../../documentation/table/) extraction type.

- **Extraction via Table**

  ______________________________________________________________________

  - In SAP, expose the HANA View to ABAP CDS Views, see [SAP Community: How to consume HANA Calculation views in S/4HANA CDS views](https://community.sap.com/t5/technology-blogs-by-members/how-to-consume-hana-calculation-views-in-s-4hana-cds-views/ba-p/13476798).
  - Extract the CDS View using the [Table](../../documentation/table/) extraction type.

- **Extraction via BWCube**

  ______________________________________________________________________

  - In SAP, expose the HANA View to CompositeProviders, see [SAP Learning: Consuming a Calculation View with SAP BW/4HANA](https://learning.sap.com/learning-journeys/upgrading-your-sap-bw-skills-to-sap-bw-4hana/consuming-a-calculation-view-with-sap-bw-4hana_ac069075-173b-41fb-bb35-b950b213d407)
  - Extract the CompositeProvider using the [BWCube](../../documentation/table/) extraction type.

### Extract Data from BW Systems (CompositeProviders, Cubes, InfoObjects, etc.)

Alternative for the *SAP NetWeaver Business Warehouse or BW4/HANA [BW]* provider context:

- To extract data from CompositeProviders, InfoCubes, MultiProviders, aDSO/DSOs etc., use the [BWCube](../../documentation/bwcube/) extraction type.
- To extract data from InfoObjects (Master data, Text data or Hierarchies), look up the respective tables (P, T, H) in the [Table](../../documentation/table/) extraction type.
- To extract data from Hierarchy InfoObjects, use the [BW Hierarchy](../../documentation/hierarchy/) extraction type.
- To extraxt data from Infocubes and DSOs, convert the Infocubes and DSOs to DataSources and extract the DataSources using the [DeltaQ](../../documentation/table/) extraction type.
- If you use Open Hub Service (OHS) destinations that can receive data from Cubes, DSOs, aDSOs etc., the data can be extracted using the [OHS](../../documentation/ohs/) extraction type. You can also run the process chain that writes data to OHS within SAP BW.
  - To extract the data from OHS tables, use the [Table](../../documentation/table/) extraction type.
  - To extract delta changes (Inserts, Updates, Deletes) from an OHS table, use the [Table CDC](../../documentation/table-cdc/) extraction type.

### Extract Data from Extractors

Alternative for the *Datasources/Extractors [SAPI]* provider context:\
To extract data from Extractors, use the [DeltaQ](../../documentation/deltaq/) extraction type.

### Extract Data from Tables

Alternative for the *SAP LT Queue Alias [SLT~your_queue_alias]* provider context:

- To extract data from regular (application) tables, cluster or pooled tables, use the [Table](../../documentation/table/) extraction type.
- To extract delta changes (Inserts, Updates, Deletes), use the [Table CDC](../../documentation/table-cdc/) extraction type.

______________________________________________________________________

#### Related Links

- [Guidance on SAP Note 3255746 for Theobald Software Xtract Products](https://theobald-software.com/en/products-technology-en/guidance-on-sap-note-3255746-for-theobald-software-xtract-products/).
- [Create (ODP) OData Services using the SAP Gateway Builder](../create-odata-services-using-the-sap-gateway-builder/)

The following article shows how to set up access to reports by assigning authorization groups to reports.\
Access is then granted through the S_PROGRAM authorization object, see [SAP Note 338177](https://launchpad.support.sap.com/#/notes/338177).

### Set Up Access to Specific Reports

1. Log into SAP and use transaction code SE38 to open the ABAP Editor.
1. Enter the name of the report you want to access and select **Attributes** as the *Subobjects*.
1. Click **[Change]**. A window that contains the program attributes opens.
1. Assign an authorization group.
1. Edit or create a user role you want to grant access to (transaction code PFCG).
1. Manually assign the authorization object S_PROGRAM to the user role.
1. Select the actions **SUBMIT** and **BTCSUBMIT** in the S_PROGRAM object field *P_ACTION*.
1. Assign the same authorization group that is assigned to the report to the S_PROGRAM object field *P_GROUP*.
1. Save and generate the authorization.
1. Assign the user role to users.

______________________________________________________________________

#### Related Links

- [Create the Custom Authorization Object Z_TS_PROG](../create-the-custom-authority-object-z-ts-prog/)
- [SAP Authorization Objects for Reports](../../documentation/setup-in-sap/sap-authority-objects/#report)
- [Documentation: Report](../../documentation/report/)

The following article shows how to manually and automatically renew a X.509 certificate used for TLS in Board Connector.

Warning

**Expired Certificate.**\
The Cryptographic key pair associated with the certificate is no longer valid and this may cause security risks. Always use a valid certificate. To access the Designer after a certificate has expired, delete the `tls.json` file in the Board Connector installation directory (`C:\Program Files\BOARDConnector\config\servers\`) and restart the Board Connector service. This resets all TLS settings in Board Connector, including the certificate selection.

### Renew a Certificate Manually

1. Before the old certificate expires, install a new certificate on the server machine.

1. Open the Board Connector Designer and reference the new certificate, see [Install an X.509 Certificate](../../documentation/access-restrictions/install-x.509-certificate/#integrate-the-x509-certificate).

1. Delete the old certificate from the Microsoft Certificate Store.

1. Block external access to the Board Connector server using the firewall.

1. Open the Board Connector Designer and navigate to **Settings > Server**.

1. In the *Web Server* tab, select the protocol **HTTP - Unrestricted** to disable TLS.

1. Click **[OK]** to save the settings. When prompted to restart the service, click **[OK]** again.

1. Renew the certificate with the same key using Windows AD Certificate Services.

1. Open the Board Connector Designer and enable TLS with the new certificate, see [Activate TLS Encryption](../../documentation/access-restrictions/restrict-server-access/#activate-tls-encryption).

1. Click **[OK]** to save the settings. When prompted to restart the service, click **[OK]** again.

1. Allow external access to the Board Connector server using the firewall.

Note

If you use TLS encryption for the communication with the Board Connector Designer, make sure to also reference the new certificate in the [*Configuration Server*](../../documentation/server/server-settings/#configuration-server) tab of the server settings.

### Renew a Certificate Automatically

If you're using [win-acme](https://www.win-acme.com/reference/plugins/installation/script) for the renewal of Letsencrypt certificates, run the following PowerShell script with the same client that runs win-acme.

[Download PowerShell Script for Letsencrypt Certificate Renewal](../../assets/files/bc/bc-le.ps1)

#### About win-acme

win-acme creates a scheduled task for the renewal process. When this process is triggered, it issues a new certificate and stores it in the Windows Certificate Store. The old certificate is deleted.

#### About the PowerShell Script

The `bc-le.ps1` script replaces the old certificate in the Board Connector settings with the new certificate. No manual changes in Board Connector are required.

The `bc-le.ps1` script requires 2 input parameters:

- the thumbprint of the old certificate
- the thumbprint of the new certificate

______________________________________________________________________

#### Related Links

- [Board Connector Documentation: Install an X.509 Certificate](../../documentation/access-restrictions/install-x.509-certificate/)
- [Board Connector Documentation: Server Settings](../../documentation/server/server-settings/)
- [Enable Secure Network Communication (SNC) via X.509 certificate](../enable-snc-using-pse-file/)

The following article shows how to load data incrementally (daily) from an SAP Table with no delta pointers / date fields. The depicted example scenario uses two tables:

- MAKT (Material Descriptions), which has no date fields.
- CDHDR (Change Documents Header), which holds the header information of the changed records. CDHDR is used to determine the delta information of MAKT and other tables.

### Prerequisites

- Prepare a record for the delta extraction:\
  Change the description of a material in MAKT, e.g., change the description “ABC” of material 2593 to "Test_delta”.
- Check if CDHDR registered the change:\
  Filter the field UPDATE for today's date. The change made in MAKT should be listed.

### Daily Data Extraction

The following steps describe how to only extract the data from MAKT that has been changed on today’s date.

1. Create a new Table extraction.

1. Look up the tables MAKT and CDHDR.

1. Select the fields OBJECTID and UDATE from CDHDR for the output.

   - OBJECTID contains information about the Key on which the changes are made. This field is used for joining the tables and to get the delta data from MAKT.
   - UDATE contains the date on which updates occurred. This field is used to filter the data for specific dates.

1. Select the fields you want to extract from MAKT for the output (MATNR is mandatory).

1. Open the tab *Joins* and click **[Add]**. The window "Join" opens.

1. Select the join type *INNER_JOIN* to combine the tables CDHDR and MAKT. The OBJECTID from CDHDR and MATNR from MAKT have same entries and thus form an inner join condition.

1. Click **[Add]** and confirm your selection with **[OK]**.

1. Open the tab *WHERE Clause* and enter the following filter criteria:

   ```text
   CDHDR~UDATE = '#{ DateTime.Now.ToString("yyyyMMdd") }#'

   ```

   This criteria uses script expressions to get the current date in the SAP format ("yyyyMMdd").

1. Click **[Load live review]** to check the results. Only the data in MAKT that has been changed on today's date is extracted.

1. Schedule the extraction daily.

Tip

To extract all changes of the day before, change the WHERE clause to `CDHDR~UDATE >= '#{ DateTime.Now.AddDays(-1).ToString("yyyyMMdd") }#'` and schedule the extraction every night at 1p.m. or later.

______________________________________________________________________

#### Related Links

- [Delta Table Extraction](../delta-table-extraction/)
- [Table: WHERE Clause](../../documentation/table/where-clause/)

The following article shows how to check the accessibility of an SAP system using the [paping.exe](https://code.google.com/archive/p/paping) tool. Alternatively, you can also use the Microsoft [telnet](https://learn.microsoft.com/de-de/windows-server/administration/windows-commands/telnet) tool.

Sometimes the firewall is blocking the traffic to the SAP System. This could be a local firewall, but also a firewall in the destination network. You can use the paping.exetool to ping the port and to check if the firewall is open.

### Ping the SAP System

Use the following syntax with paping.exe:

```console
paping.exe SAPServer -p port -c 3*

```

```console
paping.exe 192.168.0.9 -p 3305 -c 3

```

### Port Numbers

If an SAP-Router is used, the ports are 3299 and 3399.\
If not, the ports are 32XX and 33XX. XX is usually the system number, e.g., 00, or 05.

Some important port numbers:

```console
sapdp00 3200/tcp # SAP Dispatcher. 3200 + Instance-Number
sapgw00 3300/tcp # SAP Gateway. 3300 + Instance-Number
sapsp00 3400/tcp # 3400 + Instance-Number
sapms00 3500/tcp # 3500 + Instance-Number
sapmsSID 3600/tcp # SAP Message Server. 3600 + Instance-Number
sapgw00s 4800/tcp # SAP Secure Gateway 4800 + Instance-Number

```

This article shows how to create generic DataSources for delta extractions in SAP using a function module and timestamps.

### About Delta Functionality with Delta fields

To use the delta functionality, a delta field is required. Certain tables like VBAK (Sales Document: Header Data) do not have a timestamp field for creation/change that can be uses as a unique delta field, but they have separate fields for creation date (**ERDAT**), creation time (**ERZET**) and change date (**AEDAT**). To get the delta data of the VBAK table, we create a generic DataSource using a custom function module that implements the necessary logic.

This article leads you through all necessary steps to create an extraction structure that has a timestamp field that can be used to implement the delta functionality.

There are two template function modules that can be copied and used:

- RSAX_BIW_GET_DATA_SIMPLE: A function module with simple interface for *Full Load* with no support of delta loads.
- RSAX_BIW_GET_DATA: : A function module with complete interface that supports *Delta Load*.

### Step 1: Create an Extract Structure

Follow the steps below to create the extract structure for the DataSource:

1. Use SAP transaction SE11 to create a new structure ZZVBAK.
1. Insert the table VBAK as an include into the structure.
1. Add a field ZTMSTMP(Data element: TZNTSTMPS, it is of datatype DEC with Length 15). This field holds the timestamp and allow us to use the extraction for delta purposes.
1. Save and activate the structure.

### Step 2: Create the Function Module

1. Use SAP transaction SE80 to copy the function group RSAX to the new function group Z_RSAX and to copy the function module RSAX_BIW_GET_DATA to Z_RSAX_BIW_GET_DATA_VBAK.

1. Be sure to copy and activate all the related objects (interfaces, datatypes etc.).

1. Use SAP transaction SE37 to open and edit the function module Z_RSAX_BIW_GET_DATA_VBAK. In the tab *Tables*, set the parameter E_T_DATA to associated type ZZVBAK.

1. Navigate to the tab *source code* and paste the following ABAP Code.

   ABAP Code for the Custom Function Module

   ```ABAP
   FUNCTION Z_RSAX_BIW_GET_DATA_VBAK.
   *"----------------------------------------------------------------------
   *"*"Local Interface:
   *"  IMPORTING
   *"     VALUE(I_REQUNR) TYPE  SBIWA_S_INTERFACE-REQUNR
   *"     VALUE(I_ISOURCE) TYPE  SBIWA_S_INTERFACE-ISOURCE OPTIONAL
   *"     VALUE(I_MAXSIZE) TYPE  SBIWA_S_INTERFACE-MAXSIZE OPTIONAL
   *"     VALUE(I_INITFLAG) TYPE  SBIWA_S_INTERFACE-INITFLAG OPTIONAL
   *"     VALUE(I_UPDMODE) TYPE  SBIWA_S_INTERFACE-UPDMODE OPTIONAL
   *"     VALUE(I_DATAPAKID) TYPE  SBIWA_S_INTERFACE-DATAPAKID OPTIONAL
   *"     VALUE(I_PRIVATE_MODE) OPTIONAL
   *"     VALUE(I_CALLMODE) LIKE  ROARCHD200-CALLMODE OPTIONAL
   *"     VALUE(I_REMOTE_CALL) TYPE  SBIWA_FLAG DEFAULT SBIWA_C_FLAG_OFF
   *"  TABLES
   *"      I_T_SELECT TYPE  SBIWA_T_SELECT OPTIONAL
   *"      I_T_FIELDS TYPE  SBIWA_T_FIELDS OPTIONAL
   *"      E_T_ZZVBAK STRUCTURE  ZZVBAK OPTIONAL
   *"  EXCEPTIONS
   *"      NO_MORE_DATA
   *"      ERROR_PASSED_TO_MESS_HANDLER
   *"----------------------------------------------------------------------


   * THE INPUT PARAMETER I_DATAPAKID IS NOT SUPPORTED YET !


   * EXAMPLE: INFOSOURCE CONTAINING TADIR OBJECTS
   *  TABLES: TADIR.


   * AUXILIARY SELECTION CRITERIA STRUCTURE
     DATA: L_S_SELECT TYPE SBIWA_S_SELECT,
           STARTDATE LIKE SY-DATUM,
           STARTTIME LIKE SY-UZEIT,
           ENDDATE LIKE SY-DATUM,
           ENDTIME LIKE SY-UZEIT,
           TSTAMP LIKE TZONREF-TSTAMPS.


   * MAXIMUM NUMBER OF LINES FOR DB TABLE
     STATICS: L_MAXSIZE TYPE SBIWA_S_INTERFACE-MAXSIZE.


   * SELECT RANGES
     RANGES:  L_R_TMPSTMP FOR ZZVBAK-ZTMSTMP.


   * PARAMETER I_PRIVATE_MODE:
   * SOME APPLICATIONS MIGHT WANT TO USE THIS FUNCTION MODULE FOR OTHER
   * PURPOSES AS WELL (E.G. DATA SUPPLY FOR OLTP REPORTING TOOLS). IF THE
   * PROCESSING LOGIC HAS TO BE DIFFERENT IN THIS CASE, USE THE OPTIONAL
   * PARAMETER I_PRIVATE_MODE (NOT SUPPLIED BY BIW !) TO DISTINGUISH
   * BETWEEN BIW CALLS (I_PRIVATE_MODE = SPACE) AND OTHER CALLS
   * (I_PRIVATE_MODE = X).
   * IF THE MESSAGE HANDLING HAS TO BE DIFFERENT AS WELL, DEFINE YOUR OWN
   * MESSAGING MACRO WHICH INTERPRETS PARAMETER I_PRIVATE_MODE. WHEN
   * CALLED BY BIW, IT SHOULD USE THE LOG_WRITE MACRO, OTHERWISE DO WHAT
   * YOU WANT.


   * INITIALIZATION MODE (FIRST CALL BY SAPI) OR DATA TRANSFER MODE
   * (FOLLOWING CALLS) ?
     IF I_INITFLAG = SBIWA_C_FLAG_ON.

   ************************************************************************

   * INITIALIZATION: CHECK INPUT PARAMETERS
   *                 BUFFER INPUT PARAMETERS
   *                 PREPARE DATA SELECTION
   ************************************************************************


   * THE INPUT PARAMETER I_DATAPAKID IS NOT SUPPORTED YET !


   * INVALID SECOND INITIALIZATION CALL -> ERROR EXIT
       IF NOT G_FLAG_INTERFACE_INITIALIZED IS INITIAL.

         IF 1 = 2. MESSAGE E008(R3). ENDIF.
         LOG_WRITE 'E'                    "MESSAGE TYPE
                   'R3'                   "MESSAGE CLASS
                   '008'                  "MESSAGE NUMBER
                   ' '                    "MESSAGE VARIABLE 1
                   ' '.                   "MESSAGE VARIABLE 2
         RAISE ERROR_PASSED_TO_MESS_HANDLER.
       ENDIF.


   * CHECK INFOSOURCE VALIDITY
       CASE I_ISOURCE.
         WHEN 'ZDSVBAK' OR ''.
         WHEN OTHERS.
           IF 1 = 2. MESSAGE E009(R3). ENDIF.
           LOG_WRITE 'E'                  "MESSAGE TYPE
                     'R3'                 "MESSAGE CLASS
                     '009'                "MESSAGE NUMBER
                     I_ISOURCE            "MESSAGE VARIABLE 1
                     ' '.                 "MESSAGE VARIABLE 2
           RAISE ERROR_PASSED_TO_MESS_HANDLER.
       ENDCASE.


   * CHECK FOR SUPPORTED UPDATE MODE
       CASE I_UPDMODE.
         WHEN 'F' OR ''.
         WHEN 'C'.  "
         WHEN 'R'.  "
         WHEN 'S'.  " DELTA INITIALIZATION
         WHEN 'I'.    " DELTA INIT FOR NON CUMMULATIVE
         WHEN 'D'.   " DELTA UPDATE
         WHEN OTHERS.
           IF 1 = 2. MESSAGE E011(R3). ENDIF.
           LOG_WRITE 'E'                  "MESSAGE TYPE
                     'R3'                 "MESSAGE CLASS
                     '011'                "MESSAGE NUMBER
                     I_UPDMODE            "MESSAGE VARIABLE 1
                     ' '.                 "MESSAGE VARIABLE 2
           RAISE ERROR_PASSED_TO_MESS_HANDLER.
       ENDCASE.


   * CHECK FOR OBLIGATORY SELECTION CRITERIA
   *    READ TABLE I_T_SELECT INTO L_S_SELECT WITH KEY FIELDNM = 'ZTMSTMP'.
   *    IF SY-SUBRC <> 0.
   *      IF 1 = 2. MESSAGE E010(R3). ENDIF.
   *      LOG_WRITE 'E'                    "MESSAGE TYPE
   *                'R3'                   "MESSAGE CLASS
   *                '010'                  "MESSAGE NUMBER
   *                'PGMID'                "MESSAGE VARIABLE 1
   *                ' '.                   "MESSAGE VARIABLE 2
   *      RAISE ERROR_PASSED_TO_MESS_HANDLER.
   *    ENDIF.

       APPEND LINES OF I_T_SELECT TO G_T_SELECT.


   * FILL PARAMETER BUFFER FOR DATA EXTRACTION CALLS
       G_S_INTERFACE-REQUNR    = I_REQUNR.
       G_S_INTERFACE-ISOURCE   = I_ISOURCE.
       G_S_INTERFACE-MAXSIZE   = I_MAXSIZE.
       G_S_INTERFACE-INITFLAG  = I_INITFLAG.
       G_S_INTERFACE-UPDMODE   = I_UPDMODE.
       G_S_INTERFACE-DATAPAKID = I_DATAPAKID.
       G_FLAG_INTERFACE_INITIALIZED = SBIWA_C_FLAG_ON.


   * FILL FIELD LIST TABLE FOR AN OPTIMIZED SELECT STATEMENT
   * (IN CASE THAT THERE IS NO 1:1 RELATION BETWEEN INFOSOURCE FIELDS
   * AND DATABASE TABLE FIELDS THIS MAY BE FAR FROM BEEING TRIVIAL)
       APPEND LINES OF I_T_FIELDS TO G_T_SEGFIELDS.

     ELSE.                 "INITIALIZATION MODE OR DATA EXTRACTION ?

   ************************************************************************

   * DATA TRANSFER: FIRST CALL      OPEN CURSOR + FETCH
   *                FOLLOWING CALLS FETCH ONLY
   ************************************************************************


   * FIRST DATA PACKAGE -> OPEN CURSOR
       IF G_COUNTER_DATAPAKID = 0.
         "LOOP AT I_T_SELECT INTO L_S_SELECT WHERE FIELDNM = 'ZTMSTMP'.
          LOOP AT G_T_SELECT INTO L_S_SELECT WHERE FIELDNM = 'ZTMSTMP'.

           TSTAMP = L_S_SELECT-LOW.
           CONVERT TIME STAMP TSTAMP TIME ZONE SY-ZONLO INTO DATE STARTDATE TIME STARTTIME.
           TSTAMP = L_S_SELECT-HIGH.
           CONVERT TIME STAMP TSTAMP TIME ZONE SY-ZONLO INTO DATE ENDDATE TIME ENDTIME.
         ENDLOOP.

   * FILL RANGE TABLES FOR FIXED INFOSOURCES. IN THE CASE OF GENERATED
   * INFOSOURCES, THE USAGE OF A DYNAMICAL SELECT STATEMENT MIGHT BE
   * MORE REASONABLE. BIW WILL ONLY PASS DOWN SIMPLE SELECTION CRITERIA
   * OF THE TYPE SIGN = 'I' AND OPTION = 'EQ' OR OPTION = 'BT'.
   *      LOOP AT G_T_SELECT INTO L_S_SELECT WHERE FIELDNM = 'PGMID'.
   *        MOVE-CORRESPONDING L_S_SELECT TO L_R_PGMID.
   *        APPEND L_R_PGMID.
   *      ENDLOOP.


   *      LOOP AT G_T_SELECT INTO L_S_SELECT WHERE FIELDNM = 'OBJECT'.
   *        MOVE-CORRESPONDING L_S_SELECT TO L_R_OBJECT.
   *        APPEND L_R_OBJECT.
   *      ENDLOOP.


   * DETERMINE NUMBER OF DATABASE RECORDS TO BE READ PER FETCH STATEMENT
   * FROM INPUT PARAMETER I_MAXSIZE. IF THERE IS A ONE TO ONE RELATION
   * BETWEEN INFOSOURCE TABLE LINES AND DATABASE ENTRIES, THIS IS TRIVIAL.
   * IN OTHER CASES, IT MAY BE IMPOSSIBLE AND SOME ESTIMATED VALUE HAS TO
   * BE DETERMINED.
         L_MAXSIZE = G_S_INTERFACE-MAXSIZE.
         IF ENDDATE <> '00000000' AND ENDTIME <> '000000'.
           OPEN CURSOR WITH HOLD G_CURSOR FOR
       SELECT * FROM VBAK
         WHERE
         (
           ( ERDAT >= STARTDATE AND ERZET >= STARTTIME AND ERDAT <= ENDDATE AND ERZET <= ENDTIME )
           OR ( AEDAT >= STARTDATE AND  AEDAT <= ENDDATE )
         ).
         ELSE.
           OPEN CURSOR WITH HOLD G_CURSOR FOR
            SELECT * FROM VBAK.
         ENDIF.
       ENDIF.                             "FIRST DATA PACKAGE ?


   * FETCH RECORDS INTO INTERFACE TABLE. THERE ARE TWO DIFFERENT OPTIONS:
   * - FIXED INTERFACE TABLE STRUCTURE FOR FIXED INFOSOURCES HAVE TO BE
   *   NAMED E_T_'NAME OF ASSIGNED SOURCE STRUCTURE IN TABLE ROIS'.
   * - FOR GENERATING APPLICATIONS LIKE LIS AND CO-PA, THE GENERIC TABLE
   *   E_T_DATA HAS TO BE USED.
   * ONLY ONE OF THESE INTERFACE TYPES SHOULD BE IMPLEMENTED IN ONE API !
       FETCH NEXT CURSOR G_CURSOR
                  APPENDING CORRESPONDING FIELDS
                  OF TABLE E_T_ZZVBAK
                  PACKAGE SIZE 1000.
   * PACKAGE SIZE L_MAXSIZE.

       IF SY-SUBRC <> 0.
         CLOSE CURSOR G_CURSOR.
         RAISE NO_MORE_DATA.
       ENDIF.

       G_COUNTER_DATAPAKID = G_COUNTER_DATAPAKID + 1.

     ENDIF.              "INITIALIZATION MODE OR DATA EXTRACTION ?

   ENDFUNCTION.

   ```

1. Save and activate the function module.

### Step 3: Create the DataSource

1. Use SAP transaction RSO2 to create a new DataSource for transaction data and name it to ZDSVBAK.

1. Set the Application component and the description texts.

1. Click **[Extraction by FM]**. Enter the name of the function module Z_RSAX_BIW_GET_DATA_VBAK and the extract structure ZZVBAK.

1. Click **[Generic Delta]**. Select the timestamp field ZTMSTMP and activate the option **[Time stamp]**.

1. Optional: set the *Safety Interval Lower Limit*.

1. Click **[Save]** twice. In the following screen you can set the selection fields. The timestamp field is disabled, because it is automatically populated as part of the delta process.

1. Use SAP transaction RSA2 to see the details of our DataSource ZDSVBAK. The extraction method is set to *F2 (Simple Interface)*. Change it to *F1 (Complete Interface)* by executing the following ABAP code.

   Tip

   Use SAP transaction SE38 to create a new report with this ABAP code. Unfortunately this is not possible in the GUI.

   ```ABAP
   REPORT ZABAPDEMO
   UPDATE roosource
   SET delta = 'E'
   exmethod = 'F1'
   genflag = 'X'
   WHERE oltpsource = 'ZDSVBAK'

   ```

1. Use SAP transaction RSA2 to display the status of the DataSource ZDSVBAK. Confirm that the **Extraction Mode** is set to *F1*.

1. Check for errors.

1. Optional: use SAP transaction SE37 and call it twice to test the function module. The first call is for the initialization and the second call reads the data. Make sure that the table E_T_DATA contains the data.

### Step 4: Test the DataSource

Use SAP transaction RSA3 to test the datasource.

Now the DataSource is created and you can use the DeltaQ extraction type to read it. Be sure to activate the DataSource using the **[Activate]** button in the main window of the extraction type.

### Result

The DataSource supports the *Full* and *Update Delta* mode. To use the*Update Delta* mode, the first call must have the update type *C (Delta Initialization)*. All following calls must have the update type *D (Delta Update)*.

The delta process of the DataSource can be monitored and maintained in SAP transaction RSA7 (Delta Queue).

This article shows how to use the SAP Gateway Builder to create OData services that provide ODP based data for the [OData extraction type](../../documentation/odata/) of Board Connector.

Note

This article focuses on SAP on-premise systems.\
For information on how to create OData services in the SAP cloud, refer to [SAP Help: Setting up Communication Management](https://learning.sap.com/learning-journeys/implement-sap-s-4hana-cloud-public-edition-for-sourcing-and-procurement/setting-up-communication-management_a913171c-c96d-47a9-81ec-dc9ee8754320).

### Prerequisites

- SAP NetWeaver Gateway Release 2.0 Support Package 4 or higher. In SAP S/4HANA, the Gateway is embedded, but needs to be activated.
- SAP user with access to the SAP Gateway Service Builder.
- To extract data using the BW InfoProvider (ODP context BW), an open hub license is required.
- Optional: to transport services from one SAP system to another, e.g., from a test environment to a production environment, authorization for CTS (Change and Transport System) is required.

Tip

To test services directly in SAP, activate the SAP Gateway Client via transaction /IWFND/GW_CLIENT.

### Workflow

The creation of OData services can be divided into the following phases:

1. **Service Definition Phase:**\
   Create a project to bundle all artifacts that are needed to develop a service.
1. **Data Model Definition Phase:**\
   Define the model that the service is based on, e.g., entity types, associations, etc.).
1. **Service Implementation Phase:**\
   Implement the operations that are supported by the service.
1. **Service Maintenance Phase:**\
   Register and activate the service in an SAP Gateway system.

### Service Definition

Follow the steps below to create a project that bundles all artifacts necessary to develop a service:

1. Log in to the SAP GUI.
1. Go to transaction SEGW. The SAP Gateway Builder opens.
1. Click **Create Project** ().
1. Enter a name and description for the OData service.
1. In the field **Project Type**, select *Service with SAP Annotations*.
1. If you want to transport the service to another SAP system, define a transport package.\
   Otherwise, enter *$TMP* (temporary objects).
1. Click **Continue** () to create the project.

The new project is listed in the main window of the SAP Gateway Builder.

### Data Model Definition

Follow the steps below to define the model the service is based on:

1. In the main window of the SAP Gateway Builder, select your project and navigate to the *DataModel* directory of the project.

1. Right-click the *DataModel* directory and select **Redefine > ODP Extraction** from the context menu.

   The window "Wizard step 1: OData access for Operational Data Provisioning" opens.

1. In the field **ODP Context**, select a provider context that can access the SAP data source you want to extract. For more information, see [Documentation: Provider Context](../../documentation/odp/provider-context/). The depicted example uses the *DataSources/Extractors* context.

1. In the field **ODP Name**, select an existing ODP object. The depicted example uses the *0CUSTOMER_ATTR* extractor.

1. Click **[Add ODP]** to add the ODP object to the data model.

   Tip

   An OData service can access multiple ODP objects.

1. Click **Next** to continue on to step 2 of the Wizard.

1. Fill out any missing information and click **Next**. The window "Create Object Directory Entry" opens.

1. If you want to transport the service to another SAP system, define a transport package. If not, click **Save** () to continue on to step 3 of the Wizard.

1. Use the file tree menu to select the entities and artifacts you want to add to the service.

   Note

   - *EntityOf* defines the structure of your data. Select the fields you want to add to the service.
   - *DeltaLinksOfEntity* contains delta links that are required to retrieve only changes (new, updated, or deleted records) to the dataset instead of fetching the entire dataset. Select all items to activate delta updates.
   - *SubscribedToEntity* checks whether a client is subscribed to tracking delta changes. Select this artifact to activate delta updates.
   - *TerminateDeltasForEntity* allows the client to stop tracking delta changes. Select this artifact to clean up unnecessary delta subscriptions.
   - *entityOf* defines the relationship between entities in the OData services, e.g., it links the main entity (*EntityOf*) with its delta-tracking entity (*DeltaLinksOfEntity*).

1. Click **Finish** ().

The subdirectories of the *DataModel* directory now contain the selected entities and artifacts.

### Service Implementation

When using the Wizard during the [Data Model Definition](#data-model-definition), the service implementation is auto-generated based on the underlying ODP framework.

The following use cases require manual adjustments:

- Modify how data is retrieved, e.g., to filter or transform the data before returning it to the client.
- Add custom business logic, e.g., to trigger additional actions when data is created/updated.
- Expose custom function imports, e.g., to execute a custom SAP function.

### Generate the Service

Before the service can be activated, follow the steps below to generate the runtime objects of the service:

1. In the main window of the SAP Gateway Builder, select your project.
1. Click **Generate Runtime Objects** (). The window "Model and Service Definition" opens.
1. Click **Continue** (). The window "Create Object Directory Entry" opens.
1. If you want to transport the service to another SAP system, define a transport package. If not, click **Save** ().

The runtime objects for the service are now generated.

### Service Maintenance

Follow the steps below to register and activate the service:

1. Go to transaction /n/IWFND/MAINT_SERVICE. The "Activate and Maintain Services" menu opens.

1. Click **Add Service**. The menu "Add Selected Services" opens.

1. In the field **System Alias**, select *LOCAL*.

1. Click **Get Services** to display a list of all services on your SAP system.

1. Select the service you want to register.

   Tip

   Use **Find** () to look up the service.

1. Click **Add Selected Services**. The window "Add Service" opens.

1. Check the service information and click **Continue** (). The window "Add Service" closes.

1. Exit the "Add Selected Services" menu and check if the service is now listed in the service catalog.

The service can now be consumed by Board Connector's OData extraction type.

______________________________________________________________________

#### Related Links

- [SAP Help: SAP Gateway Service Builder](https://help.sap.com/docs/SAP_NETWEAVER_AS_ABAP_751_IP/68bf513362174d54b58cddec28794093/cddd22512c312314e10000000a44176d.html)
- [SAP Learning: Building OData Services with SAP Gateway](https://learning.sap.com/learning-journeys/building-odata-services-with-sap-gateway)
- [SAP Help: ODP-Based Data Extraction via OData](https://help.sap.com/doc/saphelp_nw75/7.5.5/en-US/11/853413cf124dde91925284133c007d/frameset.htm)

The following article shows how to create a client [PSE (Personal Security Environment)](https://help.sap.com/saphelp_nw73/helpdata/en/4c/61a6c6364012f3e10000000a15822b/frameset.htm) that can be used to connect to SAP cloud systems via WebSocket RFC.

### Prerequisites

- SAP Cloud API URL, e.g., `https://my123456-api.s4hana.ondemand.com`.
- [Download the SAP Cryptographic Library](https://help.sap.com/doc/saphelp_em900/9.0/en-US/48/a324e7ccfc062de10000000a42189d/frameset.htm) (sapgenpse.exe and sapcrypto.dll) from the SAP Service Marketplace.

### Creating a Client PSE

Follow the steps below to create a client PSE file that trusts the server certificate of the SAP cloud system.

1. Enter the SAP Cloud API URL in a browser of your choice.

1. View the certificate in the browser.

   Navigate to **View site information > Connection is secure > Certificate is valid**.

   Click the pad lock icon left of the URL, navigate to **Connection secure > More information**, then click **[View Certificate]**.

1. Download the certificate chain from the browser. The certificate chain contains all certificates that are signed by the server certificate.

   Open the *Details* tab and click **[Export...]**.\
   Make sure to save the file in the format *Base64-encoded ASCII, certificate chain (\*.pem;\*.crt)*.

   Scroll to the *Miscellaneous* section of the certificate and in the download row, click *PEM (chain)*.

1. Use the sapgenpse tool to create a client PSE file:

   ```text
   sapgenpse.exe gen_pse -p client.pse -v [Distinguished name]

   ```

   - Replace `[Distinguished name]` with the distinguished name of the server that runs the Xtract product, e.g., `"CN=COMPUTER.theobald.local, C=DE, S=BW, O=TS, OU=DEV"`.
   - Optionally, replace `client.pse` with a custom file name for the .pse file.
   - The tool creates its own repository in a standard path, unless the path is changed by the environment variable SECUDIR or by specifying an absolute path.

   Warning

   **Restricted Access**\
   The PSE must be created without a password/pin, otherwise reading is not possible. Make sure not to secure the PSE.

1. Use the following command to add the certificate chain from step 3 to the client PSE:

   ```text
   sapgenpse.exe maintain_pk -a <[chain.pem]> -p <client.pse>

   ```

   Replace `[chain.pem]` with the name of the downloaded .pem file, e.g., `s4hana-cloud-sap-chain.pem`. For more information on how to use the sapgenpse.exe, run the command `sapgenpse -h`.

The .pse file can now be used to connect Board Connector to the SAP cloud.

______________________________________________________________________

#### Related Links

- [Knowledge Base: Access Data in the SAP Public Cloud](../access-data-in-the-sap-public-cloud/)

The following article shows how to create the Z_TS_PROG authorization object for the custom function module The Theobald Software custom function module [Z_XTRACT_IS_REMOTE_REPORT](../../documentation/setup-in-sap/custom-function-module-for-reports/) enables the extractions of reports from SAP systems.

The Theobald Software custom function module Z_XTRACT_IS_REMOTE_REPORT enables the extractions of reports from SAP systems. If no authorization group is assigned to a report, Z_XTRACT_IS_REMOTE_REPORT uses a custom authorization object Z_TS_PROG to verify whether the SAP user is allowed to extract a report. The access to reports is granted based on the name of the report.

### Create the Custom Authorization Object Z_TS_PROG

1. Use transaction SU21 to create a new authorization object.
1. Expand the *Create* menu and click **[Authorization Object]**. The window "Create Authorization Object" opens.
1. Enter the following values:\
   **Object:** Z_TS_PROG\
   **Text:** Theobald Software Report Authorization
1. Click **[Continue]** to enable editing of the section *Authorization fields*.
1. Manually enter S_NAME as the first entry in *Authorization fields*.
1. Click **[Save]** to save the authorization object.

### Configure the Custom Authorization Object Z_TS_PROG

1. Either download the provided [SAP role](../../documentation/setup-in-sap/sap-authority-objects/#sap-authorization-profiles) or manually [create the Custom Authorization Object Z_TS_PROG](#create-the-custom-authorization-object-z_ts_prog).
1. Enter the change mode within the "Role Maintenance" window to configure the object.
1. Navigate to *Authorizations* and click *Change Authorization Data* (). The window "Change Role: Authorizations" opens.
1. Expand the tree view **Basis: Administration > Theobald Software authorization for reports**.
1. Click **[]**. The window "Field values" opens.
1. Enter the names of relevant ABAP reports and transfer the corresponding values.

______________________________________________________________________

#### Related Links

- [Authorize Access to Reports via Authorization Groups](../authorize-access-to-specific-reports/)
- [SAP Authorization Objects for Reports](../../documentation/setup-in-sap/sap-authority-objects/#report)

This article shows how to opt-out of the usage data collection by Board Connector.

### About Usage Analytics

Usage data is collected to improve Board Connector in a way that benefits our customers, see [Benefits of the Usage Analytics Feature](https://theobald-software.com/en/xu-beyond/). Typical usage data include the source type and extraction types that are in use, referenced SAP objects, statistics about axtraction runs, etc. For more information, refer to our [Privacy Policy](https://theobald-software.com/en/privacy-policy/#productanalytics).

### Opt-Out

1. Open the **Server Settings**.
1. Open the *Web Server* tab.
1. Deactivate the following checkboxes:
   - [Collect Usage Data](../../documentation/server/server-settings/#collect-usage-data)
   - [Upload Usage Data](../../documentation/server/server-settings/#upload-usage-data)
   - [Transfer SAP Object Names](../../documentation/server/server-settings/#transfer-sap-object-names)

You can opt-in again by reactivating the checkboxes.

The following article shows how to load data incrementally (daily) from an SAP Table based on date fields. The depicted example scenarios use the table VBAK (SAP Sales Document Header), which has two date fields:

- ERDAT for creation date
- AEDAT for update date

### Extract Data using a Date Parameter

The depicted example extracts data that was created or changed after a specific date. The date is provided as a parameter at runtime.

1. Create a new Table extraction.

1. Look up a table you want to extract data from, e.g., VBAK.

1. Open the WHERE clause tab of theTable extraction type and enter the following criterion:

   ```text
   ( VBAK~ERDAT GE @LastDate AND VBAK~AEDAT EQ '00000000' ) OR VBAK~AEDAT GE @LastDate

   ```

   This criterion extracts data if one of the following conditions is true:

   - The data was created (ERDAT) after the date provided by the parameter `@LastDate` and it has not been changed (AEDAT).
   - The data has changed (ARDAT) after the date provided by the parameter `@LastDate`.

1. Click **[OK]** to confirm your input.

1. Open the *Run Extraction* menu and navigate to the *Custom* tab for runtime parameters.

1. Enter a value for the runtime parameter `@LastDate` in the format `YYYYmmDD`.

1. Click **[Run]** and check the results.

### Daily Data Extraction

The depicted example extracts data that was created or changed the day before. The depicted example uses script expressions to query the current date.

1. Create a new Table extraction.

1. Look up a table you want to extract data from, e.g., VBAK.

1. Open the WHERE clause tab of the Table component and enter the following criterion:

   ```text
   (ERDAT >= '#{ DateTime.Now.AddDays(-1).ToString("yyyyMMdd") }#' AND AEDAT = '00000000') OR AEDAT >= '#{ DateTime.Now.AddDays(-1).ToString("yyyyMMdd") }#'` <br>

   ```

   This criterion extracts data if one of the following conditions is true:

   - The data was created (ERDAT) the day before the current date and it has not been changed (AEDAT).
   - The data has changed (ARDAT) the day before the current date.

1. Click **[OK]** to confirm your input.

1. Run the extraction.

The extraction can be scheduled every night at 1p.m. or later to extract all changes of the day before. Providing extraction dates is not necessary.

______________________________________________________________________

#### Related Links

- [Table: WHERE Clause](../../documentation/table/where-clause/)

The following article describes versioning of newly developed extractions using [Git](https://gitforwindows.org/).

Versioning ensures a seamless synchronization of new developments on a test environment with the productive system. The implementation of various [Git](https://gitforwindows.org/) security techniques ensures an error-free transfer without compromising the production system.

Note

Target audience: Customers who use a production and a development environment for SAP data replications.

### Prerequisites

- Technically separate development and production environment.
- Developers have [read-only access](../../documentation/access-restrictions/) to Board Connector on the production system.
- Git client installed locally on the development environment and the production environment, e.g., [Fork](https://fork.dev).
- The Board Connector installation must have the identical release version on the servers.

### Set Up a new Environment

1. Create a new Git repository. How to do this depends on the technology you use, e.g.:
   - [GitHub](https://docs.github.com/en/get-started/quickstart/create-a-repo)
   - [Azure DevOps](https://docs.microsoft.com/en-us/azure/devops/repos/git/create-new-repo?view=azure-devops)
   - [Git-scm](https://git-scm.com/book/en/v2/Git-on-the-Server-Setting-Up-the-Server)
1. Clone the repository into the installation directory of Board Connector, e.g., `C:\Program Files\BOARDConnector`.\
   The repository directory **must** be named `config`!
1. Use dedicated branches for test and development environments and the main branch for the production system.

Tip

The initial initialization of the Git version control requires an empty `config` folder. For this reason, the existing `config` folder must first be renamed and then filled with the configuration files.

### Set Up an existing Environment

1. Create a new Git Repository. How to do this depends on the technology you use, e.g.:
   - [GitHub](https://docs.github.com/en/get-started/quickstart/create-a-repo)
   - [Azure DevOps](https://docs.microsoft.com/en-us/azure/devops/repos/git/create-new-repo?view=azure-devops)
   - [Git-scm](https://git-scm.com/book/en/v2/Git-on-the-Server-Setting-Up-the-Server)
1. Initialize a local repository in the installation directory of Board Connector, e.g., `C:\Program Files\BOARDConnector\config` using the command `git init`.
1. Attach the remote repository to your local one using the command `git remote add origin [ssh/https]://git-server-address/path/to/repo.git`.
1. Commit the current `config` folder.

### Advantage & Usage of Versioning

- By using the main branch for the production environment and development branches for the development or test environments, the former is separated from the latter.
- Applying appropriate and established techniques such as [pull requests](https://www.git-scm.com/docs/git-request-pull) and Git user rights allows the changes to be checked and corrected in advance.
- New developments can **not** cause fundamental damage to the data load of the productive landscape with this approach.
- Versioning enables quick and easy rollbacks of changes by reverting them in Git and is agnostic towards the use of containers (such as Docker).

Note

This scenario can also be implemented with Azure DevOps and Git. For more information, see [Microsoft Documentation](https://docs.microsoft.com/en-us/azure/devops/repos/?view=azure-devops).

______________________________________________________________________

#### Releated Links

- [GitForWindows Download](https://gitforwindows.org/)
- [Manual Migration to a Different Machine](../../documentation/setup/migration/)
- [Getting Started - About Version Control](https://git-scm.com/book/en/v2/Getting-Started-About-Version-Control)
- [Git Basics - Getting a Git Repository](https://git-scm.com/book/en/v2/Git-Basics-Getting-a-Git-Repository)
- [Git Branching - Branches in a Nutshell](https://git-scm.com/book/en/v2/Git-Branching-Branches-in-a-Nutshell)
- [Distributed Git - Distributed Workflows](https://git-scm.com/book/en/v2/Distributed-Git-Distributed-Workflows)
- [Git Basics - Undoing Things](https://git-scm.com/book/en/v2/Git-Basics-Undoing-Things)

The following article describes how to establish an SNC connection to an SAP source system.

The depicted approach uses an X.509 certificate that provides the logon data of the Windows AD user. The correctness of this X.509 certificate is ensured via the company's internal certification authority (ca).

### Workflow

1. Upon connection start, the Secure Login Client retrieves the SNC name from the SAP NetWeaver AS ABAP.
1. The Secure Login Client uses the authentication profile for this SNC name.
1. The user unlocks the security token, for example, by entering the PIN or password.
1. The Secure Login Client receives the X.509 certificate from the user security token.
1. The Secure Login Client provides the X.509 certificate for single sign-on and secure communication between SAP GUI or Web GUI and the AS ABAP.
1. The user is authenticated and the communication is secured.

Tip

The configuration of the X.509 certificate should be implemented by the network & SAP Basis team and requires basic knowledge in this area.

### Requirements

The following system settings are a prerequisite for using this SNC solution:

- Install the [Secure Login Client](https://help.sap.com/viewer/df185fd53bb645b1bd99284ee4e4a750/3.0/en-US/da610fd072e4409baa8b6a96973b5c67.html).
- The SAP application server is configured and activated for Secure Network Communication (SNC).
- The SNC standard library *sapcryptolib* is used as the SNC solution.
- The following SNC parameters are configured:

| SNC parameter | Value | Example | | --- | --- | --- | | snc/gssapi_lib | Path and file name where the SAP Cryptographic Library is located. | *$(DIR_EXECUTABLE)\\sapcrypto.dll* | | snc/identity/as | Application server's SNC name Syntax: p:\<Distinguished_Name> The Distinguished Name part must match the Distinguished Name that you specify when creating the SNC PSE. | *p:CN=saperp.theobald.local* |

### Step-by-Step Guide

Follow the steps below to set up the SNC connectivity ins SAP:

1. Generate the certificate for the application server and AD-user context from common Certificate Authority (ca).

   Note

   The X.509 certificate is available when placed in folder **Certmgr > Personal > Certificates** within Windows certificate store (user).

1. Convert the .pfx file to SAP PSE format e.g., `sapgenpse.exe import_p12 -p cert.pse cert.pfx`.

1. Import the created PSE file via **TA STRUST > Edit mode > PSE Import > PSE Save as SNC Libcrypto**.

1. Edit the SNC configuration of the corresponding SAP user via transaction SU01 > **SNC** > **SNC Name** = p:\<Full Distinguished_Name>, e.g., `p:EMAIL="RandomUser@domain",CN="Random User",OU="Users",OU="TheobaldSoftware",DC="theobald",DC="local"`.

1. Set up SNC authentication in the Board Connector SAP connection settings, see [Configure SNC in the SAP Source](../../documentation/sap-connection/snc-authentication/#configure-snc-in-the-sap-source).

______________________________________________________________________

#### Releated Links

- [Certificate Renewal](../certificate-renewal/)
- [SAP Help: Workflow with X.509 Certificate without Secure Login Server](https://help.sap.com/viewer/df185fd53bb645b1bd99284ee4e4a750/3.0/en-US/06d9e59a0fd44aa4aa082ffad7d618e3.html)
- [SAP Help: Secure Network Communications (SNC)](https://help.sap.com/doc/saphelp_nw70/7.0.31/en-us/e6/56f466e99a11d1a5b00000e835363f/content.htm?no_cache=true)
- [SAP Help: Configuring SNC: External Programs AS ABAP Using RFC](https://help.sap.com/doc/saphelp_nwpi71/7.1/en-US/d9/e8a740bbaa4d8f8bee6f7b173bd99f/content.htm?loaded_from_frameset=true)
- [SAP Help: Setting the SNC Profile Parameters](https://help.sap.com/doc/saphelp_nw73ehp1/7.31.19/en-US/19/164442c1a1c353e10000000a1550b0/content.htm?no_cache=true)
- [SAP Help: Configuring SAP GUI and SAP Logon for Single Sign-On](https://help.sap.com/doc/saphelp_nw73ehp1/7.31.19/en-US/44/0ea40dc6970d1ce10000000a114a6b/content.htm?no_cache=true)
- [SAP Help: Secure Login Client](https://help.sap.com/viewer/df185fd53bb645b1bd99284ee4e4a750/3.0/en-US/ba21970855064e54a9246b6c6de67fb2.html)
- [SAP Additional Content: List of SNC Error Codes](https://wiki.scn.sap.com/wiki/display/Security/List+of+SNC+Error+Codes)

The following article shows how to extract ABAP reports that use an SAP ABAP List Viewer (ALV) layout.

### About Layouts

Layouts in ABAP reports define and control the visual presentation of report data. They determine how data is displayed to the user, including column visibility, column order, column width, aggregation (totals, subtotals), sorting, filtering and other formatting options. Layouts do not affect the actual data.

### Option 1 - Use Layouts in Variants

Some ALV-based reports have a **Layout** field in the selection screen . This field can be used to select a layout before running the report. If the selection screen includes a **Layout** field, that field's value can be saved as part of a [Report Variant](../../documentation/report/variants-and-selections/) . This way, every time the report is executed using that variant, it will automatically use this layout.

Make sure to select the variant in your Board Connector [Report extraction](../../documentation/report/variants-and-selections/#choose-a-variant).

### Option 2 - User-Specific Default Layouts

A user-specific default layout is a layout that is saved together with your SAP user ID. This way, SAP automatically applies the layout each time your SAP user runs the report, if no layout is explicitly chosen.

To use a user-specific default layout in Board Connector, create the layout for the SAP user that is used in your [SAP Connection](../../documentation/sap-connection/).

For more information on how to create a user-specific layout in ALV, see [SAP Help: Working with the SAP List Viewer (ALV) - Saving Layouts](https://help.sap.com/docs/ABAP_PLATFORM_NEW/b1c834a22d05483b8a75710743b5ff26/4d620265d79751b0e10000000a42189c.html?utm_source=chatgpt.com).

______________________________________________________________________

#### Related Links

- [Report Extraction Type](../../documentation/report/)
- [SAP Help: Working with the SAP List Viewer (ALV)](https://help.sap.com/docs/ABAP_PLATFORM_NEW/b1c834a22d05483b8a75710743b5ff26/4d5edc88767161bee10000000a42189b.html?utm_source=chatgpt.com)

The following article shows how to import transport requests for custom functions modules that are included in the installation directory of your product, e.g., `C:\Program Files\BOARDConnector\ABAP`.

### Upload SAP Transport Requests to SAP

If you have access to the file system of SAP, you can copy and paste the files of your transport request directly into the `data` and `cofiles` folders of your SAP system. If you don't have access to the file system, follow the steps below to upload the files of your transport request using the SAP function module ARCHIVFILE_CLIENT_TO_SERVER:

1. Unzip the transport request provided in the installation directory of your product, e.g., `C:\Program Files\BOARDConnector\ABAP`.
1. Open SAP and go to transaction AL11.
1. Find the entry DIR_TRANS in the column *Name of Directory Parameter*. Note or copy the path shown in the column *Directory*.
1. Go to SAP transaction SE37.
1. Enter name of function module ARCHIVFILE_CLIENT_TO_SERVER and click **[Test/Execute]**.
1. In the field **PATH** you select your request file from from step 1. The name of the file starts with an "R", e.g., R900472.
1. In the field **TARGET PATH** you construct your target path using the following pattern:\
   `{copied path from step 2}\data\{request file name}`.
1. Enable case-sensitivity and click **[Execute]**. When prompted, confirm the upload.
1. In the field **PATH** you select your cofile from from step 1. The name of the file starts with a "K", e.g., K900472.
1. In the field **TARGET PATH** you construct your target path using the following pattern:\
   `{copied path from step 2}\cofiles\{cofile name}`.
1. Enable case-sensitivity and click **[Execute]**. When prompted, confirm the upload.

The files are now available in SAP.

Note

Another method for uploading files to SAP is the SAP transaction CG3Z. This transaction is only available on ERP systems.

### Import SAP Transport Requests

Follow the steps below to add the transport requests to the import queue and import them:

1. Go to SAP transaction STMS to open the transport management system.
1. Click **[Import Overview]** ( icon).
1. Double click on the import queue in which you want to load the transport request into.
1. Open the transport request selection dialog via **More > Extras > Other Requests > Add**.
1. Select the transport request and confirm. If prompted, confirm the import.
1. Select your transport request from the list and click **[Import Request]** ( icon). The window "Import Transport Request" opens.
1. Enter the target client. If the version of the SAP system where the transport request was created differs from your SAP system version, select the option **Ignore Invalid Component Version**.
1. Confirm your settings.

The transport request is imported.

### Check the Status of Transport Requests

The import overview of the transport management system (transaction STMS) lists all transport requests.\
The status of the transport requests is displayed in the column "RC".

A green bar indicates that the import was successful. In case of warnings or errors, double click on the icon to view the error messages.

The following article shows how to use the LIKE operand in WHERE-Clauses of the Table extraction type.\
The LIKE operand represents a pattern using the following wildcard characters:

- "%" is any character string (including an empty string)
- "\_" is any character

The pattern is case-sensitive. Trailing blanks in operands are ignored. This also applies in particular to operands of the type string with trailing blanks that are otherwise respected in ABAP.

### Examples

| WHERE-Condition | Description | | --- | --- | | `MSEG~MJAHR LIKE '20__'` | Filter back all fiscal years of the table column MSEG~MJAHR that start with *20*. | | `MSEG~MBLNR LIKE '0049%'` | Filters all records of the table column MSEG~MBLNR that return the Number of Material Document starting with the value *0049*. | | `BKPF~BUKRS LIKE '__1_'` | Filters all records that have a *1* in the third digit of the value for the company code (BKPF~BUKRS). |

______________________________________________________________________

#### Related Links

- [SAP Help: Open SQL - Operands and Expressions - LIKE](https://help.sap.com/doc/abapdocu_752_index_htm/7.52/en-US/abenwhere_logexp_like.htm)

The following article shows how to operate Board Connector with load balancing.\
In this context, load balancing means to distribute the network traffic across multiple Windows servers to avoid server overloads.

### About Load Balancing

In today's highly interconnected world, a load balancer is a crucial tool for managing traffic effectively. When distributing network traffic caused by Board Connector, it is necessary to use a load balancer between different Windows servers that run the Board Connector.

Typical use cases for load balancing include:

- Improved Performance: By distributing network traffic across multiple Board Connector servers, a load balancer can significantly improve the performance of your network. This can be especially important for high-traffic applications that require fast and reliable access.
- Increased Reliability: Load balancing can help increase the reliability of your network by ensuring that no one Board Connector server becomes overloaded with traffic. This helps to prevent downtime and ensures that your network is always available.
- Scalability: A load balancer can also help improve the scalability of your network by allowing you to easily add or remove Board Connector servers as needed. This can be important for businesses that experience sudden spikes in traffic.
- Centralized Management: A load balancer allows you to manage multiple servers from a single location. This makes it easier to monitor your network, troubleshoot issues, and make necessary adjustments.
- Parallel Processing: A load balancer allows running multiple extractions at the same time on different servers. This increases the amount of extractions that can be run in parallel.

### Prerequisites

- Every Board Connector servers needs a server license, see [Documentation: Licensing](../../documentation/setup/license/).
- All Board Connector servers must share the same configuration folder, e.g., by mapping the configuration folder to an external shared storage. The configuration folder contains the settings for the destinations, extractions, sources, server and users. The folder is located in the installation directory of Board Connector, e.g., `C:\Program Files\BOARDConnector\config`. For versioning of the configuration folder you can use [git version control](../deploy-extractions-using-Git-version-control/).
- All Board Connector installations must use the same software version to avoid any version compatibility issues.

### The Process

A load balancer setup with two Board Connector servers uses the following process when processing requests:

1. A client sends a web request to the load balancer. The load balancer is the entry point for all incoming web requests, so it's the first component to receive the request.
1. The load balancer uses a predefined algorithm (e.g., round-robin, least connections, or IP hash) to select the Board Connector server to handle the incoming web request.
1. The load balancer forwards the request to the selected Board Connector server.
1. The selected Board Connector server processes the incoming request and sends the response back to the load balancer.
1. The load balancer receives the response from the selected server and forwards the response to the client.
1. For subsequent web requests, the load balancer repeats this process.

This setting can also be configured to act as Active / Standby servers.\
This means you have multiple servers with identical configurations and applications where only one server is active, while the others remain passive or on standby until a failover event occurs.

The load balancer forwards incoming requests to the active server. If the active server fails, the load balancer will automatically switch to one of the passive servers. The goal is to provide redundancy and ensure high availability and reliability of critical applications and services.

______________________________________________________________________

#### Related Links:

- [Deploying Extractions Using Git Version Control](../deploy-extractions-using-Git-version-control/)
- [Documentation: Installation and Update - Program Directory Files](../../documentation/setup/installation/#installation-directory-files)

This articles shows how to use Board Connector to parse ABAP reports that contain groups of data sets and merge them into a single data set. The depicted example uses the report *FBL3N* that contains multiple groups where each group has its own header and calculation rows.

The article leads you through the following steps to merge all groups into a single data set:

- [Remove rows](#remove-rows) that calculate the content of the rows before.
- [Select a header](#select-a-header) for the report and remove duplicates.
- [Parse rows that contain additional headers as columns.](#parse-rows-with-additional-headers-as-columns)

### Remove Rows

Follow the steps below to remove rows that calculate the content of the rows before. Calculation rows are marked with an * symbol.

1. [Look up](../../documentation/report/#look-up-a-report-or-transaction) a report that contains groups of data. The depicted example uses report FBL3N (RFITEMGL).
1. If the report has variants, [select a variant](../../documentation/report/variants-and-selections/#choose-a-variant).
1. Click **[Load Preview]** to load a preview of the first 100 rows.
1. Click **[Automatically detect columns]** to define the columns of the report.
1. Open the tab *Skip and Parse Rows*.
1. Click **[Add rows to skip]**.
1. To remove calculation rows, enter the keyword \*.\
   All rows that contain the keyword are displayed in a gray font in the preview section.
1. To remove additional rows that separate calculation rows and headers, enter the keyword ---.
1. Click **[OK]** to save the changes.

The calculation rows are skipped during the report extraction.\
For more information on how to manipulate rows in report extractions, see [Documentation: Define Rows](../../documentation/report/report-rows-define/).

### Select a Header

Follow the steps below to select one of multiple available headers as the report header:

1. Open the report extraction from [Remove Rows](#remove-rows) or any other report that contains multiple headers.

1. Click **[Load Preview]** to load a preview of the first 100 rows.

1. Open the tab *Skip and Parse Rows*.

1. In the preview section, right-click the header row and select **Select as header** from the context menu. All rows that contain the header are displayed in a blue font in the preview section.

   Tip

   If the header is not part of the preview (first 100 rows of the report), enter a pattern in the field [**Header pattern**](../../documentation/report/report-rows-define/#header-pattern) to scan all report rows for the pattern.

1. Click **[OK]** to save the changes.

The report parses the selected header as the report header during report extraction.\
Any duplicates of the header are removed from the result set.

### Parse Rows with Additional Headers as Columns

Follow the steps below to parse header rows that contain information about a data set as columns. The depicted example parses the header rows containing the *G/L Account* number and the *Company Code* of a data set as columns.

1. Open the report extraction from [Select a Header](#select-a-header) or any other report that contains multiple headers.

1. Click **[Load Preview]** to load a preview of the first 100 rows.

1. Open the tab *Skip and Parse Rows*.

1. Click **[Add row to parse as column]** to add a new column.

1. Click **[]**. The window "Parse Helper" opens and a new preview of the report data is fetched. This can take a while.

1. Under **Search keyword** enter a unique keyword from the row you want to parse as a column. Matching rows are displayed in the preview section of the window.

1. Make sure only header rows are displayed in the preview section. If the preview includes regular rows, edit the keyword until only header rows remain.

1. Under **New Column Name** enter a name for the new column.

1. Mark the content of the column in the preview section by pressing and dragging the mouse pointer over the length of the content.

1. Click **[OK]** to save the column properties. All rows that will be parsed as a column are displayed in a blue font in the preview section.

1. Repeat steps 4 to 9 for the *Company Code*.

   Tip

   If the *Company Code* is not relevant for your report analysis, remove the corresponding header row from the result set, see [Remove Rows](#remove-rows).

1. Click **[OK]** to save the changes.

1. Run the extraction and check if the rows are parsed correctly.

The extracted report returns a single data set that includes the content of all original data set groups.

______________________________________________________________________

#### Related Links

- [Report](../../documentation/report/)
- [Skip Rows by Keyword](../../documentation/report/report-rows-define/#skip-rows-by-keyword)

The following article shows how to configure a proxy server in Board Connector.

Due to corporate network regulations it can be the required that all web traffic needs to go through a web proxy.

### Proxy Server Settings in Board Connector

By default, Board Connector uses the proxy configuration defined by the Windows environment variables. For information about the necessary environment variable and how to configure them, refer to the [Microsoft Documentation: Configure a proxy using environment variables](https://learn.microsoft.com/en-us/dotnet/azure/sdk/configure-proxy?tabs=cmd#configure-using-environment-variables).

The following article shows how to extract data from the SAP HCM tables PCL1 and PCL2.\
The data can only be extracted using a custom function module and the BAPI extraction type. Data extraction via Table extraction type is not supported.

### Custom Function Module Z_HR_CLUSTER_READ

Create the following custom function module in SAP:

1. Use SAP transaction SE37 to create a remote enabled custom function module Z_HR_CLUSTER_READ.

1. Create the following parameters:

   ```text
   PERNR            TYPE=PC2B0-PERNR;
   ACTIONID         TYPE=CHAR2; DEFAULT = 'P1'
   STARTDATE        TYPE=DATS;
   ENDDATE          TYPE=DATS;

   ```

   ```text
   ERT        LIKE=PC2B8
   ST         LIKE=PC2B5
   CRT        LIKE=PC208

   ```

1. Copy and paste the following ABAP source code into the source code area of the function module.

   ```abap
        FUNCTION Z_HR_CLUSTER_READ.

        *"----------------------------------------------------------------------

        *"*"Local Interface:
        *"  IMPORTING
        "     VALUE(PERNR) TYPE  PC2B0-PERNR OPTIONAL
        *"     VALUE(ACTIONID) TYPE  CHAR2 DEFAULT 'P1'
        *"     VALUE(STARTDATE) TYPE  DATS OPTIONAL
        *"     VALUE(ENDDATE) TYPE  DATS OPTIONAL
        *"  TABLES
        *"      ERT STRUCTURE  PC2B8 OPTIONAL
        *"      ST STRUCTURE  PC2B5 OPTIONAL
        *"      CRT STRUCTURE  PC208 OPTIONAL
        *"----------------------------------------------------------------------
        DATA : BEGIN OF it_pcl1 OCCURS 0,
        srtfd TYPE pcl1-srtfd,
        END OF it_pcl1.

        DATA BEGIN OF b1_key.
             INCLUDE STRUCTURE pdc10.
        DATA END OF b1_key.

        IF actionid = 'P1'.

        SELECT srtfd
        FROM pcl1
        INTO TABLE it_pcl1
        WHERE relid EQ 'B1'
        AND srtfd EQ pernr
        AND srtf2 EQ 0.

       LOOP AT it_pcl1.
         MOVE it_pcl1-srtfd TO b1_key.
         IMPORT st ert FROM DATABASE pcl1(b1) ID b1_key.
         IF sy-subrc EQ 0.
         ENDIF.
       ENDLOOP.

        ENDIF.

        IF actionid = 'P2'.
        DATA : it_rgdir TYPE TABLE OF pc261 INITIAL SIZE 0,
              wa_rgdir LIKE LINE OF it_rgdir,
              it_crt TYPE pay99_result-inter-crt,
              wa_crt LIKE LINE OF it_crt,
              wa_payrollresult TYPE pay99_result,
              v_molga TYPE molga.

       DATA : BEGIN OF wa_out,
               pernr TYPE pernr-pernr,
               gross TYPE pc207-betrg, "Amount
               net TYPE pc207-betrg,
              END OF wa_out,
              it_outtab LIKE TABLE OF wa_out.

        wa_out-pernr = PERNR.
        CALL FUNCTION 'CU_READ_RGDIR'
        EXPORTING
        persnr          = PERNR
        IMPORTING
        molga           = v_molga
        TABLES
        in_rgdir        = it_rgdir
        EXCEPTIONS
        no_record_found = 1
        OTHERS          = 2.
        IF sy-subrc = 0.



       LOOP AT it_rgdir INTO wa_rgdir
                          WHERE fpbeg GE startdate AND
                                fpend LE enddate AND
                                srtza EQ 'A'.  "Current result
           CALL FUNCTION 'PYXX_READ_PAYROLL_RESULT'
             EXPORTING
               clusterid                    = 'RD'
               employeenumber               = PERNR
               sequencenumber               = wa_rgdir-seqnr
               READ_ONLY_INTERNATIONAL      = 'X'
             CHANGING

               payroll_result               = wa_payrollresult
             EXCEPTIONS
               illegal_isocode_or_clusterid = 1
               error_generating_import      = 2
               import_mismatch_error        = 3
               subpool_dir_full             = 4
               no_read_authority            = 5
               no_record_found              = 6
               versions_do_not_match        = 7
               error_reading_archive        = 8
               error_reading_relid          = 9
               OTHERS                       = 10.

           IF sy-subrc = 0.
             LOOP AT wa_payrollresult-inter-crt INTO wa_crt.
               CASE wa_crt-lgart.
                 WHEN '/101'.  " Gross
                   APPEND wa_crt TO crt.
               ENDCASE.
               CLEAR wa_out.
             ENDLOOP.
           ENDIF.
         ENDLOOP.
       ENDIF.
     ENDIF.
   ENDFUNCTION.

   ```

1. Save the function module.

### How to use the Custom Function Module

Depending on the table you want to access, define the following parameters:

1. Look up the function module using the BAPI extraction type.

1. Populate the import parameter ACTIONID with value *P1*.

1. Populate the field PERNR with a value for Personnel Number. The personnel number has to be entered with leading zeroes.

1. Run the extraction. The data is available in the table parameter ST.

1. Look up the function module using the BAPI extraction type.

1. Populate the import parameter ACTIONID with value *P2*.

1. Enter a start date and end date using the parameters STARTDATE and ENDDATE. The date fields have the format YYYYmmDD.

1. Run the extraction. The data is available in the table parameter CRT.

The following article shows how to register an RFC server in SAP releases with Kernel release 720 and higher.

Warning

**RFC server is not working, please check gateway info.**\
As of SAP Kernel Release 720, you can use the parameter *gw/acl_mode* to set an initial security environment to start and register external programs, e.g., RFC Server required for DeltaQ processing / customizing check. If this value is set to *1*, the DeltaQ extraction type cannot register the RFC Server and the Customizing Check returns the an error.

There are two options to avoid this error:

- Set the Profile Parameter *gw/acl_mode* to 0.
- Define a whitelist of programs that can register at the SAP Gateway.

### Change the Profile Parameter *gw/acl_mode*

When setting the profile parameter *gw/acl_mode* to 0 (default is 1), all RFC destinations / RFC servers with different Program IDs can register.

1. Use SAP transaction RZ10 to open the "Edit Profile" menu.
1. Select the profile name *Default* and *Extended Maintenance*.
1. Click **[Change]** and set the profile parameter *gw/acl_mode* value to *0*

The Customizing Check now executes without error messages.

### Define a Whitelist of Programs at the SAP Gateway

To define a whitelist of programs that can register at the SAP Gateway, create two files named *secinfo* and *reginfo*. Both files don't exist per default, see the example below.

1. Create the files *secinfo* and *reginfo*. The files must have the following content:

   ```abap
   #VERSION=2
   P TP=* HOST=internal,local CANCEL=internal,local ACCESS=internal,local
   # the following line should be the LAST line in the secinfo file
   P TP=XTRACT01 USER=* USER-HOST=* HOST=* 

   ```

   ```abap
   #VERSION=2
   # the following line should be the LAST line in the reginfo file
   P TP=XTRACT01

   ```

1. Copy both files to the following directory (data path): `/usr/sap/<SID>/<INSTANCE>/data/`

1. Extend the following two parameters to the Profile Parameter in the SAP transaction RZ10:

   - gw/reg_info = $(DIR_DATA)/reginfo
   - gw/sec_info = $(DIR_DATA)/secinfo

1. Restart the gateway or re-read the security parameters using SAP transaction SMGW (navigate to **Menu -> Goto -> Expert Functions -> External Security -> Reread**).

The Customizing Check now executes without error messages.

Warning

**Registration of the RFC-server fails.**\
The content of both files *secinfo* and *reginfo* override the parameter *gw/acl_mode*.\
Make sure that both files *secinfo* and *reginfo* allow the registration of the RFC-server.

______________________________________________________________________

#### Related Links

- [SAP Help: Gateway Security Files secinfo and reginfo](https://help.sap.com/doc/saphelp_crm700_ehp01/7.0.1.15/en-US/48/b2096b7895307be10000000a42189b/frameset.htm)
- [SAP Note 1850230](https://launchpad.support.sap.com/#/notes/0001850230)
- [SAP Community blog](http://scn.sap.com/docs/DOC-42463)

The following article describes the process of setting up Single-Sign-On (SSO) via Secure Network Communication (SNC) with SAP client certificates. For more information on using SSO with Board Connector (BC), see [Documentation: SAP Single-Sign-On](../../documentation/sap-connection/#single-sign-on-sso).

### Requirements

The usage of *SSO Certificate* requires the correct characteristics of the architecture:

- Implement SAP SSO with X.509 certificates without Secure Login Server, see [SAP-Documentation: Authentication Methods without Secure Login Server](https://help.sap.com/viewer/df185fd53bb645b1bd99284ee4e4a750/LATEST/en-US/7c45fe620ab9469083f7ab50a9008c37.html).
- Implement Microsoft Certificate Store and Active Directory Certificate Templates for SAPGUI/RFC, see [Microsoft TechNet: Certificate Template](https://social.technet.microsoft.com/wiki/contents/articles/53249.active-directory-certificate-services-enterprise-ca-architecture.aspx#Certificate_Template).
- Set up an enrollment agent for Board Connector in AD, see [Microsoft TechNet: Establish Restricted Enrollment Agents](https://social.technet.microsoft.com/wiki/contents/articles/10942.ad-cs-security-guidance.aspx#Establish_Restricted_Enrollment_Agents).
- Install the SAP Secure Login Client on the server that runs Board Connector, see [SAP-Documentation: Secure Login Client](https://help.sap.com/viewer/8ac26ac20064447ba9e65b18e1bb747e/Cloud/en-US/b304e57f6393461dafd7affc2760b05b.html).\
  The Secure Login Client ensures that the correct SNC library is available for *SSO Certificate*. This library is used to open the SAP connection.
- The Board Connector service must run under a Windows AD Service account, see [Run the Board Connector Service under a Windows Service Account](../../documentation/server/service-account/).
- Set up access restrictions for the Board Connector Designer and the BC server, see [Restrict Access to Windows AD Users (Kerberos Authentication)](../../documentation/access-restrictions/restrict-server-access/#restrict-access-to-windows-ad-users-kerberos-authentication).

### Process

The following graphic illustrates the process of authentication via *SSO Certificate*:

1. The user of the BI tool (caller) triggers an extraction by calling the BC webservice of your Xtract product. The caller uses their Active Directory identity to authenticate against the BC webservice via HTTPS and SPNEGO.
1. The BC server checks if a certificate for the caller is available in the Windows Certificate Store. If no certificate is available for the caller, a new certificate is issued by the Windows enrollment agent.
   1. The BC server requests the Client certificate from the Windows Certificate Store via the Windows API. If a certificate is available, the process continues with step 3. If no certificate is available steps 2b) to 2e) are executed.
   1. The BC server requests an enrollment agent certificate from the Windows Certificate Store via the Windows API. The enrollment agent certificate can be used to issue client certificates.
   1. The BC server receives the enrollment agent certificate from the Windows Certificate Store.
   1. If the requested certificate from 2a) is not found in the Windows Certificate Store, the BC server enrolls a new client certificate for the caller using the enrollment agent certificate.
   1. The Windows Certificate Store receives the new client certificate from the Active Directory Services via MSRPC.
1. The BC server receives the client certificate of the caller from the Windows Certificate Store.
1. The BC server configures the SAP Secure Login Client via the Windows Registry.
1. The Secure Login Client receives the caller's client certificate as specified by the BC server in step 4 from the Windows Certificate Store.
1. The Secure Login Client uses the client certificate of the caller to authenticate the caller's identity via SNC against SAP.
1. The BC server extracts data with the identity and privileges of the caller.
1. The BC server loads the extracted data from 7 to the tool that triggered the extraction.

### Setting up SSO and SNC with Client Certificates

Create a new SAP source system in Board Connector to set up SSO with client certificates:

1. Navigate to **[Server > Manage Sources]** in the main menu of the Designer. The window "Manage Sources" opens.
1. Click **[Add]** to create a new SAP source.
1. Open the tab *General* and enter the connection details of your SAP system.
1. Open the tab *Authentication* and activate the option **SNC**.
1. Enter the path to the 64bit version of the SAP Crypto Library in the field *SNC library*, e.g., `C:\Program Files\SAP\FrontEnd\SecureLogin\lib\sapcrypto.dll`. The SAP Crypto Library is installed as part of the SAP Secure Login Client.
1. Enter the SNC partner name of the SAP system in the field **SNC partner name**. This is the same partner name as the SNC name used to set up the SAP GUI.
1. Activate the option **Enroll certificate on behalf of caller (Certificate SSO)**.
1. Enter the technical name of the Active Directory Certificate Template used to authenticate SAP users.
1. Enter the thumbprint of the certificate of the enrollment agent. If you don't know the name or thumbprint, consult the IT department that manages the Active Directory Certificate Services.
1. Click **[Test Designer Connection]** to test your connection settings.
1. Click **[OK]** to confirm your input.

Tip

Create new extractions in the test environment with an SAP connection that uses **Plain Authentication**. Change the SAP source when moving the extraction to the productive environment.

______________________________________________________________________

#### Related Links

- [SAP Help: Secure Network Communications](https://help.sap.com/doc/saphelp_nw73ehp1/7.31.19/en-US/e6/56f466e99a11d1a5b00000e835363f/content.htm?no_cache=true)
- [SAP Help: Secure Login Client](https://help.sap.com/viewer/8ac26ac20064447ba9e65b18e1bb747e/Cloud/en-US/b304e57f6393461dafd7affc2760b05b.html)
- [SAP Help: Logging on with Secure Login Client Using SNC](https://help.sap.com/viewer/df185fd53bb645b1bd99284ee4e4a750/3.0/en-US/68a6caca798e4adbba5608fb69ea6398.html)

The following article shows how to set up Single Sign-On (SSO) with Secure Network Communication (SNC) and External ID.\
*SSO with External ID* uses a Personal Security Environment (PSE) to create a trust relationship between the SAP application server and the service account that runs Board Connector. This allows Board Connector to impersonate any SAP user.

### Requirements

The usage of *SSO with External ID* requires:

- The Board Connector service must run under a Windows AD Service account, see [Run the Board Connector Service under a Windows Service Account](../../documentation/server/service-account/).
- Set up access restrictions for the Board Connector Designer and the BC server, see [Restrict Access to Windows AD Users (Kerberos Authentication)](../../documentation/access-restrictions/restrict-server-access/#restrict-access-to-windows-ad-users-kerberos-authentication).
- Windows AD users must be mapped to SAP users in the SAP table USRACL, see [SAP Help: User Authentication and Single Sign-On](https://help.sap.com/docs/SAP_NETWEAVER_750/e815bb97839a4d83be6c4fca48ee5777/e54344b6d24a05408ca4faa94554e851.html?locale=en-US).
- The SAP CommonCryptoLib must be installed on the machine that runs Board Connector, see [SAP Note 1848999](https://launchpad.support.sap.com/#/notes/1848999).\
  Copy the library (sapcrypto.dll) and the command line tool (sapgenpse.exe) to a local directory, e.g. `C:\PSE\`. For more information, see [SAP Help: Downloading and Installing the SAP Cryptographic Library](https://help.sap.com/docs/SAP_IDENTITY_MANAGEMENT/4773a9ae1296411a9d5c24873a8d418c/3d4ece540ae64e30997498025e37f686.html?locale=en-US).
- The environment variables SECUDIR and SNC_LIB must be set to the PSE directory that contains the SAP CommonCryptoLib.

For more information on PSE, see [SAP Help: Creating PSEs and Maintaining the PSE Infrastructure](https://help.sap.com/doc/saphelp_nw73ehp1/7.31.19/en-us/59/6b653a0c52425fe10000000a114084/frameset.htm).

### The Process

SSO with External ID uses an X.509 certificate & PSE to create a trust relationship between the SAP application server and the service account that runs Board Connector. This allows Board Connector to impersonate any SAP user.

1. Users authenticate themselves against Board Connector via Active Directory (Kerberos) and request data from SAP.
1. Board Connector opens an RFC connection via SNC and uses PSE & External ID for authentication.
1. Board Connector reads the SAP table USRACL to determine the SAP user that is mapped to the Active Directory user from step 1.
1. Board Connector then impersonates the mapped SAP user to request the SAP data via SNC.
1. Board Connector retrieves the requested SAP data with the privileges of the caller.
1. Board Connector loads the extracted SAP data to the tool that triggered the extraction.

### Setup in SAP

1. Use the SAPGENPSE command line tool to generate an X.509 certificate for the Windows service account that runs Board Connector.\
   Use the following command to create the certificate:

   ```console
   sapgenpse gen_pse -p theo-bc.pse

   ```

   The distinguished name of the PSE owner can be the fully qualified hostname of the Board Connector server, e.g., `CN=bcserver.example.com`.

1. Use the the following command to export the certificate:

   ```console
   sapgenpse export_own_cert -v -p theo-bc.pse -o theo-bc.crt

   ```

1. Use SAP transaction STRUST to add the certificate to the list of trusted PSE certificates, see [SAP Help: Adding Certificates to PSE Certificate Lists](https://help.sap.com/docs/SAP_NETWEAVER_750/280f016edb8049e998237fcbd80558e7/798e9421e00b4dc1ade3d4199ac60837-35.html?locale=en-US).

1. Use SAP transaction SNC0 to create an access control list item that allows RFC and external IDs for the Common Name (CN) of the certificate created in step 1.

1. Use SAP transaction STRUST to export the server certificate of the SAP server, see [SAP Help: Exporting the AS ABAP's Public-Key Certificate](https://help.sap.com/saphelp_SNC700_ehp01/helpdata/en/47/d84e3c719d1742e10000000a11405a/frameset.htm).

1. Copy the exported server certificate to the PSE directory of the machine that runs Board Connector.

1. Use the SAPGENPSE command line tool to import the server certificate to the client PSE. Example:

   ```console
   sapgenpse maintain_pk -v -a server.crt -p theo-bc.pse

   ```

1. Use the following command to create a credentials file (cred_v2), see [SAP Help: Creating the Server's Credentials Using SAPGENPSE](https://help.sap.com/saphelp_snc70/helpdata/en/32/ce2e3ad962a51ae10000000a11402f/frameset.htm).

   ```console
   sapgenpse seclogin -p theo-bc.pse –O SAPServiceUser

   ```

   The credentials file gives Board Connector access to the PSE without providing the password for the PSE.

The PSE directory should now contain the following files:

- the client PSE `theo-bc.pse`
- the client certificate `theo-bc.crt`
- the server certificate that was exported from your SAP system `[server].crt`
- the credentials file `cred_v2`

### Setup in Board Connector

Create a new SAP source system in your Board Connector to set up SSO with External ID:

1. Navigate to **[Server > Manage Sources]** in the main menu of the Designer. The window "Manage Sources" opens.
1. Click **[Add]** to create a new SAP source.
1. Open the tab *General* and enter the connection details of your SAP system.
1. Open the tab *Authentication* and activate the option **Secure Network Communications (SNC)**.
1. Enter the name of an SAP user in the field **User** for the initial login with Board Connector.\
   This user must be a technical user (SAP user with security policy set to *Technical User*) and must have privileges to read the SAP table USRACL via the function module RFC_READ_TABLE.
1. Enter the complete path to the SAP cryptographic library in the field **SNC Library**, e.g. `C:\PSE\sapcrypto.dll`.
1. Enter the SPN of the SAP service account in the field **SNC partner name**. Use the following notation: `p:[SPN]@[Domain-FQDN-Uppercase]`.
1. Enable the option **SSO - Log in as caller via External ID**.
1. Click **[Test Connection]** to verify your connection settings.
1. Click **[OK]** to save your changes.

______________________________________________________________________

#### Related Links

- [Documentation: SAP Single-Sign-On](../../documentation/sap-connection/#single-sign-on-sso)
- [Documentation: Run the Board Connector Service under a Windows Service Account](../../documentation/server/service-account/).
- [SAP Help: Creating PSEs and Maintaining the PSE Infrastructure](https://help.sap.com/doc/saphelp_nw73ehp1/7.31.19/en-us/59/6b653a0c52425fe10000000a114084/frameset.htm)

The following article describes the required steps for setting up Single Sign-On (SSO) with Secure Network Communication (SNC) and Kerberos encryption.

Note

SAP officially does not support the Kerberos Wrapper Library (gx64krb5.dll) anymore.

Warning

**Single Sign-On availability.**\
ABAP application server has to run on a Windows OS and SNC with Kerberos encryption setup on SAP.

### Requirements

- The SAP ABAP application server runs under a Windows operating system.
- The BI client (which calls the extraction) runs under Windows.
- The SAP Kerberos Wrapper Library (gsskrb5) is used as the SNC solution.

### "Double Hop" Issue

SNC solution must support the Windows credentials being passed on by Board Connector. Since Active Directory is based on Kerberos, a "Double Hop" issue may occur. Here is a possible solution to the "Double Hop" issue:

For security reasons, Kerberos does not allow credentials to be passed on. But there are Kerberos extensions from Microsoft (S4U extensions) that allow credentials passing on. These extensions are also known as "constrained delegation". Because the Kerberos Wrapper Library uses the Microsoft extensions for Kerberos to work around the "Double Hop" issue, it is only available for Windows. It therefore only works with SAP application servers under Windows and clients under Windows.

Unlike the Kerberos Wrapper Library (gsskrb5) from SAP (according to SAP), SAP's Common Crypto Library does not explicitly support credentials to be passed on. The Kerberos Wrapper Library (gsskrb5) used by multiple customers of Theobald Software.

When using an SNC solution from a third-party vendor, use either the Kerberos Wrapper Library or a corresponding solution of the third-party vendor.

### Activation of HTTPS

1. Enable access control protocol HTTPS within the tab *Web Server* settings.
1. Reference an existing [X.509 certificate](../../documentation/access-restrictions/install-x.509-certificate/) .
1. Click **[OK]** to confirm .

Make sure to check the default ports, e.g., *8197* in Board Connector.

### Configuration of Windows AD Service Account

Using SSO with Kerberos SNC, the Board Connector service must run under a dedicated service account.

Note

As of Board Connector version 5.0 SAP passwords are encrypted with a key that is derived from the Windows account that runs the BC service. The passwords can only be accessed from the same service account, when restoring a backup or moving the files to a different machine. If the service account changes, passwords need to be re-entered manually.

### Server Settings

Warning

**Incompatible library.**\
Board Connector runs on 64bit OS only. Kerberos Wrapper Library gx64krb5.dll(64-Bit version) is required.\
Download `gx64krb5.dll` from [SAP Note 2115486](https://launchpad.support.sap.com/#/notes/2115486).

1. Copy the Kerberos Wrapper Library to the file system, e.g., to `C:\SNC\gx64krb5.dll` of the machine, where the service is running.

1. Place the downloaded .dll file on each machine, where the Designer is running.

1. Open "Computer Management" by entering the following command: `compmgmt.msc`.

1. Under **Local Users and Groups** select **Groups > Administrators**.

1. Click **[Add]** to add the service account to the local admin group .

1. Open "Local Security policy" by entering the following command: `secpol.msc`.

1. Select **[Local Policies > User Rights Assignment]**:

   - Act as part of the operating system
   - Impersonate a client after authentication

1. Change the registry settings of the server machine:

   | **Field** | **Registry Entry** | | --- | --- | | SubKey | HKEY_LOCAL_MACHINE\\SOFTWARE\\SAP\\gsskrb5 | | Entry | ForceIniCredOK | | Type | REG_DWORD | | Value | 1 |

### SAP Source Settings

Note

An existing [SAP connection](../../documentation/sap-connection/) to a Single Application Server or Message Server is the prerequisite for using SSO with SNC.

1. In the main menu of the Board Connector Designer, navigate to **[Server > Manage Sources]**. The window "Source Details" opens.
1. Select an existing SAP source and click **[Edit]** (pencil symbol).
1. Enable the **SNC** option in the subsection *Authentication*.
1. Enable the checkbox *Impersonate authenticated caller (SSO)* .
1. Enter the complete path of the Kerberos library in the field *SNC library* e.g., `C:\SNC\gx64krb5.dll` .
1. Enter the SPN of the SAP service account in the field *Partner name* . Use the following notation: `p:[SPN]@[Domain-FQDN-Uppercase]`.
1. Click **[Test Connection]** to verify your connection settings.
1. Click **[OK]** to confirm.

Note

The SAP Logon Pad SNC settings for partner name differ from the ones used in Board Connector. SAP Logon Pad uses the UPN of the SAP service accounts and Board Connector uses the Service Principal Name (SPN). Use the following notation: *p:[SAP Service Account]@[domain]*. SPN's are case sensitive in the SNC partner name.

### SNC Activation in SAP

In SAP, apply the Kerberos SNC settings as described in the [SAP Help: Single Sign-On with Microsoft Kerberos SSP](https://help.sap.com/viewer/e815bb97839a4d83be6c4fca48ee5777/7.5.9/EN-US/440ebf6c9b2b0d1ae10000000a114a6b.html).

______________________________________________________________________

#### Related Links

- [Documentation: X.509 certificate](../../documentation/access-restrictions/install-x.509-certificate/)
- [Documentation: Run the Board Connector Service under a Windows Service Account](../../documentation/server/service-account/).

The following article describes the process of running extractions using Single-Sign-On (SSO) with SAP Logon-Ticket. For more information on using SSO with Board Connector (BC), see [Documentation: SAP Single-Sign-On](../../documentation/sap-connection/#single-sign-on-sso).

### Requirements

- The Board Connector server must be set up to use HTTPS, see [SSO with Kerberos SNC](../sso-with-kerberos-snc/#activation-of-https).
- The Board Connector service must run under an [BC Service Account](../../documentation/server/service-account/).
- The BC service account must be configured for *Constrained Delegation* to the SPN of the AS Java in AD.
- An Application Server Java (AS Java) must be set up as a Ticket Issuing System, see [SAP Help: Configuring the AS Java to Issue Logon Tickets](https://help.sap.com/doc/saphelp_nw75/7.5.5/EN-US/4a/412251343f2ab1e10000000a42189c/frameset.htm).
- The AS Java must be configured for SPNEGO/Kerberos.
- A mapping between Windows AD users and SAP identities must be configured in the AS Java. The AS Java must be configured to generate SAP Logon Tickets. Consult with your SAP Basis team for more information.
- The SAP AS ABAP must be configured to trust SAP Logon Tickets from the AS Java, see [SAP Help: Using Logon Tickets with AS ABAP](https://help.sap.com/doc/saphelp_nw75/7.5.5/en-US/9d/472b83bbed4915b84b30e539c625ae/frameset.htm).

### Process of Authentication

The following graphic illustrates the process of calling an extraction with SSO via Ticket Issuer:

1. The BI tool user starts an extraction by calling the BC web service. They authenticate against the BC web service with their Active Directory identity, using HTTPS and SPNEGO.
1. The BC server contacts the Active Directory Domain Controller via Kerberos and tries to impersonate the web service caller (BI tool user) against the SAP AS Java (ticket issuer).
1. The BC server receives a Kerberos ticket from the DC that allows it to impersonate the caller against the AS Java.
1. The BC server uses the Kerberos ticket from 3. to authenticate against the AS Java as the caller via HTTPS and SPNEGO.\
   Prerequisite: The AS Java has been configured for SPNEGO/Kerberos.
1. The AS Java maps the caller's AD identity to an SAP user and generates an SAP Logon Ticket for this SAP user. The AS Java sends the SAP Logon Ticket to the BC server via HTTPS as the value of the MYSAPSSO2 cookie.
1. The BC server takes the SAP Logon Ticket that it has received from the AS Java and uses it to authenticate against the AS ABAP as the caller via RFC.
1. The BC server extracts data from the AS ABAP using the identity and privileges of the caller (BI tool user) via RFC.
1. The BC server sends the extracted data from 7. to the caller.

______________________________________________________________________

#### Related Links

- [Set Up an BC Service Account](../../documentation/server/service-account/)
- [SAP Help: Kerberos and SAP NetWeaver AS for Java](https://help.sap.com/doc/saphelp_nw75/7.5.5/EN-US/4c/8a4d292e2849a8b7cbd229be5c94a5/frameset.htm)
- [SAP Help: Using Logon Tickets with AS ABAP](https://help.sap.com/doc/saphelp_nw75/7.5.5/EN-US/d0/dc33c460a243929b7ec120f55af101/frameset.htm)
- [Youtube-Tutorial: Kerberos-Based Single Sign-On to Application Server Java Unlisted](https://www.youtube.com/watch?v=GRIkarGsU5U)

The following article gives an overview of all SAP S/4HANA systems supported by Board Connector.

### Supported SAP S/4HANA Cloud Systems

The following table lists all available SAP S/4HANA cloud systems and their compatibility with Board Connector.\
SAP S/4HANA Cloud Edition (Cloud ERP):

| | S/4HANA Public Cloud | S/4HANA Private Cloud | | --- | --- | --- | | **Compatible with Board Connector:** | (with limitations) | | | **Limitations:** | Only [OData services](../../documentation/sap-connection/settings/#source-type-odata) and Remote Function Modules (BAPIs) released via Communication Scenarios are supported. Function Modules are accessed using the [RFC over Websocket](../../documentation/sap-connection/settings/#general) protocol. | - |

### SAP S/4HANA On Premise Systems

The following table lists all available SAP S/4HANA on premise systems and their compatibility with Board Connector.\
SAP S/4HANA AnyPremise (ERP in the Cloud):

| | S/4HANA Private Cloud Managed by SAP (HEC) | SAP HEC Customer Edition | S/4HANA AnyPremise | S/4HANA AnyPremise | | --- | --- | --- | --- | --- | | Additional Information: | On-Premises Edition | Runs on Customer Data Center | Public Cloud (AZURE/AWS/GCP) | called ERP in DC (Customer Data Center) | | Compatible with Board Connector: | | | | |

The following article shows how to handle the initial table load for delta extractions using the Table CDC extraction type. The article applies in the following situation:

- The Table CDC extraction type is run on SAP releases < 7.10
- The option **Extract table on first run** (Delta initialization) is activated.
- The delta initialization takes longer than the maximum processing time specified in the SAP profile parameter **rdisp/max_wprun_time**.
- The extraction aborts with an error message, e.g., `ERPConnect.ABAPRuntimeException: RfcInvoke failed(RFC_ABAP_RUNTIME_FAILURE): TIME_OUT - Time limit exceeded`.

Note

The custom function module /THEO/READ_TABLE used by the Table CDC component to extract the table does not support background mode on SAP releases < 7.10. The background mode avoids the timeout mentioned above.

### Recommended Workflow

1. Create a Table CDC extraction. Make sure the option **Extract table on first run** is deactivated.
1. Run the Table CDC extraction to initialize the delta extractions. This ensures that no data is missed between table extraction and delta initialization.
1. Create a regular Table extraction using the Table extraction type. Make sure to select an SAP standard function module, e.g., RFC_READ_TABLE.
1. Run the Table extraction.

______________________________________________________________________

#### Related Links

- [Documentation: Define the TableCDC Extraction Type](../../documentation/table-cdc/#define-the-table-cdc-extraction-type).
- [Documentation: Define the Table Extraction Type](../../documentation/table/#define-the-table-extraction-type).
- [Documentation: Table Extraction Settings - Function modules and Background Jobs](../../documentation/table/settings/#extract-data-in-background-job)

The following article illustrates the process of delta table extractions using the Table CDC extraction type.

### Table CDC Process

The delta mechanism of Table CDC includes the following processes:

- Lookup process to read SAP metadata for the definition of the Table CDC extraction.
- CDC watch process to create a database trigger on the source table and to create the corresponding log table in SAP.
- Synchronize data process to run Table CDC extractions regularly.

The depicted graphic illustrates the processes in both Board Connector and in SAP. Click the graphic to zoom in.

Tip

Use the SAP transaction DB02 to view all triggers of Table CDC log tables in SAP.

The following article illustrates the extraction mechanism of the Table extraction type.

### Table Extraction Process

The extraction mechanism of Table includes the following processes:

- Lookup process to read SAP metadata for the definition of the Table extraction.
- Configuration of the Table extraction type definition.
- Execution of the asynchron data loading process.

The depicted graphic illustrates the mechanism in both Board Connector and in SAP. Click the graphic to zoom in.

The following article describes how to use the **Target Principal** field when connecting the Board Connector Designer to an Board Connector Server.

The use of a Target Principal Name (TPN) is required to use Kerberos transport encryption or to authenticate Active Directory users. The Target Principal Name (TPN) can be either a User Principal Name (UPN) or a Service Principal Name (SPN).

Note

The Target Principal Name only needs to be changed in the Board Connector Designer login screen if the service account of the Board Connector Windows service is changed.

### About Target Principal Name (TPN)

By default, the Board Connector Service is executed under the Local System Account.

In the Active Directory (AD), this user acts as a computer account. When dialing into a remote server where the service is not used in the local environment, both an UPN and an SPN can be used in the following form:

| Field | Syntax | Example | | --- | --- | --- | | BC Server | `[host].[domain]:[port]` | theosoftw2012r2.theobald.local:8096 | | Target Principal as **UPN** | `[AD-user]@[domain]` | svc_xusrv@theobald.local | | Target Principal as **SPN** | `[service class]/[host]@[domain]` | HTTP/theosoftw2012r2.theobald.local@THEOBALD.LOCAL |

The Target Principal Name must correspond either to the UPN of the user under which the Board Connector Windows service is running, or to an SPN assigned to this user. The UPN or SPN of the Board Connector Windows service executes the write processes for the target environments in this context.\
Accordingly, this user must have the necessary write permissions for the database.

Note

Board Connector can be used as a distributed application on a central application instance in the company network using appropriate UPNs or SPNs.\
All users connect to this remote server in the company network using the locally installed Board Connector Designer.

#### Example

### User Principal Name (UPN)

A User Principal Name identifies users in a domain. For more information, see [Microsoft Documentation: User Principal Name](https://docs.microsoft.com/en-us/windows/win32/secauthn/user-name-formats?redirectedfrom=MSDN#user-principal-name). A UPN is assigned in the following form:

| Field | Syntax | Example | | --- | --- | --- | | BC Server | `[host].[domain]:[port]` | TODD.theobald.local:8096 (or localhost:8096) | | Target Principal | `[AD-user]@[domain]` | steffan@theobald.local |

Note

After changing the user context of the Windows service, the UPN or SPN for logging in to the Board Connector Server must also be adjusted.

Follow the steps below to configure the service to use with UPN:

1. Open *Windows Services (Local)*.
1. Right-click the Board Connector service to open the service **Properties**.
1. Open the *Log-on* tab and switch to **This Account**.
1. Click **[Browse]** to look up Windows AD users.
1. Click **[Locations]** and select *Entire Directory*.
1. Select an existing UPN or SPN and confirm with **[OK]**.
1. Apply the changes by restarting the Board Connector service.
1. Adjust the UPN in the Target Principal field when logging on to the Board Connector Designer.

### Service Principal Name (SPN)

A Service Principal Name is an identifier for services within an authentication domain. For more information, see [Microsoft Documentation: Service Principal Names](<https://msdn.microsoft.com/en-us/library/ms677949(VS.85).aspx>). An SPN is assigned in the following form:

| Field | Syntax | Example | | --- | --- | --- | | BC Server | `[host].[domain]:[port]` | TODD.theobald.local:8096 (or localhost:8096) | | Target Principal | `HOST/[hostname]@[domain]` | HOST/TODD.theobald.local@THEOBALD.LOCAL |

The service class and host name are required for authenticating a service instance to a logon account. Domain Admin rights are required for processing *Manage Service Accounts* in Active Directory Users and Computers.

### Windows Service does not Start

When a service does not start, configure the service to use a user account with the following rights:

- **Local Security Policy > Local Policies > User Right Management**: *Log on as a service*
- Permissions for the installation folder and subfolders: *Modify*
- HTTP URL Access Control List e.g., `urlacl url=https://+:80/MyUri user=DOMAIN\user`

______________________________________________________________________

#### Related Links

- [Microsoft Documentation: User Principal Name](https://docs.microsoft.com/en-us/windows/win32/secauthn/user-name-formats?redirectedfrom=MSDN#user-principal-name)
- [Microsoft Documentation: Service Principal Names](<https://msdn.microsoft.com/en-us/library/ms677949(VS.85).aspx>)
- [Enable Secure Network Communcation (SNC)via X.509 Certificate](../enable-snc-using-pse-file/)

The following article shows how to use lists and SELECT statements in the [WHERE Clause Editor](../../documentation/table/where-clause/#where-clause-editor) of the Table extraction type.\
Lists can contain multiple values separated by commas e.g., `1,10` or `“1”, “10”`.

### List Parameters

1. Create a Table extraction.
1. Look up the table KNA1, see [Documentation: Define the Table Extraction Type](../../documentation/table/#define-the-table-extraction-type).
1. Click **Edit runtime parameters**. The window "Edit runtime parameters" opens.
1. Click **[Add List]** to define a list parameter, e.g., *Parameter0*.
1. Click **[OK]** to save the parameter. The window "Edit runtime parameters" closes.
1. Open the *WHERE Clause* tab and click **[Editor Mode]** to open the WHERE clause editor.
1. Click **[Add criteria]**, then **[Default with parameter]** to create an empty template in the WHERE clause editor.
1. Select the column *ORT01* from KNA1 as the data you want to filter.
1. Select *IN* as the operator. *IN* is the only operator that can be used for lists.
1. Click **[Select parameter]** in the static parameter component of the WHERE clause. A drop down list opens.
1. Select an existing list parameter from the drop down list, e.g., *Parameter0*.
1. Click **[OK]** to confirm your input.
1. Click **[Load live preview]** or run the extraction to check the output.\
   When providing values for the list parameter, use multiple values separated by commas e.g., `1,10` or `“1”, “10”`.

### Static Lists

The depicted example statement returns all active customers (rows in the table KNA1) that have an address in one of the following cities: Berlin, Stuttgart, Paris, Seattle, Hong Kong or Dongguan.

1. Create a Table extraction.
1. Look up the table KNA1, see [Documentation: Define the Table Extraction Type](../../documentation/table/#define-the-table-extraction-type).
1. Open the *WHERE Clause* tab and click **[Editor Mode]** to open the WHERE clause editor.
1. Click **[Add criteria]**, then **[Default with literal]** to create an empty template in the WHERE clause editor.
1. Select the column *ORT01* from KNA1 as the data you want to filter.
1. Select *IN* as the operator. *IN* is the only operator that can be used for lists.
1. Select *List* as the type of the static filter value.
1. Click **[Press to Edit]** in the static value component of the WHERE clause. The window "Edit List" opens.
1. Select *String* as the **Type** of the list. When working with numbers, select *Number*.
1. Click **[Add]** to add items to the list. You can edit items via double-click.
1. Click **[OK]** to confirm your input.
1. Click **[Load live Preview]** or run the extraction to check the output.\
   When providing values for the list parameter, use multiple values separated by commas e.g., `1,10` or `“1”, “10”`.

### SELECT Statement

SELECT statements can be used to select data from SAP tables, see [ABAP Documentation: Open SQL SELECT](https://help.sap.com/doc/abapdocu_750_index_htm/7.50/en-us/abapselect.htm).\
The depicted example statement returns all active customers (rows in the table KNA1) that have a sales document in the table VBAK for sales document header data.

Note

The usage of SELECT statements is only possible as of SAP Release 7.40, SP05.

1. Create a new Table extraction.

1. Look up the table KNA1, see [Documentation: Define the Table Extraction Type](../../documentation/table/#define-the-table-extraction-type).

1. Open the *WHERE Clause* tab and click **[Editor Mode]** to open the WHERE clause editor.

1. Click **[Add criteria]**, then **[Default with literal]** to create an empty template in the WHERE clause editor.

1. Select the column *KUNNR* from KNA1 as the data you want to filter.

1. Select *IN* as the operator. *IN* is the only operator that can be used for lists.

1. Select *List* as the type of the static filter value.

1. Click **[Press to Edit]** in the static value component of the WHERE clause. The window "Edit List" opens.

1. Select *SELECT* as the **Type** of the list.

1. Enter the following SELECT statement to create a list that contains all items of the column KUNNR from the SAP table VBAK:

   ```text
   SELECT KUNNR FROM VBAK

   ```

1. Click **[OK]** to confirm your input.

1. Click **[Load live Preview]** or run the extraction to check the output.

______________________________________________________________________

#### Related Links

- [Documentation: WHERE Clause Editor](../../documentation/table/where-clause/#where-clause-editor)
# API Reference

This section contains a list of all API endpoints that are available for Board Connector.

Board Connector offers a web API that allows running extractions and querying meta information and extraction logs from Board Connector through web calls. The web API returns the result as an http-json stream.

### Base URL

The basic URL for web calls uses the following format: `[protocol]://[host or IP address]:[port]/`.

#### Examples

| Protocol | Syntax | Example | | --- | --- | --- | | HTTP | `http://[host].[domain]:[port]` | `http://sherri.theobald.local:8097` | | HTTP | `http://[host]:[port]` | `http://localhost:8097` | | HTTPS | `https://[host].[domain]:[port]` | `https://sherri.theobald.local:8197` Requires a dedicated host name and X.509 certificate, see [web server settings](../documentation/server/server-settings/#web-server). |

Note

Make sure to use the correct ports, see [Server Ports](../documentation/server/#ports).

### Run Extractions

```text
[protocol]://[host]:[port]/run/[extraction_name]

```

Runs the specified extraction.

```text
[protocol]://[host]:[port]/start/[extraction_name]

```

Runs the specified extraction asynchronously and returns the run status immediately.

Warning

**Deprecated Endpoints:**

- `[protocol]://[host]:[port]/?name=[extraction_name]` becomes `[protocol]://[host]:[port]/run/[extraction_name]`
- `[protocol]://[host]:[port]/?name=[extraction_name]&wait=false` becomes `[protocol]://[host]:[port]/start/[extraction_name]`

#### Response

The response of the web service call contains the following information:

| | Response | Description | | --- | --- | --- | | | HTTP status code | The HTTP status code *200* indicates a successful extraction call. It does not indicate a successful execution of the extraction. The HTTP status code *404* indicates that the called extraction does not exist. Detailed information can be found in the log of the web service. | | | HTTP header | Shows the timestamp of the extraction in the HTTP header e.g., X-BC-Timestamp: *2021-04-09_19:03:09.971* | | | HTTP response body | The Response in the HTTP body depends on the destination type of the extraction. Depending on the destination type, the extracted data is returned in either CSV or JSON format. |

#### Parameters for `/start/[extraction_name]`

| Parameter | Description | | --- | --- | | `&[parameter1_name]=[value]` | Runs the specified extraction and passes values to the specified [extraction parameters](../documentation/parameters/extraction-parameters/). |

Tip

You can use the UI in the "Run Extraction" menu to generate a URL for extraction runs, see [Run Extractions](../documentation/run-extractions/#run-extractions-in-the-designer).

#### Examples

http://sherri.theobald.local:8097/start/KNA1

```text
MANDT,KUNNR,LAND1,NAME1,ORT01
800,0000000313,DE,zdemo customer zr,
800,0000001824,IN,,
800,0000001832,IN,cus 3,
800,0000001834,IN,52 CUSTOMER,
800,0000001837,IN,emax,
800,0000005002,JP,One time customer,
800,0000010009,,Einmalkunde,
800,0000011113,DE,Myers Corp.,
800,0000011114,DE,Watson & Watson,
800,0000100016,DE,Einmalkunde,
800,0000100026,DE,Reference Customer for Internet,
800,0000100236,US,,
800,0000100291,IN,RELIANCE FRESH DOMESTIC CUSTOMERS,
800,0000200000,IN,MA Reddy Customer,
800,0000200001,IN,SD Customer,
800,0000200002,IN,SMR Customer,
800,0000300050,,,
800,0000300065,GB,ComputerWorld,
800,0000300320,GB,Customer 1,
800,0000300430,DE,testcompany crm,
800,0000300735,US,OTHER MASS,
800,0000300736,US,OTHER GROCRY,
800,0000300737,US,OTHER CONVENIENCE,
800,0000300738,US,OTHER MILITARY,
800,0000300739,US,OTHER FOOD,
...

```

http://sherri.theobald.local:8097/start/KNA1/?cityParam=Stuttgart&companyParam=Theobald+Software

```text
MANDT,KUNNR,LAND1,NAME1,ORT01
800,0000000779,DE,Theobald Software,Stuttgart"

```

### Abort Extractions

```text
[protocol]://[host]:[port]/stop/[extraction_name]

```

Aborts all running extractions that use the specified extraction name. If the abortion is successful, a confirmation message is returned in the HTTP body.

#### Parameters and Options for `/stop/[extraction_name]`

| Parameter | Description | | --- | --- | | `/[yyyy-MM-dd_HH:mm:ss.SSS]` | Only aborts the extraction with the specified extraction name and the specified timestamp. |

Note

The following endpoint is still supported, but can be replaced by `/stop/[extraction_name]/[yyyy-MM-dd_HH:mm:ss.SSS]`:

```text
[protocol]://[host]:[port]/abort?name=[extraction_name]

```

Aborts the latest run of the specified extraction. If the abortion is successful, a confirmation message is returned in the HTTP body.

#### Example

http://sherri.theobald.local:8097/stop/KNA1

```text
Extraction cancellation succeeded.

```

### Get Status of an Extraction

```text
[protocol]://[host]:[port]/status/?name=[extraction_name]&timestamp=[yyyy-MM-dd_HH:mm:ss.SSS]

```

Returns the status of a (running) extraction at the specified timestamp.

Tip

The timestamp corresponds to the *startedAt* element returned by [`[protocol]://[host]:[port]/config/extractions/`](#get-extraction-details) or [`[protocol]://[host]:[port]/logs/extractions/[extraction-name]`](#get-extraction-logs). If an extraction is triggered by an [http request](#run-extractions), the extraction's timestamp is returned in the field `X-XU-Timestamp` of the http request's response header.

#### Response

| State | Description | | --- | --- | | Running | The extraction is running. | | FinishedNoErrors | The extraction is finished without errors. | | FinishedErrors | The extraction is finished, but with at least one error. | | Cancelled | The extraction is finished and was cancelled by the user. |

#### Example

http://sherri.theobald.local:8097/status/?name=KNA1&timestamp=2024-02-05_10:23:08.025

```text
FinishedNoErrors

```

### Get Extraction Logs

```text
[protocol]://[host]:[port]/logs/extractions

```

Returns a list of extraction runs.

#### Response

The result contains the following elements:

| Item | Description | | --- | --- | | extractionName | name of the extraction | | runs | contains *rowCount*, *duration*, *state*, *webServerLog* and *startedAt* of extraction runs | | row count | number of extracted data records | | duration | duration of the execution | | state | status of the extraction (*Running*, *FinishedNoErrors*, *FinishedErrors*, *Cancelled*) | | webServerLog | timestamp of the corresponding [server log](../documentation/logs/#log-levels) | | startedAt | timestamp of the execution |

#### Parameters & Options for `/logs/extractions`

| Parameter | Description | | --- | --- | | `?min=[yyyy-MM-dd_HH:mm:ss.SSS]` | Returns the extraction runs after the specified date and time. | | `?max=[yyyy-MM-dd_HH:mm:ss.SSS]` | Returns the extraction runs before the specified date and time. | | `/[extraction-name]` | Returns all extraction runs of the specified extraction. | | `/[extraction-name]/[yyyy-MM-dd_HH:mm:ss.SSS]` | Returns the extraction run of the specified extraction with the specified timestamp. | | `/[extraction-name]/[yyyy-MM-dd_HH:mm:ss.SSS]/log` | Returns the extraction log of the specified extraction with the specified timestamp. |

Note

For information on how to interpret logs, see [Logs](../documentation/logs/).

#### Examples

http://sherri.theobald.local:8097/logs/extractions?min=2023-08-17_11:20:44.029

```json
{
"extractions": 
[
    {
        "extractionName": [
            "MEBEST"
        ],
        "runs": [
            {
                "rowCount": 53,
                "duration": "PT00H00M00.541S",
                "state": "FinishedNoErrors",
                "webServerLog": "2024-05-31_07:19:36.156",
                "startedAt": "2024-05-31_07:19:37.006"
            }
        ]
    },
    {
        "extractionName": [
            "S4HANA",
            "BSEG"
        ],
        "runs": [
            {
                "rowCount": 12036,
                "duration": "PT00H00M00.584S",
                "state": "FinishedNoErrors",
                "startedAt": "2024-06-12_08:56:28.066"
            }
        ]
    },
    {
        "extractionName": [
            "S4HANA",
            "KNA1"
        ],
        "runs": [
            {
                "rowCount": 10071,
                "duration": "PT00H00M03.753S",
                "state": "FinishedNoErrors",
                "webServerLog": "2024-04-12_11:10:59.505",
                "startedAt": "2024-04-12_11:11:57.977"
            },
            {
                "rowCount": 0,
                "duration": "PT00H00M03.068S",
                "state": "FinishedErrors",
                "webServerLog": "2024-05-31_07:20:06.041",
                "startedAt": "2024-05-31_07:20:06.840"
            }
        ]
    }
]

```

http://sherri.theobald.local:8097/logs/extractions/KNA1

```json
{
    "runs": [
        {
            "rowCount": 10071,
            "duration": "PT00H00M03.753S",
            "state": "FinishedNoErrors",
            "webServerLog": "2024-04-12_11:10:59.505",
            "startedAt": "2024-04-12_11:11:57.977"
        },
        {
            "rowCount": 0,
            "duration": "PT00H00M03.068S",
            "state": "FinishedErrors",
            "webServerLog": "2024-05-31_07:20:06.041",
            "startedAt": "2024-05-31_07:20:06.840"
        }
        ]
    }

```

http://sherri.theobald.local:8097/logs/extractions/KNA1/2024-04-12_11:11:57.977

```json
{
    "rowCount": 10071,
    "duration": "PT00H00M03.753S",
    "state": "FinishedNoErrors",
    "webServerLog": "2024-04-12_11:10:59.505",
    "startedAt": "2024-04-12_11:11:57.977"
}

```

http://sherri.theobald.local:8097/logs/extractions/KNA1/2024-04-12_11:11:57.977/log

```json
{
    "rowCount": 10071,
    "duration": "PT00H00M03.753S",
    "state": "FinishedNoErrors",
    "webServerLog": "2024-04-12_11:10:59.505",
    "startedAt": "2024-04-12_11:11:57.977",
    "logEntries": [
        {
            "timestamp": "2024-04-12_11:11:58.080",
            "logLevel": "Info",
            "source": "Table",
            "message": "Board Connector server version: 6.4.1.0"
        },
        {
            "timestamp": "2024-04-12_11:11:58.157",
            "logLevel": "Debug",
            "source": "Table",
            "message": "Attempting to load Theobald.Extractors.Table.TableExtractionDefinition information for extraction KNA1"
        },

        ...
        {
            "timestamp": "2024-04-12_11:12:01.728",
            "logLevel": "Debug",
            "source": "Table",
            "message": "Wrapping up extractor."
        },
        {
            "timestamp": "2024-04-12_11:12:01.730",
            "logLevel": "Info",
            "source": "Table",
            "message": "Extraction finished with status FinishedNoErrors."
        },
        {
            "timestamp": "2024-04-12_11:12:01.730",
            "logLevel": "Debug",
            "source": "Table",
            "message": "Writing run information."
        },
        {
            "timestamp": "2024-04-12_11:12:01.736",
            "logLevel": "Info",
            "source": "Table",
            "message": "Extraction run information was updated."
        }
    ]
}

```

### Get Server Logs

```text
[protocol]://[host]:[port]/logs/web

```

Returns a list of timestamps that correspond to server logs.

#### Parameters & Options for `/logs/web`

| Parameter | Description | | --- | --- | | `?min=[yyyy-MM-dd_HH:mm:ss.SSS]` | Returns the timestamps of server logs after the specified date and time. | | `?max=[yyyy-MM-dd_HH:mm:ss.SSS]` | Returns the timestamps of server logs before the specified date and time. | | `/[yyyy-MM-dd_HH:mm:ss.SSS]` | Returns the server log entries with the specified timestamp. |

Note

For information on how to interpret logs, see [Logs](../documentation/logs/).

#### Examples

http://sherri.theobald.local:8097/logs/web?min=2024-02-05_12:39:29.022

```json
{
    "logs": 
    [
        "2024-06-18_10:19:05.500",
        "2024-06-20_12:33:11.346",
        "2024-06-20_12:59:16.603",
        "2024-06-20_13:00:47.833",
        "2024-06-20_13:01:50.974",
        "2024-06-20_13:02:10.364",
        "2024-06-20_13:02:17.521",
        "2024-06-20_13:03:08.071",
        "2024-06-20_13:03:08.819",
        "2024-06-20_13:03:59.725",
        "2024-06-20_13:15:45.630",
        "2024-06-20_13:21:43.620"
    ]
}

```

http://sherri.theobald.local:8097/logs/web/2024-06-20_13:21:43.620

```json
{
    "logEntries": 
    [
        {
            "timestamp": "2024-06-20_13:21:43.707",
            "logLevel": "Info",
            "source": "WebServerHandler",
            "message": "Client [fe80::d3ac:77ba:ce0f:83b1%8]:56863"
        },
        {
            "timestamp": "2024-06-20_13:21:43.817",
            "logLevel": "Debug",
            "source": "HttpServer",
            "message": "Reading..."
        },
        {
            "timestamp": "2024-06-20_13:21:43.852",
            "logLevel": "Info",
            "source": "HttpServer",
            "message": "Processing /logs/extractions/S4HANA,KNA1."
        },

        ...

    ]
}

```

### Get Software Version

```text
[protocol]://[host]:[port]/version

```

Returns the software version of the Board Connector server installation in JSON format.

#### Example

http://sherri.theobald.local:8097/version

```json
{
  "version": "6.8.1.2"
}

```

### Get Extraction Details

```text
[protocol]://[host]:[port]/config/extractions

```

Returns a list of all defined extractions in JSON format.

#### Response

The result contains the following elements:

| Item | Description | | --- | --- | | name | name of the extraction | | type | extraction type | | sapObject | name of the extracted SAP object | | source | name of the source connection | | destination | name of the target environment | | latestRun | contains *rowCount*, *duration*, *state* and *startedAt* of the latest extraction run | | rowCount | number of the last extracted data records | | duration | duration of the last execution | | state | status of the extraction (*Running*, *FinishedNoErrors*, *FinishedErrors*, *Cancelled*) | | startedAt | timestamp of the last execution | | created | contains *machine*, *timestamp* and *user* of when the extraction was created | | machine | machine on which the extraction was created | | timestamp | timestamp of the creation | | user | user that created the extraction | | lastChange | contains *machine*, *timestamp* and *user* of when the extraction was last changed | | machine | machine on which the extraction was last changed | | timestamp | timestamp of the last change | | user | user that last changed the extraction |

#### Parameters & Options for `/config/extractions`

| Parameter | Description | | --- | --- | | `/[extraction_name]/parameters` | Returns a list of runtime parameters used in the specified extraction. Every extraction has a set of *Extraction*, *Source* and *Custom* [extraction parameters](../documentation/parameters/extraction-parameters/). The parameters are available in the "Run Extraction" window. | | `/[extraction_name]/result-columns` | Returns the result columns of an extraction. |

#### Examples

http://sherri.theobald.local:8097/config/extractions/

```json
{
    "extractions": 
    [
        {
            "name": [
                "0MAT"
            ],
            "type": "DeltaQ",
            "technicalName": "0MATERIAL_ATTR",
            "source": "saperp",
            "destination": "http-csv",
            "latestRun": {
                "rowCount": 20275,
                "duration": "PT00H00M13.383S",
                "state": "FinishedNoErrors",
                "startedAt": "2023-08-17_11:24:07.770"
            },
            "created": {
                "machine": "TODD",
                "timestamp": "20221005T080618.544Z",
                "user": "THEOBALD\\steffan"
            },
            "lastChange": {
                "machine": "SHERRI",
                "timestamp": "20240129T131530.701Z",
                "user": "THEOBALD\\alice"
            }
        },
        {
            "name": [
                "0MATERIAL"
            ],
            "type": "DeltaQ",
            "technicalName": "0COSTCENTER_0101_HIER",
            "source": "saperp",
            "destination": "http-csv",
            "latestRun": {
                "rowCount": 200,
                "duration": "PT00H00M00.114S",
                "state": "FinishedNoErrors",
                "startedAt": "2023-08-17_11:31:44.029"
            },
            "created": {
                "machine": "SHERRI",
                "timestamp": "20230815T114651.045Z",
                "user": "THEOBALD\\alice"
            },
            "lastChange": {
                "machine": "SHERRI",
                "timestamp": "20230817T113328.786Z",
                "user": "THEOBALD\\alice"
            }
        }
    ]
}

```

http://sherri.theobald.local:8097/config/extractions/KNA1/parameters

```json
{
    "extraction": 
    [
        {
            "name": "ignoreCache",
            "description": "Ignore the result cache",
            "type": "Flag",
            "default": "False"
        },
        {
            "name": "preview",
            "description": "Enable/disable preview mode",
            "type": "Flag",
            "default": "False"
        },
        {
            "name": "source",
            "description": "Sets the name of the source",
            "type": "Text",
            "default": "ec5"
        },
        {
            "name": "destination",
            "description": "Sets the name of the destination",
            "type": "Text",
            "default": "csv"
        },
        {
            "name": "rows",
            "description": "Maximum number of rows",
            "type": "Number",
            "default": "0"
        },
        {
            "name": "whereClause",
            "description": "Where Clause",
            "type": "Text",
            "default": null
        },
        {
            "name": "packageSize",
            "description": "Package Size",
            "type": "Number",
            "default": "50000"
        }
    ],
    "source": 
    [
        {
            "name": "lang",
            "description": "Logon Language",
            "type": "Text",
            "default": "EN"
        }
    ]
}

```

http://sherri.theobald.local:8097/config/extractions/KNA1/result-columns

```json
{
    "columns": 
    [
        {
            "name": "KUNNR",
            "description": "Customer Number",
            "type": "StringLengthMax",
            "length": 10,
            "isPrimaryKey": true,
            "isEncrypted": false,
            "referenceField": "",
            "referenceTable": ""
        },
        {
            "name": "LAND1",
            "description": "Country Key",
            "type": "StringLengthMax",
            "length": 3,
            "isPrimaryKey": false,
            "isEncrypted": false,
            "referenceField": "",
            "referenceTable": ""
        },
        {
            "name": "NAME1",
            "description": "Name 1",
            "type": "StringLengthMax",
            "length": 35,
            "isPrimaryKey": false,
            "isEncrypted": false,
            "referenceField": "",
            "referenceTable": ""
        },
        {
            "name": "ORT01",
            "description": "City",
            "type": "StringLengthMax",
            "length": 35,
            "isPrimaryKey": false,
            "isEncrypted": false,
            "referenceField": "",
            "referenceTable": ""
        },
        {
            "name": "Mean_UMSAT",
            "description": "Annual sales",
            "type": "Double",
            "isPrimaryKey": false,
            "isEncrypted": false,
            "referenceField": "UWAER",
            "referenceTable": "KNA1"
        }
    ]
}

```
