{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"/]+","pipeline":["stopWordFilter"],"fields":{"title":{"boost":1000.0},"text":{"boost":1.0},"tags":{"boost":1000000.0}}},"docs":[{"location":"","title":"Board Connector HelpCenter","text":"&lt; Welcome to Board Connector! &gt;  <p>Access your SAP data directly from Board, without an additional data warehouse.  Learn how to use Board Connector by browsing our documentation, articles and more.</p>"},{"location":"#latest-news","title":"Latest News","text":"<p>Coming soon...</p> <p></p>"},{"location":"#additional-resources","title":"Additional Resources","text":"<p>Product Information</p><p>Visit our official Board Connector website to take a look at the advantages Board Connector offers, a list of FAQs and more.</p> <p>Success Stories</p><p>Get to know real customer scenarios with Board Connector by reading one of our success stories.</p> <p>Blog</p><p>Discover exciting articles and helpful tips about SAP data and cloud integration, SAP process automation and more.</p> <p>Events &amp; Webinars</p><p>Find out about upcoming events and Webinars. Join our live webinars and experience interactive communication or visit our SAP experts live at an event.</p> <p>Technical Newsletter</p><p>Our technical newsletter informs you once a month about new features, releases, breaking changes and articles.</p> <p>Feedback Form</p><p>We are constantly striving to improve our products and would love to get your feedback. Our feedback form is very short, just write down what you want us to know .</p>"},{"location":"changelog/","title":"ChangeLog","text":"<ul> <li> This section contains a version history for yunIO.</li> </ul>"},{"location":"changelog/#recommended-update-interval","title":"Recommended Update Interval","text":"<p>We recommend checking for updates at least every three months. </p> <p> Download the latest version</p>"},{"location":"changelog/#definition-of-version-numbers","title":"Definition of Version Numbers","text":"<p>Format: A.B.C [X]</p> <ul> <li>A is incremented with major changes. Additional steps might be necessary when upgrading to this version.</li> <li>B is incremented when an important feature is added, modified, or removed.</li> <li>C is incremented when a bug is fixed, or a small feature is added, modified, or removed.</li> <li>[X] defines the recommended priority for updating:<ul> <li>H - High:   Install immediately.</li> <li>M - Medium: Install within your usual update interval.</li> <li>L - Low:    Install only if advised by the support team.</li> </ul> </li> </ul>"},{"location":"changelog/#_1","title":"ChangeLog","text":""},{"location":"getting-started/","title":"Getting Started","text":"<ul> <li> This section shows how to install and set up yunIO for the first time.</li> </ul>","tags":["quickstart","quick start"]},{"location":"getting-started/#installation","title":"Installation","text":"<ol> <li>Download a 30 days trial version of yunIO.</li> <li>Run the yunIO executable (yunIOSetup.exe) to install yunIO. For information on system requirements, see Requirements.</li> <li>Make sure that the YunIO Service is running on your windows system and that the default port 8077 is not blocked by your firewall.</li> <li>Open the yunIO Designer at <code>http://localhost:8077/</code> in a web browser of your choice. If the yunIO service does not run on the same machine as the browser, replace <code>localhost</code> with the name or IP address of the host on which the service runs.</li> </ol> <p>For more information, see Documentation: Installation.</p>","tags":["quickstart","quick start"]},{"location":"getting-started/#connect-to-sap","title":"Connect to SAP","text":"<p>Before connecting to SAP for the first time, set up an SAP dialog user with the necessary SAP Authorization Objects.</p> <ol> <li>Navigate to the   Connections menu at the left side navigation area of the Designer.</li> <li>Click [Add Connection] to create a new SAP connection.</li> <li>Enter the system details of your SAP system in the subsection System.</li> <li>Enter the SAP credentials of the SAP dialog user in the subsection Authentication.</li> <li>Click [Test Connection] to validate the connection parameters. A window with a status message opens.</li> <li>Click [Save] to save the connection settings. </li> </ol> <p></p> <p>For more information, see Documentation: SAP Connection.</p>","tags":["quickstart","quick start"]},{"location":"getting-started/#create-a-service","title":"Create a Service","text":"<ol> <li>Navigate to the   Services menu at the left side navigation are of the Designer.</li> <li>Click [Add Service] to create a new web service.</li> <li>Enter a name and a short description of the service. </li> <li>Select an existing SAP connection under Connection.</li> <li> <p>Select one of the following {{ components }} under Type: </p> {{ Component }} Description {{ bapi }} Executes BAPIs and Function Modules. {{ table }} Extracts SAP ABAP reports. {{ transaction }} Extracts data from SAP tables and views. {{ report }} Executes SAP transactions without SAP GUI interaction. </li> <li> <p>Click [Save and edit]. The settings of the selected {{ component }} open and the service is now available in the  Services menu of yunIO.</p> </li> </ol> <p></p> <p>Note</p> <p>Click   to edit the name, description and source of an existing service. Click   to edit the {{ component }} settings of the service. </p>","tags":["quickstart","quick start"]},{"location":"getting-started/#how-to-create-a-simple-service-for-beginners","title":"How to Create a Simple Service for Beginners","text":"<p>Follow the steps below to create a simple service that extracts customer master data from SAP:</p> <ol> <li>Create a service that uses the {{ component }} {{ table }}.</li> <li>In the Search SAP tables and views menu, enter the name of the SAP standard table KNA1. Use wildcards ( * ) if needed.</li> <li>Click [Search] to display the tables found in the SAP system.</li> <li>Select KNA1 from the search results. The settings of the {{ component }} {{ table }} open automatically.</li> <li>Optional: Select the table columns you want to extract. By default all columns are extracted.  For more information on filter options and advanced settings, see Documentation: Creating a Table Service.</li> <li>Click [Save] to save the service.</li> </ol> <p></p>","tags":["quickstart","quick start"]},{"location":"getting-started/#run-services","title":"Run Services","text":"<p>Follow the steps below to run services:</p>  Testrun Services in the browser Testrun Services in yunIO <ol> <li>Navigate to the  Services menu at the left side navigation area of the Designer.</li> <li>Click   under Service to copy the service URL of a service.</li> <li>Open a new tab in your browser and paste the service URL in the address bar.</li> <li>Press Enter to trigger a service run. The response body of the service is displayed in the browser.</li> </ol> <p>Note</p> <p>This approach only works with simple services that do not use input parameters. For more information about running services and passing parameters, see Documentation: Run Services.</p> <ol> <li>Navigate to the  Services menu at the left side navigation area of the Designer.</li> <li>Click   to open the Run Service menu of a service.</li> <li>If no parameters are defined, click [Run] to execute the service. The response body of the service is displayed under Output Parameters (Response).</li> <li>Click [Close] to close the Run Service menu.</li> </ol> <p></p> <p>For more information about running services and passing parameters, see Documentation: Run Services.</p>","tags":["quickstart","quick start"]},{"location":"getting-started/#integrate-services-in-3rd-party-tools","title":"Integrate Services in 3rd-Party-Tools","text":"<p>Web services created with yunIO can be integrated into all cloud applications that support REST API/Swagger (OpenAPI), e.g. Power Automate, Nintex, etc.</p> <ol> <li>Navigate to the   Services menu at the left side navigation area of the Designer.</li> <li>Click   to copy or   to download the service definition for integration with 3rd-party-tools. </li> </ol> <p></p> <p>The knowledge base contains articles about multiple integration scenarios, including the following:</p> <p>Microsoft Power Automate Integration</p> <p>Nintex Automation Cloud Integration</p> <p>Alteryx Integration</p>","tags":["quickstart","quick start"]},{"location":"documentation/about-this-documentation/","title":"About this Documentation","text":""},{"location":"documentation/about-this-documentation/#about-the-user-documentation-of-theobald-software","title":"About the User Documentation of Theobald Software","text":"<p>The user documentation of Theobald Software is designed to introduce readers to the main functions of Board Connector.</p> <p>Theobald Software's claim is to keep the user documentation up to date according to the latest product version.  Information concerning the older version is removed gradually from the documentation content.  It is generally recommended to always install the latest version of the product.</p> <p>Theobald Software's claim is to always update all the used screenshots of other software vendors, nevertheless this cannot be guaranteed. </p> <p>\u00a92024 Theobald Software GmbH. All rights reserved.</p>"},{"location":"documentation/about-this-documentation/#target-group-and-audience","title":"Target group and audience","text":"<p>This documentation is created for all users of Board Connector.  The user documentation offers an overview of the interface, of the navigation and of the basic information to the users who never or rarely worked with the product.  Experienced users can find more detailed information on more complex topics and use the user documentation for reference.</p> <p>Reading the \"Getting Started\" section is the prerequisite for working with the product.  The documentation can also be useful during the evaluation phase. </p>"},{"location":"documentation/about-this-documentation/#typographical-conventions","title":"Typographical conventions","text":"Convention Used for marking: Example bold &amp; square brackets Buttons [Edit] bold URL buttons Subscriptions bold Fields within a window, tab names Name italics Input values MATNR italics Drop-down menu options TextAndCode"},{"location":"documentation/about-this-documentation/#notes-and-warning-messages","title":"Notes and warning messages","text":"<p>There are three main types of warning messages with the corresponding colors.</p> Signal word Color Severity and meaning Note Blue Additional information Warning Yellow Information that is important for executing an error free procedure Tip Green Tips Recommendation Green Theobald Software recommendations and best practices advice <p>Warning Messages comply with EN 82079 and formulated according the SAFE-method that is derived from German. The SAFE method is a procedure for systematically designing safety instructions. The severity of the danger as well as the source of the danger. </p> <p>\"SAFE\" stands for:</p> <p>Schwere der Gefahr (Signalwort) Art und Quelle der Gefahr Folgen bei Missachtung der Gefahr Entkommen (Ma\u00dfnahmen zur Abwehr der Gefahr)</p> <p>Translation:  Severity of the danger (Signal word) Type and source of the danger Consequences of disregarding the danger Escape (measures to avert the danger)</p> <p>Example:</p> <p>Warning</p> <p>RFC_ERROR_SYSTEM_FAILURE - No more storage space available for extending an internal table To avoid a memory overflow on the SAP source system and to avoid huge overheads, choose a package size that suits your memory capacity.</p> <p>Note</p> <p>The corresponding SQL command is generated dynamically and executed on the SAP server.</p>"},{"location":"documentation/glossary/","title":"Glossary","text":"<p>This section contains an alphabetical list of words often used in relation to yunIO.</p>"},{"location":"documentation/glossary/#basic-authentication","title":"<code>Basic Authentication</code>","text":"Basic Authentication is a method for an HTTP user agent (e.g., a web browser) to provide a username and password when making a request.  When Basic Authentication is set up for yunIO services, users are required to provide credentials before executing the service."},{"location":"documentation/glossary/#designer","title":"<code>Designer</code>","text":"\"Designer\" refers to the yunIO web UI. For more information, see Designer."},{"location":"documentation/glossary/#endpoint","title":"<code>Endpoint</code>","text":"An endpoint in yunIO is a combination of the yunIO base URL and an HTTP method. For more information, see Endpoint."},{"location":"documentation/glossary/#integration-type","title":"<code>Integration Type</code>","text":"<p>The integration type defines which SAP objects yunIO is to access.  yunIO offers the following integration types: </p> <ul> <li>Function</li> <li>Table </li> <li>Report</li> <li>Transaction</li> </ul>"},{"location":"documentation/glossary/#service","title":"<code>Service</code>","text":"Services are the main entities in yunIO.  When called, a yunIO web service queries the data that is defined in the integration type of the service from the assigned SAP source.  The queried data is then returned to the caller in the HTTP response of the service.  A list of all services is displayed in the Services menu of the designer, see Creating a Service."},{"location":"documentation/glossary/#source","title":"<code>Source</code>","text":"A source represents a connection to an SAP system. For more information, see SAP Connection."},{"location":"documentation/glossary/#swaggeropenapi","title":"<code>Swagger/OpenAPI</code>","text":"OpenAPI is the specification used by yunIO services. The services are implemented in the Swagger 2.0 format. For more information, see OpenAPI Specification."},{"location":"documentation/glossary/#transactions","title":"<code>Transactions</code>","text":"Transaction is the name of an integration type supported by yunIO, see Transactions. In this context, transactions refer to SAP transaction codes that can be executed via yunIO."},{"location":"documentation/glossary/#transport-layer-security-tls","title":"<code>Transport Layer Security (TLS)</code>","text":"TLS is a security protocol to ensure a safe data transfer when calling yunIO services via an HTTPS connection. For more information, see Transport Layer Security."},{"location":"documentation/introduction/","title":"Introduction to yunIO","text":"<ul> <li> This section contains user documentation for yunIO.</li> </ul>"},{"location":"documentation/introduction/#about-yunio","title":"About yunIO","text":"<p>yunIO is a no-code application for designing, automating, and integrating SAP processes in the cloud.  The service offers easy integration of SAP data and business processes in different platforms and applications. </p> <p>yunIO provides REST-based services to read and write data from an to connected SAP systems.  The web services can be easily integrated into your process automation solutions, e.g. Power Automate, Nintex, etc.</p> AutomationBusiness ProcessesData Management <p></p> <p></p> <p></p>"},{"location":"documentation/introduction/#software-architecture","title":"Software Architecture","text":"<p>yunIO comes with an embedded Web UI, the yunIO Designer, that can be accessed through a standard web browser. A Windows service enables connectivity with SAP.  The yunIO service is installed on a local or cloud-hosted Windows server environment.  If yunIO is installed on a local server environment, a Gateway instance of your choice (e.g. Microsoft om-premises data gateway) can be used to securely tunnel the connection.  </p> <p></p>"},{"location":"documentation/introduction/#integration-types","title":"Integration Types","text":"<p>yunIO offers the following {{ components }} to cover a wide range of integration scenarios.</p> {{ Component }} Description {{ bapi }} Execute BAPIs and Function Modules. {{ table }} Extract data from SAP tables and views. {{ transaction }} Execute SAP transactions without SAP GUI interaction. {{ report }} Extract SAP ABAP reports."},{"location":"documentation/logs/","title":"Logs","text":"<p>This section contains information on the server and transaction logs created by yunIO. The logs are accessible in the   Logs menu in the Designer.</p>"},{"location":"documentation/logs/#display-logs-in-designer","title":"Display Logs in Designer","text":"<p>The logs are located in the Logs section of the yunIO Designer.  There are three types of logs:</p> Type of log Description Service Runs Displays a list of the latest service runs, including the status of the service run. Service Workers Displays logs of service worker processes. For each TCP connection, a service worker process is started. It receives the HTTP request, executes the service, and sends the response to the caller. Transaction Workers Displays logs of Transaction services. When running Transactions services, a transaction worker process is started. It executes the service and produces the response, which is then forwarded to the caller by the service worker."},{"location":"documentation/logs/#service-runs","title":"Service Runs","text":"<p>The list of service runs consists of the following columns:</p> <ul> <li>Name of the service</li> <li>Date of the log</li> <li>Duration of the service run</li> <li>State of the service run (Running, FinishedErrors, FinishedNoErrors)</li> </ul> <p>Click a service run to display the corresponding extraction log  .</p> <p></p>"},{"location":"documentation/logs/#service-workers-and-transaction-workers","title":"Service Workers and Transaction Workers","text":"<p>The logs of the service worker and transaction worker consist of two sections:</p> <ul> <li>Timestamps of the logs  </li> <li>Content of the logs  </li> </ul> <p>Click a timestamp to open the corresponding logs.</p> <p></p>"},{"location":"documentation/logs/#how-to-read-worker-logs","title":"How to Read Worker Logs","text":"<p>A single log has the following format: <code>Time | Type | Source | Message</code>.   Example:</p> Time Type Source Message PT00H00M43.777S D ExecutionCore: Extraction finished, firing callback"},{"location":"documentation/logs/#time","title":"Time","text":"<p>Each log has a timestamp that uses pacific time (PT) in hours (H), minutes (M) and seconds (S), e.g., <code>PT00H00M43.777S</code>.</p>"},{"location":"documentation/logs/#type","title":"Type","text":"<p>Each log entry is assigned one of the following message types:</p> Type of log entry Description E - Errors Error messages issued during the extraction process. I - Information Status messages, about processes that do not lead to an error. W - Warnings Information about problems that do not lead to an extraction error, e.g., authentication errors. D - Debug Details Detailed information that helps finding error cause."},{"location":"documentation/logs/#logs-directory","title":"Logs Directory","text":"<p>The following list shows all logs that are created in the <code>logs</code> folder of yunIO's installation directory, e.g., in <code>C:\\Program Files\\Theobald Software\\yunIO\\logs</code>:</p> Folder Subfolder Description diagnostic_runs - Contains debug information about transaction services. This folder is only created when diagnostics mode is enabled in the settings of a transaction service. extractions - Contains logs (.json and .log files) for every service run. The .json file contains the duration and result status of the run and the .log file contains the details of the run. servers Contains server logs. The subfolders <code>azurerelay</code>, <code>designer</code>, <code>services</code> and <code>websockets</code> each represent a web server used by yunIO. Each server has a listener and a worker. The listener listens on the configured port of the server for connections (listener logs). Each connection starts a worker that processes requests (worker logs). azurerelay Contains listener logs for Azure Relay connections. This folder is only created when the server settings are set to use an Azure Hybrid Connection. designer Contains listener and transaction logs. The transaction logs are created when recording a transaction in the Designer. services Contains listener, worker and transaction logs. The transaction logs are created when a transaction service is run. websockets Contains listener and worker logs of the websocket server that provides the yunIO Designer with data. ServiceLog.txt - Logs of the yunIO Windows service. <p>Tip</p> <p>To redirect logs to another location, symlink the logs folder of yunIO's installation directory to a custom directory. Example for PowerShell: <code>New-Item -ItemType SymbolicLink -Target \"E:\\yuniolog\" -Path \"C:\\Program Files\\Theobald Software\\yunIO\\logs\"</code></p>"},{"location":"documentation/run-services/","title":"Run Services","text":"<p>This page shows how to test, integrate and pass parameters to services created in yunIO.</p>"},{"location":"documentation/run-services/#run-services-in-yunio","title":"Run Services in yunIO","text":"<p>Follow the steps below to pass parameters and testrun the service directly in yunIO:</p> <ol> <li>Navigate to the   Services menu at the left side navigation area of the Designer.</li> <li>Click   to open the Run Service menu of a service. </li> <li>If Access Restrictions are enabled, enter valid user credentials  .  If no restrictions apply, the credentials input is grayed out. </li> <li> <p>If the service requires input parameters, enter values for the parameters  . Use the [ + ] button to display nested items. The depicted example uses an input parameter NAME.</p> <p>Tip</p> <p>Click [Edit] to add or delete parameters.</p> </li> <li> <p>Click [Run] to execute the service. The response body of the service is displayed under Output Parameters .</p> <p>Tip</p> <p>If the response body returns an error message, click [Logs] to open the logs of the service run.</p> </li> <li> <p>Click [Close] to close the Run Service menu.</p> </li> </ol> <p>The following control buttons in the Run Service menu regulate the display of input and output parameters.</p> Button Description Collapses all parameter items. Expands all parameter items. Saves all entered parameters in a .json file. The file can be used to reload the parameter values or to share values with other yunIO instances. Uploads parameter values from a local .json file. The json file can be created using . Removes all defined input parameters. This option is only available for input parameters. Displays the parameters in a full screen view. To close the full screen view, click [ X ]."},{"location":"documentation/run-services/#integrate-services-with-3rd-party-tools","title":"Integrate Services with 3rd-Party-Tools","text":"<p>Web services created with yunIO can be integrated into all cloud applications that support REST API/Swagger (OpenAPI), e.g. Power Automate, Nintex, etc.</p> <ul> <li>Click   to copy the URL of the service definition to your clipboard. The service definition URL can be used by third-party-tools to load the meta data of the service.</li> <li>Click   to download the service definition. The service definition is saved as a JSON file that defines how to run the service.  The JSON file can be imported into third-party tools.</li> </ul> <p></p> <p>The knowledge base contains articles about multiple integration scenarios, including the following:</p> <p>Microsoft Power Automate Integration</p> <p>Nintex Automation Cloud Integration</p> <p>Alteryx Integration</p>"},{"location":"documentation/run-services/#pass-parameters","title":"Pass Parameters","text":"<p>How parameters are passed to a yunIO service, depends on the http method that is used to call the service. yunIO supports the http methods <code>POST</code> and <code>GET</code>, see POST vs GET.</p> POSTGET <p>Parameters are listed in the request body of a service. Edit the request body to assign values to the parameters. The depicted example uses an input parameter NAME: </p> <p>Parameters are available as query parameters in the service URL.  Use query parameters to assign values or add the values directly in the service URL. The depicted example uses an input parameter NAME: </p> <p>Note</p> <p>If URL parameters contain characters other than <code>A\u2013Z a\u2013z 0\u20139 - _ . ! ~ * ' ( )</code> use an escape sequence for the characters.  Some characters can break the URL, e.g., <code># % &amp;</code>.</p>"},{"location":"documentation/run-services/#post-vs-get","title":"POST vs GET","text":"<p>yunIO services support the http methods <code>POST</code> and <code>GET</code>.</p> POST GET Data Length No restrictions. Maximum URL length is 2048 characters. Parameters Parameters are part of the http request body. Supports query parameters in the URL. Data Safety Parameters are not stored in the browser history or in web server logs. Parameters are visible in the service URL. Data is cached. Data Types No restrictions. Only supports ASCII characters. <p>Recommendation</p> <p>We recommend using the POST method with Transport Layer Security (HTTPS) to ensure data protection. Do not use the GET method to send sensible data, e.g. credentials.</p>"},{"location":"documentation/server-settings/","title":"Server Settings","text":"<p>This section contains an overview of the yunIO server settings in the   Settings menu.  Any changes made in this menu only take effect after clicking [Save] and restarting the yunIO Windows service.</p>","tags":["ssl"]},{"location":"documentation/server-settings/#services-endpoint","title":"Services Endpoint","text":"","tags":["ssl"]},{"location":"documentation/server-settings/#service-url-kind","title":"Service URL Kind","text":"<p>The Service URL Kind defines the URL that is used to connect to yunIO services.</p> Service URL Kind Description Default If TLS is active, the first Subject Alternative Name provided by the X.509 certificate is used as the hostname, see Transport Layer Security. Custom Allows you to enter a custom hostname. Enter the hostname in the field Custom Hostname and click [Save] to update the OpenAPI definitions of all existing services. Azure Relay Hybrid Connection When an Azure Relay Hybrid Connection is set up, yunIO services use an Azure Relay address to become accessible to applications running in the Azure cloud. For more information on Azure Relay, see Establish an Azure Relay Hybrid Connection to yunIO. <p>Note</p> <p>Wildcard certificates are supported. Enter the hostname of the certificate as a custom endpoint.</p> <p>Tip</p> <p>To set up multiple endpoints, use multiple yunIO servers, one for each endpoint.</p>","tags":["ssl"]},{"location":"documentation/server-settings/#openapi-target-kind","title":"OpenAPI Target Kind","text":"<p>The OpenAPI Target Kind defines properties that can be added to the Swagger/OpenAPI json file of yunIO services.</p> OpenAPI Target Kind Description Default If this option is active, the Swagger/OpenAPI json file contains no additional properties. Nintex Gateway Select this option when integrating yunIO services with the Nintex Gateway. Nintex properties are added to into Swagger/OpenAPI json file and there is no need to manually change the swagger definition. For more information, see Integrate a yunIO Service via Nintex Gateway.","tags":["ssl"]},{"location":"documentation/server-settings/#transport-layer-security","title":"Transport Layer Security","text":"<p>Transport Layer Security (TLS) protocol allows the user to communicate with the respective service in a secure way by encrypting the communication with that service (HTTPS). This requires the installation of an X.509 certificate, see Install an X.509 Certificate.  For more information on TLS, see Microsoft: Transport Layer Security Protocol.</p> <p>Note</p> <p>Depending on whether yunIO is hosted on a local server or a cloud environment, the procedure for certificate creation differs. Refer to the documentation available on the internet or contact your network administrators.</p>","tags":["ssl"]},{"location":"documentation/server-settings/#certificate-access","title":"Certificate Access","text":"<ol> <li>Import the certificate to the Windows Certificate Store using the Microsoft Management Console (mmc).</li> <li>If the certificate is not listed in the menu or in the Windows certificate store, install the X.509 certificate. The certificate must have an Subject Alternative Name. When activating TLS, the Subject Alternative Name is used as the new hostname.  A custom hostname can be entered in the Services Endpoint setting.</li> <li>After importing the desired X.509 certificate, manage its private keys to add a permission entry for the Windows user. </li> <li>Click [Pick Certificate] and select an X.509 certificate from the list of available certificates.</li> <li>Enter \"NT Service\\yunIO Service\" within the Object picker UI, check the granted permission and apply the changes.  </li> </ol> <p>For information on how to renew a certificate, see Certificate Renewal for TLS.</p>","tags":["ssl"]},{"location":"documentation/server-settings/#tls-enabled","title":"TLS enabled","text":"<p>Once a certificate is selected, the option TLS enabled is available. Enable or disable the usage of transport encryption for the web server.</p> <p>Note</p> <p>To access the Designer via TLS, restart the yunIO server and connect to the Designer using the following URL pattern: <code>https://[host]:[port]</code>. If you cannot access the designer. because of problems with the TLS certificate, delete the <code>tls.json</code> file in the installation directory of yunIO e.g., <code>C:\\Program Files\\Theobald Software\\yunIO\\config\\servers\\tls.json</code>. Restart the yunIO server.</p>","tags":["ssl"]},{"location":"documentation/server-settings/#services-designer-and-websockets","title":"Services, Designer and WebSockets","text":"<p>In the subsections Services, Designer and WebSockets the ports for service consumption, Designer access and WebSocket configurations are defined. </p> <p>Valid port numbers range from 1-65535.  It is not recommended to use ports below 1000, because they are often already taken and using them with different services can lead to service disruptions.</p>","tags":["ssl"]},{"location":"documentation/server-settings/#default-ports","title":"Default Ports","text":"Service Name HTTP HTTPS Description Services 8075 8175 This port is used by the web server, which handles the requests to invoke a service. Designer 8077 8177 This port is used to open the yunIO Designer on a client machine. WebSockets 8076 8176 This port is used by the yunIO Designer to read and write configurations, services, etc.","tags":["ssl"]},{"location":"documentation/access-restrictions/","title":"Access Restriction","text":"<p>This section contains information on how to set up access restrictions. YunIO allows you to restrict access to the Server and Designer (global access), as well as for specific services (service access).</p>"},{"location":"documentation/access-restrictions/#workflow","title":"Workflow","text":"<ol> <li>If no users exist, create a new user.</li> <li>Assign global access rights to the user in the   Access Control menu.</li> <li>Optional: To restrict access on the service-level, assign service access rights in the    Services menu.</li> </ol> <p>More information on access restriction is provided in the following sections:</p> <ul> <li>   Restrict Server &amp; Designer Access</li> <li>   Restrict Service Access</li> </ul>"},{"location":"documentation/access-restrictions/global-access/","title":"Global Access","text":"<p>Global access control allows you to restrict user access to the yunIO server and the yunIO Designer. The global access settings are accessible in the  Access Control menu.</p>"},{"location":"documentation/access-restrictions/global-access/#restrict-designer-and-server-access","title":"Restrict Designer and Server Access","text":"<p>Follow the steps below to restrict the access to the Designer and the server.  By default, the access restrictions also apply to services. To define custom access restrictions for services, see Service Access.</p> <ol> <li>Navigate to the   Settings menu.</li> <li>Enable Transport Layer Security, see Server Settings: Transport Layer Security.</li> <li>Restart the Windows yunIO service and connect to the Designer using an HTTPS connection.</li> <li>Navigate to the   Access Control menu.</li> <li>Set the Server Access to Authenticated, see Server Access .  </li> <li>Assign a restriction level to existing users, see Privileges .</li> <li>Click [Save]. </li> <li>Restart the Windows yunIO service again.</li> </ol> <p>When connecting to the Designer, you are now prompted to enter user credentials: </p> <p>Note</p> <p>If you lock yourself out and cannot login to the Designer, delete the <code>permission.json</code> file in the installation directory of yunIO e.g., <code>C:\\Program Files\\Theobald Software\\yunIO\\config\\servers\\permission.json</code>. Restart the yunIO server afterwards.</p> <p>Tip</p> <p>You can also use SAP credentials for basic authentication, see SAP Connection. Using SAP credentials and custom user credentials for basic authentication in parallel is not supported.</p>"},{"location":"documentation/access-restrictions/global-access/#settings","title":"Settings","text":"<p>To open the global access settings, navigate to the   Access Control menu.</p> <p></p>"},{"location":"documentation/access-restrictions/global-access/#server-access","title":"Server Access","text":"<p>Activate or deactivate access control for the Designer and the server. </p> Server Access Description Anonymous If active, anyone can access the Designer and execute services. Anonymous is the default setting. Authenticated is active, only defined users with a designated restriction level have access to the Designer and the server. This option is available, if at least one user is defined and Transport Layer Security is enabled."},{"location":"documentation/access-restrictions/global-access/#privileges","title":"Privileges","text":"<p>All users defined in the  Users menu are listed in the subsection Privileges. </p> <p>Select a restriction level from the dropdown list next to the user name to assign a restriction level. The following restriction levels are available:</p> Restriction Level Description Server Admin No restrictions. Create / Modify The user can login to the designer, create new connections and services, and modify existing ones. The user cannot make changes to users, access control, or server settings. Read / Execute The user can login to the Designer, but cannot make any changes. The user can run services. No access The user can not login to the Designer or run any services. This option can be used to temporarily disable users from using yunIO."},{"location":"documentation/access-restrictions/service-access/","title":"Service Access","text":"<p>Service access control allows you to restrict user access to specific services, e.g., to temporarily disable users from using a service. The service access settings are accessible for every service in the  Services menu.</p>"},{"location":"documentation/access-restrictions/service-access/#restrict-access-to-services","title":"Restrict Access to Services","text":"<p>By default services inherit access restrictions from the server-level, see Global Access. Follow the steps below to further restrict access on the service-level:</p> <ol> <li>Navigate to the   Services menu.</li> <li>Click   next to the service you want to restrict access to.  The service access settings of the service open. </li> <li>Set the Service Access to Custom, see Service Access . </li> <li>Assign a restriction level to existing users, see Privileges .</li> <li>Click [Save].</li> </ol> <p>When running the service, you are now prompted to enter user credentials (basic authentication).</p> <p>Note</p> <p>When access rights from the server and service levels differ, the more restrictive access right applies, e.g., a user with Read/Execute privilege on the server level cannot be upgraded to Modify on the service level. The Administrator privilege is the only privilege on the server level that cannot be downgraded on the service level.</p> <p>Tip</p> <p>Click [Reset permissions] to set all user rights to No Access.</p>"},{"location":"documentation/access-restrictions/service-access/#settings","title":"Settings","text":"<p>To open the service access settings, click   next to the service you want to restrict access to.</p> <p></p>"},{"location":"documentation/access-restrictions/service-access/#service-access","title":"Service Access","text":"<p>Activate or deactivate further restrictions of existing global access rights for the selected service. </p> Service Access Description Inherit If active, the global access rights apply to the service, see Global Access. Inherit is the default setting. Custom If active, the access rights defined in the subsection Privileges apply to the service. Custom service restrictions do not affect users with global Server Admin rights."},{"location":"documentation/access-restrictions/service-access/#privileges","title":"Privileges","text":"<p>All users defined in the  Users menu are listed in the subsection Privileges. </p> <p>Select a restriction level from the dropdown list next to the user name to assign a restriction level. The following restriction levels are available:</p> Restriction Level Description Modify The user can read, run and modify the service. Read / Execute The user can read and run the service. No access The user can not access, modify, read or run the service."},{"location":"documentation/access-restrictions/user-management/","title":"User Management","text":"<p>This page shows how to manage users in the   Users menu of the Designer. The yunIO user management allows you to create custom users with credentials to restrict access to the yunIO Server / Designer and to specific yunIO services.</p>"},{"location":"documentation/access-restrictions/user-management/#create-users","title":"Create Users","text":"<p>Follow the steps below to create new users:</p> <ol> <li>Navigate to the   Users menu.</li> <li>Click [Add User]. The user details open. </li> <li>Enter a unique name for the user.  </li> <li>Enter a password. The password must be at least 8 characters long.</li> <li>Re-enter the password to avoid spelling mistakes.</li> <li>Click [Save] to save the credentials.</li> </ol>"},{"location":"documentation/access-restrictions/user-management/#delete-users","title":"Delete Users","text":"<p>Follow the steps below to delete existing users:</p> <ol> <li>Navigate to the   Users menu.</li> <li>Click  . A confirmation popup opens.  </li> <li>Click [OK] to confirm the deletion of the user.</li> </ol>"},{"location":"documentation/access-restrictions/user-management/#change-passwords","title":"Change Passwords","text":"<p>Follow the steps below to change the password of a user:</p> <ol> <li>Navigate to the   Users menu.</li> <li>Click  . The user details open. </li> <li>Change the password of the user. The password must be at least 8 characters long.</li> <li>Re-enter the new password to avoid spelling mistakes.</li> <li>Click [Save].</li> </ol> <p>Note</p> <p>It is not possible to change a user name. Create a new user instead.</p>"},{"location":"documentation/access-restrictions/user-management/#related-links","title":"Related Links","text":"<ul> <li>Global Access Control</li> <li>Service Access Control</li> </ul>"},{"location":"documentation/function-modules-and-bapis/","title":"Integrate Function Modules / BAPIs","text":"<p>This page shows how to use the {{ bapi }} {{ component }}. The {{ bapi }} {{ component }} can be used to parameterize and execute SAP function modules and BAPIs for automation.</p> <p>Warning</p> <p>Missing Authorization. To use the {{ bapi }} {{ component }}, access to the designated authority objects (RFC) in SAP must be available.  Adjust SAP Authority Objects: BAPI accordingly.</p>"},{"location":"documentation/function-modules-and-bapis/#about-function-modules-bapis","title":"About Function Modules / BAPIs","text":"<p>Function modules are procedures that encapsulate and reuse global functions in the SAP system.  SAP systems contain several predefined functions modules that can be called from any ABAP program.  A Business Application Programming Interface (BAPI) is a remote function module that can access business data and processes of an SAP system from different systems.</p>"},{"location":"documentation/function-modules-and-bapis/#custom-bapis","title":"Custom BAPIs","text":"<p>The use of custom BAPIs (Z function modules) is possible.</p> <p>Note</p> <p>Issues specific to Z function modules are not included in the scope of support provided by Theobald Software.</p>"},{"location":"documentation/function-modules-and-bapis/create-a-bapi-service/","title":"Create a BAPI Service","text":"<p>This page shows how to use the {{ bapi }} {{ component }}.</p>"},{"location":"documentation/function-modules-and-bapis/create-a-bapi-service/#prerequisites","title":"Prerequisites","text":"<ul> <li>A connection to an SAP system is available, see SAP Connection.</li> <li>The SAP user has sufficient user rights, see SAP Authority Objects.</li> </ul>"},{"location":"documentation/function-modules-and-bapis/create-a-bapi-service/#look-up-a-function-module-bapi","title":"Look up a Function Module / BAPI","text":"<ol> <li>Create a new service of {{ component }} {{ bapi }}. </li> <li>In the Search SAP function modules menu, enter the name of a Function Module / BAPI or a function groups  . Use wildcards (*) if needed. </li> <li>Click [Search] to display the search results.</li> <li>Select a source file from the list of available search results  . </li> </ol> <p>The settings of the {{ bapi }} {{ component }} open.</p>"},{"location":"documentation/function-modules-and-bapis/create-a-bapi-service/#next-steps","title":"Next Steps","text":"<p>Set up parameters for the service. The necessary parameters of a {{ bapi }} service vary depending on the BAPI.</p> <ol> <li>Add input parameters (data you want to send to SAP) to the service, see Import Parameters.</li> <li>Add output parameters (data you want to receive from SAP) to the service, see Export Parameters. </li> <li>Click [Run] to check the results, see Running Services in yunIO.</li> </ol>"},{"location":"documentation/function-modules-and-bapis/create-a-bapi-service/#parameterize-import-parameters","title":"Parameterize Import Parameters","text":"<p>Import parameters can be parameterized in the request body of the service. The depicted example shows the request body of a service where the Import Parameter NAME is set to Supplied by Caller.</p> <p></p> <p>Note</p> <p>When parameterzing the import parameters of the service, make sure the input matches the data type of the parameters.</p>"},{"location":"documentation/function-modules-and-bapis/settings/","title":"Settings","text":"<p>This section contains an overview and description of all available {{ bapi }} settings.</p> <p>The {{ bapi }} settings consist of the following subsections:</p> <ul> <li>Control Buttons to close, save or delete the service  .</li> <li>Function Module displays the name and description of the selected Function Module / BAPI  .</li> <li>Advanced Settings define how data is committed to and from SAP  .</li> <li>Function Module Interface Parameters define what data is committed to and from SAP .</li> </ul> <p></p>"},{"location":"documentation/function-modules-and-bapis/settings/#control-buttons","title":"Control Buttons","text":"<p>[Delete] Deletes the service.</p> <p>[Cancel] Closes the service and dismisses any changes.</p> <p>[Run] Opens the Run Menu to testrun the service directly in yunIO.</p> <p>[Save] Saves changes in the service.</p>"},{"location":"documentation/function-modules-and-bapis/settings/#function-module","title":"Function Module","text":"<p>The Function Module section displays the name and description of the selected function module or BAPI. To select a different source file, click Select in the upper right corner of the section.</p>"},{"location":"documentation/function-modules-and-bapis/settings/#advanced-settings","title":"Advanced Settings","text":""},{"location":"documentation/function-modules-and-bapis/settings/#commits-transaction","title":"Commits Transaction","text":"<p>If this option is active, the function module \"BAPI_TRANSACTION_COMMIT\" is called after processing the selected Function Module / BAPI.  Some SAP Function Modules (e.g., BAPI_PO_CREATE) require this commit function to successfully update data in the database.</p>"},{"location":"documentation/function-modules-and-bapis/settings/#function-module-interface-parameters","title":"Function Module Interface Parameters","text":"<p>In the Function Module Interface Parameters section all parameters of the selected Function Module / BAPI are displayed. Function Modules / BAPIs can have up to four parameter types: </p> <ul> <li>Import</li> <li>Export</li> <li>Changing</li> <li>Table</li> </ul>"},{"location":"documentation/function-modules-and-bapis/settings/#import-parameters","title":"Import Parameters","text":"<p>Import parameters represent the input values sent from the client to SAP. In the tab Import you can define import parameters.</p> <p>Select import parameters using the drop-down list next to the parameter:</p> Input Description Supplied by Caller The item becomes available as a parameter in the request body of the service and can be set at runtime. Default (defined in SAP) The item uses the default values from SAP. This is the default setting. Constant The item uses the value that is entered in the Value field. <p></p> <p>Tip</p> <p>To use tables as input parameters, see Table Parameters.</p>"},{"location":"documentation/function-modules-and-bapis/settings/#export-parameters","title":"Export Parameters","text":"<p>Export parameters represent the output values sent from SAP back to the client after the execution of a Function Module. In the tab Export you can select the items you want to add to the output of the Function Module / BAPI and change their name: </p> <p></p> <p>Tip</p> <p>To use tables as output parameters, see Table Parameters.</p>"},{"location":"documentation/function-modules-and-bapis/settings/#changing-parameters","title":"Changing Parameters","text":"<p>Changing parameters represent parameters that can be used for input and output. In the tab Changing you can define the changing parameters.</p>"},{"location":"documentation/function-modules-and-bapis/settings/#table-parameters","title":"Table Parameters","text":"<p>Table parameters are parameters presented in a table structure consisting of multiple rows. Tables can be used for input and output. In the tab Tables you can define table parameters for importing and exporting data into and from an SAP Function Module or BAPI.</p>"},{"location":"documentation/function-modules-and-bapis/settings/#tables-as-input-parameters","title":"Tables as Input Parameters","text":"<p>Select tables fields as input parameters for the service using the drop-down list next to the table field:</p> Input Description Supplied by Caller The item becomes available as a parameter in the request body of the service and can be set at runtime. Default (defined in SAP) The item uses the default values from SAP. This is the default setting. Constant The item uses the value that is entered in the Value field."},{"location":"documentation/function-modules-and-bapis/settings/#tables-as-output-parameters","title":"Tables as Output Parameters","text":"<ul> <li>Select the table fields you want to add to the output of the service.</li> <li>Optional: change the name of the output parameter. Table parameters use the following naming format: <code>[Table name].[column name]</code>.</li> </ul>"},{"location":"documentation/reports/","title":"Integrate Reports","text":"<p>This page shows how to use the {{ report }} {{ component }}. The {{ report }} {{ component }} can be used to extracts data from ABAP reports and SAP transactions.</p> <p>Warning</p> <p>Missing Authorization. To use Reports in yunIO, access to the designated authority objects (RFC) in SAP must be available. Adjust SAP Authority Objects: Report accordingly.</p>"},{"location":"documentation/reports/#about-reports","title":"About Reports","text":"<p>ABAP report programs extract and present huge amounts of data for SAP business applications. SAP offers predefined standard reports that cover the basic needs of customers. They can be executed via transaction codes. </p> <p>Tip</p> <p>Use transaction code SAP1 to get a list of all reports for all modules</p>"},{"location":"documentation/reports/#custom-reports","title":"Custom Reports","text":"<p>The extraction of custom reports (Z reports) is possible if the report returns a table-like structure in SAP.</p> <p>Note</p> <p>Issues specific to Z reports are not included in the scope of support provided by Theobald Software.</p>"},{"location":"documentation/reports/create-a-report-service/","title":"Create a Report Service","text":"<p>This page shows how to use the {{ report }} {{ component }}. A report extraction is possible if the report returns a table-like structure in SAP.</p>"},{"location":"documentation/reports/create-a-report-service/#general-workflow","title":"General Workflow","text":"<p>The following graphic shows the general workflow of setting up report services with yunIO: </p>"},{"location":"documentation/reports/create-a-report-service/#prerequisites","title":"Prerequisites","text":"<ul> <li>A connection to an SAP system is available, see SAP Connection.</li> <li>The SAP user has sufficient user rights, see SAP Authority Objects.</li> <li>The custom function module <code>Z_XTRACT_IS_REMOTE_REPORT</code> is installed in your SAP system, see Installation of Z_XTRACT_IS_REMOTE_REPORT.</li> <li>The report must return a table-like structure in SAP.</li> </ul>"},{"location":"documentation/reports/create-a-report-service/#look-up-a-report","title":"Look Up a Report","text":"<ol> <li>Create a new service of {{ component }} {{ report }}. </li> <li>In the Search SAP Reports menu, enter the name or TCODE of a report  . The use of wildcards ( * ) is only supported for report names. </li> <li>Click [Search] to look up the name of a report or click [By TCODE] to look up the TCODE.</li> <li>Select a source file from the list of available search results  . </li> </ol> <p>The settings of the {{ report }} {{ component }} open.</p>"},{"location":"documentation/reports/create-a-report-service/#next-steps","title":"Next Steps","text":"<p>The following options are available to filter data, detect columns, etc:</p> <ol> <li>If the report has variants, select a variant in the subsection Advanced Settings. </li> <li>Optional: In the subsection Selection Parameters, enter values for selection criteria you want to change or dynamize.</li> <li>Click [Detect Columns] to execute the report based on the selected variant or selections and detect columns automatically.  The detected columns are displayed in the subsection Output columns. This step is mandatory for using the service.</li> <li>Click [Run] to check the results, see Running Services in yunIO.</li> </ol> <p>For more information on {{ report }} settings, see Settings.</p>"},{"location":"documentation/reports/create-a-report-service/#sample","title":"Sample","text":"<p>Follow the steps below to create a simple service that extracts the SAP ABAP report RLT10010 (Evaluation of Movements per Storage Type).</p> <ol> <li>Create a new service of {{ component }} {{ report }}.</li> <li>Look up the report RLT10010.</li> <li>Select a variant or enter selection parameters. The given example uses a variant VAR01. </li> <li>Run the report in SAP to determine the number of rows to skip. Set Skip rows from top to 8 to skip the header of the report. </li> <li>Click [Detect Columns] to automatically detect the columns of the report. The detected columns are displayed in the section Output Columns.</li> <li>Click [Save] to save the service.</li> <li>Click [Run] to check the output of the service, see Running Services in yunIO. </li> </ol>"},{"location":"documentation/reports/settings/","title":"Settings","text":"<p>This section contains an overview and description of all available {{ report }} settings.</p> <p>The {{ report }} settings consist of the following subsections:</p> <ul> <li>Control Buttons to close, save or delete the service  .</li> <li>Report displays the name and description of the selected report  .</li> <li>Advanced Settings define how the data is extracted from SAP  .</li> <li>Selection Parameters define the input for the yunIO service .</li> <li>Output Columns define the output of the yunIO service .</li> </ul> <p></p>"},{"location":"documentation/reports/settings/#control-buttons","title":"Control Buttons","text":"<p>[Delete] Deletes the service.</p> <p>[Cancel] Closes the service and dismisses any changes.</p> <p>[Run] Opens the Run Menu to testrun the service directly in yunIO.</p> <p>[Save] Saves changes in the service.</p>"},{"location":"documentation/reports/settings/#report","title":"Report","text":"<p>The Report section displays the name and description of the selected report. To select a different source file, click Select in the upper right corner of the section.</p>"},{"location":"documentation/reports/settings/#advanced-settings","title":"Advanced Settings","text":""},{"location":"documentation/reports/settings/#run-in-background","title":"Run in background","text":"<p>When the checkbox Run in background is activated, the report extraction is executed as a background job in SAP.  Extracting large amounts of data in the foreground mode, may cause timeout errors (\u201cTime limit exceeded\u201d). Activate this setting to prevent timeout errors.</p>"},{"location":"documentation/reports/settings/#dynamic-column-width-and-offset","title":"Dynamic column width and offset","text":"<p>When the checkbox \"Dynamic column width and offset\" is activated, the column width and offset are adjusted dynamically at report runtime.  Alternative requirement for reports that have varying column widths depending on the report\u2019s selection criteria.</p>"},{"location":"documentation/reports/settings/#skip-rows-from-top","title":"Skip rows from top","text":"<p>Reports can display meta information in the header section of the report, before the actual report body. The setting Skip rows from top allows skipping the meta information.  Enter the number of rows to skip at the beginning of the report. </p>"},{"location":"documentation/reports/settings/#skip-rows-from-bottom","title":"Skip rows from bottom","text":"<p>Similar to Skip rows from top, the setting Skip rows from bottom allows skipping rows in the footer section of the report.  Enter the number of rows to skip at the end of the report.</p>"},{"location":"documentation/reports/settings/#variant","title":"Variant","text":"<p>A variant contains a set of selections parameters that limit the result set of the report to records that match the selection. A selection variant can be created in SAP at the input screen of an ABAP report.  The purpose of a variant is to minimize the necessity to enter selections each time you run a report. If available, variants can be selected from the drop-down-list.</p> <p>Note</p> <p>Manual selections and variants can be combined. Manual selections overwrite any selections in the variant.</p>"},{"location":"documentation/reports/settings/#detect-columns","title":"Detect Columns","text":"<p>Detecting columns is mandatory for using the service. Click [Detect columns] to execute the report based on the selected variant or selections and detect columns automatically.</p> <p>Note</p> <p>If a report has variants, the variant must be selected, before using [Automatically detect columns].</p>"},{"location":"documentation/reports/settings/#selection-parameters","title":"Selection Parameters","text":"<p>The section Selection Parameters corresponds to the report\u2019s input screen in SAP.  Some selection fields only have a technical name and no description.  To understand which field corresponds to a field in SAP, compare the results with the report\u2019s input screen in SAP.  Click a selection field and press function key [F1] to display the technical name of a selection field.</p> <p>Note</p> <p>If a selection parameter is left empty, the report uses the value defined in the report.</p>"},{"location":"documentation/reports/settings/#output-columns","title":"Output Columns","text":"<p>In the section Output Columns the length and names of the detected report columns are displayed. </p> <p>Tip</p> <p>To manually adjust the length and names of columns, download and edit the service definition of the report service.</p>"},{"location":"documentation/sap-connection/","title":"SAP Connection","text":"<p>This page shows how to connect to SAP.</p> <p>Warning</p> <p>Missing Authorization. To establish a connection to SAP, the access to general authority objects must be available. Adjust the SAP Authority Objects accordingly.</p> Supported Connection Methods Supported Authentication Methods Connection to a single application server Plain login using SAP username and password (system or dialogue user) Connection to a message server (Load Balancing) Secure Network Communication (SNC) using username and password via basic authentication"},{"location":"documentation/sap-connection/#connect-to-sap-using-plain-authentication","title":"Connect to SAP using Plain Authentication","text":"<p>Follow the steps below to set up an SAP connection that uses an SAP username and password for authentication.</p> <ol> <li>Navigate to the   Connections menu at the left side navigation area of the Designer.</li> <li>Click [Add Connection] to create a new SAP connection or click   to edit an existing SAP connection. </li> <li>Enter the system details of your SAP system in the subsection System . </li> <li>Make sure the toggle in the subsection Authentication  is set to  Plain authentication.</li> <li>Enter the SAP username and password of an SAP system or dialogue user.</li> <li>Click [Test Connection] to validate the connection parameters  .  A window with a status message opens in the bottom right corner of the window.</li> <li>Click [Save] to save the connection settings. </li> </ol> <p>Tip</p> <p>Activate the option Request credentials from callers when running services to pass valid SAP credentials via Basic Authentication.  To pass credentials, the access control setting Anonymous must be activated.</p>"},{"location":"documentation/sap-connection/#connect-to-sap-using-snc-authentication","title":"Connect to SAP using SNC Authentication","text":"<p>Secure Network Connection (SNC) enables authentication and transport encryption between SAP systems and third-party tools similar to yunIO. The credentials are provided via Basic Authentication.</p> <p>Follow the steps below to set up an SAP connection that uses SNC:</p> <ol> <li>Check the SAP profile parameter snc/gssapi_lib in SAP (transaction RZ10) to determine, which library is used for encryption in your SAP system.  Your SAP Basis has to import and configure the same library on the application server and on the machine that runs yunIO.</li> <li>Navigate to the  Connections menu at the left side navigation area of the Designer.</li> <li>Click [Add Connection] to create a new SAP connection or click   to edit an existing SAP connection. </li> <li>Enter the system details of your SAP system in the subsection System.</li> <li>Set the toggle in the subsection Authentication to  Secure Network Communication authentication.</li> <li>Enter the complete path to the library location in the field SNC library path, e.g., <code>C:\\Program Files\\SAP\\FrontEnd\\SecureLogin\\lib\\sapcrypto.dll</code>. </li> <li>Enter the SAP partner name configured for the SAP application server in the field SNC partner name, e.g., <code>p:SAPserviceERP/Alice@THEOBALD.LOCAL</code>.</li> <li>Click [Test Connection] to validate the connection parameters.  A window with a status message opens in the bottom right corner of the window.</li> <li>Click [Save] to save the connection settings. </li> </ol>"},{"location":"documentation/sap-connection/#connect-via-router","title":"Connect via Router","text":"<p>If you access the SAP source system (Application server or Message server) via an SAP router, set the router string before the host name.  For more information on SAP routers, see SAP Documentation: SAP-Router.</p> <p>Example: If the application server is \"hamlet\" and the router string is <code>/H/lear.theobald-software.com/H/</code>, set the host property to <code>/H/lear.theobald-software.com/H/hamlet</code>.</p>"},{"location":"documentation/sap-connection/settings/","title":"Connection Settings","text":"<p>This section contains an overview of the yunIO connection settings in the  Connections menu.  To open the connection settings of an existing SAP connection, click   next to the connection.</p> <p>The connection settings consist of the following subsections:</p> <ul> <li>System defines how to reach your SAP system  .</li> <li>Authentication defines the login details of the SAP user  .</li> <li>Test Connection verifies the system and authentication data  .</li> </ul> <p></p>"},{"location":"documentation/sap-connection/settings/#system","title":"System","text":"<p>The input fields for the SAP connections vary depending on the connection method.  yunIO supports the following connection methods to SAP systems:</p> <ul> <li> Connection to a single application server.</li> <li> Connection to a message server, see SAP Documentation: Load Balancing.</li> </ul> <p>Use the toggle to switch between the connection methods.</p>  Single Application Server Load Balancing (message server) Input Field Description Host Host name or IP address of the application server (Property Host). Instance No A two-digit number between 00 and 99 (Property SystemNumber). Client A three-digit number of the SAP client between 000 and 999, e.g., 800. Language The logon language for the SAP system, e.g., EN for English or DE for German. Input Field Description Logon group Property LogonGroup, usually PUBLIC. Message Server Name or IP address of the message server (Property MessageServer). System ID Three-digit System ID (Property SID e.g.,  MSS). Client A three-digit number of the SAP client between 000 and 999, e.g., 800. Language The logon language for the SAP system, e.g., EN for English or DE for German."},{"location":"documentation/sap-connection/settings/#authentication","title":"Authentication","text":"<p>The following authentication methods are supported:</p> <ul> <li> Plain uses the SAP username and password of a system or dialogue user.</li> <li> Secure Network Communication (SNC) uses the username and password provided via basic authentication. SNC enables authentication and transport encryption between SAP systems and third-party tools like yunIO.</li> </ul> <p>Use the toggle to switch between the authentication methods.</p> <p></p>  Plain Secure Network Connection (SNC) Input Field Description User SAP username. Password Password of the SAP user. Request credentials from callers when running services If this checkbox is active, SAP credentials are used to restrict service access. Any valid SAP credentials can be passed via Basic Authentication to allow access to a yunIO service. <p>Note</p> <p>To use Request credentials from callers when running services, the Anonymous Access option must be activated.</p> Input Field Description SNC library path Complete path to the SAP cryptograhic library location, e.g., <code>C:\\Program Files\\SAP\\FrontEnd\\SecureLogin\\lib\\sapcrypto.dll</code>. SNC partner name SAP partner name configured for the SAP application server, e.g., <code>p:SAPserviceERP/Alice@THEOBALD.LOCAL</code>."},{"location":"documentation/sap-connection/settings/#test-connection","title":"Test Connection","text":"<p>Clicking [Test Connection] validates the connection parameters.  A window with a status message opens in the bottom right corner of the window.</p>"},{"location":"documentation/setup/","title":"Setup","text":"<p>This section covers installation and maintenance topics for IT admins. This includes system requirements, backups and license information.</p>"},{"location":"documentation/setup/#related-topics","title":"Related Topics","text":"<p>Setup in SAP</p><p>SAP system requirements, e.g., user rights and customization.</p> <p>Server Settings</p><p>Setup the server URL, ports and data security.</p> <p>Access Restriction</p><p>Create and manage users with access restrictions.</p>"},{"location":"documentation/setup/#popular-topics","title":"Popular Topics","text":"<ul> <li>   System Requirements</li> <li>  Installation &amp; Updates</li> <li>  Supported SAP Releases &amp; Databases</li> <li>   License Installation</li> <li>  Configuration Files</li> <li>  Migration to a Different Machine</li> </ul>"},{"location":"documentation/setup/backup-and-migration/","title":"Backup & Migration","text":"<p>A backup allows you to easily switch back to a previous product version or to migrate your existing product configuration to a different machine. </p> <p>Recommendation</p> <p>Make sure to create regular backups of the yunIO configuration files to save the work invested in designing and optimizing your services. Alternatively, we recommend using a version control system, e.g. Git or Azure DevOps to synchronize your test environment with your productive environment.</p>"},{"location":"documentation/setup/backup-and-migration/#configuration-files","title":"Configuration Files","text":"<p>The configuration of services, sources, users and the server are stored in the <code>config</code> folder of the yunIO installation directory, e.g., <code>C:\\Program Files\\Theobald Software\\yunIO\\config</code>. Use the <code>config</code> folder for setting up a version control system or for creating manual backups.</p> Filename Description <code>extractions</code> Contains the service definitions. <code>servers</code> Contains the server settings. <code>sources</code> Contains the SAP connections. <code>users</code> Contains the user settings."},{"location":"documentation/setup/backup-and-migration/#create-a-backup","title":"Create a Backup","text":"<ol> <li>Open the yunIO installation directory of the machine that runs yunIO, e.g., <code>C:\\Program Files\\Theobald Software\\yunIO</code>.</li> <li>Copy the complete <code>config</code> folder of the yunIO installation directory and save the folder at a secure location.</li> <li>Optional: copy the complete <code>logs</code> folder of the yunIO installation directory to create a backup of the log files. </li> <li>To backup your license, create a copy of your <code>yunIOLicense.json</code> file.</li> </ol> <p>Warning</p> <p>Data security. Both <code>config</code> and <code>logs</code> directories may contain sensitive information. Unauthorized access may lead to data breaches.  Make sure to secure the backup location.</p>"},{"location":"documentation/setup/backup-and-migration/#restore-a-backup","title":"Restore a Backup","text":"<ol> <li>Open the yunIO installation directory of the machine that runs yunIO, e.g., <code>C:\\Program Files\\Theobald Software\\yunIO</code>.</li> <li>Remove the <code>config</code> folder from the installation directory.</li> <li>Copy the backup of the <code>config</code> folder into the installation directory.</li> <li>To restore the license, replace the <code>yunIOLicense.json</code> file in the installation directory with the backup.</li> </ol> <p>Warning</p> <p>Data Loss. Restoring the backup of the <code>config</code> directory replaces the existing configuration. Make sure to remove the existing files before restoring the backups.</p>"},{"location":"documentation/setup/backup-and-migration/#migrate-to-a-different-machine","title":"Migrate to a Different Machine","text":"<p>Note</p> <p>When migrating to a new server, a new license file must be issued for that server. Contact our sales team at sales@theobald-software.com for more information.</p>"},{"location":"documentation/setup/backup-and-migration/#prerequisite","title":"Prerequisite","text":"<p>The same software version must be installed on both machines. Use the <code>YunIOSetup.exe</code> from the installation directory of the current machine to install the matching version on the new machine. To check the version of your product, open the Designer and navigate to the  About menu.</p>"},{"location":"documentation/setup/backup-and-migration/#workflow","title":"Workflow","text":"<ol> <li>Open the yunIO installation directory of the current machine, e.g., <code>C:\\Program Files\\Theobald Software\\yunIO</code>.</li> <li>Create a backup of the <code>config</code> folder from the installation directory.</li> <li>Decide whether you need a partial or a full migration.   For a full migration copy the entire <code>config</code> folder to the yunIO installation directory on the new machine. For a partial migration only copy subfolders of the <code>config</code> folder to the new machine, see Configuration Files.</li> <li>Restart the yunIO Windows service on the new machine.</li> </ol>"},{"location":"documentation/setup/backup-and-migration/#related-links","title":"Related Links","text":"<ul> <li>Installation &amp; Update</li> <li>Changelog</li> </ul>"},{"location":"documentation/setup/download-and-evaluation/","title":"Download & Evaluation","text":""},{"location":"documentation/setup/download-and-evaluation/#download-yunio","title":"Download yunIO","text":"<p>You can download a 30 day trial version from the Theobald Software website. The trial version is only time limited and works otherwise without any restrictions.</p>"},{"location":"documentation/setup/download-and-evaluation/#evaluate-yunio","title":"Evaluate yunIO","text":"<p>You are guaranteed to get unrestricted support by the Theobald Software support team during the evaluation phase. In case of questions or doubts, feel free to contact Theobald Software at any time: </p> <ul> <li>  Support Portal</li> <li>  Contact Forms</li> </ul>"},{"location":"documentation/setup/download-and-evaluation/#technical-support","title":"Technical Support","text":"<p>How to contact the Theobald Software support team:</p> <ol> <li>Open a ticket in our Support Portal.</li> <li>Provide as much information as possible for the Theobald Software support team to understand and analyze the issue.</li> <li>If there is an error message, copy and paste the error message into the ticket.</li> </ol> <p>Disclaimer</p> <p>SAP versions that are no longer supported by the manufacturer are excluded from the Theobald Software support. Issues specific to custom BAPIs (Z function modules) or custom reports (Z reports) are also excluded from the scope of support.</p>"},{"location":"documentation/setup/installation-and-update/","title":"Installation and Update","text":"<p>yunIO provides a Windows service for the communication with the SAP system and comes with an embedded Web UI, the yunIO Designer. The yunIO service is installed on a local or cloud-hosted Windows server environment. </p>"},{"location":"documentation/setup/installation-and-update/#prerequisites","title":"Prerequisites","text":"<p>Administrator rights are required to install yunIO.</p>"},{"location":"documentation/setup/installation-and-update/#setup","title":"Setup","text":"<p><code>yunIOSetup.exe</code> is an industry standard setup. Execute the <code>yunIOSetup.exe</code> file and follow the instructions of the setup. When starting the setup the following components can be selected: </p> <p></p> Component Description Main Product Files All required files to use yunIO.  Install Service Installs the server component as a windows service. Start Menu Shortcuts Component that adds shortcuts to the start menu. Enable .NET updates via Windows Update for Windows Server Edition. Adds a registry entry that automatically updates .NET. Open the yunIO Designer after installation Opens the yunIO Designer in your standard web browser. <p>For information on how to install a license, see License.</p>"},{"location":"documentation/setup/installation-and-update/#enable-net-updates-via-windows-update-for-windows-server-edition","title":"Enable .NET updates via Windows Update for Windows Server Edition","text":"<p>This setup option is only available on Windows Server Editions and only if the option is not already active. It adds a registry entry that automatically updates .NET via Windows Update.  To deactivate this option, delete the registry entry.</p> Registry Entry<pre><code>[HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\.NET]//\"AllowAUOnServerOS\"=dword:00000001\n</code></pre>"},{"location":"documentation/setup/installation-and-update/#program-directory-files","title":"Program Directory Files","text":"<p>The list below shows several important files that are placed into the default directory <code>C:\\Program Files\\Theobald Software\\yunIO</code> after installation:</p> Filename Description logs directory Directory with server and extraction etc. logs. config directory Directory containing all SAP connections, extractions and other settings. Uninstall yunIO shortcut Shortcut for uninstalling and removing yunIO with all its components from your machine. yunIOSetup.exe Setup of the currently installed version. yunIOLicense.json License file with information about the component and runtime."},{"location":"documentation/setup/installation-and-update/#update","title":"Update","text":"<p>Warning</p> <p>Data loss. System updates or changes can restrict software functionalities and this may lead to data loss. Create a backup of the directory: <code>C:\\Program Files\\Theobald Software\\yunIO\\config</code> at regular intervals.</p> <p>It is recommended to update the software regularly, as regular updates are crucial for a stable performance. Check the Changelog for updates. </p> <p>A newer version can be installed over the older version. All settings and created objects are preserved. </p>"},{"location":"documentation/setup/installation-and-update/#workflow","title":"Workflow","text":"<ol> <li>Check if you have a working test environment with a valid license.</li> <li>Make sure that the test environment is a copy of the current production environment.</li> <li>Check the changelog to see if an update is needed.</li> <li>Create a backup of the current installation.</li> <li>Conduct any necessary preparations and changes as described in the Release Note / Changelog.</li> </ol> <p>Tip</p> <p>Subscribe via email to Theobald Software\u2019s technical newsletter that informs about software changes and new features.</p>"},{"location":"documentation/setup/installation-and-update/#access-the-yunio-designer","title":"Access the yunIO Designer","text":"<p>To access the yunIO Designer, enter the designer-URL in a web browser. The URL pattern to access the yunIO Designer is <code>http(s)://[host or IP address]:[port]</code>.</p> <ul> <li>If the yunIO service runs on a local server, replace <code>[host]</code> with localhost.</li> <li>If the yunIO service does not run on the same machine as the browser, replace <code>[host]</code> with the name or IP address of the host on which the service runs.</li> <li>After the installation the yunIO Designer is accessible under the default port 8077.  The port can be configured in the  Settings menu of the Designer.</li> </ul> <p>Note</p> <p>Make sure that the YunIO Service is running on your windows system and that the default port 8077 is not blocked by your firewall.</p>"},{"location":"documentation/setup/installation-and-update/#version-number","title":"Version Number","text":"<p>To check your current version number, navigate to the  About menu in the yunIO Designer.  The version number is displayed next to the page title.</p> <p></p>"},{"location":"documentation/setup/installation-and-update/#related-links","title":"Related links","text":"<ul> <li>Download the latest Software Version (Customer Portal)</li> <li>Download a Trial Version</li> </ul>"},{"location":"documentation/setup/license/","title":"Licensing","text":""},{"location":"documentation/setup/license/#about-the-licensing-concept-of-yunio","title":"About the Licensing Concept of yunIO","text":"<p>yunIO is licensed per Windows server, where the solution is installed. A trial license valid for 30 days is automatically provided with the installation of yunIO.</p> <p>A regular license is provided in the Theobald Software Costumer Portal after purchasing the product. The product license is bound to your company, and the server on which the yunIO server runs.</p>"},{"location":"documentation/setup/license/#install-the-yunio-license","title":"Install the yunIO License","text":"<p>Follow the steps below to the upload a license file to yunIO:</p> <ol> <li>Download the yunIO license file yunIOLicense.json from the Theobald Software Customer Portal.</li> <li>Navigate to the  License menu in the yunIO Designer. </li> <li>Click [Select License] and navigate to the license file. </li> <li>Select the license file yunIOLicense.json and click [Open]. The license data is displayed in the  License menu.</li> <li>Check the validity of the license data.</li> <li>Click [Upload and Save] to activate the license. Restarting the yunIO service is not necessary.</li> </ol> <p>Alternatively, you can copy and paste the yunIOLicense.json file into the installation directory of yunIO:  <code>C:\\Program Files\\Theobald Software\\YunIO</code></p>"},{"location":"documentation/setup/license/#related-links","title":"Related links","text":"<ul> <li>Theobald Software Customer Portal</li> </ul>"},{"location":"documentation/setup/requirements/","title":"Requirements","text":"<p>This section contains information about system requirements and compatible SAP system for Board Connector.</p>"},{"location":"documentation/setup/requirements/#supported-sap-systems-and-releases","title":"Supported SAP Systems and Releases","text":"<p>The following SAP Systems are supported:</p> <ul> <li>All SAP ABAP based systems that provide RFC connectivity are supported (all communication with SAP is performed via the RFC protocol). </li> <li>SAP ABAP Systems on any database are supported (including HANA). The database used by the SAP system is irrelevant, because the integration occurs at SAP application server level.</li> <li>SAP Systems running on Big Endian and Little Endian hardware are supported.</li> <li>SAP industry solutions like IS-U, IS-R, etc. are supported.</li> <li>SAP Releases 4.6C and newer are supported. </li> <li>All operating systems are supported.</li> </ul> <p>Examples</p> <ul> <li>SAP S/4HANA</li> <li>mySAP</li> <li>SAP Application Server ABAP</li> <li>Message Server</li> <li>Router</li> <li>Standalone Gateway</li> <li>SAP Business Suite 7 (CRM, SRM, SCM etc.)</li> <li>SAP Business All in One, CAR, APO, PI</li> <li>SAP BW 3.1 and later</li> <li>SAP BW/BI 7.x</li> <li>SAP ERP / ECC 5.0 / ECC 6.0 (including all EhPs)</li> <li>SAP R/3 Version 4.6C and later</li> <li>SAP BW/4HANA </li> <li>...and more.</li> </ul> <p>Disclaimer</p> <p>While SAP versions that are no longer supported by SAP still work with Theobald Software products, they are excluded from the Theobald Software support service.</p>"},{"location":"documentation/setup/requirements/#not-supported-sap-systems","title":"Not Supported SAP Systems","text":"<p>The following SAP Systems are not supported:</p> <ul> <li>SAP systems that don\u2019t run on ABAP systems </li> <li>SAP systems that don't provide RFC connectivity. </li> </ul> <p>Examples</p> <ul> <li>SAP S/4HANA Cloud Public Edition</li> <li>Business By Design</li> <li>Business One</li> <li>Business Objects</li> <li>Sybase</li> <li>Ariba</li> <li>Success Factors</li> <li>Concur</li> </ul>"},{"location":"documentation/setup/requirements/#ports","title":"Ports","text":"<p>Following ports have to be opened depending on the SAP system,  where nn is the instance number of the SAP system (e.g. 00 or 99).</p> <ul> <li>SAP Application Server: Port 33nn</li> <li>SAP Message Server (Load Balancing): Port 36nn</li> <li>Secure Network Communications (SNC): Port 48nn</li> <li>SAP Router: Port 3299</li> </ul>"},{"location":"documentation/setup/requirements/#sap-licenses","title":"SAP Licenses","text":"<p>Additional SAP licenses might be required for extracting data from SAP. Contact SAP to verify these requirements.</p>"},{"location":"documentation/setup/requirements/#operating-systems","title":"Operating Systems","text":"<ul> <li>Windows 11</li> <li>Windows Server 2022 (until 2031-10-14)</li> <li>Windows 10  (until 2025-10-14)</li> <li>Windows Server 2019 (until 2029-01-09)</li> <li>Windows Server 2016 (until 2027-01-12)</li> </ul>"},{"location":"documentation/setup/requirements/#supported-web-browsers","title":"Supported Web Browsers","text":"<p>yunIO supports current versions of the following web browsers: </p> <p> Firefox </p> <p> Chrome </p> <p> Edge</p> <p> Safari</p>"},{"location":"documentation/setup/requirements/#hardware","title":"Hardware","text":"<p>The following requirements apply to the hardware:</p> Hardware Minimum Requirement Processor Cores 2 Cores Processor Speed Processor: 1.4 GHz, recommended is 2.0 GHz or faster Main Memory 8 GB Disk Space min. 150 MB required for installation 64-Bit Environment 64-Bit operating systems only Display Resolution 1920x1080x1.25 with 1.25 display scaling"},{"location":"documentation/setup-in-sap/","title":"SAP Customization","text":"<p>This section covers user rights and customization topics for the SAP Basis. For information on supported SAP systems and other IT topics, see Setup.</p>"},{"location":"documentation/setup-in-sap/#custom-function-modules","title":"Custom Function Modules","text":"<p>Theobald Software distributes custom function modules as part of Board Connector.  The custom function modules can be installed in SAP using transport requests.  The transport requests are available in the installation directory of Board Connector, e.g., <code>C:\\Program Files\\Theobald Software\\yunIO\\ABAP\\</code>.</p> <p>The following {{ components }} require the installation of a custom function module:</p> {{ Component }} Custom Function Module Installation {{ report }} Z_XTRACT_IS_REMOTE_REPORT Required {{ table }} /THEO/READ_TABLE Recommended <p>For information on how to use transport request, see Import an SAP Transport Request. </p> <p>Note</p> <p>All objects that come with any of the transport requests, can be deleted by importing the <code>Z_THEO_READ_TABLE-deletion_request.zip</code> transport request.</p>"},{"location":"documentation/setup-in-sap/#popular-topics","title":"Popular Topics","text":"<ul> <li>  SAP User Rights</li> <li>  Download SAP Roles</li> <li>  Function Module for Table Extractions</li> <li>  Function Module for Report Extractions</li> </ul>"},{"location":"documentation/setup-in-sap/custom-function-module-for-reports/","title":"Function Module for Reports","text":"<p>The extraction of reports requires the installation of a custom function module in your SAP system. If you cannot install the function module, turn to your SAP Basis team for help.</p> <p>Note</p> <p>As of version 1.2 of the custom function module <code>Z_XTRACT_IS_REMOTE_REPORT</code> access to reports must be explicitly granted, see Authority Objects for Z_XTRACT_IS_REMOTE_REPORT.</p>"},{"location":"documentation/setup-in-sap/custom-function-module-for-reports/#installation-of-z_xtract_is_remote_report","title":"Installation of Z_XTRACT_IS_REMOTE_REPORT","text":"<p>Install the function module using the transport request Z_XTRACT_IS_REMOTE_REPORT-transport.zip.   The transport request is located in the following installation directory:  <code>C:\\Program Files\\Theobald Software\\yunIO\\ABAP\\Report\\Z_XTRACT_IS_REMOTE_REPORT-transport.zip</code>.</p> <p>The transport request needs to be imported into SAP by your SAP Basis team.</p>"},{"location":"documentation/setup-in-sap/custom-function-module-for-reports/#authority-objects-for-z_xtract_is_remote_report","title":"Authority Objects for Z_XTRACT_IS_REMOTE_REPORT","text":"<p>As of Z_XTRACT_IS_REMOTE_REPORT version 1.2 access to reports must be explicitly granted. There are 2 ways to verify that the SAP user is allowed to extract a report:</p> <ul> <li>Use authentication groups, see Authorizing Access to Reports via Authorization Groups.</li> <li>Use the custom authorization object Z_TS_PROG. </li> </ul>"},{"location":"documentation/setup-in-sap/custom-function-module-for-reports/#related-links","title":"Related Links","text":"<ul> <li>How to import an SAP Transport Request with the Transport Management System STMS</li> <li>Authorizing Access to Specific Reports</li> <li>SAP Documentation: Create Function Group</li> </ul>"},{"location":"documentation/setup-in-sap/custom-function-module-for-table-extraction/","title":"Function Module for Tables","text":"<p>SAP customizing for the {{ table }} {{ component }} is optional.  The installation of the custom function module <code>/THEO/READ_TABLE</code> is recommended to improve performance and to bypass restrictions of the SAP standard function module RFC_READ_TABLE.</p>","tags":["Z_THEO_READ_TABLE"]},{"location":"documentation/setup-in-sap/custom-function-module-for-table-extraction/#rfc_read_table-restrictions","title":"RFC_READ_TABLE Restrictions","text":"<p>Especially with older SAP releases you may encounter a few restrictions when using the SAP standard function module (RFC_READ_TABLE) for table extraction:</p> <ul> <li>The overall width of all columns to be extracted must not exceed 512 bytes.</li> <li>It is not possible to extract data from tables that contain one or more columns of the data type f (FLTP, floating point), DEC (decimal, e.g. for percentage) or x (RAW, LRAW).</li> <li>Poor extraction performance with larger tables.</li> <li>Depending on the SAP version there may be other restrictions. </li> </ul> <p>When facing restrictions, install the Theobald Software custom function module /THEO/READ_TABLE on your SAP system. </p> <p>Warning</p> <p>Converting issues Error while converting value '*.0' of row 1530, column 3. The SAP standard module RFC_READ_TABLE for table extraction can only extract the ABAP data type DEC to a limited extent. This leads to the mentioned example error during extraction. Use the function module from Theobald Software /THEO/READ_TABLE.</p>","tags":["Z_THEO_READ_TABLE"]},{"location":"documentation/setup-in-sap/custom-function-module-for-table-extraction/#installation-of-theoread_table","title":"Installation of /THEO/READ_TABLE","text":"<p>An SAP transport request for the installation of the function module is provided in the installation directory:  <code>C:\\Program Files\\Theobald Software\\yunIO\\ABAP\\</code>. Transport requests are imported into SAP by your SAP Basis team.</p> <p>Note</p> <p>Take a look at the README.pdf in the installation directory (e.g.,<code>C:\\Program Files\\XtractProduct\\ABAP\\README.pdf</code>) before installing any custom function modules.</p> <p>It is recommended to install the latest custom function module THEO/READ_TABLE:</p> Transport Request Compatible SAP Systems <code>THEO_READ_TABLE_740SP05.zip</code> ABAP version 7.40 SP05 and higher <code>THEO_READ_TABLE_710.zip</code> ABAP version 7.10 and higher <code>THEO_READ_TABLE_640.zip</code> ABAP versions from 6.40 until 7.03 <code>THEO_READ_TABLE_46C.zip</code> ABAP versions from 4.6C until 6.40 <p>When importing the transport requests on older SAP releases a syntax error may occur. Contact Theobald Support and send the dedicated error message text.</p> <p>Warning</p> <p>Generating Short Dumps. Testing the function modules on an SAP system is not possible. Note that the function modules /THEO/READ_TABLE and Z_THEO_READ_TABLE can only be called by Theobald products due to the callback function of the module.</p>","tags":["Z_THEO_READ_TABLE"]},{"location":"documentation/setup-in-sap/custom-function-module-for-table-extraction/#supported-features","title":"Supported Features","text":"Supported Features by THEO_READ_TABLE _740SP05 _710 _640 46C WHERE Clause HAVING Clause INNER JOIN LEFT OUTER JOIN Conversion exits Aggregate functions SQL expressions (subqueries) Background jobs","tags":["Z_THEO_READ_TABLE"]},{"location":"documentation/setup-in-sap/sap-authority-objects/","title":"SAP Authority Objects","text":"<p>To use Board Connector you need an SAP connection user with sufficient authorization in SAP.  Authorizations are assigned via authorization objects in SAP.  Redirect this page to your SAP Basis administrators to get the relevant authorization objects for your SAP connection user.  </p> <p>The authorizations in the section General authorization objects are required to establish an SAP connection with the SAP application server.  The required authorizations for each {{ component }} are listed in their respective section.  </p>","tags":["permissions"]},{"location":"documentation/setup-in-sap/sap-authority-objects/#sap-authorization-profiles","title":"SAP Authorization Profiles","text":"<p>Theobald Software collected and combined the necessary authorizations for all {{ component }} into SAP roles.  You can download the SAP profiles and upload them to your SAP system:</p> {{ Component }} SAP Role File General Authorization Objects ZXTGENERAL.SAP BAPI ZXTBAPI.SAP Report ZXREPORT.SAP Table ZXTABLE.SAP <p>Note</p> <p>If you still get an authorization error, ask SAP Basis to record an ST01-/ or SU53-authorization trace in SAP. This trace shows which authorizations objects are missing.</p>","tags":["permissions"]},{"location":"documentation/setup-in-sap/sap-authority-objects/#general-authorization-objects","title":"General Authorization Objects","text":"<p>The following authorization objects are required to establish a connection to SAP. </p> Necessary SAP authorizations<pre><code>S_RFC            RFC_TYPE=FUGR; RFC_NAME=SYST; ACTVT=16\nS_RFC            RFC_TYPE=FUGR; RFC_NAME=SRFC; ACTVT=16\nS_RFC            RFC_TYPE=FUGR; RFC_NAME=RFC1; ACTVT=16\n</code></pre> <p> Download SAP profile for general authorization</p>","tags":["permissions"]},{"location":"documentation/setup-in-sap/sap-authority-objects/#bapi","title":"BAPI","text":"Necessary SAP authorizations<pre><code>S_RFC            ACTVT=16; RFC_TYPE=FUGR; RFC_NAME=DDIF_FIELDINFO_GET, SDIFRUNTIME     \n</code></pre> <p> Download SAP profile for BAPI Extractions</p>","tags":["permissions"]},{"location":"documentation/setup-in-sap/sap-authority-objects/#report","title":"Report","text":"Necessary SAP authorizations<pre><code>S_RFC            RFC_TYPE=FUGR; RFC_NAME=ZXTRACTABAP; ACTVT=16\nS_TABU_NAM       ACTVT=03; TABLE=TRDIR, TRDIRT, TSTC, VARID\nS_GUI            ACTVT=61 \nS_TABU_DIS       ACTVT=03; DICBERCLS=&amp;NC&amp; \nS_TABU_DIS       ACTVT=03; DICBERCLS=SS\nS_BTCH_ADM       BTCADMIN=Y\nS_BTCH_JOB       JOBGROUP=*; JOBACTION=RELE\n</code></pre> <p>Note</p> <p>The necessary transport request for function group ZXTRACTABAP is located in the following path: <code>C:\\Program Files\\[XtractProduct]\\ABAP\\Report\\Z_XTRACT_IS_REMOTE_REPORT-transport.zip</code> of the default installation.</p> <p> Download SAP profile for Report</p>","tags":["permissions"]},{"location":"documentation/setup-in-sap/sap-authority-objects/#table","title":"Table","text":"Necessary SAP authorizations<pre><code>S_RFC            ACTVT=16; RFC_TYPE=FUGR; RFC_NAME=SDTX, SDIFRUNTIME, /THEO/READ_TABLE                   \nS_TABU_DIS       ACTVT=03; DICBERCLS=XXXX\nS_TABU_NAM       ACTVT=03; TABLE=DD02V, DD17S, DD27S, ENLFDIR\nS_DSAUTH         ACTVT=16;    \n</code></pre> <p>XXXX (stands for a placeholder) is the authorization group for the table. To determine, which authorization group belongs to which table, check the table TDDAT - Maintenance Areas for Tables.  If the table is not listed, the authorization group is &amp;NC&amp;. For authorizing specific tables use authorization object S_TABU_NAM instead of S_TABU_DIS.</p> <p>Note</p> <p>The transport request for function group /THEO/READ_TABLE and Z_THEO_READ_TABLE is located in the following path: <code>C:\\Program Files\\[XtractProduct]\\ABAP\\Table</code> of the default installation. </p> <p>Additional options:</p> Run Z_THEO_READ_TABLE in the backgroundCount Rows buttonAdjust currency decimals setting Necessary SAP authorizations<pre><code>S_BTCH_ADM       BTCADMIN=Y\nS_BTCH_JOB       JOBGROUP=*; JOBACTION=RELE\n</code></pre> Necessary SAP authorizations<pre><code>S_RFC            RFC_TYPE=FUNC; RFC_NAME=EM_GET_NUMBER_OF_ENTRIES; ACTVT=16  \n</code></pre> Necessary SAP authorizations<pre><code>S_TABU_NAM       ACTVT=03; TABLE=TCURX\n</code></pre> <p> Download SAP profile for Table</p>","tags":["permissions"]},{"location":"documentation/setup-in-sap/sap-authority-objects/#related-links","title":"Related Links","text":"<ul> <li>SAP  Role Administration</li> <li>SAP ONE Support Launchpad</li> </ul>","tags":["permissions"]},{"location":"documentation/tables-and-views/","title":"Integrate Tables / Views","text":"<p>This page shows how to use the {{ table }} {{ component }}. The {{ table }} {{ component }} can be used to extract contents from SAP tables and views.</p> <p>Warning</p> <p>Missing Authorization. To use the Table component, access to the designated authority objects (RFC) in SAP must be available. Adjust SAP Authority Objects accordingly.</p>"},{"location":"documentation/tables-and-views/#supported-sap-objects","title":"Supported SAP Objects","text":"<ul> <li>Transparent tables</li> <li>Views</li> <li>ABAP CDS views</li> <li>Pool tables (joining not possible)</li> <li>Cluster tables (joining not possible)</li> </ul>"},{"location":"documentation/tables-and-views/#restrictions","title":"Restrictions","text":"<p>When extracting tables from older SAP releases you may encounter restrictions when using the SAP standard function module (RFC_READ_TABLE).  Possible restrictions include poor performance with large tables, limited width of columns, etc.</p> <p>To avoid restrictions, install the Theobald Software custom function module /THEO/READ_TABLE on your SAP system, see Custom Function Modules for Tables.</p>"},{"location":"documentation/tables-and-views/create-a-table-service/","title":"Create a Table Service","text":"<p>This page shows how to create a service that extracts data from an SAP Table and View.</p>"},{"location":"documentation/tables-and-views/create-a-table-service/#prerequisites","title":"Prerequisites","text":"<ul> <li>A connection to an SAP system is available, see SAP Connection.</li> <li>The SAP user has sufficient user rights, see SAP Authority Objects.</li> </ul>"},{"location":"documentation/tables-and-views/create-a-table-service/#look-up-an-sap-table-or-view","title":"Look Up an SAP Table or View","text":"<ol> <li>Create a new service of {{ component }} {{ table }}. </li> <li>In the Search SAP Table or View menu, enter the name or description of the Table or View to be extracted  . Use wildcards ( * ) if needed. </li> <li>Click [Search] to display the search results.</li> <li>Select a table / view from the list of available search results  . </li> </ol> <p>The settings of the {{ table }} {{ component }} open.</p>"},{"location":"documentation/tables-and-views/create-a-table-service/#next-steps","title":"Next Steps","text":"<p>The following options are available to filter data, add data from other tables, etc:</p> <ol> <li>Select the output columns you want to extract. By default all columns are selected. Deselect the columns you do not want to extract. </li> <li>Optional: Join two or more tables and extract the result of the join. For more information, see Table Joins.</li> <li>Optional: Define a WHERE clause to filter table records. By default all data is extracted.</li> <li>Optional: Edit the Advanced Settings to define how the data is extracted from SAP.</li> <li>Click [Run] to check the results, see Running Services in yunIO.</li> </ol> <p>For more information on {{ table }} settings, see Settings.</p>"},{"location":"documentation/tables-and-views/settings/","title":"Settings","text":"<p>This section contains an overview and description of all available {{ table }} settings.</p> <p>The {{ table }} settings consist of the following subsections:</p> <ul> <li>Control Buttons to close, save or delete the service  .</li> <li>Table or View displays the name and description of the selected SAP Table or View  .</li> <li>Advanced Settings define how the data is extract from SAP  .</li> <li>Output Columns define what columns to extract .</li> <li>WHERE Clause and WHERE Clause Editor define what rows to extract .</li> <li>Joins joins two or more tables and extracts the result of the join .</li> </ul> <p></p>"},{"location":"documentation/tables-and-views/settings/#control-buttons","title":"Control Buttons","text":"<p>[Delete] Deletes the service.</p> <p>[Cancel] Closes the service and dismisses any changes.</p> <p>[Run] Opens the Run Menu to testrun the service directly in yunIO.</p> <p>[Save] Saves changes in the service.</p>"},{"location":"documentation/tables-and-views/settings/#table-or-view","title":"Table or View","text":"<p>The Table or View section displays the name and description of the selected table or view.</p> Icon Description Adds a table or view to the service. Removes a table or view from the service."},{"location":"documentation/tables-and-views/settings/#advanced-settings","title":"Advanced Settings","text":""},{"location":"documentation/tables-and-views/settings/#function-name","title":"Function Name","text":"<p>Specifies the name of the function module used for data extraction. This field is filled automatically depending on what function modules are installed on your SAP system. Custom function modules are supported.</p> <p>The following function modules can be used to extract tables:</p> <ul> <li>RFC_READ_TABLE (TAB512)</li> <li>/BODS/RFC_READ_TABLE (TAB2048)</li> <li>/SAPDS/RFC_READ_TABLE (TAB2048)</li> <li>/BODS/RFC_READ_TABLE2</li> <li>/SAPDS/RFC_READ_TABLE2</li> <li>Z_THEO_READ_TABLE</li> <li>THEO/READ_TABLE</li> </ul> <p>Warning</p> <p>Duplicates in the target environment. The SAP standard modules for table extraction do not have pointers for table fields. In larger tables this may cause low performance and duplicates in the target environment. Use the function module THEO/READ_TABLE from Theobald Software to ensure smooth extractions.</p> <p>Note the necessary SAP Authority Objects:</p> <pre><code>S_TABU_NAM ACTVT=03; TABLE=ENLFDIR\n</code></pre>"},{"location":"documentation/tables-and-views/settings/#row-limit","title":"Row Limit","text":"<p>Specifies the maximum number of extracted records. 0 extracts the entire table.</p>"},{"location":"documentation/tables-and-views/settings/#rows-per-package","title":"Rows per package","text":"<p>The extracted data is be split into packages of the defined size. The default value is 50000 lines. A package size between 20000 and 50000 is advisable for large amounts of data. 0 means no packaging.  Not using packaging can lead to an RFC timeout for large data extracts.</p> <p>Warning</p> <p>RFC_ERROR_SYSTEM_FAILURE - No more storage space available for extending an internal table To avoid a memory overflow on the SAP source system and to avoid huge overheads, choose a package size that suits your memory capacity.</p>"},{"location":"documentation/tables-and-views/settings/#run-in-background","title":"Run in background","text":"<p>If this checkbox is checked, the table extraction is executed as a background job in SAP.  This setting is optional and is supported in combination with function module THEO/READ_TABLE or Z_THEO_READ_TABLE version 2.0.  Activate the setting Run in background for long-running extractions with a large amounts of data that may run into a timeout error (\u201cTime limit exceeded\u201d), when using the foreground mode.</p> <p>Tip</p> <p>The extraction jobs can be found in the SAP JobLog (SM37) under the JobName theo_read_table.</p>"},{"location":"documentation/tables-and-views/settings/#refresh-metadata","title":"Refresh metadata","text":"<p>A new lookup is performed on the selected table(s).  Existing mappings and field selections are kept, which is not the case when the table is added again. Use this function to resolve data inconsistencies that can occur in the following situations:</p> <ul> <li>the structure of the source table has been changed in SAP</li> <li>another SAP source system has been connected</li> <li>the SAP source system has been updated</li> </ul>"},{"location":"documentation/tables-and-views/settings/#output-columns","title":"Output Columns","text":"<p>You can select either all or only individual columns for extraction.  Per default all columns are selected to be extracted.  Deselect the columns you don\u2019t want to extract.</p>"},{"location":"documentation/tables-and-views/settings/#where-clause","title":"WHERE Clause","text":"<p>You can use a WHERE clause to filter table records, see SAP ABAP Documentation: SELECT-WHERE. Enter WHERE clauses manually in Text mode or use the WHERE Clause Editor in Editor Mode.</p>"},{"location":"documentation/tables-and-views/settings/#joins","title":"Joins","text":"<p>You can join two or more SAP tables and extract the result of the join, see SAP Documentation: Inner Join and Outer Join.  For information on how to join tables in Board Connector, see Table Joins.</p>"},{"location":"documentation/tables-and-views/table-join/","title":"Table Joins","text":"<p>The Join functionality allows joining two or more tables and extract the result of the join.  To perform the extraction the corresponding SQL command is generated dynamically and the join is executed on the SAP server. </p> <p>Possible scenarios can be joining tables for header and item data or tables for master data and texts. </p>"},{"location":"documentation/tables-and-views/table-join/#supported-join-types","title":"Supported Join Types","text":"<p>The following join types are supported:</p> <ul> <li>Inner Join</li> <li>Left Outer Join, also referred to as Left Join.</li> </ul> <p>For more information on join types see SAP Documentation: Inner Join and Outer Join. </p> <p>Note</p> <p>Joining of cluster or pool tables is not supported. Cluster or pool tables need to be extracted individually and joined in the destination.</p>"},{"location":"documentation/tables-and-views/table-join/#prerequisites","title":"Prerequisites","text":"<p>To use table join, the function module /THEO/READ_TABLE needs to be available in SAP. </p>"},{"location":"documentation/tables-and-views/table-join/#join-tables","title":"Join Tables","text":"<p>The following example shows how to join the tables KNA1 and KNVV.</p> <ol> <li>Create a new service of type {{ table }} or edit an existing service.</li> <li>Look up the first table or view, e.g, KNA1.</li> <li>Click  to add the additional tables for the join, e.g., KNVV  . </li> <li>Define the output columns you want to extract for both tables  .</li> <li> <p>Optional: define a WHERE clause for the tables.</p> <p>Note</p> <p>Specifying a WHERE-clause to the right table of a LEFT OUTER JOIN is only possible as of SAP Release 7.40, SP05. If your SAP system is older than SAP Release 7.40, SP05, the following error occurs: RFC_ERROR_SYSTEM_FAILURE - Illegal access to the right table of a LEFT OUTER JOIN.</p> </li> <li> <p>Click [Add join] . The Join Editor opens.</p> </li> <li>If necessary, change the default values of Left Table, Right Table and Join Type.  </li> <li>Click [Join/Add] . A new join condition is added to the join. </li> <li> <p>Select a table column in the Left Table field and in the Right Table field to map the table contents. It is possible to add multiple join conditions.</p> <p>Tip</p> <p>Different tables can have identical field / column names.  Defining a join condition based on the identical field names not always delivers the expected result, e.g., VBAK~VBELN &lt;&gt; LIPS~VBELN. Make sure the fields you use in a join condition contain the same content/data.</p> </li> <li> <p>Click [OK] to save the join.</p> </li> </ol> <p>Recommendation</p> <p>To avoid poor extraction performance, do not join more than five tables.</p>"},{"location":"documentation/tables-and-views/where-clause/","title":"WHERE Clause","text":"<p>A WHERE clause can be used to filter table records, see SAP ABAP Documentation: SELECT-WHERE. Enter WHERE clauses manually in Text mode or use the WHERE Clause Editor in Editor Mode.</p>"},{"location":"documentation/tables-and-views/where-clause/#where-clause-text-mode","title":"WHERE Clause Text Mode","text":"<p>The WHERE clause text mode allows you to directly enter a WHERE clauses.  Use the toggle to switch between Text mode and Editor mode.</p>"},{"location":"documentation/tables-and-views/where-clause/#syntax-rules","title":"Syntax Rules","text":"Rule Correct Wrong Enter a space before and after the equal sign YEAR = '1999' YEAR= '1999 ', YEAR ='1999' or YEAR='1999' Set floating point numbers in single quotation mark KMENG &gt; '10.3' KMENG &gt; 10.3 Values must have the internal SAP representation:  Date: YYYYMMDD   Year Period: YYYYPPP   Numbers with leading zeroes, e.g., customer numbers  19990101   1999001   0000001000  01.01.1999   001.1999   1000 <p>Note</p> <p>The WHERE clause doesn't need any line break (return key).</p> <p>The following operations are supported in the WHERE clause:</p> Operator Description =, EQ True if the content of operand1 is equal to the content of operand2. &lt;&gt;, NE True if the content of operand1 is not equal to the content of operand2. &lt;, LT True if the content of operand1 is less than the content of operand2. &gt;, GT True if the content of operand1 is greater than the content of operand2. &lt;=, LE True if the content of operand1 is less than or equal to the content of operand2. &gt;=, GE True if the content of operand1 is greater than or equal to the content of operand2. (NOT) LIKE True if the value of operand1 matches (does not match) the pattern in operand2. (NOT) IN True if the content of operand1 is (not) part of the content of operand2. Operand2 must be of type LIST or SQL. <p>For more details on the OpenSQL syntax, see SAP Documentation: Select WHERE </p> <p>Tip</p> <p>To increase extracting performance, make sure to place the indexed fields as the first selection filter operation in the WHERE clause.</p>"},{"location":"documentation/tables-and-views/where-clause/#where-clause-editor","title":"WHERE Clause Editor","text":"<p>The WHERE clause editor offers a toolkit for those who are not familiar with the syntax of the WHERE clause. Use the toggle to switch between Text mode and Editor mode.  </p> <p>There are 2 options for adding criteria to the WHERE clause:</p> <ul> <li> <p>[Add Criteria] adds single criteria. </p> <ul> <li>The default structure for a single criteria with static values is <code>[Column][Operator][Value]</code> e.g., MARC~WERKS = 1000.</li> </ul> </li> <li> <p>[Add Criteria Group] adds a group of criteria.</p> <ul> <li>The default structure for a criteria group is <code>([Column1][Operator1][Value1][Boolean][Column2][Operator2][Value2])</code> e.g., (MARC~PSTAT = 'L' OR MARC~PSTAT = 'LB').</li> </ul> </li> </ul> <p>Tip</p> <p>Combine multiple criteria and criteria groups to create complex filters e.g.,  MARC~WERKS = 1000 AND (MARC~PSTAT = 'L' OR MARC~PSTAT = 'LB') extracts only data where the column WERKS equals 1000 and the column PSTAT equals either 'L' or 'LB'.</p>"},{"location":"documentation/tables-and-views/where-clause/#components-of-the-where-clause-editor","title":"Components of the WHERE Clause Editor","text":"<p>The following buttons and options are available in the WHERE Clause Editor:</p> Icon Component Function Delete row deletes a criteria. Move row up changes the sequence of the criteria. The selected criteria moves up. The sequence of criteria can also be changed with drag&amp;drop. Move row down changes the sequence of the criteria. The selected criteria moves down. The sequence of criteria can also be changed with drag&amp;drop. Column adds a column. Click on the component to select a column from the available tables. SQL adds an Open SQL statement, see SAP Documentation: Open SQL. Operator adds an operator e.g., =, &lt;, &gt;, etc. Value adds a static value of type String, Number, Flag or List. List offers a separate editor to create lists of type String, Number or Select. Select enables usage of SELECT statements. Criteria adds a new criteria after the selected criteria. Group adds a new group of criteria the selected criteria. <p>Note</p> <p>When adding or editing a criteria only the relevant components are displayed e.g., Add Operator is only available if there is a column or SQL statement to use an operator on.</p>"},{"location":"documentation/tables-and-views/where-clause/#how-to-edit-and-delete-components","title":"How to Edit and Delete Components","text":"<ul> <li>Click on a component to edit it. All areas that are marked green can be edited.</li> <li>To delete a component, click the  icon that appears when hovering over the component.</li> </ul>"},{"location":"documentation/tables-and-views/where-clause/#sap-system-fields","title":"SAP System Fields","text":"<p>You can use SAP system fields for date and time in a WHERE clause.  The usage of SAP system fields requires SAP NW 7.4 SP5 or higher and the custom function module /THEO/READ_TABLE.</p> <p>Example:</p> <ol> <li>Navigate to WHERE-Clause-Editor and select a column of the type Date here: BUDAT .  </li> <li>Delete the criterion \"Value\" and use the criterion \"SQL\"  . </li> <li>Within the \"SQL\" criterion, use the supported system fields for date and time with a preceding \"@\" character, here: @sy-datum . </li> <li>Click {{ previewBtn }} to check the result. </li> </ol>"},{"location":"documentation/tables-and-views/where-clause/#parameterize-the-where-clause","title":"Parameterize the WHERE Clause","text":"<p>The WHERE clause can be parameterized in the request body of the service. </p> <p></p> <p>For more information on parameterizing services, see Passing Parameters.</p> <p>Note</p> <p>An existing WHERE clause is overridden when a WHERE clause is entered in the designated text field or if a WHERE clause is entered in the body of the service definition when running a service.</p>"},{"location":"documentation/transactions/","title":"Integrate Transactions","text":"<p>This page shows how to use the {{ transaction }} {{ component }}. The {{ transaction }} {{ component }} can be used to access, configure and parameterize SAP transactions for automation.</p>"},{"location":"documentation/transactions/#about-transaction-codes","title":"About Transaction Codes","text":"<p>Transaction codes represent functions in the SAP system.  They can be used in the SAP command field to quickly go to an SAP task and start a function. A transaction code consists of letters and/or numbers, e.g., VA01 to create sales orders, ME21N to create purchase orders, etc.  For information on how to use and find transaction codes, see SAP Documentation: Using Transaction Codes</p>"},{"location":"documentation/transactions/#samples","title":"Samples","text":"<p>The knowledge base contains articles on how to create services for the following SAP transactions:</p> <p>IE01</p><p>How to create new equipment in SAP.</p> <p>PA40</p><p>How to define personnel actions in SAP.</p> <p>VA02</p><p>How to change sales orders in SAP.</p> <p>XD02</p><p>How to change customer data in SAP.</p>"},{"location":"documentation/transactions/settings/","title":"Settings","text":"<p>This section contains an overview and description of all available {{ transaction }} settings.</p> <p>The {{ transaction }} settings consist of the following subsections:</p> <ul> <li>Control Buttons to close, save or delete the service  .</li> <li>GUI Steps displays the recorded actions  .</li> <li>Transaction displays input screens that represent the SAP GUI  .</li> <li>Skip Popups is available in the request body of the service and defines how to handle popup screen.</li> </ul> <p></p>"},{"location":"documentation/transactions/settings/#control-buttons","title":"Control Buttons","text":"<p>[Delete] Deletes the service.</p> <p>[Cancel] Closes the service and dismisses any changes.</p> <p>[Run] Opens the Run Menu to testrun the service directly in yunIO.</p> <p>[Save] Saves changes in the service.</p>"},{"location":"documentation/transactions/settings/#gui-steps","title":"GUI Steps","text":"<p>When recording a transaction workflow, all actions are logged under GUI Steps.</p> <p>Once the recording is finished, clicking actions opens the corresponding screen. This functionality is used to parameterize the values from in the initial recording, see Parameterize Transactions.</p>"},{"location":"documentation/transactions/settings/#transaction","title":"Transaction","text":"<p>When starting a transaction recording, the subsection Transaction displays the content of the SAP GUI.</p> <p>[Start] Starts the recording of a transaction code.</p> <p>[Stop] Stops the recording of the transaction code. </p> <p>[Submit] Equivalent to pressing enter in the SAP GUI.</p> <p>Enable Diagnostics Mode When this option is active, debug information about the transaction service are recorded and written to the folder <code>C:\\Program Files\\Theobald Software\\yunIO\\logs\\diagnostic_runs\\</code>. Activate the diagnostics mode when necessary, e.g., upon request of the support team.</p>"},{"location":"documentation/transactions/settings/#skip-popups","title":"Skip Popups","text":"<p>When recording a transaction workflow, SAP can display dynamic popup screens. The popup screens can vary depending on input values. The input parameter <code>skipPopups</code> in the request body of the service defines how to handle unexpected popup messages that show up at runtime.</p> <p>When <code>skipPopups</code> is set to true, the following actions apply:</p> Popup during recording Popup during a service run Action x x The popup is handled like a regular screen. x The service ignores the recorded screen and continues to the next screen. x The popup is confirmed (Return/Enter key)."},{"location":"documentation/transactions/transactions/","title":"Create a Transaction Services","text":"<p>This page shows how to use the {{ transaction }} {{ component }}.</p>"},{"location":"documentation/transactions/transactions/#prerequisites","title":"Prerequisites","text":"<ul> <li>A connection to an SAP system is available, see SAP Connection.</li> <li>The SAP connection assigned to a transaction service must use an SAP dialog user. </li> </ul> <p>Tip</p> <p>The transaction feature offers the same functionality as the SAP GUI. Therefore knowing how to navigate the SAP GUI makes it easier to use the transaction feature.</p>"},{"location":"documentation/transactions/transactions/#record-transactions","title":"Record Transactions","text":"<ol> <li>Create a new service of {{ component }} {{ transaction }}. </li> <li>Enter a transaction code  .  </li> <li>Click [Start] to run the transaction. Content from the SAP GUI is displayed. </li> <li>Fill out the input fields as you would in the SAP GUI. Input fields can be parameterized once the transaction is recorded, see Parameterize Transactions.</li> <li>Click [Submit] to enter your input  . All executed actions are logged in the section GUI Steps .  </li> <li>Click [Save] once you finished recording. Alternatively, click [Stop] to start parameterizing, see Parameterize Transactions.</li> </ol>"},{"location":"documentation/transactions/transactions/#parameterize-transactions","title":"Parameterize Transactions","text":"<p>Note</p> <p>All fields that need to be parameterized must be available in the transaction service as GUI Steps. To parameterize a field in a specific tap or menu, the tab or menu must be accessed when recording the transaction.</p> <p>Follow the steps below to assign input and output parameters to a transaction service. </p> <ol> <li>Open the transaction service. </li> <li>In the GUI Steps section click the action you want to parameterize. The corresponding input screen opens.</li> <li>Click on the fields you want to parameterize. The window \"Parameterize Element\" opens. All fields that can be parameterized are highlighted in green when hovering over them.  </li> <li>Select Input to override the value when running the service. Fields that are set to Input become available as input parameters in the request body of the service.</li> <li>Select Output to return the value of this field when running the service. Fields that are set to Output become available in the response body of the service.</li> <li>Optional: Under Parameter name you can edit the name of the parameter. </li> <li>Click [OK] to confirm your input.</li> <li>Click [Save] to save your changes.</li> </ol> <p>Input parameters are now accessible in the request body of the service  . Ouput parameters are now accessible in the response body of the service  . </p>"},{"location":"documentation/transactions/transactions/#related-links","title":"Related Links","text":"<ul> <li>Working with Transactions - Table Parameters</li> <li>Transaction IE01 - Create Equipment</li> <li>Transaction PA40 - Personnel Actions</li> <li>Transaction VA02 - Change Sales Order</li> <li>Transaction XD02 - Change Customer Master Data </li> </ul>"},{"location":"knowledge-base/","title":"Knowledge Base","text":"<ul> <li> This section contains use cases and integration scenarios for yunIO.</li> </ul>"},{"location":"knowledge-base/#sap","title":"SAP","text":"<ul> <li>Authorize Access to Reports via Authorization Groups</li> <li>Create the Custom Authorization Object Z_TS_PROG</li> <li>Import an SAP Transport Request</li> <li>Supported SAP S/4HANA Versions</li> </ul>"},{"location":"knowledge-base/#network-communication","title":"Network &amp; Communication","text":"<ul> <li>Certificate Renewal for TLS</li> <li>Enable Secure Network Communication (SNC) via X.509 certificate</li> <li>Establish an Azure Relay Hybrid Connection to yunIO</li> <li>Install an X.509 Certificate</li> <li>yunIO Networking Scenarios</li> </ul>"},{"location":"knowledge-base/#microsoft-power-automate-integration","title":"Microsoft Power Automate Integration","text":"<ul> <li>Integrate a yunIO Service with Power Automate</li> <li>Integrate yunIO with Power Automate and the AI Builder</li> <li>Formats and Conversions in Power Automate</li> <li>Sync Dynamics 365 with SAP using Power Automate and yunIO</li> <li>Sync Salesforce with SAP using Power Automate and yunIO</li> <li>Sync SharePoint Custom Lists with SAP using Power Automate and yunIO</li> <li>Sync MS Teams with SAP using Power Automate and yunIO</li> <li>Use yunIO with Power Automate to create multiple items in SAP</li> <li>Use yunIO to populate Drop Down Controls in Power Apps</li> </ul>"},{"location":"knowledge-base/#nintex-automation-cloud-integration","title":"Nintex Automation Cloud Integration","text":"<ul> <li>Integrate a yunIO Service with Nintex</li> <li>Integrate a yunIO Service via Nintex Gateway</li> <li>Employee Onboarding Scenario using Nintex and yunIO</li> <li>Sync Nintex Forms for Office 365 with SAP using JavaScript</li> <li>Sync Nintex Forms with SAP using JavaScript (SAP Personnel Data)</li> </ul>"},{"location":"knowledge-base/#alteryx-integration","title":"Alteryx Integration","text":"<ul> <li>Integrate a yunIO Service with Alteryx</li> </ul>"},{"location":"knowledge-base/#postman-integration","title":"Postman Integration","text":"<ul> <li>Run a yunIO Service in Postman</li> </ul>"},{"location":"knowledge-base/#swaggerhub-integration","title":"SwaggerHub Integration","text":"<ul> <li>Run a yunIO Service in SwaggerHub</li> </ul>"},{"location":"knowledge-base/#sap-transactions","title":"SAP Transactions","text":"<ul> <li>Transaction IE01 - Create Equipment</li> <li>Transaction PA40 - Personnel Actions</li> <li>Transaction VA02 - Change Sales Order</li> <li>Transaction XD02 - Change Customer Master Data</li> <li>Transactions - Table Parameters</li> </ul>"},{"location":"knowledge-base/authorize-access-to-specific-reports/","title":"Authorize Access to Reports via Authorization Groups","text":"<p>The following article shows how to set up access control for reports.</p> <p>To grant access to a report, an authorization group must be assigned to the report. Access to the report can then be granted through the S_PROGRAM authorization object, see SAP Note 338177.</p>"},{"location":"knowledge-base/authorize-access-to-specific-reports/#authorizing-access-to-specific-reports","title":"Authorizing Access to Specific Reports","text":"<ol> <li>Log into SAP and use transaction code SE38 to open the ABAP Editor.</li> <li>Enter the name of the report you want to access and select Attributes as the Subobjects.</li> <li>Click [Change]. A window that contains the program attributes opens.</li> <li>Assign an authorization group. </li> <li>Edit or create a user role you want to grant access to (transaction code PFCG).</li> <li>Manually assign the authorization object S_PROGRAM to the user role. </li> <li>Select the action SUBMIT in the S_PROGRAM object field P_ACTION.</li> <li>Assign the same authorization group that is assigned to the report to the S_PROGRAM object field P_GROUP. </li> <li>Save and generate the authorization.</li> <li>Assign the user role to users.</li> </ol>"},{"location":"knowledge-base/authorize-access-to-specific-reports/#related-links","title":"Related Links","text":"<ul> <li>How to Create the Custom Authorization Object Z_TS_PROG</li> </ul>"},{"location":"knowledge-base/certificate-renewal/","title":"Certificate Renewal for TLS","text":"<p>The following article shows how to manually and automatically renew a X.509 certificate used for TLS in yunIO.</p>"},{"location":"knowledge-base/certificate-renewal/#renew-a-certificate-manually","title":"Renew a Certificate Manually","text":"<p>Warning</p> <p>Expired Certificate. Cryptographic key pair associated with the certificate is no longer valid and this may cause security risks. Always use a valid certificate. To access the Designer after a certificate has expired, delete the <code>tls.json</code> file in the installation directory of yunIO and restart the yunIO service. This resets all TLS settings in yunIO, including the certificate selection.</p> Renew a Certificate with New KeyRenew a Certificate with the Same Key <ol> <li>Before the old certificate expires, install a new certificate on the server machine.</li> <li>Open the yunIO Designer and switch to the new certificate, see Server Settings - Transport Layer Security.</li> <li>Delete the old certificate from the Microsoft Certificate Store.</li> </ol> <ol> <li>Block external access to yunIO using the firewall.</li> <li>Open the yunIO Designer and enable anonymous access, see Access Restrictions - Anonymous Access.</li> <li>Disable TLS in the Designer, see Server Settings - Transport Layer Security.</li> <li>Renew the certificate with the same key using Windows AD Certificate Services.</li> <li>Enable TLS in the Designer with the new certificate.</li> <li>Disable anonymous access in the Designer.</li> <li>Allow external access to yunIO using the firewall.</li> </ol>"},{"location":"knowledge-base/certificate-renewal/#renew-a-certificate-automatically","title":"Renew a Certificate Automatically","text":"<p>If you're using win-acme for the renewal of Letsencrypt certificates, run the following PowerShell script with the same client that runs win-acme.</p> <p>Download PowerShell Script for Letsencrypt Certificate Renewal</p>"},{"location":"knowledge-base/certificate-renewal/#about-win-acme","title":"About win-acme","text":"<p>win-acme creates a scheduled task for the renewal process.  When this process is triggered, it issues a new certificate and stores it in the Windows Certificate Store.  The old certificate is deleted. </p>"},{"location":"knowledge-base/certificate-renewal/#about-the-powershell-script","title":"About the PowerShell Script","text":"<p>The <code>yunio-le.ps1</code> script replaces the old certificate in the yunIO settings with the new certificate. No manual changes in yunIO are required.</p> <p>The <code>yunio-le.ps1</code> script requires 2 input parameters:</p> <ul> <li>the thumbprint of the old certificate</li> <li>the thumbprint of the new certificate</li> </ul>"},{"location":"knowledge-base/certificate-renewal/#related-links","title":"Related Links","text":"<ul> <li>Install an X.509 Certificate</li> <li>Enable Secure Network Communication (SNC) via X.509 certificate</li> <li>yunIO Documentation: Server Settings</li> </ul>"},{"location":"knowledge-base/conversion-in-power-automate/","title":"Formats and Conversions in Power Automate","text":"<p>This article offers conversion tips and code templates for working with yunIO in Power Automate.</p>"},{"location":"knowledge-base/conversion-in-power-automate/#leading-zeros","title":"Leading Zeros","text":"<p>Data in SAP often uses leading zeros to maintain a 10 character convention, e.g., KUNNR, MATNR, COST_CTR, etc. yunIO also requires leading zeros for these parameters.</p> <p>The following code adds leading zeros to a variable strValue:  <code>concat(substring('0000000000', 0, sub(10,length(variables('strValue')))), variables('strValue'))</code></p>"},{"location":"knowledge-base/conversion-in-power-automate/#date-conversion","title":"Date Conversion","text":"<p>When working with yunIO dates use the SAP format \"yyyyMMdd\". The following code converts German (\"dd.MM.yyyy\") and US (\"MM/dd/yyyy\") dates to the SAP date format (\"yyyyMMdd\") for variable strDate:</p> Date Conversion<pre><code>concat(\n    substring(variables('strDate'), 6, 4),\n\n    if(contains(variables('strDate'), '/'),\n        concat(\n            substring(variables('strDate'), 0, 2),\n            substring(variables('strDate'), 3, 2)\n            ),\n        concat(\n            substring(variables('strDate'), 3, 2),\n            substring(variables('strDate'), 0, 2)\n            )\n        )\n)\n</code></pre>"},{"location":"knowledge-base/conversion-in-power-automate/#syntax-in-different-language-settings","title":"Syntax in Different Language Settings","text":"<p>The Power Apps coding syntax is dependent on the configured language settings. This impacts:</p> <ul> <li>Arguments in function calls</li> <li>Fields in a record</li> <li>Records in a table</li> </ul> <p>For more information, see Microsoft: Formula separators and chaining operator.</p> Author's language decimal separator Power Apps decimal separator Power Apps list separator Power Apps chaining operator . (dot or period) . (dot or period) , (comma) ; (semi-colon) , (comma) , (comma) ; (semi-colon) ;; (double semi-colon) <p>Example: the English <code>ClearCollect(SAPData,yunIO_1.ReadCSKT());</code> becomes <code>ClearCollect(SAPData;yunIO_1.ReadCSKT())</code> for German language users. </p>"},{"location":"knowledge-base/conversion-in-power-automate/#related-links","title":"Related Links","text":"<ul> <li>How to use yunIO to populate Drop Down Controls in Power Apps</li> <li>Sync Salesforce with SAP using Power Automate and yunIO</li> </ul>"},{"location":"knowledge-base/create-the-custom-authority-object-z-ts-prog/","title":"Create the Custom Authorization Object Z_TS_PROG","text":"<p>The following article shows how to create the Z_TS_PROG authorization object for the custom function module Z_XTRACT_IS_REMOTE_REPORT.</p>"},{"location":"knowledge-base/create-the-custom-authority-object-z-ts-prog/#about-z_ts_prog","title":"About Z_TS_PROG","text":"<p>The Theobald Software custom function module Z_XTRACT_IS_REMOTE_REPORT enables the extractions of reports from SAP systems. If no authorization group is assigned to a report, Z_XTRACT_IS_REMOTE_REPORT uses a custom authorization object Z_TS_PROG to verify whether the SAP user is allowed to extract a report.  The access to reports is granted based on the name of the report.</p>"},{"location":"knowledge-base/create-the-custom-authority-object-z-ts-prog/#create-the-custom-authorization-object-z_ts_prog","title":"Create the Custom Authorization Object Z_TS_PROG","text":"<ol> <li>Use transaction SU21 to create a new authorization object.</li> <li>Expand the Create menu and click [Authorization Object]. The window \"Create Authorization Object\" opens. </li> <li>Enter the following values: Object: Z_TS_PRO Text: Theobald Software Report Authorization </li> <li>Click [Continue] to enable editing of the section Authorization fields.</li> <li>Manually enter S_NAME as the first entry in Authorization fields. </li> <li>Click [Save] to save the authorization object.</li> </ol>"},{"location":"knowledge-base/create-the-custom-authority-object-z-ts-prog/#related-links","title":"Related Links","text":"<ul> <li>Authorizing Access to Reports via Authorization Groups</li> <li>Z_XTRACT_IS_REMOTE_REPORT</li> </ul>"},{"location":"knowledge-base/dynamics-with-yunIO/","title":"Sync Dynamics 365 with SAP using Power Automate and yunIO","text":"<p>This article shows how to synchronize Dynamics 365 Business Central with SAP. In the following scenario, data from Dynamics 365 Business Central is used to automatically create customer master data in SAP.  The newly created SAP customer number is then written back to Dynamics 365 Business Central.</p>"},{"location":"knowledge-base/dynamics-with-yunIO/#about","title":"About","text":"<p>This article leads you through all necessary steps to set up the following process:</p> <ul> <li>When a customer account in Dynamics 365 Business Central is modified, a Power Automate workflow is triggered.</li> <li>The workflow checks if the customer exists in SAP.</li> <li>If the customer does not exist, a yunIO service writes the customer data from Dynamics 365 Business Central to SAP.</li> <li>If the customer is successfully created in SAP, the new SAP customer number is written back to Dynamics 365 Business Central.</li> </ul>"},{"location":"knowledge-base/dynamics-with-yunIO/#setup-in-yunio","title":"Setup in yunIO","text":"<p>yunIO is the connector that reads and writes data from and to SAP. For more information on yunIO, see Theobald Software: yunIO. Follow the steps below to set up a yunIO service that adds customers to the customer master data in SAP:</p> <ol> <li>Create a new SAP Connection in yunIO. </li> <li>Create a new service in yunIO.  This example uses the integration type Function Module for the service.</li> <li>Look up the standard BAPI BAPI_CUSTOMER_CREATEFROMDATA1 that creates customers in SAP. </li> <li>Set all import parameters you want to transfer from Dynamics 365 Business Central to SAP to Supplied by Caller e.g., NAME, CITY, POSTL_COD1, STREET, etc.</li> <li>Select CUSTOMERNO for export. This Export parameter contains the newly created SAP customer number that is written back to Dynamics 365 Business Central. </li> <li>Click   to testrun the service in yunIO  . For more information, see Documentation: Run Services in yunIO.</li> <li>Click  to download the service definition  . </li> </ol>"},{"location":"knowledge-base/dynamics-with-yunIO/#setup-in-dynamics-365","title":"Setup in Dynamics 365","text":"<p>Customize your Business Central account to provide SAP-related fields, e.g., SAP customer number. Business Central\u2019s personalization options do not include the creation of custom fields.  Use custom development or one of multiple available add-ons for Dynamics 365 Business Central to create custom fields.</p> <p>For more information on how to customize table fields via custom development, see Microsoft Documentation: Development - Table Object.</p> <p>Note</p> <p>Creating Sales Org, Distribution Channel and Division in Dynamics 365 Business Central is optional as they can also be set as static values in Power Automate.</p> <p></p>"},{"location":"knowledge-base/dynamics-with-yunIO/#setup-in-power-automate","title":"Setup in Power Automate","text":"<p>Follow the steps below to synchronize customer data in Dynamics 356 Business Central with customer data in SAP:</p> <ol> <li>Integrate the yunIO service created in Setup in yunIO as a custom connector in Power Automate, see Integrate a yunIO Service with Power Automate.</li> <li>Create a new workflow that is triggered when a customer data is modified in the Dynamics 365 Business Central table customers.</li> <li>Use a RowID to keep track of the modified record. </li> <li>Check if the custom field \"SAP Customer Number\" created in Setup in Dynamics 365 is empty.  If the customer does not have an SAP customer number, the customer is created in SAP.</li> <li>Add the yunIO connector created in step 1 to the workflow and map the customer data from Dynamics 365 Business Central to the input parameters of the yunIO custom connector. </li> <li>Check if the SAP customer was created using the yunIO return field TYPE . If TYPE does not equal \u2018E\u2019 (error), the SAP customer number is written back to Dynamics 365 Business Central.</li> <li>Add a Business Central Update Record tool to write the SAP customer number returned by the yunIO custom connector back to Business Central.</li> <li>Use the RowID of the workflow trigger to pass the SAP customer number to the modified record in Dynamics 365 Business Central. </li> <li>Optional: if the customer already has an SAP customer number, use the SAP customer number to call a yunIO service that changes SAP customer data to synchronize the modified data.</li> <li>Turn on the workflow. </li> </ol> <p>Note</p> <p>As of Business Central 2022 wave 2 (BC21) any changes in Dynamics 365 Business Central are saved automatically. To avoid triggering the Power Automate workflow multiple times due to auto-save actions, add a Delay tool after the workflow trigger or schedule the SAP synchronization, e.g., once a day.</p>"},{"location":"knowledge-base/dynamics-with-yunIO/#trigger-the-process","title":"Trigger the Process","text":"<ol> <li>Open Dynamics 365 Business Central and add a new customer.</li> <li>The Power Automate workflow runs and creates the customer in SAP.</li> <li>Check if the SAP customer number is written back to Dynamics 365 Business Central. </li> </ol>"},{"location":"knowledge-base/dynamics-with-yunIO/#related-links","title":"Related Links","text":"<ul> <li>Microsoft Documentation: AL Development Environment </li> <li>Microsoft Apps </li> <li>Microsoft Documentation: Development - Table Object</li> </ul>"},{"location":"knowledge-base/enable-snc-using-pse-file/","title":"Enable Secure Network Communication (SNC) via X.509 certificate","text":"<p>The following article describes how an SNC connection to an SAP source system can be established. </p> <p>The depicted approach uses an X.509 certificate that provides the logon data of the Windows AD user.  The correctness of this X.509 certificate is ensured via the company's internal certification authority (ca).</p>"},{"location":"knowledge-base/enable-snc-using-pse-file/#workflow","title":"Workflow","text":"<ol> <li>Upon connection start, the Secure Login Client retrieves the SNC name from the SAP NetWeaver AS ABAP.</li> <li>The Secure Login Client uses the authentication profile for this SNC name.</li> <li>The user unlocks the security token, for example, by entering the PIN or password.</li> <li>The Secure Login Client receives the X.509 certificate from the user security token. </li> <li>The Secure Login Client provides the X.509 certificate for single sign-on and secure communication between SAP GUI or Web GUI and the AS ABAP.</li> <li>The user is authenticated and the communication is secured.</li> </ol> <p>Tip</p> <p>The configuration of the X.509 certificate should be implemented by the network &amp; SAP Basis team and requires basic knowledge in this area.</p>"},{"location":"knowledge-base/enable-snc-using-pse-file/#requirements","title":"Requirements","text":"<p>The following system settings are a prerequisite for using this SNC solution:</p> <ul> <li>Installed Secure Login Client.</li> <li>The SAP application server is configured and activated for Secure Network Communication (SNC).</li> <li>The SNC standard library sapcryptolib is used as the SNC solution.</li> <li>The following SNC parameters are configured as mentioned.</li> </ul> SNC parameter Value Example snc/gssapi_lib Path and file name where the SAP Cryptographic Library is located. $(DIR_EXECUTABLE)\\sapcrypto.dll snc/identity/as Application server's SNC name Syntax: p:\\&lt;Distinguished_Name&gt;  The Distinguished Name part must match the Distinguished Name that you specify when creating the SNC PSE. p:CN=saperp.theobald.local"},{"location":"knowledge-base/enable-snc-using-pse-file/#step-by-step-guide","title":"Step-by-Step Guide","text":"<ol> <li> <p>Generate certificate for the application server and AD-user context from common Certificate Authority (ca). </p> <p>Note</p> <p>The X.509 certificate is available when placed in folder Certmgr &gt; Personal &gt; Certificates within Windows certificate store (user).</p> </li> <li> <p>Convert pfx file to SAP PSE format e.g., <code>sapgenpse.exe import_p12 -p cert.pse cert.pfx</code>.</p> </li> <li>Import the created PSE file via TA STRUST &gt; Edit mode &gt; PSE Import &gt; PSE Save as SNC Libcrypto.</li> <li>Edit the SNC configuration of the corresponding SAP user via transaction SU01  , SNC , SNC Name  = p:\\&lt;Full Distinguished_Name&gt;  e.g., <code>p:EMAIL=\"RandomUser@domain\",CN=\"Random User\",OU=\"Users\",OU=\"TheobaldSoftware\",DC=\"theobald\",DC=\"local\"</code>. </li> <li>Set up SNC authentication in the SAP connection settings.</li> </ol>"},{"location":"knowledge-base/enable-snc-using-pse-file/#releated-link","title":"Releated Link","text":"<ul> <li>SAP Documentation: Workflow with X.509 Certificate without Secure Login Server</li> <li>SAP Documentation: Secure Network Communications (SNC)</li> <li>SAP Documentation: Configuring SNC: External Programs AS ABAP Using RFC </li> <li>SAP Documentation: Setting the SNC Profile Parameters</li> <li>SAP Documentation: Configuring SAP GUI and SAP Logon for Single Sign-On</li> <li>SAP Documentation: Secure Login Client</li> <li>SAP Additional Content: List of SNC Error Codes</li> </ul>"},{"location":"knowledge-base/establish-an-azure-relay-hybrid-connection/","title":"Establish an Azure Relay Hybrid Connection to yunIO","text":"<p>The following article shows how to set up the Azure Relay Hybrid Connection in yunIO. An Azure Relay Hybrid Connection can be used to make yunIO services accessible to applications running in the Azure cloud.  For more information on Azure Relay, see Microsoft Documentation: What is Azure Relay?.</p>"},{"location":"knowledge-base/establish-an-azure-relay-hybrid-connection/#setup-in-azure","title":"Setup in Azure","text":"<p>Create an Azure Relay namespace and an Azure Relay Hybrid Connection, see Microsoft Documentation: Get started with Relay Hybrid Connections HTTP requests in .NET. The following settings are required when creating the Azure Relay Hybrid Connection:</p> <ol> <li>Deactivate the option Requires Client Authorization to send requests to the hybrid connection URL from every browser. </li> <li>Create a Shared Access Policy where the options Send and Listen are enabled. </li> <li>Copy the primary connection string from the Shared Access Policy to your clipboard. </li> </ol> <p>The Azure Relay Hybrid Connection is now ready to use.</p>"},{"location":"knowledge-base/establish-an-azure-relay-hybrid-connection/#setup-in-yunio","title":"Setup in yunIO","text":"<p>The following settings are required in yunIO:</p> <ol> <li>Open the Settings menu in yunIO.</li> <li>Set Service URL Kind to Azure Relay Hybrid Connection . </li> <li>Paste the primary connection string from the Shared Access Policy of the Azure Hybrid Connection in the field Azure Relay Connection String .</li> <li>Click [Save] and restart the YunIO service to complete the registration.</li> </ol> <p>The Azure Relay Hybrid Connection in yunIO is now ready to use.</p>"},{"location":"knowledge-base/establish-an-azure-relay-hybrid-connection/#how-to-check-the-connection","title":"How to check the Connection","text":"<p>There are multiple ways to check the connection between Azure and yunIO:</p> <ul> <li>Check the Hybrid Connection in Azure: The number of Listeners that are connected to a Hybrid Connection is displayed in the Overview screen of Azure Relay. If the connection to yunIO is established succesfully, the number of Listeners equals 1. </li> <li>Check the yunIO logs:  Open the Logs menu in yunIO and display the latest logs, see Documentation: Logs. If the connection to Azure Relay is established successfully, the following log entries are displayed: <pre><code>PT00H00M26.576S I AzureRelayListener: Found a connection string setting.\nPT00H00M26.578S I AzureRelayListener: Online. Listening...\nPT00H00M26.578S I AzureRelayListener: Server listening...\n</code></pre></li> <li>Check the URL of yunIO services: Run a service in the browser and see if the service URL uses the Azure Relay endpoint. Example: </li> </ul>"},{"location":"knowledge-base/establish-an-azure-relay-hybrid-connection/#related-links","title":"Related Links","text":"<ul> <li>yunIO Documentation: Server Settings</li> <li>Microsoft Documentation: What is Azure Relay?</li> <li>Microsoft Documentation: Get started with Relay Hybrid Connections HTTP requests in .NET</li> </ul>"},{"location":"knowledge-base/import-an-sap-transport-request/","title":"Import an SAP Transport Request","text":"<p>The following article shows how to import transport requests for custom functions modules that are included in the installation directory of your product, e.g., <code>C:\\Program Files\\[XtractProduct]\\ABAP</code>.</p>"},{"location":"knowledge-base/import-an-sap-transport-request/#upload-sap-transport-requests-to-sap","title":"Upload SAP Transport Requests to SAP","text":"<p>If you have access to the file system of SAP, you can copy and paste the files of your transport request directly into the <code>data</code> and <code>cofiles</code> folders of your SAP system. If you don't have access to the file system, follow the steps below to upload the files of your transport request using the SAP function module ARCHIVFILE_CLIENT_TO_SERVER:</p> <ol> <li>Unzip the transport request provided in the installation directory of your product, e.g., <code>C:\\Program Files\\[XtractProduct]\\ABAP</code>.</li> <li>Open SAP and go to transaction AL11.</li> <li>Find the entry DIR_TRANS in the column Name of Directory Parameter. Note or copy the path shown in the column Directory. </li> <li>Go to transaction SE37.</li> <li>Enter name of function module ARCHIVFILE_CLIENT_TO_SERVER and click [Test/Execute].  </li> <li>In the field PATH you select your request file from from step 1. The name of the file starts with an \"R\", e.g., R900472.</li> <li>In the field TARGET PATH you construct your target path using the following pattern: <code>{copied path from step 2}\\data\\{request file name}</code>.</li> <li>Enable case-sensitivity and click [Execute]. When prompted, confirm the upload.  </li> <li>In the field PATH you select your cofile from from step 1. The name of the file starts with a \"K\", e.g., K900472.</li> <li>In the field TARGET PATH you construct your target path using the following pattern: <code>{copied path from step 2}\\cofiles\\{cofile name}</code>.</li> <li>Enable case-sensitivity and click [Execute]. When prompted, confirm the upload. </li> </ol> <p>The files are now available in SAP.</p> <p>Note</p> <p>Another method for uploading files to SAP is the SAP transaction CG3Z. This transaction is only available on ERP systems. </p>"},{"location":"knowledge-base/import-an-sap-transport-request/#import-sap-transport-requests","title":"Import SAP Transport Requests","text":"<p>Follow the steps below to add the transport requests to the import queue and import them:</p> <ol> <li>Go to transaction STMS to open the transport management system.</li> <li>Click [Import Overview] ( icon). </li> <li>Double click on the import queue in which you want to load the transport request into. </li> <li>Open the transport request selection dialog via More &gt; Extras &gt; Other Requests &gt; Add.</li> <li>Select the transport request and confirm. If prompted, confirm the import. </li> <li>Select your transport request from the list and click [Import Request] ( icon). The window \"Import Transport Request\" opens.</li> <li>Enter the target client.  If the version of the SAP system where the transport request was created differs from your SAP system version, select the option Ignore Invalid Component Version. </li> <li>Confirm your settings. </li> </ol> <p>The transport request is imported.</p>"},{"location":"knowledge-base/import-an-sap-transport-request/#check-the-status-of-transport-requests","title":"Check the Status of Transport Requests","text":"<p>The import overview of the transport management system (transaction STMS) lists all transport requests. The status of the transport requests is displayed in the column \"RC\".</p> <p>A green bar indicates that the import was successful. In case of warnings or errors, double click on the icon to view the error messages. </p>"},{"location":"knowledge-base/integrate-a-yunio-service-with-alteryx/","title":"Integrate a yunIO Service with Alteryx","text":"<p>This article shows how to integrate a yunIO service with Alteryx. Alteryx is a software platform, which allows accessing, cleansing, testing, combining and analyzing output data.  For more Information on Alteryx, see Alteryx Official Website.</p>"},{"location":"knowledge-base/integrate-a-yunio-service-with-alteryx/#integrate-yunio-in-alteryx","title":"Integrate yunIO in Alteryx","text":"<p>yunIO is the connector, which reads and writes data from and to SAP. For more information on yunIO, see Theobald Software: yunIO.</p> <ol> <li>Open or create a new Alteryx workflow.</li> <li>Add a Download tool to your workflow.</li> <li>In the Configuration section of the Download tool, activate the option Use Data Connection Manager (DCM) and click [Set Up Connection].  The Alteryx Data Connection Manager (DCM) opens. </li> <li>Click [New] to create a new data source.</li> <li>Enter a name for the connection. </li> <li>Copy the Base URL of your yunIO instance into the field Base URL.</li> <li>Click [Save]. The subsection Connection is displayed.</li> <li>In the subsection Connection select one of the following authentication methods: </li> <li>No Credentials (if no authentication is set up in yunIO).</li> <li>Username (if no authentication is set up in yunIO).</li> <li>Username and password (if Basic Authentication is set up in yunIO, see yunIO Documentation: Access Restrictions).</li> <li>Select an existing credential or click + Connect Credential to create a new credential that can access and run yunIO services.</li> <li>Click [Link] / [Create and link] to link the credential to the connection. </li> <li>Click [Connect] to establish a connection to yunIO. The Data Connection Manager closes. </li> <li>Use the name of a yunIO service as input for the Download tool to call the service.  For more information about calling and passing parameters to yunIO services, see Call yunIO Services in Alteryx.</li> </ol> <p>For more information about the Alteryx Download tool, see Alteryx Designer Documentation: Download-Tool.</p>"},{"location":"knowledge-base/integrate-a-yunio-service-with-alteryx/#call-yunio-services-in-alteryx","title":"Call yunIO Services in Alteryx","text":"<p>Follow the steps below to call yunIO services in Alteryx:</p> <ol> <li>Create a new SAP Connection in yunIO. </li> <li>Create a new service in yunIO. This example uses a yunIO transaction service that changes customer master data in SAP, see Transaction XD02 - Change Customer Master Data.</li> <li>Open or create a new Alteryx workflow. </li> <li> <p>Add an Input Data tool   that provides values for the input parameters of the yunIO service. Example:</p> Name Value 1 skipPopups false 2 CustomerNo 1001 3 Name The Fresh Loaf 4 Street Washington Boulevard 5 HouseNo 1000 6 PostalCode 65936 7 City Frankfurt 8 Country DE 9 Region 06 10 Phone 069-467653-0 </li> <li> <p>Add a JSON Build tool   to format the input data into a JSON format that can be processed by the yunIO service. Example: </p> </li> <li>Add a Formula tool   to add a new column Service to the result of the JSON Build tool.  The column contains the name of the service you want to call e.g., <code>/Customer_Change_Alteryx</code>. </li> <li>Add a Download tool  to your workflow and set up a connection to yunIO, see Integrate yunIO in Alteryx. </li> <li>Select the Service column that contains the name of the service as the input for the URL field. Make sure that the combination of the base URL and the service name represents a valid URL e.g., <code>https://yunio.example.com:8175/services/Customer_Change_Alteryx</code>. </li> <li>Add a JSON Parse tool  to parse the JSON results returned by the service. </li> <li>Add a Browse tool  to view the parsed result message of the yunIO service. </li> <li>Run the workflow. If the run is successful, the workflow returns the following message: \"Changes have been made\".</li> </ol>"},{"location":"knowledge-base/integrate-a-yunio-service-with-alteryx/#sample-workflow","title":"Sample Workflow","text":"<p>Download yunIO_Customer_Update.yxwz</p>"},{"location":"knowledge-base/integrate-a-yunio-service-with-alteryx/#related-links","title":"Related Links","text":"<ul> <li>yunIO Documentation</li> <li>Alteryx Designer Documentation: Data Connection Manager</li> <li>Alteryx Designer Documentation: Download-Tool</li> <li>Alteryx Designer Documentation: JSON Build-Tool</li> </ul>"},{"location":"knowledge-base/integrate-a-yunio-service-with-nintex/","title":"Integrate a yunIO Service with Nintex","text":"<p>The following article shows how to integrate a yunIO service with Nintex Automation Cloud.</p> <p>The Nintex Automation Cloud is a cloud-based process automation service provided by Nintex.  The platform can be used to create automated workflows between different cloud apps and services that synchronize and collect data, generates documents and more.  For more Information on Nintex, see Nintex Official Website.</p>"},{"location":"knowledge-base/integrate-a-yunio-service-with-nintex/#setup-in-yunio","title":"Setup in yunIO","text":"<ol> <li>Create a service in yunIO. For this example we use the BAPI SD_RFC_CUSTOMER_GET to search and extract customer data from SAP.  The service has the following settings:</li> <li>Set the Import Parameter NAME1 to Supplied by Caller.</li> <li>Select all fields in the Table CUSTOMER_T for the output.</li> <li>Click   to testrun the service in yunIO  . For more information, see Documentation: Run Services in yunIO.</li> <li>Click  to download the service definition  . </li> </ol>"},{"location":"knowledge-base/integrate-a-yunio-service-with-nintex/#configure-a-yunio-xtension-in-nintex","title":"Configure a yunIO Xtension in Nintex","text":"<p>Note</p> <p>When integrating services from a local yunIO installation with Nintex Automation Cloud, we recommend using the Nintex Gateway to tunnel the connection. For more information on how to set up the Nintex Gateway with yunIO, see Nintex Documentation: Integrate with Theobald yunIO via Nintex Gateway.</p> <ol> <li>Open your Nintex Automation Cloud tenancy.</li> <li>Click Xtensions in the dashboard to open the Xtensions page  .</li> <li>Click  in the Private connector list  .</li> <li>Click [Choose a file] . Navigate to the yunIO service definition from Setup in yunIO. </li> <li>Wait for the Nintex Automation Cloud to validate the file.</li> <li>Click [Next]. Nintex Workflow Cloud detects the basic authentication security template.</li> <li>Click [Next].</li> <li>Edit the Name of the Xtension. The entered name becomes the name of the action group in the workflow.</li> <li>Edit the Description of the Xtension. This appears in the Private connector list in the Xtensions page.</li> <li>Optional: select or upload an icon for the Xtension.</li> <li>Click [Publish] . </li> </ol>"},{"location":"knowledge-base/integrate-a-yunio-service-with-nintex/#use-the-yunio-xtension-in-a-nintex-workflow","title":"Use the yunIO Xtension in a Nintex Workflow","text":"<p>After an Xtension is created, it can be used in a workflow. </p> <ul> <li>Drag&amp;Drop the yunIO Xtension from Configure a yunIO Xtension in Nintex into the workflow .</li> <li>Parameterize the input fields .  </li> </ul>"},{"location":"knowledge-base/integrate-a-yunio-service-with-nintex/#related-links","title":"Related Links","text":"<ul> <li>yunIO Documentation: Run Services</li> <li>Nintex Documentation: Integrate with Theobald yunIO via Nintex Gateway</li> <li>Nintex Gateway</li> </ul>"},{"location":"knowledge-base/integrate-a-yunio-service-with-power-automate/","title":"Integrate a yunIO Service with Power Automate","text":"<p>The following article shows how to integrate a yunIO service with Microsoft Power Automate.</p> <p>Power Automate is a cloud-based process automation service provided by Microsoft.  The platform can be used to create automated workflows between different cloud apps and services that synchronize and collect data, get notifications, start approvals, and more.  For more Information on Power Automate see Microsoft Power Automate Documentation.</p>"},{"location":"knowledge-base/integrate-a-yunio-service-with-power-automate/#setup-in-yunio","title":"Setup in yunIO","text":"<ol> <li>Create a service in yunIO. For this example we use the BAPI SD_RFC_CUSTOMER_GET to search and extract customer data from SAP.  The service has the following settings:</li> <li>Set the Import Parameter NAME1 to Supplied by Caller.</li> <li>Select all fields in the Table CUSTOMER_T for the output.</li> <li>Click   to testrun the service in yunIO  . For more information, see Documentation: Run Services in yunIO.</li> <li>Click  to download the service definition  . </li> </ol>"},{"location":"knowledge-base/integrate-a-yunio-service-with-power-automate/#configure-a-yunio-custom-connector-in-power-automate","title":"Configure a yunIO Custom Connector in Power Automate","text":"<p>Note</p> <p>When integrating services from a local yunIO installation with a cloud hosted platform like Power Automate, a gateway to tunnel the connection is recommended, e.g., the Microsoft On-premises data gateway. For more information about yunIO networking settings, see yunIO Networking Scenarios.</p> <ol> <li>Open the section Data &gt; Custom Connectors in Power Automate and click on + New custom connector.</li> <li>Click Import an OpenAPI file and give the connector a name of your choice. Select the service definition from Setup in yunIO from your hard drive and click Continue. </li> <li>In the General tab you can define general information for the custom connector.  </li> <li>With Upload you can upload a connector icon of your choice. Defining an alternative icon background color or a service description is optional.  </li> <li>If you use an on-premises data gateway, activate the checkbox Connect via on-premises gateway.</li> <li>Scheme: With TLS enabled in the yunIO server settings, the HTTPS scheme is pre-selected. In this example TLS is disabled, so the HTTP scheme is set. </li> <li>Under Host the host address for the yunIO service consumption with its respective port is preset. For local installations the host address is <code>localhost:[port]</code>. </li> <li>The Base URL represents extensions of the REST service URL that is triggered by the custom connector.  </li> <li>In the Security tab you can select the authentication type for service consumption.  </li> <li>No authentication is pre-set. This means that there is no authentication required by users calling the connector. </li> <li>If Request credentials from callers when running services is enabled in the yunIO connection settings, you can also select Basic authentication.  This means that the SAP user name and password used for the SAP connection, must be stored in the Connection Settings defined in the Test tab.</li> <li>The depicted example uses Basic authentication and labels the parameters SAP User and Password </li> <li>The Definition tab gives an overview about the yunIO service definition. No changes necessary. This also applies to the Code (Preview) tab.</li> </ol> <p>Note</p> <p>Before the service can be tested in the Test tab, the custom connector must be published with Create connector.</p>"},{"location":"knowledge-base/integrate-a-yunio-service-with-power-automate/#test-the-service","title":"Test the Service","text":"<ol> <li>Navigate to the Test tab of the custom connector. </li> <li>Create a connection with + New connection. </li> <li>Enter the credentials of the SAP user you have defined in the yunIO connection settings. If you select to connect via an on-premises gateway in the General tab, select your gateway instance.</li> <li>Confirm the settings with Create connection. </li> <li>Enter valid import values for the parameters you defined as Supplied by caller in the yunIO service settings  . </li> <li>Click Test operation . </li> <li>Check the SAP response displayed in the request body of the custom connector  .  </li> </ol> <p>Tip</p> <p>For services calling Function Modules or BAPIs that use tables or structured input information, switch Raw Body off to get a better structured input screen.</p>"},{"location":"knowledge-base/integrate-a-yunio-service-with-power-automate/#use-the-service-in-a-power-automate-flow","title":"Use the Service in a Power Automate Flow","text":"<p>After a connector is successfully tested, it can be used in a Flow. </p> <ol> <li>Add a new action to the Flow and search for the name of the custom connector.  </li> <li>Enter values in the input fields of the custom connector.  </li> </ol>"},{"location":"knowledge-base/integrate-a-yunio-service-with-power-automate/#related-links","title":"Related Links","text":"<ul> <li>Youtube Tutorial: SAP process automation - Power Automate SAP Connector</li> <li>yunIO Documentation: Run Services</li> </ul>"},{"location":"knowledge-base/integrate-yunio-via-nintex-gateway/","title":"Integrate a yunIO Service via Nintex Gateway","text":"<p>The following article shows how to integrate a yunIO services via the Nintex Gateway. The Nintex Gateway is an on-premises application that enables Nintex Automation Cloud to access on-premises resources.</p>"},{"location":"knowledge-base/integrate-yunio-via-nintex-gateway/#prerequisites","title":"Prerequisites","text":"<ul> <li>Install and configure the Nintex Gateway.</li> <li>Make sure that the Nintex Gateway has a valid API key for authentication.</li> <li>Install yunIO version 1.26.3 or higher.</li> <li>Set up Basic Authentication in yunIO, see Documentation: Access Restrictions. </li> </ul>"},{"location":"knowledge-base/integrate-yunio-via-nintex-gateway/#setup-in-yunio","title":"Setup in yunIO","text":"<ol> <li>Create a service in yunIO. The depicted example uses the BAPI SD_RFC_CUSTOMER_GET to search and extract customer data from SAP. </li> <li>Click   to testrun the service in yunIO  . For more information, see Documentation: Run Services in yunIO.</li> <li>Navigate to Settings and select Nintex Gateway as the OpenAPI Target Kind to add predefined Nintex Gateway properties to the service definition. </li> <li>Navigate to Services and click  to download the service definition  . </li> <li>Open the service definition and check if the following properties are available at the end of the service definition: Nintex Properties<pre><code>\"securityDefinitions\": {\n        \"basic\": {\n            \"type\": \"basic\",\n            \"x-ntx-connection-properties\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"x-ntx-gateway-id\",\n                    \"x-ntx-gateway-apikey\",\n                    \"x-ntx-gateway-xtension-baseurl\",\n                    \"username\",\n                    \"password\"\n                ],\n                \"properties\": {\n                    \"x-ntx-gateway-id\": {\n                        \"type\": \"string\",\n                        \"title\": \"Select Nintex Gateway\"\n                    },\n                    \"x-ntx-gateway-apikey\": {\n                        \"type\": \"string\",\n                        \"title\": \"Nintex Gateway API key\"\n                    },\n                    \"x-ntx-gateway-xtension-baseurl\": {\n                        \"type\": \"string\",\n                        \"title\": \"On-premises service URL\",\n                        \"description\": \"Base URL of the web service.\",\n                        \"pattern\": \"^(https?:\\/\\/[^\\/?#]+)(?:[\\/]|\\/.+|)$\"\n                    },\n                    \"username\": {\n                        \"type\": \"string\",\n                        \"title\": \"On-premises application username\"\n                    },\n                    \"password\": {\n                        \"type\": \"string\",\n                        \"title\": \"On-premises application password\"\n                    }\n                }\n            }\n        }\n    },\n    \"security\": [\n        {\n            \"basic\": []\n        }\n    ],\n    \"x-ntx-render-version\": 2,\n    \"x-ntx-host\": \"{x-ntx-gateway-uri}\"\n}\n</code></pre></li> </ol>"},{"location":"knowledge-base/integrate-yunio-via-nintex-gateway/#configure-a-yunio-xtension-in-nintex","title":"Configure a yunIO Xtension in Nintex","text":"<ol> <li>Open your Nintex Automation Cloud tenancy.</li> <li>Click Xtensions in the dashboard to open the Xtensions page  .</li> <li>Click  in the Private connector list  .</li> <li>Click [Choose a file] . Navigate to the yunIO service definition from Setup in yunIO. </li> <li>Wait for the Nintex Automation Cloud to validate the file.</li> <li>Click [Next]. Nintex Workflow Cloud detects the basic authentication security template.</li> <li>Click [Next].</li> <li>Edit the Name of the Xtension. The entered name becomes the name of the action group in the workflow.</li> <li>Edit the Description of the Xtension. This appears in the Private connector list in the Xtensions page.</li> <li>Optional: select or upload an icon for the Xtension.</li> <li>Click [Publish] . </li> </ol>"},{"location":"knowledge-base/integrate-yunio-via-nintex-gateway/#configure-a-yunio-connection-in-nintex","title":"Configure a yunIO Connection in Nintex","text":"<ol> <li>Click Connections in the dashboard to open the Connections page .</li> <li>Click [Add Connection] in the Connector list . </li> <li>Select the yunIO connector from Configure a yunIO Xtension in Nintex.</li> <li>Click [Next].</li> <li>Configure the connection: <ul> <li>Connection name - enter a name to identify the connection.</li> <li>Select Nintex Gateway - select your Nintex Gateway.</li> <li>Nintex Gateway API key - enter a valid API key of your Nintex Gateway.</li> <li>On-premises service URL - enter the base URL of your yunIO service, including the HTTPS.</li> <li>On-premises application username - enter your yunIO username.</li> <li>On-premises application password - enter your yunIO password.</li> </ul> </li> <li>Click [Connect].</li> </ol>"},{"location":"knowledge-base/integrate-yunio-via-nintex-gateway/#use-the-yunio-service-in-a-nintex-workflow","title":"Use the yunIO Service in a Nintex Workflow","text":"<p>After an Xtension and a Connection is created, the yunIO service can be used in a workflow. </p> <ol> <li>Drag&amp;Drop the yunIO Xtension from Configure a yunIO Xtension in Nintex into the workflow .</li> <li>Select the connection from Configure a yunIO Connection in Nintex . </li> <li>Parameterize the input fields . </li> </ol>"},{"location":"knowledge-base/integrate-yunio-via-nintex-gateway/#related-links","title":"Related Links","text":"<ul> <li>Nintex Documentation: Integrate with Theobald yunIO via Nintex Gateway</li> <li>Nintex Gateway</li> </ul>"},{"location":"knowledge-base/integrate-yunio-with-power-automate-and-the-ai-builder/","title":"Integrate yunIO with Power Automate and the AI Builder","text":"<p>The following article shows how to integrate yunIO with Microsoft Power Automate and the Microsoft AI Builder. AI Builder enables the usage of artificial intelligence to automate processes in Power Apps and Power Automate. Microsoft offers pre-built AI models to start using the tool without training the AI model first.</p> <p>The depicted example scenario uses an AI Builder template in Power Automate to automatically extract and post invoice information to the backend SAP ERP system.  In the SAP system an incoming invoice for a previously created purchase order is booked.</p>"},{"location":"knowledge-base/integrate-yunio-with-power-automate-and-the-ai-builder/#prerequisites","title":"Prerequisites","text":"<ul> <li>The process for incoming invoice creation must be customized and ready to use in SAP.  </li> <li>Test the BAPI/function call in SAP with transaction SE37 before building the web service. Note which parameters are needed for the call.</li> </ul>"},{"location":"knowledge-base/integrate-yunio-with-power-automate-and-the-ai-builder/#setup-in-yunio","title":"Setup in yunIO","text":"<p>Create a yunIO service for incoming invoices.</p> <p>Note</p> <p>The parameters that are needed to create an incoming invoice are dependent on your customized SAP settings for the invoicing process.</p> <ol> <li>Create a service in yunIO. Select {{ bapi }} as the {{ component }} for the service.  The depicted example uses the BAPI_INCOMINGINVOICE_CREATE1 to create an incoming invoice in SAP. </li> <li>Set the following import parameters to Supplied by Caller (Structure HEADERDATA):<ul> <li>INVOICE_IND (Indicator: post invoice)</li> <li>DOC_TYPE (Document Type)</li> <li>DOC_DATE (Document Date in Document)  </li> <li>PSTNG_DATE (Posting Date in the Document)</li> <li>COMP_CODE (Company Code)</li> <li>DIFF_INV (Different Invoicing Party)</li> <li>CURRENCY (Currency Key)</li> <li>CURRENCY_ISO (ISO currency code)</li> <li>GROSS_AMOUNT (Gross Invoice Amount in Document Currency)</li> <li>PMNTTRMS (Terms of Payment Key)</li> <li>BLINE_DATE (Baseline Date for Due Date Calculation)</li> <li>PMNT_BLOCK (Payment Block Key)</li> <li>PYMT_METH (Payment Method)</li> <li>PMTMTHSUPL (Payment Method Supplement)</li> <li>INVOICESTATUS (Invoice Document Status)</li> </ul> </li> <li>Select export parameters FISCALYEAR (Fiscal Year) and INVOICEDOCUMENTNUMBER (Document Number of an Invoice Document) for the output.  </li> <li>Select the Table RETURN for the output.</li> <li>Set the following fields of table ITEMDATA to Supplied by Caller:<ul> <li>INVOICE_DOC_ITEM (Document Item in Invoice Document)</li> <li>PO_NUMBER (Purchase Order Number)</li> <li>PO_ITEM (Item Number of Purchasing Document)</li> <li>ITEM_AMOUNT (Amount in document currency)</li> <li>QUANTITY (Quantity)</li> <li>PO_UNIT (Purchase Order Unit of Measure)  </li> </ul> </li> <li>Click   to testrun the service in yunIO  . For more information, see Documentation: Run Services in yunIO.</li> <li>Click  to download the service definition  . </li> </ol>"},{"location":"knowledge-base/integrate-yunio-with-power-automate-and-the-ai-builder/#configure-a-yunio-custom-connector-in-power-automate","title":"Configure a yunIO Custom Connector in Power Automate","text":"<p>To use the service created in Setup in yunIO with Power Automate, it must be available as a custom connector in Power Automate.  For information on how to integrate a yunIO service with Power Automate, see Integrate a yunIO Service with Power Automate.</p> <p>Note</p> <p>When integrating services from a local yunIO installation with a cloud hosted platform like Power Automate, a gateway to tunnel the connection is recommended, e.g., the Microsoft On-premises data gateway. For more information about yunIO networking settings, see yunIO Networking Scenarios.</p>"},{"location":"knowledge-base/integrate-yunio-with-power-automate-and-the-ai-builder/#create-a-power-automate-flow-for-invoice-processing","title":"Create a Power Automate Flow for Invoice Processing","text":"<p>The following workflow automatically extracts invoicing information with the AI Builder tool from random invoicing PDF files and posts this information to SAP.</p> <ol> <li>Follow the steps described in the Microsoft AI Builder Documentation to create a new Power Automate flow that uses the invoice processing pre-built model of AI Builder.</li> <li>Add an Initialize variable action after the AI Builder action.  This variable is used to automatically convert extracted dates into an SAP compliant format. </li> <li>Map the field Invoice Date (Date) returned from the AI Builder action to field Value of the Initialize variable action. For simplicity reasons this example uses only one date variable for the fields DOC_DATE, PSTNG_DATE and BLING_DATE.  </li> <li>Add the yunIO custom connector for incoming invoice creation.</li> <li>Map the required output fields of the AI Builder action to the matching parameters of the custom connector.  Keep in mind that some fields need fixed values required by SAP (INVOICESTATUS, INVOICE_IND,...), while others need output values from the invoice document extracted with the AI Builder action (DOC_DATE,...). Because the table ITEMDATA is used in a BAPI that can process multiple invoice items, Power Automate automatically sets an Apply to each action as the next workflow step.  This example demonstrates a simple case with a single invoice line item.  </li> <li>Use an expression to automatically convert the date fields into an SAP compliant format, see Formats and Conversions in Power Automate. </li> <li>Optional: Add an email notification action to get notified about the newly created incoming invoice. Use the output parameters INVOICEDOCNUMBER and FISCALYEAR in the notification email to see if the invoice was successfully created. Other SAP output information (i.e. table RETURN) can be extracted to analyze the data in case of workflow failures.  </li> <li>Publish the workflow.</li> </ol> <p>Note</p> <p>Note that the values used in this example might not be valid for your SAP system. In your case other (fixed) values might be necessary to run the process.</p>"},{"location":"knowledge-base/integrate-yunio-with-power-automate-and-the-ai-builder/#test-the-workflow","title":"Test the Workflow","text":"<ol> <li>Upload a suitable invoice PDF-document.  If needed, download a sample EXCEL file (.xlsx) that can be used as an invoice document. Note that a purchase order on which the incoming invoice can be booked, must already exist in the SAP ERP system.  For more information on incoming invoices, see SAP Documentation: Incoming Invoice. </li> <li>Check if the workflow steps are successfully executed one after the other.</li> <li>Check if an incoming invoice is created in SAP. </li> </ol>"},{"location":"knowledge-base/integrate-yunio-with-power-automate-and-the-ai-builder/#related-links","title":"Related Links","text":"<ul> <li>Youtube Tutorial: SAP process automation - Power Automate SAP Connector</li> <li>yunIO Documentation: Run Services in yunIO</li> <li>SAP Documentation: Incoming Invoice</li> </ul>"},{"location":"knowledge-base/networking/","title":"yunIO Networking Scenarios","text":"<p>When a call to a yunIO REST service is made, there are several ways a request and response can travel through networks from the caller to the SAP system and back.  This article provides examples of networking scenarios between a service caller and SAP.</p>"},{"location":"knowledge-base/networking/#same-network","title":"Same Network","text":"<p>If the service caller, yunIO and SAP are all part of the same network, the path for request and reponse is as follows:</p> <ol> <li>The caller sends the request directly to the yunIO server via HTTP or HTTPS.</li> <li>The yunIO server communicates with SAP. The response is sent back to the caller. </li> </ol> <p>Examples:</p> <ul> <li>Caller, yunIO and SAP run on-premises.</li> <li>Caller, yunIO and SAP run in the same cloud environment. </li> </ul>"},{"location":"knowledge-base/networking/#different-networks","title":"Different Networks","text":"<p>If the service caller is located on another network than yunIO and the SAP system, the two networks can be connected via the internet.</p> <p>Examples:</p> <ul> <li>Caller is located in the cloud, yunIO and SAP run on-premises.</li> <li>Caller is located in the cloud, yunIO and SAP are located at a hosting provider. </li> <li>Caller is located in one cloud environment, yunIO and SAP are located in a different cloud environment.</li> <li>Caller is located on-premises, yunIO and SAP are located at a hosting provider. </li> <li>Caller is located on-premises, yunIO and SAP are located in the cloud.</li> <li>Caller is located in US branch office, yunIO and SAP are located in European headquarters.</li> </ul> <p>Depending on the location of the caller, it is possible to restrict requests to the yunIO server to only trusted origins through network traffic rules.  If that is not possible, requests to the yunIO server can be made from untrusted sources. This can be a security risk, even if authentication is enabled, e.g., denial-of-service attacks.</p>"},{"location":"knowledge-base/networking/#direct-connection","title":"Direct Connection","text":"<p>A direct connection can be established, if firewall rules allow incoming requests from the caller's network to the yunIO/SAP network.  HTTPS should be enabled for direct connections to protect the confidentiality and integrity of the communication, see yunIO Server Settings: Transport Layer Security. The ports for service calls and for accessing the designer are open, see yunIO Server Settings: Services, Designer and WebSockets.</p> <p>For callers in cloud environments, it might not be possible to restrict requests to the yunIO server to trusted origins through firewall rules.</p> <ol> <li>The caller sends the request directly to the yunIO server via HTTPS.</li> <li>The yunIO server communicates with SAP. The response is sent back to the caller.  </li> </ol>"},{"location":"knowledge-base/networking/#azure-relay","title":"Azure Relay","text":"<p>The yunIO service can be exposed to the caller through Azure Relay. For callers in cloud environments it might not be possible to restrict requests to the yunIO server to trusted origins through Azure Relay rules. In this scenario it is not necessary to change firewall rules of the yunIO/SAP network to allow incoming requests from other networks.  Only outgoing requests from the yunIO/SAP network to Azure Relay must be allowed.</p> <ol> <li>The yunIO server connects from the yunIO/SAP network to Azure Relay and establishes a secure tunnel.</li> <li>a) The caller makes a request to Azure Relay. b) The request is forwarded through the secure tunnel to the yunIO server.</li> <li>The yunIO server communicates with SAP. The response is sent back to the caller.  </li> </ol> <p>For information on how to set up an Azure Relay Hybrid Connection with yunIO, see Establish an Azure Relay Hybrid Connection to yunIO.</p>"},{"location":"knowledge-base/networking/#azure-vpn","title":"Azure VPN","text":"<p>The caller and yunIO/SAP can be connected through a secure tunnel and joined to the same VNet in Azure. The yunIO server can be protected from requests from untrusted sources by restricting access to the VNet in Azure. In this scenario it is not necessary to change firewall rules of the yunIO/SAP network to allow incoming requests from other networks.  Only outgoing requests from the yunIO/SAP network to Azure must be allowed.</p> <ol> <li>The VPN client connects from yunIO/SAP network to Azure, establishes the secure tunnel.</li> <li>a) The caller makes a request to the yunIO server via VNet. b) The request is forwarded through the secure tunnel to the yunIO/SAP network. c) The request is forwarded to the yunIO server.</li> <li>The yunIO server communicates with SAP. The response is sent back to the caller.  </li> </ol>"},{"location":"knowledge-base/networking/#microsoft-on-premises-data-gateway","title":"Microsoft On-Premises Data Gateway","text":"<p>If the caller is one of the cloud services that is supported by the on-premises data gateway, requests to the yunIO server can be forwarded to the yunIO server through that gateway. The yunIO server can be protected from requests from untrusted sources using connection roles of the on-premises data gateway. Make sure that:</p> <ul> <li>the connectivity requirements from Microsoft are met, see Adjust communication settings for the on-premises data gateway.</li> <li>the gateway and power platform region settings are identical, see Check if the gateway is in the right region.</li> </ul> <p>In this scenario it is not necessary to change firewall rules of the yunIO/SAP network to allow incoming requests from other networks.  Only outgoing requests from the yunIO/SAP network to Azure must be allowed.</p> <ol> <li>The on-premises data gateway connects from yunIO/SAP network to Azure, establishes the secure tunnel.</li> <li>a) The caller makes a request to the yunIO server via gateway resource. b) The request is forwarded through the secure tunnel to the on-premises data gateway. c) The request is forwarded to the yunIO server.</li> <li>The yunIO server communicates with SAP. The response is sent back to the caller.  </li> </ol>"},{"location":"knowledge-base/networking/#related-links","title":"Related Links:","text":"<ul> <li>yunIO Documentation</li> <li>Microsoft Documentation: Azure Relay</li> <li>Microsoft Documentation: On-premises Data Gateway</li> </ul>"},{"location":"knowledge-base/personell-actions-with-nintex-and-yunio/","title":"Employee Onboarding using Nintex and yunIO","text":"<p>The following article shows how to use the Nintex Employee Onboarding scenario template with yunIO to create new employees in SAP.</p>"},{"location":"knowledge-base/personell-actions-with-nintex-and-yunio/#about","title":"About","text":"<p>The Employee Onboarding scenario template provided by Nintex includes a form for filling in employee details.  Based on the input, the workflow generates and sends the new hire their \u2018Employee Contract\u2019.  Once the contract is signed, the workflow automatically stores the employee contract in a file storage system, starts user provisioning with Active Directory, and sends the new hire a welcome email.</p> <p>This article leads you through all necessary steps to add a yunIO Xtension to the Employee Onboarding workflow to create the new employee in SAP.</p>"},{"location":"knowledge-base/personell-actions-with-nintex-and-yunio/#setup-in-yunio","title":"Setup in yunIO","text":"<p>yunIO is the connector that reads and writes data from and to SAP. For more information on yunIO, see Theobald Software: yunIO.</p> <p>Note</p> <p>The parameters that are needed to create new employees are dependent on your customized SAP settings.</p> <ol> <li>Create a service in yunIO. The depicted example uses the integration type Transaction for the service.</li> <li>Record SAP transactions to create a new employee in SAP, see Transaction PA40 - Personnel Actions. Example: </li> <li> <p>Parameterize all mandatory SAP fields in the yunIO service.  For information on how to parameterize services, see Documentation: Parameterize Transactions. The depicted example uses the following input parameters:</p> <ul> <li>EntryDate</li> <li>FirstName</li> <li>LastName</li> <li>BirthDate</li> <li>BirthPlace</li> <li>Language</li> <li>Nationality</li> <li>Street</li> <li>City</li> <li>PostalCode</li> </ul> <p>The input parameters can be adjusted according to your individual scenario requirements. </p> </li> <li> <p>Click   to testrun the service in yunIO  . For more information, see Documentation: Run Services in yunIO.</p> </li> <li>Click  to download the service definition  . </li> </ol>"},{"location":"knowledge-base/personell-actions-with-nintex-and-yunio/#setup-in-nintex","title":"Setup in Nintex","text":"<ol> <li>Integrate the yunIO service created in Setup in yunIO as an Xtension in Nintex, see Integrate a yunIO Service with Nintex: Configure a yunIO Xtension in Nintex.</li> <li>Import the Nintex template for Employee Onboarding to your tenant, see Nintex Gallery: Employee Onboarding.</li> <li>Open the imported Nintex workflow.</li> <li>Add the yunIO Xtension from step 1 after the contract is signed. </li> <li>Edit the start form to include input fields for SAP (EntryDate, FirstName, LastName, BirthDate, BirthPlace, Language, Nationality, Street, City, PostalCode): </li> <li>Create a new variable for every Date/Time field to change the date to the format \"DD.MM.YYYY\". This format is required by SAP. </li> <li>Map the parameters of the input form to the input fields of the yunIO Xtension. </li> <li>Optional: Add a Log to instance details action after the yunIO Xtension to monitor any returned error messages.</li> <li>Test the workflow.</li> </ol>"},{"location":"knowledge-base/personell-actions-with-nintex-and-yunio/#related-links","title":"Related Links","text":"<ul> <li>yunIO Documentation: Transactions</li> <li>Nintex Gallery: Employee Onboarding</li> <li>Integrate a yunIO Service with Nintex</li> </ul>"},{"location":"knowledge-base/populate-drop-down-controls-in-power-apps/","title":"Populate Drop Down Controls in Power Apps","text":"<p>The following article shows how to integrate yunIO services with Microsoft Power Apps. Power Apps is a cloud-based platform to build custom business applications based on different data sources. For more Information on Power Apps, see Microsoft Power Apps Documentation.</p>"},{"location":"knowledge-base/populate-drop-down-controls-in-power-apps/#about","title":"About","text":"<p>The following 3 examples for SAP interaction with drop down controls in Power Apps are documented in this article:</p> <ul> <li>Populating a drop down control with SAP table data without a search filter.</li> <li>Populating a drop down control with SAP table data using a search filter.</li> <li>Populating a drop down control with SAP data returned from a function module call. </li> </ul>"},{"location":"knowledge-base/populate-drop-down-controls-in-power-apps/#setup-in-yunio","title":"Setup in yunIO","text":"<ol> <li>The example applications in this article use multiple yunIO services. Create the following 3 services in yunIO: <ol> <li>Create a Table service to query data from the SAP table MAKT with the following settings: Select the table fields MATNR (Material Number), SPRAS (Language Key) and MAKTX (Material Description) for output. Set the row limit to 100 rows. </li> <li>Create a Table service to query data from the SAP table CSKT with the following settings: Select the table fields KOSTL (Cost Center), KTEXT (General Name) and LTEXT (Description) for output. Set the row limit to 100 rows. </li> <li>Create a Function Module service that calls the function SD_RFC_CUSTOMER_GET with the following settings: Set the input parameter NAME1 (Customer's Name) to Supplied by caller. Select all fields in the table CUSTOMER_T for the output.</li> </ol> </li> <li>Click   to testrun the service in yunIO  . For more information, see Documentation: Run Services in yunIO.</li> <li>Click  to download the service definition  . </li> </ol> <p>For more information on how to create services, see Create a Service.</p> <p>Note</p> <p>In Power Apps every data source is limited to 500 items. Therefore, it is recommended to pre-filter requests to a manageable amount of data e.g., by using a row limit in the yunIO service.</p>"},{"location":"knowledge-base/populate-drop-down-controls-in-power-apps/#configure-a-yunio-custom-connector-in-power-automate","title":"Configure a yunIO Custom Connector in Power Automate","text":"<p>To use the service created in Setup in yunIO with Power Apps, it must be available as a custom connector in Power Automate.  For information on how to integrate a yunIO service with Power Automate, see Integrate a yunIO Service with Power Automate. </p> <p>Note</p> <p>When integrating services from a local yunIO installation with a cloud hosted platform like Power Automate, a gateway to tunnel the connection is recommended, e.g., the Microsoft On-premises data gateway. For more information about yunIO networking settings, see yunIO Networking Scenarios.</p>"},{"location":"knowledge-base/populate-drop-down-controls-in-power-apps/#integrate-yunio-services-in-power-apps","title":"Integrate yunIO Services in Power Apps","text":"<p>After a connector is successfully tested, it can be used as a data source in Power Apps. </p> <p>Note</p> <p>The Power Apps coding syntax is dependent on the configured language settings, e.g., the English <code>ClearCollect(SAPData,yunIO_1.ReadCSKT());</code> becomes <code>ClearCollect(SAPData;yunIO_1.ReadCSKT())</code> for German language users. For more information, see Microsoft: Formula separators and chaining operator.</p> <ol> <li>Create a new model-driven Power App containing one screen using the Power Apps studio designer.</li> <li>Add three drop down controls and three labels to describe the fields.</li> <li>For the first and the last drop down control add additional text input controls (here input_sap_material_number and input_customers) for search/filter values.  </li> <li>Add the previously created yunIO custom connectors containing the MAKT service, the CSKT service and the CustomerGet service.  </li> <li>Customize the fields for populating the drop down controls with SAP values, see the examples below. </li> </ol>"},{"location":"knowledge-base/populate-drop-down-controls-in-power-apps/#examples","title":"Examples","text":"<p>The depicted examples show how to populate drop down lists with different kinds of data.</p>  SAP Table Data without a Search Filter  SAP Table Data with a Search Filter  SAP Data returned by a Function Module Call <p>The first example queries SAP table data for table CSKT (Cost Center Texts). The drop down control is populated without any search filtering.</p> <ol> <li>Use the following code in the OnSelect box of the dropdown control in the advanced settings:  <pre><code>ClearCollect(SAPData,yunIO_1.ReadCSKT());\n</code></pre> With ClearCollect a collection with a name of your choice (here SAPData) is filled with data from the external data source. The results are displayed when unfolding the drop down control.    </li> <li>Use the Concatenate function in the field Items to concatenate and display more than one table column in the drop down control.  The result of the SAP table query, stored in the collection variable SAPData, is displayed in the Value box as Result. In this example the fields KOSTL (cost center) and LTEXT (cost center description) are concatenated and displayed, separated by a space. Other column separators are possible. <pre><code>Concatenate(SAPData.KOSTL,\" \",SAPData.LTEXT)\n</code></pre> </li> </ol> <p>Tip</p> <p>You can display a quick preview in the Power Apps studio by clicking [Alt] + the drop down control.</p> <p>The second example queries SAP table data for table MAKT (Material Descriptions).  The search field uses a Where Clause to filter the SAP table. </p> <ol> <li>Use the following code in the OnSelect box of the drop down control in the advanced settings: <pre><code>ClearCollect(SAPResult,yunIO.MAKTService({whereClause:Concatenate(\"SPRAS = 'EN' AND MATNR LIKE '\",input_sap_material_number.Text,\"'\")}));\n</code></pre> With ClearCollect a collection with a name of your choice (here SAPResult) is filled with data from the external data source. The Where Clause points to the input field input_sap_material_number (configured as Text).    </li> <li>Use the Concatenate function in the field Items to concatenate and display more than one table column in the drop down control.  The result of the SAP table query, stored in the collection variable SAPResult, is displayed in the Value box as Result. In this example the fields MATNR (material number) and MAKTX (material description are concatenated and displayed, separated by a space. Other column separators are possible. <pre><code>Concatenate(SAPResult.MATNR,\" \",SAPResult.MAKTX)  \n</code></pre> </li> </ol> <p>Tip</p> <p>You can also use the OnChange field of the text input control for the ClearCollect statement. This has the advantage that the drop down control is populated while the search text is entered.</p> <p>Ignoring Leading Zeroes: To ignore leading zeroes when using the search filter for MAKT, use the following code for the ClearCollect statement: <pre><code>ClearCollect(SAPResult;yunIO.MAKTService({whereClause:Concatenate(\"SPRAS = 'DE' AND ( MATNR LIKE '\";Substitute(input_sap_material_number.Text;\"*\";\"%\");\"' OR MAKTX LIKE '\";Substitute(input_sap_material_number.Text;\"*\";\"%\");\"' )\")}));;\nIf(CountRows(SAPResult)=1;Set(varinput_sap_material_number;false)\n</code></pre></p> <p>The third example calls the SAP function module SD_RFC_CUSTOMER_GET using an input parameter to display the table output (table CUSTOMER_T) in the drop down control. The input parameter is passed to  the function by a separate text input control. In this example the text input control enables searching for customer names (field NAME1).</p> <ol> <li>Use the following code in the OnSelect box of the drop down control in the advanced settings: <pre><code>ClearCollect(CustomerGetResult,yunIO_2.postCustomerGet({NAME1:input_customer_name.Text}).CUSTOMER_T);\n</code></pre> With ClearCollect a collection with a name of your choice (her CustomerGetResult) is filled with data from the external data source. The input parameter NAME1 points to the text input control input_customer_name. There is a reference to the output table CUSTOMER_T at the end of the statement, which allows to select the output fields of that table later on.  </li> <li>Use the Concatenate function in the field Items to concatenate and display more then one table column in the drop down control.  The result of the SAP table query, stored in the collection variable CustomerGetResult, is displayed in the Value box as Result. In this example fields NAME1 (customer name) and KUNNR (customer number) are concatenated and displayed, separated by a space. Other column separators are possible. <pre><code>Concatenate(CustomerGetResult.NAME1,\" \",CustomerGetResult.KUNNR)\n</code></pre> </li> </ol>"},{"location":"knowledge-base/populate-drop-down-controls-in-power-apps/#related-links","title":"Related Links","text":"<ul> <li>Youtube Tutorial: SAP process automation - Power Automate SAP Connector</li> <li>Microsoft Documentation: Drop down control</li> <li>Microsoft Documentation: Text input control</li> <li>Getting Started: Run and Integrate Services</li> </ul>"},{"location":"knowledge-base/run-a-yunio-service-in-postman/","title":"Run a yunIO Service in Postman","text":"<p>The following article shows how to run a yunIO service in Postman.</p> <p>Postman is an API platform for building and using APIs. You can use Postmn as a Desktop App or in your browser. For more information on Postman, see Postman Documentation.</p>"},{"location":"knowledge-base/run-a-yunio-service-in-postman/#prerequisites-in-yunio","title":"Prerequisites in yunIO","text":"<ol> <li>Create a service in yunIO. The depicted example uses the BAPI SD_RFC_CUSTOMER_GET to search and extract customer data from SAP.  The service has the following settings:</li> <li>Set the Import Parameter NAME1 to Supplied by Caller.</li> <li>Select all fields in the Table CUSTOMER_T for the output.</li> <li>Click   to copy the URL of the service definition or click   to download the service definition. </li> </ol>"},{"location":"knowledge-base/run-a-yunio-service-in-postman/#load-a-yunio-service-in-postman","title":"Load a yunIO Service in Postman","text":"<ol> <li>Open Postman in your browser or on your desktop.</li> <li>To load a service definition in Postman, navigate to your workspace and click [Import]. </li> <li>There are 2 ways to import a yunIO service definition:</li> <li>Paste the URL of the service definition in the tab Links.</li> <li>Upload a service definition from your harddrive in the tab File.</li> <li>Click [Import] to import the service definition. The service definition is now available in your workspace.  </li> </ol> <p>Tip</p> <p>If you don\u2019t have any authentication, headers, or parameters to add to the service, open a new tab and paste the URL of your yunIO service endpoint into the main URL input line. Select POST from the method drop-down list and click [Send] to execute the service.</p>"},{"location":"knowledge-base/run-a-yunio-service-in-postman/#parameterize-the-service","title":"Parameterize the Service","text":"<p>All parameters defined in yunIO are accessible in the request body of the service.  To set parameters, edit the Body accordingly e.g., set the input parameter NAME1 to \"John%\" to get all data of customers whose names starts with \"John\". There are multiple ways to set the parameter:</p> <ul> <li>Enter the parameter value directly into the request body: <code>\"NAME1\": \"John%\"</code></li> <li>Use a variable to set the parameter: <code>\"NAME1\": \"{{my_variable}}\"</code> For more information on variables in Postman, see Using Variables in Postman.</li> </ul> <p></p>"},{"location":"knowledge-base/run-a-yunio-service-in-postman/#run-the-service","title":"Run the Service","text":"<p>Note</p> <p>If the option Request credentials from callers when running services is active in the connection settings in yunIO, you have to select Basic Authentication in the Authentication tab of Postman and enter your SAP credentials before running the service.</p> <p>After importing the service definition, the URL of the service endpoint is available in the main URI input line. If not, enter the URL and select the POST method.  Click [Send] to execute the service. </p> <p>The results are displayed in the Response section of Postman. </p>"},{"location":"knowledge-base/run-a-yunio-service-in-postman/#related-links","title":"Related Links","text":"<ul> <li>Web Version of Postman</li> <li>Postman Documentation: Using Variables in Postman</li> <li>Getting Started: Run and Integrate Services</li> </ul>"},{"location":"knowledge-base/run-a-yunio-service-in-swagger-hub/","title":"Run a yunIO Service in SwaggerHub","text":"<p>The following article shows how to run a yunIO service in SwaggerHub. SwaggerHub is an OpenAPI design and documentation tool that allows validation of APIs. For more information on the SwaggerHub, see SwaggerHub Documentation.</p>"},{"location":"knowledge-base/run-a-yunio-service-in-swagger-hub/#prerequisites-in-yunio","title":"Prerequisites in yunIO","text":"<ol> <li>Create a service in yunIO. The depicted example uses a Table service with the following settings: </li> <li>Click   to testrun the service in yunIO  . For more information, see Documentation: Run Services in yunIO.</li> <li>Click  to download the service definition  . </li> </ol>"},{"location":"knowledge-base/run-a-yunio-service-in-swagger-hub/#load-and-run-a-yunio-service-in-swaggerhub","title":"Load and Run a yunIO Service in SwaggerHub","text":"<ol> <li>Open SwaggerHub in your browser.</li> <li>Click Create New &gt; Import and Document API. </li> <li>Click [Browse] to upload the service definition or paste the URL of the service endpoint into the designated input field. </li> <li>Click [Import] / [Upload File] to load the service definition. </li> <li>Open the POST method of the service to access headers and parameter settings. We recommend using the POST method with Transport Layer Security (HTTPS) to ensure data protection.  Do not use the GET method to send sensible data, e.g., credentials. </li> <li>Click [Try it out] to pass parameters and credentials and to run the service in Swagger Hub. </li> <li>Optional: Edit the parameters in the request body of the service, e.g., change the WHERE clause of the table extraction. </li> <li>Click [Execute] to run the service. </li> <li>If the service requires Basic Authentication, you are prompted to enter your credentials.</li> <li>The results are displayed in the Response body section of SwaggerHub.</li> </ol>"},{"location":"knowledge-base/run-a-yunio-service-in-swagger-hub/#related-links","title":"Related Links","text":"<ul> <li>SwaggerHub Documentation</li> <li>Getting Started: Run and Integrate Services</li> </ul>"},{"location":"knowledge-base/salesforce-power-automate-scenario/","title":"Sync Salesforce with SAP using Power Automate and yunIO","text":"<p>This article shows how to synchronize a Salesforce account in near-real time with SAP. In the following scenario, data from Salesforce is used to automatically create a customer account in SAP.  The newly created SAP customer number is then written back to Salesforce.</p>"},{"location":"knowledge-base/salesforce-power-automate-scenario/#about","title":"About","text":"<p>This article leads you through all necessary steps to set up the following process:</p> <ul> <li>When an account in the Sales Console of Salesforce is modified, a Power Automate workflow is triggered.</li> <li>The workflow checks if the type of the account is set to Customer - Direct and if the customer exists in SAP.</li> <li>If both conditions are true, a yunIO service that writes customer data from Salesforce to SAP is executed.</li> <li>When the customer is created in SAP, the new SAP customer number is written back to the Salesforce sales account.</li> </ul>"},{"location":"knowledge-base/salesforce-power-automate-scenario/#setup-in-yunio","title":"Setup in yunIO","text":"<p>yunIO is the connector that reads and writes data from and to SAP. For more information on yunIO, see Theobald Software: yunIO.</p> <ol> <li>Create an SAP connection in yunIO. </li> <li>Create a service in yunIO.  The depicted example uses the integration type Function Module for the service.</li> <li>Look up the standard BAPI BAPI_CUSTOMER_CREATEFROMDATA1 that creates customers in SAP. </li> <li>Set all import parameters you want to transfer from Salesforce to SAP to Supplied by Caller e.g., NAME, CITY, POSTL_COD1, STREET, etc.</li> <li>Select CUSTOMERNO for export. This Export parameter contains the newly created SAP customer number that is written back to Salesforce. </li> <li>Click   to testrun the service in yunIO  . For more information, see Documentation: Run Services in yunIO.</li> <li>Click  to download the service definition  . </li> </ol>"},{"location":"knowledge-base/salesforce-power-automate-scenario/#setup-in-salesforce","title":"Setup in Salesforce","text":"<p>Customize your Salesforce account to provide SAP-related fields:</p> <ul> <li>Create a field SAP ID. Once a customer is created in SAP, the customer number is written back into SAP ID.</li> <li>Company Code, Sales Org, Distribution Channel and Division are organization details required to create the SAP customer.</li> <li>Create a checkbox that indicates if the customer exists in SAP.</li> </ul> <p>For more information on how to customize fields in Salesforce, see Salesforce Documentation: Create Custom Fields.</p> <p>Note</p> <p>Creating Company Code, Sales Org, Distribution Channel and Division in Salesforce is optional as they can also be set as static values in Power Automate.</p> <p></p>"},{"location":"knowledge-base/salesforce-power-automate-scenario/#setup-in-power-automate","title":"Setup in Power Automate","text":"<ol> <li>Integrate the yunIO service created in Setup in yunIO as a Custom Connector in Power Automate, see Integrate a yunIO Service with Power Automate.</li> <li>Create a new workflow that is triggered when a Salesforce account is modified  .</li> <li>Check if the account type in Salesforce is set to Customer - Direct and if the customer does not yet exist in SAP  . If one or both conditions are false, end the workflow  . If both conditions are true, execute the yunIO service to write the customer data to SAP . </li> <li>Add the yunIO connector created in step 1 to the workflow and map the customer data from Salesforce to the input parameters of yunIO. </li> <li>Check if the SAP customer was created using the yunIO return field TYPE .  If TYPE does not equal 'E' (error), the SAP customer number is written back to Salesforce.</li> <li>When updating the Salesforce account, assign the CUSTOMERNO from yunIO to SAP ID and set the checkbox In SAP to 'Yes' . </li> <li>Optional: Send notifications when a customer is created or log all synchronized Salesforce accounts e.g., in a SharePoint Online list. </li> <li>Turn on the workflow.</li> </ol>"},{"location":"knowledge-base/salesforce-power-automate-scenario/#trigger-the-process","title":"Trigger the Process","text":"<ol> <li>Open Salesforce and change the account type from Prospect to Customer - Direct. Make sure that the checkbox In SAP is deactivated.</li> <li>The Power Automate workflow runs and creates the customer in SAP.  </li> <li>Check if the SAP customer number is set in Salesforce and if the checkbox In SAP is active. </li> <li>Open SAP and look up the customer using the transaction xd03. Enter the customer number from Salesforce to look up the customer. </li> </ol>"},{"location":"knowledge-base/sharepoint-purchase-requisition-with-yunIO/","title":"Sync SharePoint Custom Lists with SAP using Power Automate and yunIO","text":"<p>The following article shows how to synchronize SharePoint custom lists in near-real time with SAP. In the following scenario, data from SharePoint is used to automatically create a purchase requisition in SAP. The newly created SAP purchase requisition number is then written back to SharePoint.</p>"},{"location":"knowledge-base/sharepoint-purchase-requisition-with-yunIO/#about","title":"About","text":"<p>This article leads you through all necessary steps to set up the following process:</p> <ul> <li>When a new purchase requisition is added to a SharePoint list, a Power Automate workflow is triggered.  This process also works with other automation tools, e.g., Nintex.</li> <li>The workflow uses the SharePoint data to run a yunIO service that creates a new purchase requisition in SAP.</li> <li>When the purchase requisition is created in SAP, the new SAP purchase requisition number is written back to the SharePoint list.</li> </ul>"},{"location":"knowledge-base/sharepoint-purchase-requisition-with-yunIO/#setup-in-yunio","title":"Setup in yunIO","text":"<p>yunIO is the connector that reads and writes data from and to SAP. For more information on yunIO, see Theobald Software: yunIO. Follow the steps below to set up a yunIO service that creates purchase requisitions in SAP:</p> <p>Note</p> <p>The parameters that are needed to create purchase requisitions are dependent on your customized SAP settings.</p> <ol> <li>Create an SAP connection in yunIO. </li> <li>Create a service in yunIO. The depicted example uses the integration type Function Module for the service.</li> <li>Look up the standard BAPI, BAPI_PR_CREATE that creates purchase requisitions in SAP. </li> <li> <p>Set the following import parameters to Supplied by Caller: </p> Table Field Description PRHEADER Transfer Structure for Enjoy Purchase Req. - Header PRHEADER PR_TYPE Order Type (Purchasing) PRHEADERX Change Parameter for Enjoy Purchase Requisition - Header PRHEADERX PR_TYPE Updated information in related user data field </li> <li> <p>Set the following table parameters to Supplied by Caller:</p> Table Field Description PRACCOUNT Transfer Structure for Enjoy Purchase Req. - Acct Assignment PRACCOUNT PREQ_ITEM Item Number of Purchase Requisition PRACCOUNT SERIAL_NO Sequential Number of Account Assignment PRACCOUNT GL_ACCOUNT G/L Account Number PRACCOUNT COSTCENTER Cost Center PRACCOUNTX Change Toolbar for Enjoy Purchase Req. - Account Assignment PRACCOUNTX PREQ_ITEM Item Number of Purchase Requisition PRACCOUNTX SERIAL_NO Sequential Number of Account Assignment PRACCOUNTX PREQ_ITEMX Updated information in related user data field PRACCOUNTX SERIAL_NOX Updated information in related user data field PRACCOUNTX GL_ACCOUNT Updated information in related user data field PRACCOUNTX COSTCENTER Updated information in related user data field PRITEM Transfer Structure for Enjoy Purchase Req. - Item Data PRITEM PREQ_ITEM Item Number of Purchase Requisition PRITEM MATERIAL Material Number PRITEM PLANT Plant PRITEM QUANTITY Purchase Requisition Quantity PRITEM DELIV_DATE Item Delivery Date PRITEM ACCTASSCAT Account Assignment Category PRITEMX Change Parameter for Enjoy Purchase Requisition - Item Data PRITEM PREQ_ITEM Item Number of Purchase Requisition PRITEM PREQ_ITEMX Updated information in related user data field PRITEM MATERIAL Updated information in related user data field PRITEM PLANT Updated information in related user data field PRITEM QUANTITY Updated information in related user data field PRITEM DELIV_DATE Updated information in related user data field PRITEM ACCTASSCAT Updated information in related user data field </li> <li> <p>Select the table RETURN for export. This table contains logs and error messages.</p> </li> <li>Select the export parameter NUMBER for the output. This parameter contains the new SAP purchase requisition number that is written back to SharePoint.</li> <li>Activate the advanced setting Commits Transaction. If this option is active, the function module \u201cBAPI_TRANSACTION_COMMIT\u201d is called after processing the selected Function Module / BAPI.  BAPI_PR_CREATE require this commit function to successfully update data in the database. </li> <li>Click   to testrun the service in yunIO  . For more information, see Documentation: Run Services in yunIO.</li> <li>Click  to download the service definition  . </li> </ol>"},{"location":"knowledge-base/sharepoint-purchase-requisition-with-yunIO/#setup-in-sharepoint","title":"Setup in SharePoint","text":"<p>Create a SharePoint list that provides SAP-related fields. For this example, create the following columns:</p> <ul> <li>Material</li> <li>Plant</li> <li>Quantity</li> <li>Delivery Date</li> <li>Cost Center</li> <li>Purchase Requisition Number (when a purchase requisition number is created in SAP, it is written back to this column)</li> </ul> <p></p> <p>For more information on SharePoint lists, see Microsoft Documentation: Introduction to lists.</p> <p>Note</p> <p>Defining other input parameters in SharePoint is optional as they can also be set as static values in Power Automate.</p> <p>Tip</p> <p>You can use a Power App form to simplify and validate the SharePoint input, see Using yunIO Services in Power Apps.</p>"},{"location":"knowledge-base/sharepoint-purchase-requisition-with-yunIO/#setup-in-power-automate","title":"Setup in Power Automate","text":"<ol> <li>Integrate the yunIO service created in Setup in yunIO as a Custom Connector in Power Automate, see Integrate a yunIO Service with Power Automate.</li> <li>Create a new workflow that is triggered when a new item is added to the SharePoint list.</li> <li>Add the yunIO connector created in step 1 to the workflow and map the purchase requisition data from SharePoint to the input parameters of yunIO. </li> <li>Make sure that the SharePoint input uses the right format, e.g., the delivery date must have the SAP format <code>YYYYmmDD</code> and the cost center must have 10 characters, including leading zeroes. For conversion tips and code templates, see Formats and Conversions in Power Automate.</li> <li>Add a SharePoint Update Item tool to write the purchase requisition number from the yunIO Custom Connector back to the SharePoint list. </li> <li>Optional: Send notifications when a purchase requisition is created. </li> <li>Turn on the workflow.</li> </ol>"},{"location":"knowledge-base/sharepoint-purchase-requisition-with-yunIO/#trigger-the-process","title":"Trigger the Process","text":"<ol> <li>Open SharePoint and add a new purchase requisition.</li> <li>The Power Automate workflow runs and creates the purchase requisition in SAP.</li> <li>Check if the SAP purchase requisition number is written back to SharePoint. </li> </ol>"},{"location":"knowledge-base/supported-sap-and-hana-versions/","title":"Supported SAP S/4HANA Versions","text":"<p>The following article gives an overview of all SAP S/4HANA systems supported by Board Connector.</p>"},{"location":"knowledge-base/supported-sap-and-hana-versions/#supported-sap-s4hana-cloud-systems","title":"Supported SAP S/4HANA Cloud Systems","text":"<p>The following table lists all available SAP S/4HANA cloud systems and their compatibility with Board Connector. SAP S/4HANA Cloud Edition (Cloud ERP):</p> S/4HANA Cloud Essentials Edition (ES) S/4HANA Cloud Extended Edition (ED) RISE with SAP S/4HANA Cloud Private Edition Previously called: Multi Tenant Edition (MTE) Single Tenant Edition (STE) Private Cloud Edition (PCE) Compatible with Board Connector:  (with limitations) Limitations: - The installation of custom function modules is restricted. Transport requests for Table and Report cannot be imported by customers, but must be requested from SAP. -"},{"location":"knowledge-base/supported-sap-and-hana-versions/#sap-s4hana-on-premise-systems","title":"SAP S/4HANA On Premise Systems","text":"<p>The following table lists all available SAP S/4HANA on premise systems and their compatibility with Board Connector. SAP S/4HANA AnyPremise (ERP in the Cloud):</p> S/4HANA Private Cloud Managed by SAP (HEC) SAP HEC Customer Edition S/4HANA AnyPremise S/4HANA AnyPremise Additional Information: On-Premises Edition Runs on Customer Data Center Public Cloud (AZURE/AWS/GCP) called ERP in DC (Customer Data Center) Compatible with Board Connector:"},{"location":"knowledge-base/sync-nintex-forms-for-office365/","title":"Sync Nintex Forms with SAP using JavaScript (SAP Material Data)","text":"<p>The following article shows how to synchronize a Nintex form for Office 365 with SAP using custom JavaScript. In the depicted scenario, SAP data is made available in a Nintex form for data selection in dropdown lists using JavaScript and REST services.</p> <p>For more information on Nintex form for Office 365, see Nintex Documentation: Office 365 Forms.</p>"},{"location":"knowledge-base/sync-nintex-forms-for-office365/#about","title":"About","text":"<p>This article leads you through all necessary steps to set up the following process in Nintex for Office 365:</p> <ul> <li>When an SAP material number is entered in an input field, the possible hits are displayed in a dropdown list.</li> <li>If a material is selected in the drop-down list, the material text is displayed in a text field.</li> <li>When the input is confirmed, the selected material is written to SharePoint.</li> </ul>"},{"location":"knowledge-base/sync-nintex-forms-for-office365/#setup-in-yunio","title":"Setup in yunIO","text":"<p>yunIO is the connector that reads and writes data from and to SAP. For more information on yunIO, see Theobald Software: yunIO.</p> <ol> <li>Create an SAP connection in yunIO. </li> <li>Create a service in yunIO.  The depicted example uses the integration type SAP Table or View for the service.</li> <li>Look up the table MAKT that contains material descriptions. </li> <li>Select the columns MATNR, SPRAS and MAKTX for the output of the service. </li> <li>Click   to testrun the service in yunIO  . For more information, see Documentation: Run Services in yunIO.</li> <li>Click  to download the service definition  . </li> </ol>"},{"location":"knowledge-base/sync-nintex-forms-for-office365/#setup-in-sharepoint","title":"Setup in SharePoint","text":"<p>In the depicted example, SAP materials are added to a custom SharePoint list via a Nintex form:</p> <ol> <li>Create a SharePoint custom list with a column \"Material\". </li> <li>Click [Nintex Forms] to create a new Nintex input form for the SharePoint custom list, see Setup in Nintex for Office 365.</li> </ol>"},{"location":"knowledge-base/sync-nintex-forms-for-office365/#setup-in-nintex-for-office-365","title":"Setup in Nintex for Office 365","text":"<p>Follow the steps below to set up the Nintex form for the SharePoint custom list created in the section Setup in SharePoint:</p> <ol> <li>Create a new Nintex form: </li> <li>Define the following text fields:</li> <li>\"Material\" of type Single Line Textbox is the input field that contains the material number. </li> <li>\"Suggested Materials\" of type Choice displays the possible hits for the material number in a dropdown list. </li> <li>\"Selected Material\" of type Single Line Textbox displays the material text of the selected material.</li> <li>Open the advanced settings of the field \"Material\" and set Store Client ID in JavaScript Variable to Yes.</li> <li>In the field Client ID JavaScript variable name enter the variable name \"inputMaterial\". </li> <li>Click [Save].</li> <li>Open the general settings of the field \"Suggested Materials\" and set Display format to Drop down list.</li> <li>In the field Choices enter \"no matches\". This input will be overwritten via JavaScript.</li> <li>Open the advanced settings of the field \"Suggested Materials\" and set Store Client ID in JavaScript Variable to Yes.</li> <li>In the field Client ID JavaScript variable name enter the variable name \"selectMaterial\". </li> <li>Click [Save].</li> <li>Open the general settings of the field \"Selected Material\" and set Connected to to the SharePoint column Material.</li> <li>Open the advanced settings of the field \"Selected Material\" and set Store Client ID in JavaScript Variable to Yes.</li> <li>In the field Client ID JavaScript variable name enter the variable name \"outputMaterialId\". </li> <li>Add a [Save] and [Cancel] button to the form.</li> </ol>"},{"location":"knowledge-base/sync-nintex-forms-for-office365/#integrate-javascript-code-in-nintex","title":"Integrate JavaScript Code in Nintex","text":"<p>The JavaScript library for REST services by Theobald Software enables the use of yunIO services via JavaScript. The depicted example uses the following JavaScript code for the following:</p> <ul> <li>To import the JavaScript library for REST services.</li> <li>To connect to yunIO.</li> <li>To run the service \"MAKTService\" that reads the material number and the material long text from the SAP table MAKT.</li> </ul> Java Script to run a yunIO Service<pre><code>document.addEventListener(\"DOMContentLoaded\", async () =&gt; {\n    let yunioClient = await import(\n        \"https://static.theobald-software.com/theobald.yunio.client.js/dist/theobald.yunio.client.js\"\n    );\n\n    yunioClient.TheobaldYunioClient.initializeLiveCombobox({\n        $: NWF$,\n        controls: {\n            inputId: inputMaterial,\n            selectId: selectMaterial,\n            outputId: outputMaterialId\n            /*descriptionId: outputMaterialDescription*/\n            /*buttonId: 'buttonId'*/\n        },\n        tableSettings: {\n            serviceName: \"MAKTService\",\n            idField: \"MATNR\",\n            description field: \"MAKTX\",\n            language: \"E\"\n        },\n        connection: {\n            url: \"https://yunio.example.com:8175/\",\n            /* future apiKey */\n            username: prompt(\"yunIO username\", \"\"),\n            password: prompt(\"yunIO password\", \"\")\n        }\n    });\n});\n</code></pre> <p>To use this script in your application, replace the connection URL.  If your yunIO service has a different name or settings, edit the table settings accordingly.</p> <p>Note</p> <p>Do not use // for comments in the custom java script, as // causes errors.</p> <p>Follow the steps below to integrate the script in your Nintex Form:</p> <ol> <li>Open the settings of the Nintex form and copy the JavaScript into the field Custom JavaScript. </li> <li>Click [Save].</li> </ol>"},{"location":"knowledge-base/sync-nintex-forms-for-office365/#run-the-nintex-form","title":"Run the Nintex Form","text":"<ol> <li>Preview or publish the Nintex form.</li> <li>When prompted, enter your username and password to establish a connection to yunIO.</li> <li>Enter a material number. The hits for the entry are read from SAP and displayed in the dropdown list \"Suggested Materials\".</li> <li>Select a material from the dropdown list. The long text of the selected material is displayed in the field \"Material\".</li> <li>Click [Save] to write the selected material to your SharePoint custom list. </li> </ol>"},{"location":"knowledge-base/sync-nintex-forms-for-office365/#related-links","title":"Related Links:","text":"<ul> <li>yunIO Documentation</li> <li>Nintex Documentation: Office 365 Forms</li> <li>Theobald Software GitHub: JavaScript library for REST services</li> </ul>"},{"location":"knowledge-base/sync-nintex-forms-for-personnel-actions-in-office365/","title":"Sync Nintex Forms with SAP using JavaScript (SAP Personnel Data)","text":"<p>The following article shows how to synchronize a Nintex form for Office 365 with SAP using custom JavaScript. In the depicted scenario, SAP data is made available in a Nintex form for data selection in dropdown lists using JavaScript and REST services.</p> <p>For more information on Nintex form for Office 365, see Nintex Documentation: Office 365 Forms.</p>"},{"location":"knowledge-base/sync-nintex-forms-for-personnel-actions-in-office365/#about","title":"About","text":"<p>This article leads you through all necessary steps to set up the following process in Nintex for Office 365:</p> <ul> <li>When an SAP employee name is entered in an input field, all possible hits are displayed in a dropdown list.</li> <li>If an employee is selected in the drop-down list, the name and personnel number is displayed in a text field.</li> <li>When the input is confirmed, the personnel data of the selected employee is written to SharePoint.</li> </ul>"},{"location":"knowledge-base/sync-nintex-forms-for-personnel-actions-in-office365/#setup-in-yunio","title":"Setup in yunIO","text":"<p>yunIO is the connector that reads and writes data from and to SAP. For more information on yunIO, see Theobald Software: yunIO.</p> <ol> <li>Create an SAP connection in yunIO. </li> <li>Create a service in yunIO.  The depicted example uses the integration type SAP Table or View for the service.</li> <li>Look up the table PA0002 that contains HR master data. </li> <li>Select the columns PERNR, NACHN and VORNA for the output of the service. </li> <li>Click   to testrun the service in yunIO  . For more information, see Documentation: Run Services in yunIO.</li> <li>Click  to download the service definition  . </li> </ol>"},{"location":"knowledge-base/sync-nintex-forms-for-personnel-actions-in-office365/#setup-in-sharepoint","title":"Setup in SharePoint","text":"<p>In the depicted example, SAP employee data is added to a custom SharePoint list via a Nintex form:</p> <ol> <li>Create a SharePoint custom list with a column \"Personnel Number\", \"Last Name\" and \"First Name\". </li> <li>Click [Nintex Forms] to create a new Nintex input form for the SharePoint custom list, see Setup in Nintex for Office 365.</li> </ol>"},{"location":"knowledge-base/sync-nintex-forms-for-personnel-actions-in-office365/#setup-in-nintex-for-office-365","title":"Setup in Nintex for Office 365","text":"<p>Follow the steps below to set up the Nintex form for the SharePoint custom list created in the section Setup in SharePoint:</p> <ol> <li>Create a new Nintex form: </li> <li>Define the following text fields:<ul> <li>\"Search for personnel no.\" of type Single Line Textbox is the input field that contains the personnel number. </li> <li>\"Suggested personnel no.\" of type Choice displays the possible hits for the personnel number in a dropdown list. </li> <li>\"Personnel No.\" of type Single Line Textbox displays the personnel number of the selected employee.</li> <li>\"Last Name\" of type Single Line Textbox displays the last name of the selected employee.</li> <li>\"First Name\" of type Single Line Textbox displays the first name of the selected employee.</li> </ul> </li> <li>Open the advanced settings of the field \"Search for personnel no.\" and set Store Client ID in JavaScript Variable to Yes.</li> <li>In the field Client ID JavaScript variable name enter the variable name \"inputPerNr\". </li> <li>Click [Save].</li> <li>Open the general settings of the field \"Suggested personnel no.\" and set Display format to Drop down list.</li> <li>In the field Choices enter \"no matches\". This input will be overwritten via JavaScript.</li> <li>Open the advanced settings of the field \"Suggested personnel no.\" and set Store Client ID in JavaScript Variable to Yes.</li> <li>In the field Client ID JavaScript variable name enter the variable name \"selectPerNr\". </li> <li>Click [Save].</li> <li>Open the general settings of the field \"Personnel No.\" and set Connected to to the SharePoint column Personnel Number.</li> <li>Open the advanced settings of the field \"Selected Material\" and set Store Client ID in JavaScript Variable to Yes.</li> <li>In the field Client ID JavaScript variable name enter the variable name \"outputPerNr\". </li> <li>Open the general settings of the field \"Last Name\" and set Connected to to the SharePoint column Last Name.</li> <li>Open the advanced settings of the field \"Selected Material\" and set Store Client ID in JavaScript Variable to Yes.</li> <li>In the field Client ID JavaScript variable name enter the variable name \"outputName\". </li> <li>Open the general settings of the field \"First Name\" and set Connected to to the SharePoint column First Name.</li> <li>Open the advanced settings of the field \"Selected Material\" and set Store Client ID in JavaScript Variable to Yes.</li> <li>In the field Client ID JavaScript variable name enter the variable name \"outputFirstName\". </li> <li>Add a [Save] and [Cancel] button to the form.</li> </ol>"},{"location":"knowledge-base/sync-nintex-forms-for-personnel-actions-in-office365/#integrate-javascript-code-in-nintex","title":"Integrate JavaScript Code in Nintex","text":"<p>The JavaScript library for REST services by Theobald Software enables the use of yunIO services via JavaScript. The depicted example uses the following JavaScript code for the following:</p> <ul> <li>To import the JavaScript library for REST services.</li> <li>To connect to yunIO.</li> <li>To run the service \"QueryTablePA0002\" that reads HR master data from the SAP table PA0002.</li> </ul> Java Script to run a yunIO Service<pre><code>document.addEventListener(\"DOMContentLoaded\", async () =&gt; {\n    let yunioClient = await import(\n        \"https://static.theobald-software.com/theobald.yunio.client.js/dist/theobald.yunio.client.js\"\n    );\n\n\n    yunioClient.TheobaldYunioClient.initializeLiveCombobox({\n        $: NWF$,\n        controls: {\n            inputId: inputPerNr,\n            selectId: selectPerNr,            \n            outputId: outputPerNr,\n            descriptionId: outputFirstName,\n            additionalInfoId: outputName \n            /*buttonId: 'buttonId'*/\n        },\n        tableSettings: {\n            serviceName: \"QueryTablePA0002\",\n            idField: \"PERNR\",\n            descriptionField: \"VORNA\",\n            additionalInfoField: \"NACHN\"           \n        },\nsearchOptions: {\n   extraWhereConditions: \"AND ENDDA LIKE '99991231'\"\n},\n        connection: {\n            url: \"https://yunio.example.com:8175/\",\n            /* future apiKey */\n            username: prompt(\"yunIO username\", \"\"),\n            password: prompt(\"yunIO password\", \"\")\n        }\n    });\n});\n</code></pre> <p>To use this script in your application, replace the connection URL.  If your yunIO service has a different name or settings, edit the table settings accordingly.</p> <p>Note</p> <p>Do not use // for comments in the custom java script, as // causes errors. Follow the steps below to integrate the script in your Nintex Form:</p> <ol> <li>Open the settings of the Nintex form and copy the JavaScript into the field Custom JavaScript. </li> <li>Click [Save].</li> </ol>"},{"location":"knowledge-base/sync-nintex-forms-for-personnel-actions-in-office365/#run-the-nintex-form","title":"Run the Nintex Form","text":"<ol> <li>Preview or publish the Nintex form.</li> <li>When prompted, enter your username and password to establish a connection to yunIO.</li> <li>Enter a personnel number. The hits for the entry are read from SAP and displayed in the dropdown list \"Suggested personnel no.\".</li> <li>Select an employee from the dropdown list. The first and last name of the selected employee is displayed in the fields \"First Name\" and \"Last Name\".</li> <li>Click [Save] to write the name and personell number of the selected employee to your SharePoint custom list. </li> </ol>"},{"location":"knowledge-base/sync-nintex-forms-for-personnel-actions-in-office365/#related-links","title":"Related Links:","text":"<ul> <li>yunIO Documentation</li> <li>Nintex Documentation: Office 365 Forms</li> <li>Theobald Software GitHub: JavaScript library for REST services</li> </ul>"},{"location":"knowledge-base/teams-sick-leave-with-yunIO/","title":"Sync Microsoft Teams with SAP using Power Automate and yunIO","text":"<p>The following article shows how to use forms in Microsoft Teams to send data to SAP. In the following scenario, a Teams form is used to transfer an employee's sick leave request to SAP.</p>"},{"location":"knowledge-base/teams-sick-leave-with-yunIO/#about","title":"About","text":"<p>This article leads you through all necessary steps to set up the following process:</p> <ul> <li>When a sick leave is requested via a Microsoft Teams form, a Power Automate workflow is triggered. </li> <li>The workflow starts an approval process.</li> <li>The workflow runs a yunIO service that transfers the details of the sick leave to SAP.</li> </ul>"},{"location":"knowledge-base/teams-sick-leave-with-yunIO/#setup-in-yunio","title":"Setup in yunIO","text":"<p>yunIO is the connector that reads and writes data from and to SAP. For more information on yunIO, see Theobald Software: yunIO. Follow the steps below to set up a yunIO service that creates sick leaves in SAP:</p> <p>Note</p> <p>Every type of sick leave requires a designated yunIO service. It is not possible to cover multiple types of sick leave in a single service, because of varying input screens.</p> <p>Note</p> <p>The parameters that are needed to create a sick leave are dependent on your customized SAP settings.</p> <ol> <li>Create an SAP connection in yunIO. </li> <li>Create a service in yunIO. The depicted example uses the integration type Transaction for the service.</li> <li>Record the SAP transaction PA30 to create a new sick leave in SAP, e.g., for an annual sick leave (Infotype 2001 and STy 0100).  </li> <li>Set parameters for the following input options. For more information on how to parameterize transactions, see Documentation: Parameterize Transactions.<ul> <li>Employee number</li> <li>Start date of the sick leave</li> <li>End date of the sick leave</li> </ul> </li> <li>Click [Save] to save the service.</li> <li>Click   to testrun the service in yunIO  . For more information, see Documentation: Run Services in yunIO.</li> <li>Click  to download the service definition  . </li> <li>Repeat steps 3 to 7 to create a service for every relevant type of sick leave:<ul> <li>Illness with certificate (Infotype 2001 and STy 0200)</li> <li>Parental leave (Infotype 2001 and STy 0600)</li> <li>Unpaid leave (Infotype 2001 and STy 0620) </li> <li>Sick child (Infotype 2001 and STy 0550).</li> </ul> </li> </ol>"},{"location":"knowledge-base/teams-sick-leave-with-yunIO/#setup-in-microsoft-teams","title":"Setup in Microsoft Teams","text":"<p>The setup in Teams requires the installation of the Teams app Team Forms from the Microsoft Teams app store.</p> <ol> <li>Open the Team Forms template \"Sick Leave Request\".</li> <li>Open the editor for the mandatory input field Leave type. </li> <li> <p>Navigate to the tab Data and edit the labels and values of Leave type to provide the following SAP input:</p> Leave Type Value Annual Leave 0100 Illness with certificate 0200 Parental Leave 0600 Unpaid Leave 0620 Sick child (unpaid) 0550 </li> <li> <p>Click [Save] to save the changes. </p> </li> <li>Optional: Further edit the form to fit the requirements of your organization.</li> <li>Click [Publish] to make the form available to your team.</li> </ol> <p>For more information on Team Forms, see Team Forms Documentation.</p>"},{"location":"knowledge-base/teams-sick-leave-with-yunIO/#setup-in-power-automate","title":"Setup in Power Automate","text":"<ol> <li>Integrate the yunIO services created in Setup in yunIO as Custom Connectors in Power Automate, see Integrate a yunIO Service with Power Automate.</li> <li>Create a new workflow that is triggered when a new Team form is submitted.</li> <li>Optional: Add an approval process for the leave request to the workflow.</li> <li>Add a Switch action to the workflow that queries the value of the leave type defined in the Team form  . </li> <li>Add the corresponding yunIO connector created in step 1 for each each leave type  .</li> <li>Map the data from the Team form to the input parameters of yunIO  . </li> <li> <p>Make sure the input uses the right format, e.g., dates use the format <code>DD.mm.YYYY</code>.</p> <p>Tip</p> <p>The following code reformats dates returned by the Teams form from <code>yyyy-MM-dd'T'HH:mm:ss*SSSZZZZ</code> to <code>DD.mm.YYYY</code>:</p> <pre><code>#Start date:\nconcat(substring(triggerOutputs()?['body/data/startDate'], 8, 2), '.', substring(triggerOutputs()?['body/data/startDate'], 5, 2), '.', substring(triggerOutputs()?['body/data/startDate'], 0, 4))\n#End date:\nconcat(substring(triggerOutputs()?['body/data/endDate'], 8, 2), '.', substring(triggerOutputs()?['body/data/endDate'], 5, 2), '.', substring(triggerOutputs()?['body/data/endDate'], 0, 4))\n</code></pre> </li> <li> <p>Optional: Send notifications when a sick leave is requested. </p> </li> <li>Turn on the workflow.</li> </ol>"},{"location":"knowledge-base/teams-sick-leave-with-yunIO/#trigger-the-process","title":"Trigger the Process","text":"<ol> <li>Open the Teams form and fill out the details of your sick leave. Enter the SAP employee number, select the leave type and the start and end date of the sick leave.</li> <li>Submit the Teams form.</li> <li>The Power Automate workflow runs and transfers the details of the sick leave to SAP.</li> </ol>"},{"location":"knowledge-base/transaction-ie01/","title":"Transaction IE01 - Create Equipment","text":"<p>The following article shows how to use the integration type Transaction with transaction IE01 in yunIO. The depicted example application uses transaction IE01 to create new equipment in SAP. For more information on creating equipment, see SAP Help: Creating a Piece of Equipment.</p>"},{"location":"knowledge-base/transaction-ie01/#prerequisites","title":"Prerequisites","text":"<p>The SAP connection assigned to a transaction service must use an SAP dialog user with enough access rights to create new equipment. </p> <p>Tip</p> <p>The transaction feature of yunIO offers the same functionalities as the SAP GUI.</p>"},{"location":"knowledge-base/transaction-ie01/#create-equipment","title":"Create Equipment","text":"<p>Follow the steps below to create a new equipment in SAP.</p> <ol> <li>Create a new Service with the integration type Transaction. For more information on creating a service, see Create a Service.</li> <li>In the transaction service enter the transaction IE01 and press [Start]. A replicated SAP GUI of the transaction IE01 is displayed. </li> <li>Edit the fields according to the kind of equipment you want to create e.g., enter a new equipment.</li> <li>Click [Submit] to execute the action and continue to the next screen. All actions are logged in the GUI Steps section of the UI. </li> <li>Edit the data of your equipment or record screens for parameterization. All fields that need to be parameterized must be available in the section GUI Steps.  Example: to parameterize a field in a specific tap or menu, the tab or menu must be accessed when recording the transaction.</li> <li>Click [Equipment] &gt; [Save] to save the new equipment in SAP. </li> <li>Click [Save] to save your actions.  Alternatively, click [Stop] to start parameterizing, see Documentation: Parameterize Transactions.</li> <li>Copy the URL of the service definition (   icon) or download the service definition (  icon) to integrate the service in your workflow. For information on how to use yunIO services in Power Automate or Nintex, see Integrate a yunIO Service with Power Automate or Integrate a yunIO Service with Nintex. </li> </ol> <p>Note</p> <p>When using Transaction, warnings and error messages from SAP are displayed in yunIO e.g., \"Equipment number... not in external number interval\". These messages are not yunIO specific and should be treated accordingly.</p>"},{"location":"knowledge-base/transaction-ie01/#related-links","title":"Related Links","text":"<ul> <li>Documentation: Transactions</li> <li>SAP Help: Creating a Piece of Equipment.</li> </ul>"},{"location":"knowledge-base/transaction-pa40/","title":"Transaction PA40 - Personnel Actions","text":"<p>The following article shows how to use the integration type Transaction with transaction PA40 in yunIO. The depicted example application uses the transaction PA40 to define personnel actions in SAP.</p>"},{"location":"knowledge-base/transaction-pa40/#prerequisites","title":"Prerequisites","text":"<p>The SAP connection assigned to a transaction service must use an SAP dialog user with enough access rights to edit customer master data. </p> <p>Tip</p> <p>The transaction feature of yunIO offers the same functionalities as the SAP GUI.</p>"},{"location":"knowledge-base/transaction-pa40/#create-a-new-employee-in-sap","title":"Create a new Employee in SAP","text":"<p>The depicted example application uses a yunIO service to create a new employee in SAP.</p> <p>Note</p> <p>The parameters that are needed to create new employees are dependent on your customized SAP settings.</p> <ol> <li>Create a new Service with the integration type Transaction. For more information on creating a service, see Create a Service.</li> <li>In the transaction service enter the transaction PA40 and press [Start]. A replicated SAP GUI of the transaction PA40 is displayed. </li> <li>Enter a start date for the new employee in the format <code>DD.mm.YYYY</code>. This input can be replaced with a runtime parameter after the transaction is recorded.</li> <li>Select the action type Hiring.</li> <li>Click Execute to execute the action and continue to the next screen. All actions are logged in the GUI Steps section of the UI.  </li> <li>Fill in the data of the new employee.</li> <li>Click [Submit] to check if the input is valid.</li> <li>Click [Save] to save the employee data in SAP and to continue to the next screen. </li> <li>Optional: If a pop-op window opens in SAP, the message of the pop-up window is displayed in yunIO.  Click [Continue] to close any pop-up windows and continue to the next screen.</li> <li>Once all necessary data is entered, click [Infotype] &gt; [Exit] to stop the input. Example: </li> <li>Click [Save] to save your actions.  Alternatively, click [Stop] to start parameterizing, see Documentation: Parameterize Transactions.</li> <li>Copy the URL of the service definition (   icon) or download the service definition (  icon) to integrate the service in your workflow. For information on how to use yunIO services in Power Automate or Nintex, see Integrate a yunIO Service with Power Automate or Integrate a yunIO Service with Nintex. </li> </ol> <p>Note</p> <p>When using Transaction, warnings and error messages from SAP are displayed in yunIO. These messages are not yunIO specific and should be treated accordingly.</p>"},{"location":"knowledge-base/transaction-pa40/#related-links","title":"Related Links","text":"<ul> <li>Documentation: Transactions</li> <li>Documentation: Parameterize Transactions</li> </ul>"},{"location":"knowledge-base/transaction-table-parameters/","title":"Working with Transactions - Table Parameters","text":"<p>The following article shows how to pass tables as input parameters to Transaction services. The depicted example application uses the transaction VA02 to change a sales order in SAP, see Transaction VA02 - Change Sales Order.</p>"},{"location":"knowledge-base/transaction-table-parameters/#prerequisites","title":"Prerequisites","text":"<p>Use an SAP dialog user with sufficient access rights to edit sales orders for the SAP connection assigned to the service. </p> <p>Tip</p> <p>The transaction feature of yunIO offers the same functionalities as the SAP GUI.</p>"},{"location":"knowledge-base/transaction-table-parameters/#selecting-a-table-as-an-input-parameter","title":"Selecting a Table as an Input Parameter","text":"<ol> <li>Create a transaction service that uses tables.  The depicted example uses a service that changes sales orders via transaction VA02, see Transaction VA02 - Change Sales Order. </li> <li>Click   to open the service.  </li> <li>Click on the documented actions in the section GUI Steps to navigate to the screen that contains the table you want to parameterize.</li> <li>Click on the fields and tables that you want to parameterize. The window \u201cParameterize Element\u201d opens.  All fields that can be parameterized are highlighted in green when hovering over them. </li> <li>In the window \u201cParameterize Element\u201d, select Input to override the content of the table when running the service. </li> <li>Enter a custom name for the parameter, e.g., ITEMS. </li> <li>Click [OK] to save the parameter. The window \u201cParameterize Element\u201d closes.</li> <li>Click [Save] to save the service.</li> </ol> <p>Note</p> <p>When defining input parameters, make sure to parameterize fields before they are submitted in the GUI steps. If you define an input parameter after a submit, the input is not submitted to SAP.</p>"},{"location":"knowledge-base/transaction-table-parameters/#format-of-input-tables","title":"Format of Input Tables","text":"<p>Table parameters are passed to the service in the http request body.  In the request body, the columns of the table are represented by their SAP technical name, e.g., <code>RV45A-MABNR</code> = Material column, <code>RV45A-KWMENG</code> = Order Quantity column, etc. You can look up the description of the SAP technical names in the OpenAPI/Swagger definition, e.g., Swagger Editor.</p> <p>Tip</p> <p>Test the service and pass parameters in yunIO before integrating the service, see Documentation: Run Services in yunIO.</p>  Table structure in the http request body  Table structure in OpenAPI/Swagger definition  <pre>\n\"ITEMS\": [\n    {\n        \"selected\": false,\n        \"cells\": {\n            \"VBAP-POSNR\": \"\",\n            \"RV45A-MABNR\": \"\",\n            \"RV45A-KWMENG\": \"\",\n            ...\n        }\n    },\n    {\n        \"selected\": false,\n        \"cells\": {\n            \"VBAP-POSNR\": \"\",\n            \"RV45A-MABNR\": \"\",\n            \"RV45A-KWMENG\": \"\",\n            ...\n        }\n    }\n    ]\n</pre> <pre>\nITEMS:\n    type: array\n    items:\n      type: object\n      properties:\n        selected:\n          type: boolean\n        cells:\n          type: object\n          properties:\n            VBAP-POSNR:\n              description: Item\n              type: string\n            RV45A-MABNR:\n              description: Material\n              type: string\n            RV45A-KWMENG:\n              description: Order Quantity\n              type: string\n            ...\n</pre>"},{"location":"knowledge-base/transaction-table-parameters/#running-a-service-with-table-parameters","title":"Running a Service with Table Parameters","text":"<ol> <li>Click   to copy the URL of the service definition or click  to download the service definition. </li> <li>Open the service in a tool that supports OpenAPI/Swagger definitions, e.g., SwaggerHub. </li> <li>Use the <code>POST</code> method when integrating the service. The <code>GET</code> method does not support table parameters.</li> <li>Open the request body of the service. All input parameters are listed in the request body. </li> <li>Enter values for all fields that you want to overwrite, e.g., <code>\"RV45A-MABNR\": \"M-01\"</code>, <code>\"RV45A-KWMENG\": \"5\"</code>, etc.</li> <li>Run the service. If the service run is successful, the response body contains a confirmation that the order was saved. </li> <li>Open SAP to check if the changes in the sales order. </li> </ol>"},{"location":"knowledge-base/transaction-table-parameters/#related-links","title":"Related Links","text":"<ul> <li>Documentation: Transactions</li> <li>Documentation: Parameterize Transactions</li> </ul>"},{"location":"knowledge-base/transaction-va02/","title":"Transaction VA02 - Change Sales Order","text":"<p>The following article shows how to use the integration type Transaction with transaction VA02 in yunIO. The depicted example application uses the transaction VA02 to change a sales order in SAP.</p>"},{"location":"knowledge-base/transaction-va02/#prerequisites","title":"Prerequisites","text":"<p>The SAP connection assigned to a transaction service must use an SAP dialog user with enough access rights to edit sales orders. </p> <p>Tip</p> <p>The transaction feature of yunIO offers the same functionalities as the SAP GUI.</p>"},{"location":"knowledge-base/transaction-va02/#update-items-in-a-sales-order","title":"Update Items in a Sales Order","text":"<p>The depicted example application uses a yunIO service to change items in a sales order in SAP.</p> <ol> <li>Create a new Service with the integration type Transaction. For more information on creating a service, see Create a Service.</li> <li>In the transaction service enter the transaction VA02 and press [Start]. A replicated SAP GUI of the transaction VA02 is displayed. </li> <li>Enter an order number between 1 - 4999999. This input can be replaced with a runtime parameter after the transaction is recorded. </li> <li>Click [Submit] to execute the action and to continue to the next screen. All actions are logged in the GUI Steps section of the UI.</li> <li>If a pop-op window opens in SAP, the message of the pop-up window is displayed in yunIO. Click [Submit] to close any pop-up windows and continue to the next screen.</li> <li>Edit the sales order or record screens for parameterization. All fields that need to be parameterized must be available in the section GUI Steps. Example: to parameterize a field in a specific tap or menu, the tab or menu must be accessed when recording the transaction.</li> <li>Click [Submit] to submit any changes to SAP. If SAP messages open, repeat submitting the input until no messages open. </li> <li>Click Sales document &gt; Save to save any changes in SAP.</li> <li>Click [Save] to save the service.</li> <li>Edit the service to add parameters to the service, see Documentation: Parameterize Transactions.</li> </ol> <p>Note</p> <p>When using Transaction, warnings and error messages from SAP are displayed in yunIO e.g., \"Equipment number... not in external number interval\". These messages are not yunIO specific and should be treated accordingly.</p>"},{"location":"knowledge-base/transaction-va02/#related-links","title":"Related Links","text":"<ul> <li>Documentation: Transactions</li> <li>Documentation: Parameterize Transactions</li> </ul>"},{"location":"knowledge-base/transaction-xd02/","title":"Transaction XD02 - Change Customer Master Data","text":"<p>The following article shows how to use the integration type Transaction with transaction XD02 in yunIO. The depicted example application uses the transaction XD02 to change customer master data in SAP.</p>"},{"location":"knowledge-base/transaction-xd02/#prerequisites","title":"Prerequisites","text":"<p>The SAP connection assigned to a transaction service must use an SAP dialog user with enough access rights to edit customer master data. </p> <p>Tip</p> <p>The transaction feature of yunIO offers the same functionalities as the SAP GUI.</p>"},{"location":"knowledge-base/transaction-xd02/#update-customer-master-data","title":"Update Customer Master Data","text":"<p>The depicted example application uses a yunIO service to change customer master data in SAP.</p> <ol> <li>Create a new Service with the integration type Transaction. For more information on creating a service, see Create a Service.</li> <li>In the transaction service enter the transaction XD02 and press [Start]. A replicated SAP GUI of the transaction XD02 is displayed. </li> <li>Enter a customer number. This input can be replaced with a runtime parameter after the transaction is recorded.</li> <li>Click [Submit] to execute the action and continue to the next screen. All actions are logged in the GUI Steps section of the UI.  </li> <li>Edit the customer data or record screens for parameterization. All fields that need to be parameterized must be available in the section GUI Steps. Example: to parameterize a field in a specific tap or menu, the tab or menu must be accessed when recording the transaction.</li> <li>Click [Customer] &gt; [Save] to save the changes in SAP. </li> <li>Click [Save] to save your actions.  Alternatively, click [Stop] to start parameterizing, see Documentation: Parameterize Transactions.</li> <li>Copy the URL of the service definition (   icon) or download the service definition (  icon) to integrate the service in your workflow. For information on how to use yunIO services in Power Automate or Nintex, see Integrate a yunIO Service with Power Automate or Integrate a yunIO Service with Nintex. </li> </ol> <p>Note</p> <p>When using Transaction, warnings and error messages from SAP are displayed in yunIO e.g., \"Equipment number... not in external number interval\". These messages are not yunIO specific and should be treated accordingly.</p>"},{"location":"knowledge-base/transaction-xd02/#related-links","title":"Related Links","text":"<ul> <li>Documentation: Transactions</li> <li>Documentation: Parameterize Transactions</li> </ul>"},{"location":"knowledge-base/x509-certificate/","title":"Install an X.509 Certificate","text":"<p>The following article shows how to install an X.509 certificate for Transport encryption. The installation of an X.509 certificate is required to use Transport Layer Security (TLS) and secure authentication with yunIO.</p>"},{"location":"knowledge-base/x509-certificate/#about-x509-certificates","title":"About X.509 Certificates","text":"<p>There are two approaches for creating an X.509 certificate:</p> <ul> <li>Certificate released by an (internal) certification authority (CA) </li> <li>Self-signed certificate</li> </ul> <p>Note</p> <p>On test environments you can use a self-signed certificate. For production environment it is recommended to use a certificate released by an (internal) certificate authority (CA).</p>"},{"location":"knowledge-base/x509-certificate/#create-an-x509-certificate","title":"Create an X.509 Certificate","text":"<p>Have a TLS certificate issued by your IT network team considering the following points:</p> <ul> <li>The certificate property \u201cSubject Alternative Name\u201d contains the DNS name of the server that runs the yunIO Windows service. </li> <li>Place the certificate in the Windows Certificate Store on the machine that runs the yunIO Windows service.</li> <li>The certificate common name (CN) attribute contains the DNS name of the server. </li> </ul> <p>Tip</p> <p>To display the Common Name (CN) of the certificate, double-click on the certificate in the Cetrificate Manager and navigate to the Details tab.</p> <p>Note</p> <p>The Windows Certificate Store works with most browsers. Note that Mozilla Firefox offers its own certificate storage. Configure your Firefox browser to trust certificates in the Windows certificate store or import the certificate via an enterprise policy, see Mozilla Support: Setting Up Certificate Authorities (CAs) in Firefox.</p>"},{"location":"knowledge-base/x509-certificate/#import-an-x509-certificate","title":"Import an X.509 Certificate","text":"<ol> <li>Import the certificate to the Windows Certificate Store using Microsoft Management Console (mmc). In the example shown, the server name is \"sherri\": </li> <li>Open the yunIO Designer and navigate to the Settings menu. </li> <li>Click [Pick Certificate] to reference the X.509 certificate. Information about the currently saved certificate is displayed in the Transport Layer Security section of the menu. </li> <li>Click Enable TLS to activate Transport Layer Security, see Documentation: Server Settings.</li> <li>Click [Save] and restart the yunIO Windows service to implement the changes.</li> </ol> <p>The yunIO Designer and the services created in yunIO are now accessible via https protocol. </p>"},{"location":"knowledge-base/x509-certificate/#related-links","title":"Related Links:","text":"<ul> <li>Certificate Renewal for TLS</li> <li>Enable Secure Network Communication (SNC) via X.509 certificate</li> <li>Documentation: Server Settings</li> </ul>"},{"location":"knowledge-base/yunio-power-automate-with-create-multiple-items/","title":"Use yunIO with Power Automate to create multiple items in SAP","text":"<p>The following article shows how to use yunIO with Microsoft Power Automate to create multiple items in SAP with one service call. Power Automate is a cloud-based process automation service provided by Microsoft. For more Information on Power Automate see Microsoft Power Automate Documentation.</p>"},{"location":"knowledge-base/yunio-power-automate-with-create-multiple-items/#about","title":"About","text":"<p>The depicted example scenario creates multiple cost centers in the SAP cost center master data. This article guides you through the following process:</p> <ul> <li>Create a yunIO service that can handle multiple input values.</li> <li>Create multiple data sets and that can be used as an input for the yunIO service. In this example, multiple items are passed to the SAP function via an Excel spreadsheet.  Other options are SharePoint lists, a Power App with Gallery Control for multiple line items, a Nintex Form with a repeating section and others.</li> <li>Create a Power Automate workflow that reads and processes data from the input table to run the yunIO service.</li> </ul>"},{"location":"knowledge-base/yunio-power-automate-with-create-multiple-items/#setup-in-yunio","title":"Setup in yunIO","text":"<p>Create a yunIO service that creates cost centers in the SAP cost center master data.</p> <p>Note</p> <p>The parameters that are needed to create cost centers are dependent on your customized SAP settings.</p> <ol> <li>Create a service in yunIO. For this example we use the BAPI_COSTCENTER_CREATEMULTIPLE to create multiple cost centers in SAP.</li> <li>Activate Commit Transaction in the Advanced Settings of the service. This option is mandatory when using BAPI_COSTCENTER_CREATEMULTIPLE. </li> <li>Set the Import Parameter CONTROLLINGAREA to Supplied by Caller.</li> <li>Select the table RETURN for the output. The data in this table can be used for exception handling.</li> <li>Set the following items of the table COSTCENTERLIST to Supplied by Caller:<ul> <li>COSTCENTER</li> <li>VALID_FROM</li> <li>VALID_TO</li> <li>PERSON_IN_CHARGE</li> <li>COSTCENTER_TYPE</li> <li>COSTCTR_HIER_GRP</li> <li>COMP_CODE</li> <li>CURRENCY</li> <li>CURRENCY_ISO</li> <li>PROFIT_CTR</li> <li>NAME</li> </ul> </li> <li>Click   to testrun the service in yunIO  . For more information, see Documentation: Run Services in yunIO.</li> <li>Click  to download the service definition  . </li> </ol>"},{"location":"knowledge-base/yunio-power-automate-with-create-multiple-items/#configure-a-yunio-custom-connector-in-power-automate","title":"Configure a yunIO Custom Connector in Power Automate","text":"<p>To use the service created in Setup in yunIO with Power Apps, it must be available as a custom connector in Power Automate.  For information on how to integrate a yunIO service with Power Automate, see Integrate a yunIO Service with Power Automate. </p> <p>Note</p> <p>When integrating services from a local yunIO installation with a cloud hosted platform like Power Automate, a gateway to tunnel the connection is recommended, e.g., the Microsoft On-premises data gateway. For more information about yunIO networking settings, see yunIO Networking Scenarios.</p>"},{"location":"knowledge-base/yunio-power-automate-with-create-multiple-items/#create-input-data","title":"Create Input Data","text":"<ul> <li>Create data sets that include values for all fields in the table COSTCENTERLIST that are set to Supplied by Caller in the yunIO service. If needed, download the sample EXCEL file below.</li> <li>Upload the data sets to the SharePoint document library or any other location that is accessible for Power Automate.</li> </ul> <p> Download EXCEL File</p>"},{"location":"knowledge-base/yunio-power-automate-with-create-multiple-items/#create-a-power-automate-flow-for-multiple-items","title":"Create a Power Automate Flow for Multiple Items","text":"<p>The following workflow reads and processes data from a table and to create new cost centers in the SAP cost center master data.</p> <ol> <li>Create a new workflow.</li> <li>Add a manual trigger to test the workflow when necessary.</li> <li>Add a List rows present in table action to read the input data for the yunIO service. In this example, the data is hosted on SharePoint, see Create Input Data. </li> <li>Add an Initialize variable action to create an array that can store multiple items. Leave Value empty. </li> <li>Add an Apply to each action to incrementally fill the initialized array with input data.  Select the list of items from the SharePoint table as the input for the Apply to each action.</li> <li>Add a Compose action to Apply to each.  Use Compose to create the body of the yunIO web service that contains the table parameters and to map the input data. <pre><code>{\n  \"COSTCENTER\": \"\",\n  \"VALID_FROM\": \"\",\n  \"VALID_TO\": \"\",\n  \"PERSON_IN_CHARGE\": \"\",\n  \"COSTCENTER_TYPE\": \"\",\n  \"COSTCTR_HIER_GRP\": \"\",\n  \"COMP_CODE\": \"\",\n  \"PROFIT_CTR\": \"\",\n  \"NAME\": \"\"\n}\n</code></pre> </li> <li>Add an Append to array variable action to Apply to each.  Select the initialized array and add the output of the Compose action to Value.</li> <li>Add the yunIO custom connector for creating cost centers after the Apply to each action. Enter a value for the import parameter CONTROLLINGAREA and assign the filled array variable to the table parameter COSTCENTERLIST. </li> <li>Optional: Add an email notification action to get notified about the newly created cost centers.</li> <li>Test the workflow. Check if the workflow steps are successfully executed one after the other. Check if the cost centers from the input data sets are created in SAP (table CSKS). </li> </ol>"},{"location":"knowledge-base/yunio-power-automate-with-create-multiple-items/#related-links","title":"Related Links","text":"<ul> <li>Youtube Tutorial: SAP process automation - Power Automate SAP Connector</li> <li>Microsoft Community Post: Example for Item Arrays</li> <li>Getting Started: Run and Integrate Services</li> </ul>"}]}