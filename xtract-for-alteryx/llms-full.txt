# Xtract for Alteryx HelpCenter

> Integrate your SAP data into Alteryx with Xtract for Alteryx. Learn how to use Xtract for Alteryx by browsing our documentation, articles, templates and more.

Full: https://helpcenter.theobald-software.com/xtract-for-alteryx/llms-full.txt

# Getting Started

This section shows how to install and set up Xtract for Alteryx for the first time.

### Installation

1. [Download](https://theobald-software.com/en/download-trial/) a 30 day trial version of Xtract for Alteryx or download the latest version from the [customer portal](https://my.theobald-software.com/).

1. Close the Alteryx Designer.

1. Run the Xtract for Alteryx executable (XtractForAlteryxSetup.exe) to install Xtract for Alteryx.\
   For information on system requirements, see [Requirements](../documentation/setup/requirements/).

   Note

   During the setup you need to specify the installation directory for Xtract for Alteryx and also the installation directory of Alteryx. If you have multiple instances of Alteryx installed, choose the instance on which you want to use Xtract for Alteryx.

1. Open the Alteryx Designer. The Xtract for Alteryx components are available in the Xtract For Alteryx toolbox.

For more information, see [Setup](../documentation/setup/).

### Connect to SAP

Before connecting to SAP for the first time, set up an SAP dialog user with the necessary [SAP user rights](../documentation/setup-in-sap/sap-authority-objects/#general-authorization-objects).

Note

Xtract for Alteryx can connect to SAP using the [Data Connection Manager (DCM)](https://help.alteryx.com/current/en/designer/tools/dcm---designer.html) of Alteryx or the Xtract for Alteryx GUI. If your version of Alteryx does not support the DCM, refer to the [Knowledge Base Article: Create an SAP Connection using the Xtract for Alteryx GUI](../knowledge-base/sap-connection-using-xfa-gui/).

1. In the main menu of the Alteryx Designer navigate to **File > Manage Connections**. The window "Connection Manager" opens.
1. In the tab *Data Sources* click **[New]** to create a new data source.
1. Select the Xtract technology to create an Xtract data source.
1. Enter the system details of your SAP system. Input values for the SAP connection can be found in the Properties of the SAP Logon Pad or they can be requested from the SAP Basis team.
1. Click **[Save]** to save the SAP connection. The subsection *Connection* opens.
1. In the subsection *Connection*, select an authentication methods and link or create and link the credential of your SAP system or dialog user to the data source.

For more information, see [SAP Connection](../documentation/sap-connection/).

### Use Xtract Components in Workflows

Follow the steps below to add an Xtract component to your workflow:

1. Drag & drop an Xtract component from the Xtract for Alteryx toolbox into the workflow .
1. Assign an existing SAP connection .
1. Click **[Edit]** to open the main window of the component. The majority of the functions of the component can be accessed in the main window.

Xtract for Alteryx offers the following components:

| Component | Description | | --- | --- | | [Xtract BAPI](../documentation/bapi/) | Execute BAPIs and Function Modules. | | [Xtract Cube](../documentation/bwcube/) | Extract data from SAP BW InfoCubes and BEx Queries. | | [Xtract Hierarchy](../documentation/hierarchy/) | Extract Hierarchies from an SAP BW / BI system. | | [Xtract ODP](../documentation/odp/) | Extract data via the SAP Operational Data Provisioning (ODP) framework. | | [Xtract ODP (OData)](../documentation/odp-odata/) | Extract ODP-based data using OData services. | | [Xtract Query](../documentation/query/) | Extract data from ERP queries. **Note: BEx queries are covered by the Xtract Cube component**. | | [Xtract Report](../documentation/report/) | Extract data from SAP ABAP reports. | | [Xtract Table](../documentation/table/) | Extract data from SAP tables and views. |

#### A Simple SAP Data Extraction for Beginners

Follow the steps below to extract customer master data from the SAP table KNA1:

1. Drag & drop the Xtract Table component into the workflow.
1. Assign an existing SAP connection and click **[Edit]** to open the main window of the component.
1. Click **[Add]** to look up an SAP table. The window “Table Lookup” opens.
1. In the field **Table Name**, enter the name of the table to extract (KNA1). Use wildcards (\*) if needed.
1. Click **[]**. Search results are displayed.
1. Select the table KNA1 and click **[OK]**. The application returns to the main window of the component.
1. Optional: Select the table columns you want to extract. By default all columns are extracted. For more information on filter options and advanced settings, see, [Define the Xtract Table Component](../documentation/table/#define-the-xtract-table-component).
1. Click **[Load live preview]** to display a live preview of the first 100 records.
1. Click **[OK]** to save the component.

You can now add tools to process the data returned by Xtract Table and run the workflow.
# User Documentation

The user documentation of Theobald Software is designed to introduce readers to the main functions of Xtract for Alteryx.

Theobald Software's claim is to keep the user documentation up to date according to the latest product version. Information concerning the older version is removed gradually from the documentation content. It is generally recommended to always install the latest version of the product.

Theobald Software's claim is to always update all the used screenshots of other software vendors, nevertheless this cannot be guaranteed.

©2024 Theobald Software GmbH. All rights reserved.

### Target group and audience

This documentation is created for all users of Xtract for Alteryx. The user documentation offers an overview of the interface, of the navigation and of the basic information to the users who never or rarely worked with the product. Experienced users can find more detailed information on more complex topics and use the user documentation for reference.

Reading the "Getting Started" section is the prerequisite for working with the product. The documentation can also be useful during the evaluation phase.

### Typographical conventions

| Convention | Used for marking: | Example | | --- | --- | --- | | bold & square brackets | Buttons | **[Edit]** | | bold | URL buttons | **Subscriptions** | | bold | Fields within a window, tab names | **Name** | | italics | Input values | *MATNR* | | italics | Drop-down menu options | *TextAndCode* |

#### Notes and warning messages

There are three main types of warning messages with the corresponding colors.

| Signal word | Color | Severity and meaning | | --- | --- | --- | | Note | Blue | Additional information | | Warning | Yellow | Information that is important for executing an error free procedure | | Tip | Green | Tips | | Recommendation | Green | Theobald Software recommendations and best practices advice |

Warning Messages comply with EN 82079 and formulated according the SAFE-method that is derived from German. The SAFE method is a procedure for systematically designing safety instructions. The severity of the danger as well as the source of the danger.

**"SAFE"** stands for:

**S**chwere der Gefahr (Signalwort) **A**rt und Quelle der Gefahr **F**olgen bei Missachtung der Gefahr **E**ntkommen (Maßnahmen zur Abwehr der Gefahr)

Translation: Severity of the danger (Signal word) Type and source of the danger Consequences of disregarding the danger Escape (measures to avert the danger)

Example:

Warning

**RFC_ERROR_SYSTEM_FAILURE - No more storage space available for extending an internal table**\
To avoid a memory overflow on the SAP source system and to avoid huge overheads, choose a package size that suits your memory capacity.

Note

The corresponding SQL command is generated dynamically and executed on the SAP server.

This section contains user documentation for Xtract for Alteryx.

Find more information on how to use and navigate through the user documentation in the section ["About this Documentation"](../about-this-documentation/).

### About Xtract for Alteryx

Xtract for Alteryx is a plug-in for [Alteryx Designer and Server](https://www.alteryx.com). Xtract for Alteryx enables you to extract data from SAP systems and load it into the data flow of your Alteryx solution.

### Xtract Components

Xtract for Alteryx offers the following components to cover a wide range of data extraction scenarios.

This page shows how to use the Xtract BAPI component.\
The Xtract BAPI component can be used to parameterize and execute SAP function modules and BAPIs for automation.

### About Function Modules / BAPIs

Function modules are procedures that encapsulate and reuse global functions in the SAP system. SAP systems contain several predefined functions modules that can be called from any ABAP program. A Business Application Programming Interface (BAPI) is a remote function module that can access business data and processes of an SAP system from different systems.

### Custom BAPIs

The use of custom BAPIs (Z function modules) is possible. Issues specific to Z function modules are not included in the scope of support provided by Theobald Software.

### Prerequisites

- A connection to an SAP system is available, see [SAP Connection](../sap-connection/).
- The SAP user has sufficient user rights, see [SAP Authority Objects](../setup-in-sap/sap-authority-objects/#bapi).

Warning

**Missing Authorization.**\
To use the Xtract BAPI component, access to the designated authority objects (RFC) in SAP must be available. Adjust [SAP Authority Objects: BAPI](../setup-in-sap/sap-authority-objects/#bapi) accordingly.

### Add an Xtract BAPI Component

Follow the steps below to add an Xtract BAPI component to your workflow:

1. Drag & drop the Xtract component to your Alteryx workflow .
1. Assign an existing SAP connection .
1. Click **[ Edit]** to open the main window of the component.

The majority of the functions of the component can be accessed in the main window.

### Look up a Function Module / BAPI

1. In the main window of the component, click **[]** to look up a Function Module / BAPI. The window "Function Module Lookup" opens.
1. In the window "Function Module Lookup" enter the name of the function module or BAPI . Use wildcards (\*) if needed.
1. Click **[]** . Search results are displayed.
1. Select a Function Module / BAPI and click **[OK]**.

The application returns to the main window of the component.

### Define the Xtract BAPI Component

The Xtract BAPI component offers the following options for defining parameters of a Function Module / BAPI:

1. Add input parameters (data you want to send to SAP) in **Imports**, see [Import Parameters](input-and-output/#import-parameters).\
   You can enter scalar values or structures .

1. Add output parameters (data you want to receive from SAP) in **Exports**, see [Export Parameters](input-and-output/#export-parameters).\
   Select output by activating the checkbox next to the items.

1. Optional: If available, define input and output parameters in **Changings**, see [Changings Parameters](input-and-output/#changing-parameters).

1. Add tables to the output of the component or add table parameters to the input of the component in **Tables**, see [Table Parameters](input-and-output/#table-parameters).

   - Click **[]** to check the names and data types of the table fields .
   - Activate the checkbox in the output column to add items to the output .
   - Click **[]** to edit the content of the table .

1. Optional: If available, define which exceptions thrown by the Function Module / BAPI are ignored during runtime, see [Exceptions](input-and-output/#exceptions).

1. Click **[OK]** to save the component.

You can now run the workflow.

### Input and Output Anchors

The Xtract BAPI component has the following input and output options:

- Input anchor "I" - input for tables .
- Input anchor "P" - input for runtime parameters .
- Output anchor "1" to "5" - [output tables](input-and-output/#add-tables-to-output) .
- Output anchor "E" - output for export parameters .

______________________________________________________________________

#### Related Links

- [Sample Workflows: Xtract BAPI](../../sample-workflows/#xtract-bapi)
- [Knowledge Base Article: Create and Load Purchase Requisitions in SAP](../../knowledge-base/create-and-load-purchase-requisitions-in-sap/)
- [Knowledge Base Article: Read and Download SAP Attachment Files](../../knowledge-base/read-sap-attachment-files/)
- [Knowledge Base Article: Read Data from Cluster Fields in Tables PCL1 and PCL2 (Payroll)](../../knowledge-base/read-data-from-cluster-fields-in-the-tables-pcl1-and-pcl2-payroll/)

Runtime parameters are are placeholders for values that are passed at runtime.

## Create Runtime Parameters

There are two types of runtime parameters:

- [Scalar parameters](#scalar-parameters) represent a single value.
- [List parameters](#list-parameters) represent multiple values.

### Scalar Parameters

Follow the steps below to create a scalar runtime parameter:

1. In the main window of the component click **[Edit Parameters]**. The window “Edit Runtime Parameters” opens.

1. Click **[Add Scalar]** to define scalar parameters to be used as placeholders for actual values. The placeholders need to be populated with actual values at runtime.

   Tip

   Parameter0..-n is the default naming for the added parameter. You can enter a name of your choice.

1. Select one of the following data types from the drop-down menu. The data types may correlate to SAP data types.

   | Type | Description | | --- | --- | | *Text* | Can be used for any type of SAP selection field. | | *Number* | Can be used for numeric SAP selection fields. | | *Flag* | Can only be used for SAP selection fields THAT require an ‘X’ (true) or a blank ‘‘ (false) as input value. |

1. Click **[OK]** to confirm.

The runtime parameters are now available in the component.

### List Parameters

Follow the steps below to create a list runtime parameter:

1. In the main window of the component click **[Edit Parameters]**. The window “Edit Runtime Parameters” opens.

1. Click **[Add List]** to define list parameters that contain multiple values separated by commas e.g., 1,10 or “1”, “10”. The placeholders need to be populated with actual values at runtime.

   Tip

   Parameter0..-n is the default naming for the added parameter. You can enter a name of your choice.

1. Click **[OK]** to confirm.

The runtime parameters are now available in the component.

## Assign Runtime Parameters

Follow the steps below to assign runtime parameters to input fields of import, changings or table parameters of a Function Module / BAPI:

1. Navigate to the item you want to parameterize in the **Imports**, **Changings** or **Tables** tab.
1. Click the icon button next to the item to switch from static values () to runtime parameters (). If no icon is available, [create a runtime parameter](#create-runtime-parameters).
1. Select a runtime parameter from the dropdown-list.

## Pass Values at Runtime

Follow the steps below to replace runtime parameters with actual values at runtime:

1. [Create and assign runtime parameters](#create-runtime-parameters) in the Xtract BAPI component.
1. Close the Xtract BAPI component.
1. Define the input values for the runtime parameters , e.g., single values or lists.
1. Make sure that the data type of the input values match the data type of the corresponding runtime parameter.
1. Make sure that the name of the input matches the name of the corresponding runtime parameter. The values in the input are automatically assigned to a runtime parameter by the same name.
1. Connect the input to the Xtract BAPI component using the input anchor "P" .\
   To pass input tables, use the input anchor "I", see [Mapping Input Tables](../input-and-output/#map-input-tables).
1. Run the workflow to test if the runtime parameters are assigned correctly.

Note

Parameterization via input anchors is supported as of Xtract for Alteryx version 1.19. When using an older version of Xtract for Alteryx, parameterize Xtract components using batch macros, see [Parameterizing via Batch Macros](../../../knowledge-base/parameterization-via-batch-macros/).

For information on input anchors, see [Input and Output Anchors](../#input-and-output-anchors).

This page contains an overview and description of the Import, Export, Changings and Tables parameter in the Xtract BAPI component.

Each Import, Export, Changings and Tables parameter can have one of the following representations:

- A scalar field (e.g., characters, date, time, number, amount etc.).
- A structure consisting of several components.
- A table (tabular array of data) consisting of columns (data values of the same type) and rows (data records).

## Import Parameters

Import parameters represent the input values sent from the client to SAP. In the tab **Imports** you can define import parameters that can be presented as scalar values or structures .

To use the filtering function, enter text in the headers of the columns **Name** and **Description**.

### Scalar Parameters

Assign single values to an import parameter by using one of the following options:

- If the input field is empty, enter a static value.
- If a checkbox is displayed in the input field, the parameter is predefined in SAP. The value in SAP is displayed in a light gray font. To disable the predefined value, activate the checkbox and leave the field empty or enter a new value.
- If **[]** is displayed in the input field, enter a static value. Click **[]** to switch between static values and dynamic values that are set at runtime.
- If **[]** is displayed in the input field, select a [runtime parameter](../edit-runtime-parameters/). Click **[]** to switch between dynamic values and static values.

When using runtime parameters, make sure the data type of the input matches the data type in SAP.

### Structure Parameters

When a Function Module / BAPI uses structures as import parameters, you can assign structure elements (i.e. fields) similarly to single [scalar fields](#scalar-parameters). Setting a single value or a parameter for the whole structure is not possible.

1. Click **[]**. The window "Edit Structures" opens.
1. Enter static values ( **[]** icon or no icon) or assign runtime parameters ( **[]** icon).

Tip

It is possible to use tables as input parameters, see [Tables Parameters](#table-parameters).

## Export Parameters

Export parameters represent the output values sent from SAP back to the client after the execution of a Function Module. In the tab **Export** you can select the items you want to add to the output of the component.

### Add Items to Output

Mark the checkbox in the output column to add an item to the output of the component. The selected output is assigned to the [output anchor](../#input-and-output-anchors) 'E' of the Xtract BAPI component.

To use the filtering function, enter text in the headers of the columns **Name** and **Description**.

Tip

It is possible to use tables as output parameters, see [Add Tables to Output](#add-tables-to-output).

## Changing Parameters

Changing parameters represent parameters that can be used for input and output. In the tab **Changings** you can define the changing parameters.

## Table Parameters

Table parameters are parameters presented in a table structure consisting of multiple rows. Tables can be used for input and output. In the tab **Tables** you can define table parameters for importing and exporting data into and from an SAP Function Module or BAPI.

Tables represent a structure of multiple rows of the same data type.

To use the filtering function, enter text in the headers of the columns **Name** and **Description**.

Note

Only **5** tables are available for parallel exporting.

- Click **[]** to check the names and data types of the table fields .
- Activate the checkbox in the output column to add items to the output .
- Click **[]** to edit tables .

### Access Metadata of Tables

Click **[]** to display the metadata of a table. The metadata includes the name and the data type of all fields.

### Add Tables to Output

Mark the checkbox in the output column to add a table to the output.

The selected tables are assigned to the [output anchors](../tool-configuration/#output-mappings) of the Xtract BAPI component. The number of tables that can be added to the output is limited to 5 tables.

### Edit Tables

You can assign tables elements (i.e. fields) similarly to single [scalar fields](#scalar-parameters):

1. Click **[]**. The window "Edit Table Contents" opens.
1. Click **[Add]** to add new set of parameters.
1. Enter values or runtime parameters.\
   When using runtime parameters, make sure the data type of the input matches the SAP data type.
1. Click **[Remove]** to delete a row.

### Map Input Tables

To correctly map the data of an input table, the following requirements apply:

- The column names of the input table must be the same as in the Xtract BAPI component.
- The data types in the input table must be the same as in the Xtract BAPI component. Click **[]** next to a table to look up column names and data types in the Xtract BAPI component.

Follow the steps below to pass tables to the Xtract BAPI component at runtime:

1. Define or load the input tables into your workflow.
1. Connect the input tables to the Xtract BAPI component using the input anchor "I".\
   The number that is displayed in the connection arrow is used to identify tables in the Xtract BAPI component.
1. Open the Xtract BAPI component and navigate to the table you want to parameterize.
1. Select an input table from the dropdown list.

To remove an input table from a structure, click **[]**.

## Exceptions

**Exceptions** refer to ABAP exceptions / errors messages of an SAP BAPI. If an exception occurs during runtime, Xtract for Alteryx returns a corresponding error message.

By default, all exceptions result in errors when running the Xtract BAPI component. To ignore exceptions during runtime, deselect the exceptions in the **Exceptions** tab.

This page contains an overview of the settings in the configuration menu of the Xtract BAPI component. To display the configuration menu, select an Xtract BAPI component in the workflow.

### About

At the top of the configuration menu, click **About** to display information about the software version and license.

### Connection

The section *Connection* of the configuration menu defines which [SAP Connection](../../sap-connection/) is used for the component.

| Button | Description | | --- | --- | | **New** | Opens the "SAP Connection Details" window to create a new SAP connection. For more information, see [Knowledge Base Article: SAP Connection using the Xtract for Alteryx GUI](../../../knowledge-base/sap-connection-using-xfa-gui/). | | **Edit** | Opens the "SAP Connection Details" window to edit the selected SAP connection. | | **Delete** | Deletes the selected SAP connection. |

### Selected Extraction

The section *Selected Extraction* of the configuration menu displays the description and name of the primary SAP object that is used in the component.

| Button | Description | | --- | --- | | **Edit** | Opens the main window of the Xtract BAPI component. The majority of the functions of the Xtract BAPI component can be accessed using the main window. |

### Output Mappings

The section *Output Mappings* of the configuration menu displays which [output tables](../input-and-output/#add-tables-to-output) correspond to which [output anchor](../#input-and-output-anchors) of the component. The Xtract BAPI component has five output anchors for tables that are numbered from 1 to 5. The number of tables that can be added to the output is therefore limited to five tables.

Tip

When an output anchor is connected to an Alteryx tool, you can switch output anchors by right-clicking the connecting line between the tools and selecting **Switch Origin to...**.

### Transaction Commit

Some SAP Function Modules require calling the function module BAPI_TRANSACTION_COMMIT to successfully update data in the database, e.g., BAI_PO_CREATE. To automatically call BAPI_TRANSACTION_COMMIT after the selected Function Module / BAPI is processed, activate the option **Commit work in SAP after execution** in the configuration menu of the Xtract BAPI component.

This page shows how to use the Xtract Cube component.\
The Xtract Cube component can be used to extract MDX or BICS data directly from BW InfoProviders (e.g., Cubes) or from BW Queries. The BW Queries can be based on InfoProviders.

### Prerequisites

- A connection to an SAP system is available, see [SAP Connection](../sap-connection/).
- The SAP user has sufficient user rights, see [SAP Authority Objects](../setup-in-sap/sap-authority-objects/#bw-cube-bw-query).
- To extract a BW Query, the attribute *Allow External Access to this Query* of the Query must be active in the BEx Query Designer or the BW Modeling Tool, see [Troubleshooting Article: Allow external access to BW Queries](https://support.theobald-software.com/helpdesk/KB/View/13800-allow-external-access-to-bw-queries).

Warning

**Missing Authorization.**\
To use the Xtract Cube component, access to the designated authority objects (RFC) in SAP must be available. Adjust [SAP Authority Objects: BW Query / BW Cube](../setup-in-sap/sap-authority-objects/#bw-cube-bw-query) accordingly.

### MDX versus BICS

The Xtract Cube component can extract data using the OLAP BAPI Interface (MDX) or the native BICs interface. The following table shows the differences between the two extractors:

| MDX | BICS | | --- | --- | | **Lookup syntax for BEx Queries:** `[tech. name of InfoPovider]/[tech. name of BEx Query]` | **Lookup syntax for BEx Queries:** `[tech. name of BEx Query]` Example: `0SD_C03_Q0018` | | **Lookup syntax for InfoProviders:** `$[tech. name of InfoProvoider]` | **Lookup syntax for InfoProviders:** `[tech. name of InfoProvider]` Example: `0SD_C03` | | **Wildcards in lookup:** The BEx-Query setting [Allow External Access to BW Queries](https://support.theobald-software.com/helpdesk/KB/View/13800-allow-external-access-to-bw-queries) is required. Example: `*0SD_C03_Q0018` instead of `0SD_C03/0SD_C03_Q0018` | **Wildcards in lookup:** not required and therefore not supported | | **Supported InfoProviders:** InfoCubes, Multiproviders, Composite Providers | **Supported InfoProviders:** InfoCubes, MuliProviders, Composite Providers, DSOs | | **Column names of Key figures:** EnterpriseID | **Column names of Key figures:** Technical name If techn. name is empty: name of the base measure. If name of the base measure is empty: EnterpriseID. **Tip:** In case of duplicate names, change the technical name in the BEx Query Designer. | | **Limit of Dimensions:** max. 50 dimensions | **Limit of Dimensions:** - |

### Add an Xtract Cube Component

Follow the steps below to add an Xtract Cube component to your workflow:

1. Drag & drop the Xtract component to your Alteryx workflow .
1. Assign an existing SAP connection .
1. Click **[ Edit]** to open the main window of the component.

The majority of the functions of the component can be accessed in the main window.

### Look Up a BW Cube or Query

1. In the main window of the component, click **[]**. The window “Cube and Query Lookup” opens.

1. Select the *Extractor*, *Datasource Type* and *Extraction Settings* of the object .

   | Option | Description | | --- | --- | | *Extractor* | defines if data is extracted using the OLAP BAPI Interface (MDX) or the native BICS Interface. BICS can only be used in combination with the [NetWeaver RFC protocol](../sap-connection/settings/#rfc-libraries). | | *Datasource Type* | defines if the look up searches for a BEx Query or an InfoProvider. | | *Extraction Settings* | only available for the MDX extractor. Use **Only Structure** if your BWCube extraction was created in an older software version, see [extraction settings](settings/) for more information. |

1. In the search bar, enter the name of a Query or a BW Cube / InfoProvider . Use wildcards (\*), if needed.

1. Click **[]**. Search results are displayed.\
   Alternatively click **[Direct Load]** to skip the lookup and load the BW Cube / InfoProvider directly. **[Direct Load]** only works if the full name is entered correctly in the search bar.

1. Select a Query or BW Cube / InfoProvider and click **[OK]** to confirm.

The application now returns to the main window of the component.

Note

Click **[Refresh Metadata]** to renew metadata. This is necessary if a data source has been adjusted in SAP, another source system has been connected, or the source system has been updated.

Warning

**Invalid action**\
A BW Query does not apprear in the list.\
Switch on the attribute *Allow External Access to this Query* in the BEx Query Designer or the BW Modeling Tool. For additional details see the [Troubleshooting Article: Allow external access to BW Queries](https://support.theobald-software.com/helpdesk/KB/View/13800-allow-external-access-to-bw-queries).

### Define the Xtract Cube Component

The Xtract Cube component offers the following options for Query and BW Cube extractions:

1. In the tree structure of the component, select the measure (key figures) you want to extract

   Tip

   The tree structure represents the metadata of the Query (or InfoProvider).\
   The first directory contains all the measures (key figures) . The following directories correspond to dimensions and often contain additional dimension properties .

1. Within the key figures directory, click the arrow to display the available units. Select a unit, if needed.

1. In the following directories, select the dimensions and properties you want to extract .

1. Optional: Right-click on a dimension to add filters to the dimension, see [Dimension Filters](variables-and-filters/#set-dimension-filters).

1. Optional: If a BW Query has a defined variable, click **[Edit Variables]** to edit the variable or provide input values, see [Variables](variables-and-filters/#edit-variables).

1. Click **[Load live preview]** to display a live preview of the data. For every selected dimension or property, a key figure and a unit is displayed in the result.

1. Check the [Extraction Settings](settings/) before running the workflow.

1. Click **[OK]** to save the component.

You can now run the workflow.

Runtime parameters are are placeholders for values that are passed at runtime. They can be created in context of [Query Variables](../variables-and-filters/#edit-variables) and [Dimension Filters](../variables-and-filters/#set-dimension-filters).

## Create Runtime Parameters

There are two types of runtime parameters:

- [Scalar parameters](#scalar-parameters) represent a single value.
- [List parameters](#list-parameters) represent multiple values.

### Scalar Parameters

Follow the steps below to create a scalar runtime parameter:

1. In the main window of the component click **[Edit Parameters]**. The window “Edit Runtime Parameters” opens.

1. Click **[Add Scalar]** to define scalar parameters to be used as placeholders for actual values. The placeholders need to be populated with actual values at runtime.

   Tip

   Parameter0..-n is the default naming for the added parameter. You can enter a name of your choice.

1. Select one of the following data types from the drop-down menu. The data types may correlate to SAP data types.

   | Type | Description | | --- | --- | | *Text* | Can be used for any type of SAP selection field. | | *Number* | Can be used for numeric SAP selection fields. | | *Flag* | Can only be used for SAP selection fields THAT require an ‘X’ (true) or a blank ‘‘ (false) as input value. |

1. Click **[OK]** to confirm.

The runtime parameters are now available in the component.

### List Parameters

Follow the steps below to create a list runtime parameter:

1. In the main window of the component click **[Edit Parameters]**. The window “Edit Runtime Parameters” opens.

1. Click **[Add List]** to define list parameters that contain multiple values separated by commas e.g., 1,10 or “1”, “10”. The placeholders need to be populated with actual values at runtime.

   Tip

   Parameter0..-n is the default naming for the added parameter. You can enter a name of your choice.

1. Click **[OK]** to confirm.

The runtime parameters are now available in the component.

## Assign Runtime Parameters

Follow the steps below to assign the runtime parameters to variables or dimension filters.

1. In the main window of the component, click **[Edit Variables]**. The window "Edit Selections" opens.

1. Add a filter to the variable, see [Variables](../variables-and-filters/#edit-variables).

1. Click the icon button next to the input field to switch between static values () and runtime parameters (). If no icon button is available, [create a runtime parameter](#create-runtime-parameters).

1. Select a runtime parameter from the dropdown-list.

1. Click **[OK]** to confirm the input.

1. In the main window of the component, right-click the dimension you want to parameterize.

1. Click **Edit Filters**. The window "Edit Selections" opens.

1. Add a filter for the dimension, see [Dimension Filter](../variables-and-filters/#set-dimension-filters).

1. Click the icon button next to the input field to switch between static values () and runtime parameters (). If no icon button is available, [create a runtime parameter](#create-runtime-parameters).

1. Select a runtime parameter from the dropdown-list.

1. Click **[OK]** to confirm the input.

## Pass Values at Runtime

Follow the steps below to replace runtime parameters with actual values at runtime:

1. [Create and assign runtime parameters](#create-runtime-parameters) in the Xtract Cube component.
1. Close the Xtract Cube component.
1. Define the input values for the runtime parameters , e.g., single values or lists.
1. Make sure that the data type of the input values match the data type of the corresponding runtime parameter.
1. Make sure that the name of the input matches the name of the corresponding runtime parameter. The values in the input are automatically assigned to a runtime parameter by the same name.
1. Connect the input to the Xtract Cube component using the input anchor "P" .
1. Run the workflow to test if the runtime parameters are assigned correctly.

Note

Parameterization via input anchors is supported as of Xtract for Alteryx version 1.19. When using an older version of Xtract for Alteryx, parameterize Xtract components using batch macros, see [Parameterizing via Batch Macros](../../../knowledge-base/parameterization-via-batch-macros/).

This page contains an overview of the extraction settings in the Xtract Cube component.\
To open the extraction settings, click ****[Extraction Settings]**** in the main window of the component.

### Extraction Settings

#### Package Size

The extracted data is split into packages of the defined size. The default value is 50000 lines.\
A package size between 20000 and 50000 is advisable for large amounts of data. 0 means no packaging. Not using packaging can lead to an RFC timeout for large data extractions.

Warning

**RFC_ERROR_SYSTEM_FAILURE - No more storage space available for extending an internal table**\
To avoid a memory overflow on the SAP source system and to avoid huge overheads, choose a package size that suits your memory capacity.

This option is not supported when using BICS mode.

#### Row Limit

Specifies the maximum number of extracted records. 0 extracts all data. You can use this option to perform tests with a small amount of data by entering a row limit of e.g., 1000.

This option is not supported when using BICS mode.

#### Member Display

This setting is only available for the BICS extractor.

- *Key*: Extracts the key of the dimension member.
- *Text* (default): Extracts the text of the dimension member.
- *Text and Key*: Adds an additional column for every dimension with the suffix `.KEY`. The original column contains the text of the dimension member, the column with the `.KEY` suffix contains the key of the dimension member.

#### Formatted Values

If this option is active, the values of key figures are formatted as defined in the Query Designer, e.g., scaling factor and number of decimal places.

#### Only Structure

Activate this option if the Xtract Cube component was created in an old version of the Xtract Cube component. The method for the metadata retrieval has changed, which affects especially BEx Queries with two structures.\
This option can only be activated and deactivated in the [Look Up](../#look-up-a-bw-cube-or-query) window of the component.

### Automatic Slicing Dimension

This option sets a dimension for an automatic slicing. Slicing is the act of picking a subset of a cube by choosing a single value for one of its dimensions. Automatic slicing means that a loop is executed for each single value of the chosen slicing dimension (characteristic) to extract the result from BW.

**Automatic Slicing Dimension** allows the extraction of a large amount of data (millions of records) from BW.

### Dimension on Columns

The following extraction setting is only available for MDX extractions. It appears in the extraction settings window after retrieving the metadata of an MDX extraction.

**Dimension on Columns** allows selecting other dimension/structure than the measure (key figures) dimension on the column axis. This swaps the measures and the selected dimension: the measures are placed on rows, the selected dimension is placed on columns.

Note the following:

- The BEx Query must contain a dimension structure
- Dimension filters on columns are not applied
- The selected properties for the new column dimension are ignored
- Unit columns are only supported when *key figures* are selected for the columns.
- Up to 1000 members are loaded when confirming the extraction settings window. These members are then the column names.

Recommendation

We recommend only using structures on columns.

Example:

- Output for **Dimension on Columns** = *Key Figures*
- Output for **Dimension on Columns** = *Cal. Year/Quarter [0CALQUARTER]*

### Experimental

The following settings are only available for BICS extractions. They appear in the extraction settings window after retrieving the metadata of a BICS extraction.

#### Create BICS Compatibility Report

When encountering an error using BICS, click **[Create BICS Compatibility Report]** to run a number of tests to help us analyze why and where the error occured.\
The test results are automatically stored in a .zip file. If you have multiple different SAP systems, perform this test on each of them.\
Send the resulting .zip files to the [Theobald Support](https://support.theobald-software.com) team.

This page contains an overview of the settings in the configuration menu of the Xtract Cube component. To display the configuration menu, select an Xtract Cube component in the workflow.

### About

At the top of the configuration menu, click **About** to display information about the software version and license.

### Connection

The section *Connection* of the configuration menu defines which [SAP Connection](../../sap-connection/) is used for the component.

| Button | Description | | --- | --- | | **New** | Opens the "SAP Connection Details" window to create a new SAP connection. For more information, see [Knowledge Base Article: SAP Connection using the Xtract for Alteryx GUI](../../../knowledge-base/sap-connection-using-xfa-gui/). | | **Edit** | Opens the "SAP Connection Details" window to edit the selected SAP connection. | | **Delete** | Deletes the selected SAP connection. |

### Selected Extraction

The section *Selected Extraction* of the configuration menu displays the description and name of the primary SAP object that is used in the component.

| Button | Description | | --- | --- | | **Edit** | Opens the main window of the Xtract Cube component. The majority of the functions of the Xtract Cube component can be accessed using the main window. |

### Column Name Style

Defines the style of the column name. Following options are available:

| Option | Description | | --- | --- | | *Code* | The SAP technical column name is used as column name in the destination e.g., MAKTX. | | *PrefixedCode* | The SAP technical column name is prefixed by SAP object name and the tilde character e.g., MAKT~MAKTX | | *CodeAndText* | The SAP technical column name and the SAP description separated by an underscore are used as column name in the destination e.g., MAKTX_Material Description (Short Text). | | *TextAndCode* | The SAP description and the SAP technical column name description separated by an underscore are used as column name in the destination e.g., Material Description (Short Text)\_MAKTX. | | *Text* | The SAP description is used as column name in the destination e.g., Material Description (Short Text). |

This page shows how to use variables and dimension filters to filter the data that is extracted with the Xtract Cube component. There are two options to apply filters:

- [Variables](#edit-variables) are usually defined in SAP to create filter options for BW Queries. They can be edited in the Xtract Cube component.
- [Dimension Filters](#set-dimension-filters) are defined in the Xtract Cube component to filter data from InfoProviders or BW Queries that do not have variables.

### Edit Variables

BW queries often have defined variables to create filter options. Depending on the type of BEx variable (single value, multiple value, interval or complex selection) input fields of the variables are enabled or disabled.

1. [Look up](../#look-up-a-bw-cube-or-query) a BEx Query with defined variables .
1. Click **[Edit Variables]** . The window "Edit variables for [name of the query]" opens.
1. Select a field that uses variables from the drop-down menu .
1. Click **[Single]**, **[Range]** or **[List]** to add a corresponding filter, see [Filter Options](#filter-options).
1. In the column **Sign** , select *Include* to add the filtered data to the output or select *Exclude* to remove the filtered data from the output.
1. Select an operator in the column **Option** , see [Filter Options](#filter-options).
1. In the column **Value**, enter values directly into the input fields **Low** and **High**, assign existing [runtime parameters](../edit-runtime-parameters/) or look up pre-defined values in SAP.
   - Static values: Enter values directly into the Low and High input fields.
   - Runtime parameters: Select an existing runtime parameter from the drop-down list.
   - Pre-defined values: If available, select pre-defined values from SAP:
1. Click **[OK]** to confirm your input.
1. Click **[Load live preview]** in the main window of the component to check the result of the filter. If runtime parameters are defined, you are prompted to populate the parameters with actual values.

### Set Dimension Filters

Each dimension of a BEx Query or an InfoCube offers the possibility to set a filter to execute the MDX statement in BW using the selected filter values. Follow the steps below to create dimension filters in the Xtract Cube component.

1. In the tree structure of the component, right-click a dimension to open the context menu.
1. Click **[Edit Filter]**. The window "Edit Selections" opens.
1. Click **[Single]**, **[Range]** or **[List]** to add a corresponding filter, see [Filter Options](#filter-options).
1. In the column **Sign** , select *Include* to add the filtered data to the output or select *Exclude* to remove the filtered data from the output.
1. In the column **Option**, select an operator , see [Filter options](#filter-options).
1. In the column **Value**, enter values directly into the input fields **Low** and **High**, assign existing [runtime parameters](../edit-runtime-parameters/) or look up pre-defined values in SAP.
   - Static values: Enter values directly into the Low and High input fields.
   - Runtime parameters: Select an existing runtime parameter from the drop-down list.
   - Pre-defined values: If available, select pre-defined values from SAP.
1. Click **[OK]** to confirm your input.
1. Click **[Load live preview]** in the main window of the component to check the result of the filter. If runtime parameters are defined, you are prompted to populate the parameters with actual values.

When filters are applied, the symbol is displayed in the treeview of the dimensions.

Warning

**Extraction fails - Error message: Argument cannot be null or empty**\
When a filter is set, a value cannot be empty for an extraction to run.\
Make sure to pass a value (# is accepted).

### Filter Options

The Xtract Cube component offers the following filter options:

| Type | Operator | Description | | --- | --- | --- | | Single | | Compare data to a single specified value. | | | *(not) like pattern* | True if data values do (not) contain to the specified value. | | | *(not) equal to* | True if data is (not) equal to the specified value. | | | *at least* | True if data is greater than or equal to the specified value. | | | *more than* | True if data is greater than the specified value. | | | *at most* | True if data is less than or equal to the specified value. | | | *less than* | True if data is less than the specified value. | | Range | | Check if the data is (not) within a specified range of values. | | | *(not) between* | True if data values do (not) lie between the 2 specified values. | | List | | Check if the data is part of a specified list of values. | | | *element of* | True if data values are part of the list. |

This page shows how to use the Xtract Hierarchy component. The Xtract Hierarchy component can be used to extract Hierarchies and InfoObjects from SAP BW systems.

Note

To extract hierarchies from a BW system, use the Xtract Hierarchy component. To extract hierarchies from an ERP system like ECC or S4, use the [Xtract ODP](../odp/) component.

### Prerequisites

- A connection to an SAP system is available, see [SAP Connection](../sap-connection/).
- The SAP user has sufficient user rights, see [SAP Authority Objects](../setup-in-sap/sap-authority-objects/#bw-hierarchy).

Warning

**Missing Authorization.**\
To use the Xtract Hierarchy component, access to the designated authority objects (RFC) in SAP must be available. Adjust [SAP Authority Objects](/xtract-for-alteryx/documentation/setup-in-sap/sap-authority-objects#bw-hierarchy) accordingly.

### Add an Xtract Hierarchy Component

Follow the steps below to add an Xtract Hierarchy component to your workflow:

1. Drag & drop the Xtract component to your Alteryx workflow .
1. Assign an existing SAP connection .
1. Click **[ Edit]** to open the main window of the component.

The majority of the functions of the component can be accessed in the main window.

### Look Up a Hierarchy

1. In the main window of the component, click **[]**. The window “Hierarchy Lookup” opens.
1. Enter the name of a Hierarchy in the field **Hierarchy Name** or the name of an InfoObject in the field **InfoObject** . Use wildcards (\*) if needed.
1. Click **[]**. Search results are displayed.
1. Select a Hierarchy and click **[Select]**.

The application returns to the main window of the component.

### Define the Xtract Hierarchy Component

The Xtract Hierarchy component offers the following options for Hierarchy extractions:

1. Define the output format of the Hierarchy in the [extraction settings](settings/#extraction-settings) . The Xtract Hierarchy component supports the following output formats:

   - [ParentChild Format](output-format/#parentchild-format)
   - [Natural Format](output-format/#natural-format)
   - [ParentChildWithNodeNames Format](output-format/#parentchildwithnodenames-format)

1. Click **[Load live preview]** to display a live preview of the first 100 records.

1. Click **[OK]** to save the component.

You can now run the workflow.

______________________________________________________________________

#### Related Links

- [Extraction Settings](settings/)
- [SAP Help: Uploading Hierarchies from Flat Files](https://help.sap.com/saphelp_scm700_ehp02/helpdata/en/fa/e92637c2cbf357e10000009b38f936/frameset.htm)

This page shows the which output formats are supported by the Xtract Hierarchy component. The output format can be selected in the [extraction settings](../settings/) of the Xtract Hierarchy component.

### ParentChild Format

The default output of the Xtract Hierarchy component contains the following columns:

| Column | Description | | --- | --- | | **NodeID** | Unique node key. | | **ParentNodeID** | Key for parent node. | | **FirstChildNodeID** | Key for first child node. | | **NextNodeID** | Key for next node in the same hierarchical level. | | **InfoObjectName** | Name of InfoObject behind the corresponding node. | | **NodeName** | The node’s (technical) name. | | **NodeText** | The description text of the node. This column is only created when [**Fetch description texts**](../settings/#fetch-description-texts) is active. | | **DateFrom** | Date from which the node is valid. | | **DateTo** | Date the node is valid to. | | **Link** | If the value in *Link* is greater than 0, the node is a link node. The ID of the original node that was linked from is displayed. | | **Row** | Number of the row. The row number can be used as an ID or sort criterion when processing the extracted data. |

Example:

### Natural Format

| Column | Description | | --- | --- | | **LevelN** | Technical name of the node of the nth level. The number of levels is set in [**Level Count**](../settings/#level-count). The level count starts at level 0. | | **LevelTextN** | The description text of the nth level's node. This column is only created when [**Description texts for levels**](../settings/#description-texts-for-levels) is active. | | **InfoObjectName** | Name of InfoObject behind the node of the highest level. | | **NodeName** | Technical name of the node of the highest level. | | **NodeText** | The description text of the node of the highest level. This column is only created when [**Fetch description texts**](../settings/#fetch-description-texts) is active. | | **DateFrom** | Date from which the node is valid | | **DateTo** | Date the node is valid to. | | **Link** | If the value in *Link* is greater than 0, the node is a link node. The ID of the original node that was linked from is displayed. | | **Row** | Number of the row. The row number can be used as an ID or sort criterion when processing the extracted data. |

Example:

### ParentChildWithNodeNames Format

| Column | Description | | --- | --- | | **NodeID** | Unique node key. | | **NodeName** | The node’s (technical) name. | | **NodeText** | The description text of the node. This column is only created when [**Fetch description texts**](../settings/#fetch-description-texts) is active. | | **ParentNodeID** | Key for parent node. | | **ParentNodeName** | Name of the parent node. | | **InfoObjectName** | Name of InfoObject behind the corresponding node. | | **DateFrom** | Date from which the node is valid. | | **DateTo** | Date the node is valid to. | | **Link** | If the value in *Link* is greater than 0, the node is a link node. The ID of the original node that was linked from is displayed. | | **Row** | Number of the row. The row number can be used as an ID or sort criterion when processing the extracted data. |

Example:

This page contains an overview of the extraction settings in the Xtract Hierarchy component.\
To open the extraction settings, click ****[Extraction Settings]**** in the main window of the component.

### Extraction Settings

#### Representation

- *ParentChild*: The Hierarchy is represented in the SAP parent-child format, see [Output Formats: ParentChild](../output-format/#parentchild-format). Example:
- *Natural*: The SAP parent-child Hierarchy is transformed into a regular hierarchy, see [Output Formats: Natural](../output-format/#natural-format). Example:
- *ParentChildWithNodeNames*: The Hierarchy is represented in a reduced SAP parent-child format that only includes single nodes and their parent, see [Output Formats: ParentChildWithNodeNames](../output-format/#parentchildwithnodenames-format). Example:

#### Remove Leading Zeros

If this option is active, all leading zeros in the column *NodeName* of the leaves are removed. *NodeName* can then be used in a JOIN-condition with the corresponding Dimension-Key of a BW Cube extraction.\
The conversion works for compound InfoObjects, too. Example: 0CO_AREA (1000) and 0COSTCENTER (0000003100) become 1000/3100.

#### Fetch description texts

Sets the node text in the column *NodeText*.\
All texts of InfoObjects that have language dependent texts will be retrieved in the language that the SAP source connection uses. If no texts exist, the result does not contain any texts for entries of that InfoObject.

### Natural Settings

Note

The subsection *Natural Settings* is only active, when the **Representation** is set to *Natural*.

#### Level Count

Defines the maximum number of levels. The following example shows a Hierarchy with four levels.

#### Fill empty levels

Copies the bottom element of the Hierarchy until the last level. The following example depicts the previously shown Hierarchy with the activated *Repeat Leaves* option.

#### Description texts for levels

Sets the output field *LevelTextN* for each field *LevelN* containing the text based on the system language settings.

#### Leaves only

Returns only the leaves as data records.

### Debug

#### Enable Debug Logging

Adds more detailed logs for the Xtract Hierarchy component to the extraction logs. Activate **Enable Debug Logging** only when necessary, e.g., upon request of the support team.

______________________________________________________________________

#### Related Links

- [SAP Help: About SAP BW Hierarchies](https://help.sap.com/saphelp_scm41/helpdata/en/90/fd36709c6411d5b4000050dadfb23f/content.htm?no_cache=true)

This page contains an overview of the settings in the configuration menu of the Xtract Hierarchy component. To display the configuration menu, select an Xtract Hierarchy component in the workflow.

### About

At the top of the configuration menu, click **About** to display information about the software version and license.

### Connection

The section *Connection* of the configuration menu defines which [SAP Connection](../../sap-connection/) is used for the component.

| Button | Description | | --- | --- | | **New** | Opens the "SAP Connection Details" window to create a new SAP connection. For more information, see [Knowledge Base Article: SAP Connection using the Xtract for Alteryx GUI](../../../knowledge-base/sap-connection-using-xfa-gui/). | | **Edit** | Opens the "SAP Connection Details" window to edit the selected SAP connection. | | **Delete** | Deletes the selected SAP connection. |

### Selected Extraction

The section *Selected Extraction* of the configuration menu displays the description and name of the primary SAP object that is used in the component.

| Button | Description | | --- | --- | | **Edit** | Opens the main window of the Xtract Hierarchy component. The majority of the functions of the Xtract Hierarchy component can be accessed using the main window. |

This page shows how to use the Xtract ODP component.\
The Xtract ODP component can be used to extract data via the SAP Operational Data Provisioning (ODP) framework.

### About ODP

Operational data provisioning (ODP) is a framework in SAP ABAP applications for transferring data between systems. ODP provides a technical infrastructure for data extraction and replication from different SAP (ABAP) Systems, e.g.:

- ECC
- S/4 HANA
- BW
- BW/4 HANA

The Xtract ODP component acts as a subscriber (consumer) and [subscribes](subscriptions/) to a data provider. ODP supports mechanisms to load data incrementally from data providers. For SAP BW/4HANA, ODP is the central infrastructure for data extraction and replication from SAP (ABAP) applications to an SAP BW/4HANA Data Warehouse.

The Xtract ODP component provides data transfer from the following providers (also called [Provider Context](provider-context/)):

| Provider Context | SAP Source Objects | | --- | --- | | ABAP Core Data Services \[[ABAP_CDS](provider-context/#abap-cds-views)\] | - CDS Views | | SAP NetWeaver Business Warehouse or BW4/HANA \[[BW](provider-context/#bw-infoproviders)\] | **BW/4HANA:** - DSO / aDSO - CompositeProvider - InfoObjects - Query as InfoProvider **BW systems:** - CompositeProvider - InfoCubes - Semantically partitioned objects - HybridProviders - MultiProviders - InfoSets | | SAP HANA Information Views \[[HANA](provider-context/#hana-views)\] | - Analysis Views - Calculation Views - Associated Attribute Views | | DataSources/Extractors \[[SAPI](provider-context/#extractors)\] | - DataSources and Extractors | | SAP LT Queue Alias \[[SLT~your_queue_alias](provider-context/#slt-server)\] | - SAP Tables - Cluster tables - Pool tables |

Depending on the connected SAP source system there are differences in available provider contexts.\
For more information on SAP ODP, see [SAP Wiki: Operational Data Provisioning (ODP) and Delta Queue (ODQ)](https://wiki.scn.sap.com/wiki/pages/viewpage.action?pageId=449284646).

### Prerequisites

- A connection to an SAP system is available, see [SAP Connection](../sap-connection/).
- The SAP user has sufficient user rights, see [SAP Authority Objects](../setup-in-sap/sap-authority-objects/#odp).
- Implement the following SAP notes to use ODP:
  - [1931427 - ODP Data Replication API 2.0](https://launchpad.support.sap.com/#/notes/1931427)
  - [2232584 - Release of SAP extractors for ODP replication (ODP SAPI)](https://launchpad.support.sap.com/#/notes/2232584)
  - [1560241 - Release of DataSources for ODP data replication API](https://launchpad.support.sap.com/#/notes/1560241)
  - [2196500 - ODP Package size cannot be reduced below 50 MB](https://launchpad.support.sap.com/#/notes/2196500/D)
  - [2191995 - ODQ Package Size cannot be reduced below 50 MByte](https://launchpad.support.sap.com/#/notes/2191995/D)
- DataSources have to be activated in SAP, see [SAP Help: Activating DataSources in the SAP OLTP System](https://help.sap.com/docs/SLH_advanced_compliance_reporting_service/7a60944343e543a1ab99e9b2904dab09/e5d447257a95416190d29638a64a5dfa.html).
- Before creating ODP extractions, test the ODP source in SAP using the ABAP report RODPS_REPL_TEST to rule out and troubleshoot ODP problems in the ODP source. For more information, see [SAP Wiki: Replication test with RODPS_REPL_TEST](https://wiki.scn.sap.com/wiki/display/BI/Replication+test+with+RODPS_REPL_TEST).

Note

The ODP API 1.0 has limitations compared to ODP API 2.0, e.g., ODP API 1.0 does not support the extraction of Hierarchy DataSources. For more information, see [SAP Wiki: Limitation of ODP API 1.0](https://wiki.scn.sap.com/wiki/display/BI/Limitation+of+ODP+API+1.0).

Warning

**Missing Authorization.**\
To use the Xtract ODP component, access to the designated authority objects (RFC) in SAP must be available. Adjust [SAP Authority Objects](../setup-in-sap/sap-authority-objects/#odp) accordingly.

### Add an Xtract ODP Component

Follow the steps below to add an Xtract ODP component to your workflow:

1. Drag & drop the Xtract component to your Alteryx workflow .
1. Assign an existing SAP connection .
1. Click **[ Edit]** to open the main window of the component.

The majority of the functions of the component can be accessed in the main window.

### Look up Data Objects

1. In the main window of the component, click **[]**. The window “Operational Data Provider Lookup” opens.
1. In the field **Name**, enter the name of an extractor . Use wildcards (\*), if needed.
1. Select a *Context* . Depending on the connected SAP source system there are differences in available [Provider Contexts](provider-context/).
1. Click **[]**. Search results are displayed.
1. Select an extractor and click **[OK]** to confirm.

The application now returns to the main window of the component.

Note

To find DataSources, they have to be activated in SAP.

### Define the Xtract ODP Component

The Xtract ODP component offers the following options for data extractions:

1. In the section *Fields*, select the items you want to extract.

   Note

   TS_SEQUENCE_NUMBER is a technical primary key that can be added to the output. When working with identical data sets, the data set with the highest sequence number is the most current data set.

1. Optional: edit selections to apply (dynamic) filters. For more information, see [Edit Selections](selections/#edit-selections).

   Note

   If your data source is a Hierarchy, see [Hierarchy Segments](provider-context/#segments-to-extract) for filter options.

1. Select an [Update Mode](update-mode/), e.g., to initialize delta extractions.

1. Click **[Load live preview]** to display a live preview of the first 100 records.

1. Check the [Extraction Settings](settings/) before running the workflow.

1. Click **[OK]** to save the component.

1. Optional: Check the column name style and date conversion options in the [tool configuration](tool-configuration/) of the component.

You can now run the workflow.

Runtime parameters are are placeholders for values that are passed at runtime. They can be created in context of [Selections](../selections/).

## Create Runtime Parameters

There are two types of runtime parameters:

- [Scalar parameters](#scalar-parameters) represent a single value.
- [List parameters](#list-parameters) represent multiple values.

### Scalar Parameters

Follow the steps below to create a scalar runtime parameter:

1. In the main window of the component click **[Edit Parameters]**. The window “Edit Runtime Parameters” opens.

1. Click **[Add Scalar]** to define scalar parameters to be used as placeholders for actual values. The placeholders need to be populated with actual values at runtime.

   Tip

   Parameter0..-n is the default naming for the added parameter. You can enter a name of your choice.

1. Select one of the following data types from the drop-down menu. The data types may correlate to SAP data types.

   | Type | Description | | --- | --- | | *Text* | Can be used for any type of SAP selection field. | | *Number* | Can be used for numeric SAP selection fields. | | *Flag* | Can only be used for SAP selection fields THAT require an ‘X’ (true) or a blank ‘‘ (false) as input value. |

1. Click **[OK]** to confirm.

The runtime parameters are now available in the component.

### List Parameters

Follow the steps below to create a list runtime parameter:

1. In the main window of the component click **[Edit Parameters]**. The window “Edit Runtime Parameters” opens.

1. Click **[Add List]** to define list parameters that contain multiple values separated by commas e.g., 1,10 or “1”, “10”. The placeholders need to be populated with actual values at runtime.

   Tip

   Parameter0..-n is the default naming for the added parameter. You can enter a name of your choice.

1. Click **[OK]** to confirm.

The runtime parameters are now available in the component.

## Assign Runtime Parameters

Follow the steps below to assign the runtime parameters to selections.

1. In the main window of the component, click the **[Edit]** button next to the selection you want to parameterize. The window "Edit Selections" opens.
1. Add a filter to the selection, see [Selections and Filters](../selections/#edit-selections).
1. Click the icon button next to the input field to switch between static values () and runtime parameters (). If no icon button is available, [create a runtime parameter](#create-runtime-parameters).
1. Select a runtime parameter from the dropdown-list.
1. Click **[OK]** to confirm the input.

## Pass Values at Runtime

Follow the steps below to replace runtime parameters with actual values at runtime:

1. [Create and assign runtime parameters](#create-runtime-parameters) in the Xtract ODP component.
1. Close the Xtract ODP component.
1. Define the input values for the runtime parameters , e.g., single values or lists.
1. Make sure that the data type of the input values match the data type of the corresponding runtime parameter.
1. Make sure that the name of the input matches the name of the corresponding runtime parameter. The values in the input are automatically assigned to a runtime parameter by the same name.
1. Connect the input to the Xtract ODP component using the input anchor "P" .
1. Run the workflow to test if the runtime parameters are assigned correctly.

Note

Parameterization via input anchors is supported as of Xtract for Alteryx version 1.19. When using an older version of Xtract for Alteryx, parameterize Xtract components using batch macros, see [Parameterizing via Batch Macros](../../../knowledge-base/parameterization-via-batch-macros/).

This page shows how to use the Provider Contexts of the Xtract ODP component. The Xtract ODP component supports the following Provider Contexts:

| Provider Context | SAP Source Objects | | --- | --- | | ABAP Core Data Services \[[ABAP_CDS](#abap-cds-views)\] | - CDS Views | | SAP NetWeaver Business Warehouse or BW4/HANA \[[BW](#bw-infoproviders)\] | **BW/4HANA:** - DSO / aDSO - CompositeProvider - InfoObjects - Query as InfoProvider **BW systems:** - CompositeProvider - InfoCubes - Semantically partitioned objects - HybridProviders - MultiProviders - InfoSets | | SAP HANA Information Views \[[HANA](#hana-views)\] | - Analysis Views - Calculation Views - Associated Attribute Views | | DataSources/Extractors \[[SAPI](#extractors)\] | - DataSources and Extractors | | SAP LT Queue Alias \[[SLT~your_queue_alias](#slt-server)\] | - SAP Tables - Cluster tables - Pool tables |

## ABAP CDS Views

According to the Core Data Service (CDS) concept, data models based on CDS serve as central definitions that can be used in many different domains, such as transactional and analytical applications.

CDS is defined using an SQL-based data definition language (DDL). DLL leverages the standard SQL with several additional concepts, such as associations, which define the relationships between CDS views, and annotations that direct the domain-specific use of CDS artifacts.

### Available CDS

There are two types of CDS available:

- HANA CDS (defined in XS engine)
- ABAP CDS

For each ABAP CDS entity defined in the DDL source code, an SQL view is generated in the ABAP Dictionary. The same way as the views created with Dictionary tools (transaction SE11), ABAP CDS entities can be accessed in ABAP using Open SQL statements.

CDS is important for SAP application development. For example, S/4HANA uses CDS to provide both core transactional functionality as well as analytical content for reporting. In BW/4 HANA, ABAP based CDS views can be used for data extraction.

Two possible use cases for CDS:

- Direct access to a CDS view from BW/4 HANA
- Delta extraction from a CDS view in S/4 HANA to BW

CDS Views support Full and Delta Extraction.

### Replace BW Extractors with CDS Views in S/4HANA

In majority of cases traditional BW extractors can be used to extract data from an S/4HANA systems. Due to simplifications in the S/4HANA system, several extractors are now deprecated or can no longer be used in a usual manner. To use the deprecated or altered extractors, SAP may deliver extraction relevant (via the analytical annotations) CDS Views.

### Use ABAP CDS Views

Note

To find an ABAP CDS view it must have the following Annotation: `@Analytics.dataExtraction.Enabled: true`. If the source SAP system is not on a HANA DB, an additional Annotation is needed: `@Analytics.dataCategory: #CUBE/#FACT/#DIMENSION`.

Things that need to be considered when using BW InfoProviders:

1. When looking up ABAP CDS Views in the Xtract ODP component, make sure to select the correct context.
1. When the delta load is available for the source object in the SAP source system, the **Delta Update** option is available in the Xtract ODP component.
1. Click **[Load live preview]** to preview the data without running an extraction.

## BW InfoProviders

The Operational Data Provisioning (ODP) framework allows you to extract data from the InfoProviders in your source BW and BW/4 HANA systems. Available InfoProvider types are dependent on your source BW and BW/4 HANA system.

### Available InfoProviders

- **Available InfoProviders in SAP BW∕4HANA**

  ______________________________________________________________________

  - CompositeProvider - object type HCPR (full extraction)
  - DataStore objects (with delta extraction)
    - InfoObjects
    - Master data
    - Texts
    - Hierarchies
  - Query as InfoProvider

- **Additional InfoProviders in BW Systems**

  ______________________________________________________________________

  - CompositeProvider - object type HCPR (full extraction)
  - InfoCubes (with delta extraction)
  - Semantically partitioned objects
  - HybridProviders
  - MultiProviders
  - InfoSets

### Use BW InfoProviders

Things that need to be considered when using BW InfoProviders:

1. When looking up BW InfoProviders in the Xtract ODP component, make sure to select the correct context.
1. When the delta load is available for the source object in the SAP source system, the **Delta Update** option is available in the Xtract ODP component.
1. Click **[Load live preview]** to preview the data without running an extraction.

## Extractors

The Xtract ODP component can be used to extract data from Business Content DataSource (Extractors). The majority of DataSources, including generic (custom) DataSources, can be released for Operational Data Provisioning.

The Xtract ODP component does not change the implementation of application extractors. All features and capabilities remain unchanged.

An extractor (in ERP or S/4 HANA) is an encapsulated business object, representing multiple source tables already in the source system

### Available Extractors

- Transactional data
- Master data
- Text data
- Hierarchy data

There are standard delta extraction methods available for master data and transaction data.

### Use Extractors

Things that need to be considered when using Extractors:

- DataSources have to be activated in SAP, see [SAP Help: Set Up and Activate DataSources](https://help.sap.com/viewer/7a60944343e543a1ab99e9b2904dab09/CLOUD/en-US/e5d447257a95416190d29638a64a5dfa.html).
- When looking up DataSources or Extractors, make sure to select the correct context.
- If delta load is available for the source object in the SAP source system, the **Delta Update** option is available in the Xtract ODP component.
- If the DataSource is a Hierarchy, there are additional settings, see [Hierarchies](#hierarchies).

### Hierarchies

If the selected source object is of type Hierarchy, the window "Select Hierarchy" opens.

1. Select a Hierarchy from the list of Hierarchies in the "Select Hierarchy" window.
1. Confirm your selection with **[OK]**.\
   The name of the selected Hierarchy is displayed under *Selected Hierarchy* .
1. Select which segments to extract .

#### Segment(s) to extract

Hierarchies are divided into segments by the API. Choose which segments of the Hierarchy to extract . The selected data is displayed in the *Fields* section.

| Option | Description | | --- | --- | | **Merges** | All segments contain the field Node ID. Using the Node ID *Merges* automatically combines all 3 segments. | | **Elements** | The segment *Elements* contains information about the elements of the Hierarchy e.g., name, parent, child, etc. | | **Texts** | The segment *Texts* contains the description texts of the *Elements*. The language of the descriptions depends on the language settings of the SAP connection. | | **Intervals** | The segment *Intervals* contains additional information if an element is an interval. In ODP no TO and FROM columns are displayed, see [SAP Note 3090500](https://launchpad.support.sap.com/#/notes/3090500). |

Note

Hierarchies can be passed as runtime parameters at runtime.

## HANA Views

Operational Data Provisioning (ODP) can be used to connect SAP HANA database of an SAP ABAP source system. The connection is provided via RFC.

### Available HANA Views:

- Analysis Views
- Calculation Views
- Associated Attribute Views

### Use HANA Views

Things that need to be considered when using HANA Views:

1. When looking up HANA Views in the Xtract ODP component, make sure to select the correct context.
1. When the delta load is available for the source object in the SAP source system, the **Delta Update** option is available in the Xtract ODP component.
1. Click **[Load live preview]** to preview the data without running an extraction.

## SLT Server

The Operational Data Provisioning (ODP) framework allows you to extract tables and simple views from SAP HANA systems via an SAP Landscape Transformation Replication Server (SLT). The SLT server is a trigger-based CDC solution that can replicate SAP tables and views and make them available as delta extracts.

### Available Tables

- Regular SAP tables
- Cluster tables
- Pool tables

### Requirements

The SLT server context requires an SAP Landscape Transformation Replication Server (SLT) that is set up for ODP, see [SAP Help: Transferring Data from SLT Using Operational Data Provisioning](https://help.sap.com/docs/SAP_NETWEAVER_750/ccc9cdbdc6cd4eceaf1e5485b1bf8f4b/6ca2eb9870c049159de25831d3269f3f.html?locale=en-US).

The following requirements apply to the SLT server:

- Minimum release version of the SLT server:
  - Add-On DMIS 2011 SP05
  - SAP NetWeaver 7.3 SPS10, 7.31 SPS09 or 7.4 SPS04 (ODP infrastructure)
- Add-On DMIS_2011 SP03/SP04 or higher or 2010 SP08/SP09 is installed in the SAP source system.
- The following SAP Notes are published in the SAP source system:
  - SAP Note 1863476
  - SAP Note 1817467 when using Add-On DMIS 2011 SP05

### Use SLT Server

Consider the following when using an SLT server:

1. When looking up data via an SLT server, make sure to select the correct context.
1. A live preview of the data is not available in the SLT server context.

For more information on SLT servers, see [SAP Help: Transferring Data from SLT Using Operational Data Provisioning](https://help.sap.com/docs/SAP_NETWEAVER_750/ccc9cdbdc6cd4eceaf1e5485b1bf8f4b/6ca2eb9870c049159de25831d3269f3f.html?locale=en-US) or download the [SLT-Performance-Guide (Nov 2022)](../../../assets/files/SLT-Performance-Guide_Nov_2022.pdf).

This page shows how to filter the data that is extracted by the Xtract ODP component. Selections limit the result set of the Xtract ODP component to extract only records that match the selection.

### Edit Selections

Follow the steps below to edit selection fields and filter data:

1. In the subsection *Fields*, click **Edit** next to the field you want to edit. The window “Edit selection” opens.

1. Click **[Single]**, **[Range]** or **[List]** to add a corresponding filter, see [Filter Options](#filter-options).

1. In the column **Sign** , select *Include* to add the filtered data to the output or select *Exclude* to remove the filtered data from the output.

1. In the column **Option** , select an operator, see [Filter Options](#filter-options).

1. In the column **Value**, enter values directly into the input fields **Low** and **High** or assign existing [runtime parameters](../edit-runtime-parameters/) to the selection fields .

   Note

   When runtime parameters are available, you can use the icon button next to the input field to switch between static values () and runtime parameters ().

1. Click **[OK]** to confirm your input.

1. Click **[Load live preview]** in the main window of the component to check the result of your selection. If runtime parameters are defined, you are prompted to populate the parameters with actual values.

The number of defined filters is displayed in square brackets next to the **Edit** option.

### Filter Options

The Xtract ODP component offers the following filter options:

| Type | Operator | Description | | --- | --- | --- | | Single | | Compare data to a single specified value. | | | *(not) like pattern* | True if data values do (not) contain to the specified value. Not not all ODP contexts and data sources support this option. | | | *(not) equal to* | True if data is (not) equal to the specified value. | | | *at least* | True if data is greater than or equal to the specified value. | | | *more than* | True if data is greater than the specified value. | | | *at most* | True if data is less than or equal to the specified value. | | | *less than* | True if data is less than the specified value. | | Range | | Check if the data is (not) within a specified range of values. | | | *(not) between* | True if data values do (not) lie between the 2 specified values. | | List | | Check if the data is part of a specified list of values. | | | *element of* | True if data values are part of the list. |

### Data Format

Use the following internal SAP representation for input:

- Date: The date 01.01.1999 has the internal representation 19990101 (YYYYMMDD).
- Year period: The year period 001.1999 has the internal representation 1999001 (YYYYPPP).
- Numbers: Numbers must contain the leading zeros, e.g., customer number 1000 has the internal representation 0000001000.

Warning

**Values accept only the internal SAP representation.**\
Input that does not use the internal SAP representation results in error messages. Use the internal SAP representation. Example:

```text
ERPConnect.ABAPProgramException: RfcInvoke failed(RFC_ABAP_MESSAGE): Enter date in the format \_.\_.\_

```

This page contains an overview of the extraction settings in the Xtract ODP component.\
To open the extraction settings, click ****[Extraction Settings]**** in the main window of the component.

### Extraction Settings

#### Package Size

The extracted data is split into packages of the defined size. The default package size is 14400000 bytes. When the package size is set to 0, SAP uses the default ODP packaging size.

Make sure that your SAP version includes the necessary notes, see [Prerequisites](../#prerequisites).

#### Adjust Currency Decimals

The default number of decimal places for a currency in the SAP database is 2 decimals. Currencies that do not have decimals are also stored in this format, e.g. JPY, VND, KRW, etc.

Example:

| Currency | Actual Amount | Amount stored in SAP database | | --- | --- | --- | | JPY | 100 | 1.00 | | KRW | 10000 | 100.00 |

When extracting currencies with no decimals, the amount stored in SAP is returned e.g., 100 JPY are extracted as 1.00. To correct the decimal placement of the extracted data, activate **Adjust Currency Decimals**. If **Adjust Currency Decimals** is active, currencies without decimals are multiplied by a factor that balances out the decimals.

**Adjust Currency Decimals** also requires the extraction of the corresponding CURRENCY field that can be used as a reference for the multiplication factor. Use the **[Load live preview]** function to find the correct currency field/s.

- If the currency field is part of the table, add it to the output.
- If the currency field is in another table, join the tables.
- If the reference is not part of a table, **Adjust Currency Decimals** cannot be used.

Note

The multiplication factor used in *Adjust Currency Decimals* is determined by the SAP currency table TCURX. To access the table, the following SAP Authority objects must be set in SAP: *S_TABU_NAM ACTVT=03; TABLE=TCURX*.

This page contains a description of the "Show active subscriptions" menu in the Xtract ODP component. To open the menu, click **Show active subscriptions** in the main window of the component.

### Show Active Subscriptions

The Xtract ODP component acts as a subscriber (consumer) to [data providers](../provider-context/) to extract data from the data provider. The window "Delta Subscriptions for product" displays details about subscribers.

| Column Name | Description | | --- | --- | | Name | Technical name of all subscriptions of a specific Theobald Software Xtract product (e.g., Xtract Universal). | | Process | Technical name of a subscription | | R. (number of requests) | Number of executed delta requests | | Last request | Timestamp of the last delta request |

To delete a subscription, click **[]** on the right side of the window.

Tip

The information displayed in the "Delta Subscriptions for product" window can also be viewed in SAP transaction *ODQMON*.

This page contains an overview of the settings in the configuration menu of the Xtract ODP component. To display the configuration menu, select an Xtract ODP component in the workflow.

### About

At the top of the configuration menu, click **About** to display information about the software version and license.

### Connection

The section *Connection* of the configuration menu defines which [SAP Connection](../../sap-connection/) is used for the component.

| Button | Description | | --- | --- | | **New** | Opens the "SAP Connection Details" window to create a new SAP connection. For more information, see [Knowledge Base Article: SAP Connection using the Xtract for Alteryx GUI](../../../knowledge-base/sap-connection-using-xfa-gui/). | | **Edit** | Opens the "SAP Connection Details" window to edit the selected SAP connection. | | **Delete** | Deletes the selected SAP connection. |

### Selected Extraction

The section *Selected Extraction* of the configuration menu displays the description and name of the primary SAP object that is used in the component.

| Button | Description | | --- | --- | | **Edit** | Opens the main window of the Xtract ODP component. The majority of the functions of the Xtract ODP component can be accessed using the main window. |

### Column Name Style

Defines the style of the column name. Following options are available:

| Option | Description | | --- | --- | | *Code* | The SAP technical column name is used as column name in the destination e.g., MAKTX. | | *PrefixedCode* | The SAP technical column name is prefixed by SAP object name and the tilde character e.g., MAKT~MAKTX | | *CodeAndText* | The SAP technical column name and the SAP description separated by an underscore are used as column name in the destination e.g., MAKTX_Material Description (Short Text). | | *TextAndCode* | The SAP description and the SAP technical column name description separated by an underscore are used as column name in the destination e.g., Material Description (Short Text)\_MAKTX. | | *Text* | The SAP description is used as column name in the destination e.g., Material Description (Short Text). |

### SAP Date Conversion

When this option is active, the following date conversions are applied:

- *Replacement for invalid dates*
- *Replacement for 0000XXXX*
- *Replacement for 9999XXXX*

#### Replacement for invalid dates

Replaces an invalid date format, e.g., *20190132* (January 32nd 2019). Enter a replacement value for invalid SAP dates in the format yyyy-mm-dd. The default value is *NULL*.

#### Replacement for 0000XXXX

Replaces SAP dates that contain the year 9999, e.g., *99990101* (January 1st 9999). Enter a replacement value in the format yyyy-mm-dd. The value NULL is supported. The default value is *1970-01-01*.

#### Replacement for 9999XXXX

Replaces SAP dates that contain the year ‘9999’, e.g., ‘99990101’ (January 1st 9999). Enter a replacement value in the format yyyy-mm-dd. The value NULL is supported. The default value is *2099-12-31*.

The Xtract ODP component can be used for delta extractions. This means that only recently added or changed data is extracted, instead of a full load. The data that is extracted is defined by the **Update Mode** setting in the main window of the component.

### Update Modes

#### Full update

Extracts all data (full mode).

#### Delta update

Note

The **Delta update** option is ready for input only if the ODP provider in the SAP source system supports delta updates.

Runs a delta initialization, if no delta initialization is available for the selected subscriber. Runs a delta update, if there is a delta initialization for the selected subscriber. A delta update only extracts data that was added or changed on the SAP system since the last delta request.

- **Extract data**\
  Allows extracting data when running a delta initialization. Leaving this checkbox unchecked runs a delta initialization without extracting data.
- **Auto-sync subscription**\
  Allows deletion of the existing subscription and creates a new subscription, if required. Each extraction has an internal ID, which is part of the subscriber. If you change the filter of an extraction after the delta initialization, the *Auto-sync subscription* option automatically deletes the existing subscription and creates a new one. A subscription is deleted, if the error message "Illegal change in selection parameters" returns from the SAP system. To delete subscriptions manually, see [Subscriptions](../subscriptions/).

#### Delta recovery

Re-runs the last delta update.

#### Direct read (without ODQ)

Directly reads all available data, bypassing the ODQ (Operational Delta Queue). Direct read is the only update mode that supports data aggregation functions (*Maximum*, *Minimum* and *Sum*).

This page shows how to use the Xtract ODP (OData) component.\
The Xtract ODP (OData) component can be used to extract ODP-based data via OData services.

Note

As the use of the RFC modules of the ODP Data Replication API is prohibited by SAP ([SAP Note 3255746](https://me.sap.com/notesLatestChanges/0003255746/E/diff)), the Xtract ODP (OData) component is the recommended tool for extracting ODP data.

### About ODP via OData

Open Data Protocol (OData) is a web protocol for querying and updating data. OData can be used to access the [Open Data Provisioning (ODP)](../odp/#about-odp) framework and extract ODP data, e.g., Hierarchies, Tables, Views, DataSources, etc.

To extract ODP data via OData, a corresponding OData service is required. The data model of the service specifies, which data sets are accessible and how the data is structured. Once the service is registered in the SAP Gateway system, Xtract for Alteryx can consume the service.

For more information, see [SAP Help: ODP-Based Data Extraction via OData](https://help.sap.com/doc/saphelp_nw75/7.5.5/en-US/11/853413cf124dde91925284133c007d/frameset.htm).

Tip

For information on how to create OData services that provide ODP based data, refer to the [Knowledge Base Article: Create OData Services using the SAP Gateway Builder](../../knowledge-base/create-odata-services-using-the-sap-gateway-builder/).

### Prerequisites

- Alteryx Designer version 2022.3 or higher. To use of Xtract ODP (OData) access to the Alteryx **Data Connection Manager (DCM)**, introduced in Alteryx Designer version 2022.3.
- OData services for ODP extractions are available in the SAP system, see [SAP Help: Generating a Service for Extracting ODP Data via OData](https://help.sap.com/doc/saphelp_nw75/7.5.5/en-US/69/b481859ef34bab9cc7d449e6fff7b6/frameset.htm).
- To extract a DataSource, the DataSource is activated in SAP, see [SAP Help: Set Up and Activate DataSources](https://help.sap.com/docs/SLH_advanced_compliance_reporting_service/7a60944343e543a1ab99e9b2904dab09/e5d447257a95416190d29638a64a5dfa.html).
- Before creating ODP (OData) extractions, test the ODP source in SAP using the ABAP report RODPS_REPL_TEST to rule out and troubleshoot ODP problems in the ODP source. For more information, see [SAP Wiki: Replication test with RODPS_REPL_TEST](https://help.sap.com/docs/SUPPORT_CONTENT/bwdabc/3361385256.html).

#### Supported Features

- All available [ODP contexts](../odp/provider-context/) of an SAP system are accessible.
- Delta extractions (with initial full load) if the ODP data source supports deltas, see [Subscriptions](subscriptions/).
- Data packaging for large amounts of data, see [Package Size](settings/#package-size).
- Selections to filter the data before extraction, see [Selections](selections/).

#### Limitations

Delta subscriptions are limited to one SAP user per service. The ODP framework has to be exposed in multiple different services for a single user to have multiple delta subscriptions.

### SAP Connection for OData Access

Xtract ODP (OData) requires a generic **Download** data source to access the OData protocol of an SAP system. Follow the steps below to create the data source:

1. In the main menu of the Alteryx Designer navigate to **File > Manage Connections**. The window "Connection Manager" opens.
1. In the tab *Data Sources* click **[New]** to create a new data source.
1. Select the **Download** technology to create a URL data source.
1. Enter the Base URL of your SAP system, e.g., `http://sap-erp-as05.example.com:50000`. The URL can be requested from the SAP Basis team.
1. Click **[Save]** to save the SAP connection. The subsection *Connection* opens.
1. In the subsection *Connection* select the authentication method *Username and password*.
1. Select an existing credential that contains the name and password of an SAP dialog user. If no credentials exist, select *Create new Credential* to create a new credential.
1. Click **[Link] / [Create and link]** to link the credential to the connection.

The SAP connection is now available for selection in the Xtract ODP (OData) component.

### Add an Xtract ODP (OData) Component

Follow the steps below to add an Xtract ODP (OData) component to your workflow:

1. Drag & drop the Xtract component to your Alteryx workflow .
1. Assign an existing SAP connection .
1. Click **[ Edit]** to open the main window of the component.

The majority of the functions of the component can be accessed in the main window.

### Look Up OData Services

1. In the main window of the component, click **[]**. The window “Service Selection” opens.

1. In the field **Search pattern** , enter one of the following characteristics:

   - name of an OData service
   - description of an OData service
   - name of the entity inside the OData service

   Use wildcards (\*), if needed.

1. Click **[Search]** . Search results are displayed.

1. Select an OData service and click **[OK]** to confirm.

The application now returns to the main window of the component.

Note

To find DataSources, they have to be activated in SAP.

### Define the Xtract ODP (OData) Component

The Xtract ODP (OData) component offers the following options for data extractions:

1. In the section *Fields*, select the items you want to extract.
1. Optional: Edit a selection you want to change or dynamize. For more information, see [Edit Selections](selections/#edit-selections).
1. Optional: Activate the option **Delta / Change tracking** to initialize delta extractions. For more information, see [Subscriptions](subscriptions/).
1. Click **[Load live preview]** to display a live preview of the first 100 records.
1. Check the [Extraction Settings](settings/) before running the workflow.
1. Click **[OK]** to save the component.

You can now run the workflow.

Runtime parameters are are placeholders for values that are passed at runtime. They can be created in context of [Selections](../selections/).

## Create Runtime Parameters

There are two types of runtime parameters:

- [Scalar parameters](#scalar-parameters) represent a single value.
- [List parameters](#list-parameters) represent multiple values.

### Scalar Parameters

Follow the steps below to create a scalar runtime parameter:

1. In the main window of the component click **[Edit Parameters]**. The window “Edit Runtime Parameters” opens.

1. Click **[Add Scalar]** to define scalar parameters to be used as placeholders for actual values. The placeholders need to be populated with actual values at runtime.

   Tip

   Parameter0..-n is the default naming for the added parameter. You can enter a name of your choice.

1. Select one of the following data types from the drop-down menu. The data types may correlate to SAP data types.

   | Type | Description | | --- | --- | | *Text* | Can be used for any type of SAP selection field. | | *Number* | Can be used for numeric SAP selection fields. | | *Flag* | Can only be used for SAP selection fields THAT require an ‘X’ (true) or a blank ‘‘ (false) as input value. |

1. Click **[OK]** to confirm.

The runtime parameters are now available in the component.

### List Parameters

Follow the steps below to create a list runtime parameter:

1. In the main window of the component click **[Edit Parameters]**. The window “Edit Runtime Parameters” opens.

1. Click **[Add List]** to define list parameters that contain multiple values separated by commas e.g., 1,10 or “1”, “10”. The placeholders need to be populated with actual values at runtime.

   Tip

   Parameter0..-n is the default naming for the added parameter. You can enter a name of your choice.

1. Click **[OK]** to confirm.

The runtime parameters are now available in the component.

## Assign Runtime Parameters

Follow the steps below to assign the runtime parameters to selections.

1. In the main window of the component, click the **[Edit]** button next to the selection you want to parameterize. The window "Edit Selections" opens.
1. Select a filter option, see [Edit Selections](../selections/#edit-selections).
1. Click the icon button next to the input field to switch between static values () and runtime parameters (). If no icon button is available, [create a runtime parameter](#create-runtime-parameters).
1. Select a runtime parameter from the dropdown-list.
1. Click **[OK]** to confirm the input.

## Pass Values at Runtime

Follow the steps below to replace runtime parameters with actual values at runtime:

1. [Create and assign runtime parameters](#create-runtime-parameters) in the Xtract ODP (OData) component.
1. Close the Xtract ODP (OData) component.
1. Define the input values for the runtime parameters , e.g., single values or lists.
1. Make sure that the data type of the input values match the data type of the corresponding runtime parameter.
1. Make sure that the name of the input matches the name of the corresponding runtime parameter. The values in the input are automatically assigned to a runtime parameter by the same name.
1. Connect the input to the Xtract ODP (OData) component using the input anchor "P" .
1. Run the workflow to test if the runtime parameters are assigned correctly.

Note

Parameterization via input anchors is supported as of Xtract for Alteryx version 1.19. When using an older version of Xtract for Alteryx, parameterize Xtract components using batch macros, see [Parameterizing via Batch Macros](../../../knowledge-base/parameterization-via-batch-macros/).

This page shows how to filter the data that is extracted by the Xtract ODP (OData) component. Selections limit the result set of the Xtract ODP (OData) component to extract only records that match the selection.

### Edit Selections

Follow the steps below to edit selection fields and filter data:

1. In the subsection Fields, click **Edit** next to the field you want to edit. The window “Edit selection” opens.

1. Select one of the following filter types:

   - **Single** : only extract data that equals a single specified value.
   - **Interval**: only extract data that lies within a specified range of values.

1. Enter values directly into the input fields or assign existing [runtime parameters](../edit-runtime-parameters/) to the selection.

   Note

   When runtime parameters are available, you can use the icon button next to the input field to switch between static values () and runtime parameters ().

1. Click **[OK]** to confirm your input.

1. Click **[Load live preview]** in the main window of the component to check the result of your selection. If runtime parameters are defined, you are prompted to populate the parameters with actual values.

When a filter is defined, the filter statement is displayed next to the **Edit** option.

### Data Format

Use the following internal SAP representation for input:

- Date: The date 01.01.1999 has the internal representation 19990101 (YYYYMMDD).
- Year period: The year period 001.1999 has the internal representation 1999001 (YYYYPPP).
- Numbers: Numbers must contain the leading zeros, e.g., customer number 1000 has the internal representation 0000001000.

Warning

**Values accept only the internal SAP representation.**\
Input that does not use the internal SAP representation results in error messages. Use the internal SAP representation. Example:

```text
ERPConnect.ABAPProgramException: RfcInvoke failed(RFC_ABAP_MESSAGE): Enter date in the format \_.\_.\_

```

This page contains an overview of the extraction settings in the Xtract ODP (OData) component.\
To open the extraction settings, click ****[Extraction Settings]**** in the main window of the component.

### Extraction Settings

#### Package Size

The extracted data is split into packages of the defined size. The default value is 50000 lines.\
A package size between 20000 and 50000 is advisable for large amounts of data. 0 means no packaging. Not using packaging can lead to an RFC timeout for large data extractions.

Warning

**RFC_ERROR_SYSTEM_FAILURE - No more storage space available for extending an internal table**\
To avoid a memory overflow on the SAP source system and to avoid huge overheads, choose a package size that suits your memory capacity.

The Xtract ODP (OData) component acts as a subscriber to data providers to extract delta data from the data provider.

### Subscribe to a Data provider

To initialize delta extractions, activate the checkbox **Delta / Change tracking** and run the workflow once. The first run extracts all the data that matches the set selection criteria. After the initialization, the Xtract ODP (OData) component only extracts data added or changed on the SAP system since the last run.

Tip

Use SAP transaction *ODQMON* to display information about active subscribers in SAP.

#### Limitations

Delta subscriptions are limited to one SAP user per service. The ODP framework has to be exposed in multiple different services for a single user to have multiple delta subscriptions.

### Terminate Subscriptions

To terminate a subscription in Xtract for Alteryx, click **[Terminate subscription]** and deactivate the checkbox **Delta / Change tracking** .

This page contains an overview of the settings in the configuration menu of the Xtract ODP (OData) component. To display the configuration menu, select an Xtract ODP (OData) component in the workflow.

### About

At the top of the configuration menu, click **About** to display information about the software version and license.

### Connection

The section *Connection* of the configuration menu defines which [SAP Connection](../#sap-connection-for-odata-access) is used for the component.

### Selected Extraction

The section *Selected Extraction* of the configuration menu displays the description and name of the primary SAP object that is used in the component.

| Button | Description | | --- | --- | | **Edit** | Opens the main window of the Xtract ODP (OData) component. The majority of the functions of the Xtract ODP (OData) component can be accessed using the main window. |

This page shows how to use the Xtract Query component.\
The Xtract Query component can be used to extract data via SAP queries.

### About SAP Queries

SAP Queries are used to access data sets in SAP, see [SAP Help - Working with Queries](https://help.sap.com/viewer/b1c834a22d05483b8a75710743b5ff26/7.51.6/en-US/0e05493bbccf41a79caed7099c82bd48.html) for more information. The SAP queries that can be used with Xtract Query component are created by the SAP transactions SQ02 and SQ01. To use a BW Query as a data source, see [BW InfoCubes and BExQueries](../bwcube/).

### Prerequisites

- A connection to an SAP system is available, see [SAP Connection](../sap-connection/).
- The SAP user has sufficient user rights, see [SAP Authority Objects](../setup-in-sap/sap-authority-objects/#query).

Warning

**Missing Authorization.**\
To use the Xtract Query component, access to the designated authority objects (RFC) in SAP must be available. Adjust [SAP Authority Objects: SAP Query](../setup-in-sap/sap-authority-objects/#query) accordingly.

### Add an Xtract Query Component

Follow the steps below to add an Xtract Query component to your workflow:

1. Drag & drop the Xtract component to your Alteryx workflow .
1. Assign an existing SAP connection .
1. Click **[ Edit]** to open the main window of the component.

The majority of the functions of the component can be accessed in the main window.

### Look up an SAP Query

1. In the main window of the component, click **[]**. The window "Query Lookup" opens.
1. Enter the name of an SAP query in the field **Query Name** or the name of a user group in the field **User group** . Use wildcards (\*) if needed.
1. Select the query work area that contains the query object . For more information, see [SAP Help: Query Areas](https://help.sap.com/doc/saphelp_nw74/7.4.16/en-us/4e/3bdad0b8503b0fe10000000a42189e/frameset.htm).
1. Click **[]**. Search results are displayed.
1. Select a query and click **[OK]**.

The application returns to the main window of the component.

### Define the Xtract Query Component

The Xtract Query component offers the following options for query extractions:

1. If the SAP query has variants, select a variant from the drop-down-list *Variant*. For more information, see [Choose a Variant](variants-and-selections/#choose-a-variant).
1. In the section *Selection Screen*, edit a selection criterion you want to change or dynamize . For more information, see [Edit Selections](variants-and-selections/#edit-selections).
1. Check the [Extraction Settings](settings/) before running the workflow.
1. Click **[OK]** to save the component.

You can now run the workflow.

Runtime parameters are are placeholders for values that are passed at runtime. They can be created in context of [Selections](../variants-and-selections/#edit-selections).

## Create Runtime Parameters

There are two types of runtime parameters:

- [Scalar parameters](#scalar-parameters) represent a single value.
- [List parameters](#list-parameters) represent multiple values.

### Scalar Parameters

Follow the steps below to create a scalar runtime parameter:

1. In the main window of the component click **[Edit Parameters]**. The window “Edit Runtime Parameters” opens.

1. Click **[Add Scalar]** to define scalar parameters to be used as placeholders for actual values. The placeholders need to be populated with actual values at runtime.

   Tip

   Parameter0..-n is the default naming for the added parameter. You can enter a name of your choice.

1. Select one of the following data types from the drop-down menu. The data types may correlate to SAP data types.

   | Type | Description | | --- | --- | | *Text* | Can be used for any type of SAP selection field. | | *Number* | Can be used for numeric SAP selection fields. | | *Flag* | Can only be used for SAP selection fields THAT require an ‘X’ (true) or a blank ‘‘ (false) as input value. |

1. Click **[OK]** to confirm.

The runtime parameters are now available in the component.

### List Parameters

Follow the steps below to create a list runtime parameter:

1. In the main window of the component click **[Edit Parameters]**. The window “Edit Runtime Parameters” opens.

1. Click **[Add List]** to define list parameters that contain multiple values separated by commas e.g., 1,10 or “1”, “10”. The placeholders need to be populated with actual values at runtime.

   Tip

   Parameter0..-n is the default naming for the added parameter. You can enter a name of your choice.

1. Click **[OK]** to confirm.

The runtime parameters are now available in the component.

## Assign Runtime Parameters

Follow the steps below to assign the runtime parameters to selections.

1. In the main window of the component, click the **[Edit]** button next to the selection you want to parameterize. The window "Edit Selections" opens.
1. Add a filter to the selection, see [Edit Selections](../variants-and-selections/#edit-selections).
1. Click the icon button next to the input field to switch between static values () and runtime parameters (). If no icon button is available, [create a runtime parameter](#create-runtime-parameters).
1. Select a runtime parameter from the dropdown-list.
1. Click **[OK]** to confirm the input.

## Pass Values at Runtime

Follow the steps below to replace runtime parameters with actual values at runtime:

1. [Create and assign runtime parameters](#create-runtime-parameters) in the Xtract Query component.
1. Close the Xtract Query component.
1. Define the input values for the runtime parameters , e.g., single values or lists.
1. Make sure that the data type of the input values match the data type of the corresponding runtime parameter.
1. Make sure that the name of the input matches the name of the corresponding runtime parameter. The values in the input are automatically assigned to a runtime parameter by the same name.
1. Connect the input to the Xtract Query component using the input anchor "P" .
1. Run the workflow to test if the runtime parameters are assigned correctly.

Note

Parameterization via input anchors is supported as of Xtract for Alteryx version 1.19. When using an older version of Xtract for Alteryx, parameterize Xtract components using batch macros, see [Parameterizing via Batch Macros](../../../knowledge-base/parameterization-via-batch-macros/).

This page contains an overview of the extraction settings in the Xtract Query component.\
To open the extraction settings, click ****[Extraction Settings]**** in the main window of the component.

### Extraction Settings

#### Max Rows

Specifies the maximum number of extracted records. 0 extracts all data. You can use this option to perform tests with a small amount of data by entering a row limit of e.g., 1000.

#### Treat 'No Data Selected' as Error

If this option is active, an error message is displayed when there is no data to be extracted.

This page contains an overview of the settings in the configuration menu of the Xtract Query component. To display the configuration menu, select an Xtract Query component in the workflow.

### About

At the top of the configuration menu, click **About** to display information about the software version and license.

### Connection

The section *Connection* of the configuration menu defines which [SAP Connection](../../sap-connection/) is used for the component.

| Button | Description | | --- | --- | | **New** | Opens the "SAP Connection Details" window to create a new SAP connection. For more information, see [Knowledge Base Article: SAP Connection using the Xtract for Alteryx GUI](../../../knowledge-base/sap-connection-using-xfa-gui/). | | **Edit** | Opens the "SAP Connection Details" window to edit the selected SAP connection. | | **Delete** | Deletes the selected SAP connection. |

### Selected Extraction

The section *Selected Extraction* of the configuration menu displays the description and name of the primary SAP object that is used in the component.

| Button | Description | | --- | --- | | **Edit** | Opens the main window of the Xtract Query component. The majority of the functions of the Xtract Query component can be accessed using the main window. |

Most queries allow entering selections before query execution. Selections limit the result set of the query to extract only records that match the selection.\
A selection variant can be created in SAP, see [SAP Help: Query Variants](https://help.sap.com/docs/SAP_NETWEAVER_750/40d2cb3a4f9249d58e9bbc95f4dbaff8/4e535406a32c4f49e10000000a42189e.html?locale=en-US). The purpose of a variant is to minimize the necessity to enter selections when running a query.

Note

Manual selections and variants can be combined. Manual selections overwrite any selections in the variant.

### Choose a Variant

Choose a variant from the drop-down-list *Variant*.\
When creating a new variant in SAP after creating the extraction, click **[]** to load the new variant.

The selections of the variant are **not** displayed in the *Selection Screen* section of the window. To see the definition of a variant, open the variant in SAP.

### Edit Selections

The *Selection Screen* in the main window of the component corresponds to the input screen in SAP.

Note

Some selection fields only have a technical name and no description. To understand which field corresponds to a field in SAP, open the input screen in SAP. Click on a selection field and press the function key `F1` to display the technical name of the selection field.

Follow the steps below to edit selection fields and filter data:

1. In the subsection *Selection Screen*, click **[Edit]** next to the field you want to edit. The window “Edit selection” opens.

1. Click **[Single]**, **[Range]** or **[List]** to add a corresponding filter, see [Filter Options](#filter-options).

1. In the column **Sign** , select *Include* to add the filtered data to the output or select *Exclude* to remove the filtered data from the output.

1. In the column **Option** , select an operator, see [Filter Options](#filter-options).

1. In the column **Value**, enter values directly into the input fields **Low** and **High** or assign existing [runtime parameters](../edit-runtime-parameters/) to the selection fields .

   Note

   When runtime parameters are available, you can use the icon button next to the input field to switch between static values () and runtime parameters ().

1. Click **[OK]** to confirm your input.

Note that edited selection fields overwrite the selection fields in the variant.

Tip

If you use multiple selection parameters, it is more efficient to create a variant in SAP.

### Filter Options

The Xtract Query component offers the following filter options:

| Type | Operator | Description | | --- | --- | --- | | Single | | Compare data to a single specified value. | | | *(not) like pattern* | True if data values do (not) contain to the specified value. | | | *(not) equal to* | True if data is (not) equal to the specified value. | | | *at least* | True if data is greater than or equal to the specified value. | | | *more than* | True if data is greater than the specified value. | | | *at most* | True if data is less than or equal to the specified value. | | | *less than* | True if data is less than the specified value. | | Range | | Check if the data is (not) within a specified range of values. | | | *(not) between* | True if data values do (not) lie between the 2 specified values. | | List | | Check if the data is part of a specified list of values. | | | *element of* | True if data values are part of the list. |

### Data Format

Use the following internal SAP representation for input:

- Date: The date 01.01.1999 has the internal representation 19990101 (YYYYMMDD).
- Year period: The year period 001.1999 has the internal representation 1999001 (YYYYPPP).
- Numbers: Numbers must contain the leading zeros, e.g., customer number 1000 has the internal representation 0000001000.

Warning

**Values accept only the internal SAP representation.**\
Input that does not use the internal SAP representation results in error messages. Use the internal SAP representation. Example:

```text
ERPConnect.ABAPProgramException: RfcInvoke failed(RFC_ABAP_MESSAGE): Enter date in the format \_.\_.\_

```

This page shows how to use the Xtract Report component.\
The Xtract Report component can be used to extract data from most standard and custom ABAP reports and SAP transactions. A report extraction is possible if the report returns a table-like structure in SAP.

### About Reports

ABAP report programs extract and present huge amounts of data for SAP business applications. SAP offers predefined standard reports that cover the basic needs of customers. They can be executed via transaction codes.

Tip

Use transaction code SAP1 to get a list of all reports for all modules.

### Custom Reports

The extraction of custom reports (Z reports) is possible if the report returns a table-like structure in SAP. Issues specific to Z reports are not included in the scope of support provided by Theobald Software.

### Prerequisites

- A connection to an SAP system is available, see [SAP Connection](../sap-connection/).
- The SAP user has sufficient user rights, see [SAP Authority Objects](../setup-in-sap/sap-authority-objects/#report).
- The custom function module `Z_XTRACT_IS_REMOTE_REPORT` is installed in your SAP system, see [Function Module for Reports](../setup-in-sap/custom-function-module-for-reports/#installation-of-z_xtract_is_remote_report). As of `Z_XTRACT_IS_REMOTE_REPORT` version 1.2 access to reports must be explicitly granted, see [Knowledge BAse Article: Authorize Access to Specific Reports](../../knowledge-base/authorize-access-to-specific-reports/).
- The report must return a table-like structure in SAP.

Warning

**Missing Authorization.**\
To use the Xtract Report component, access to the designated authority objects (RFC) in SAP must be available. Adjust [SAP Authority Objects: Report](../setup-in-sap/sap-authority-objects/#report) accordingly.

### General Workflow

The following graphic shows the general workflow of using the Xtract Report component:

### Add an Xtract Report Component

Follow the steps below to add an Xtract Report component to your workflow:

1. Drag & drop the Xtract component to your Alteryx workflow .
1. Assign an existing SAP connection .
1. Click **[ Edit]** to open the main window of the component.

The majority of the functions of the component can be accessed in the main window.

### Look up a Report or Transaction

1. In the main window of the component, click **[]**. The window “Report Lookup” opens.

1. In the field **Report Name**, enter the name of a report to extract . Use wildcards (*), if needed. Alternatively, select* *TCODE*\* to look up SAP Transaction codes.

   Tip

   In certain cases reports cannot be determined based on the TCODE. You can check the report name of a TCODE using the SAP GUI menu **System > Status...**.

1. Click **[]** . Search results are displayed.

1. Select a report and click **[OK]** to confirm.

The application now returns to the main window of the component.

### Define the Xtract Report Component

The Xtract Report component offers the following options for report extractions:

1. If the report has variants, select a variant from the drop-down-list *Variant*. For more information, see [Choose a Variant](variants-and-selections/#choose-a-variant).
1. Optional: In the section *Selection Screen*, edit a selection criterion you want to change or dynamize . For more information, see [Edit Selections](variants-and-selections/#edit-selections).
1. Click **[Load live preview]** to display a live preview of the first 100 records.
1. Optional: If your report has varying column widths, activate **Dynamic column widths and offsets**. The column widths and offsets are then adjusted dynamically at report runtime.
1. Click **[Automatically detect columns]** to execute the report based on the selected variant or selections and detect columns automatically.
1. Check if the automatically detected columns are accurate.\
   When automatic column detection is not possible, the column names, widths and offsets must be set manually, see [Define Columns manually](report-columns-define/#define-columns-manually).
1. Optional: Define row settings to remove or parse certain rows, see [Define Rows](report-rows-define/).
1. Check the [Extraction Settings](settings/) before running the workflow.
1. Click **[OK]** to save the component.

You can now run the workflow.

### Example Extraction

The depicted example shows how to set up a simple report extraction:

1. Look up report RLT10010 (Evaluation of Movements per Storage Type).
1. Select variant *VAR01*.
1. Load a live preview.
1. Automatically detect columns.
1. Remove the header (skip the first 8 rows).

______________________________________________________________________

#### Related Links

- [SAP Wiki: Types of ABAP Reports](https://wiki.scn.sap.com/wiki/display/ABAP/Types+of+Reports)
- [Knowledge Base Article: Authorize Access to Specific Reports](../../knowledge-base/authorize-access-to-specific-reports/)

Runtime parameters are are placeholders for values that are passed at runtime. They can be created in context of [Selections](../variants-and-selections/#edit-selections).

## Create Runtime Parameters

There are two types of runtime parameters:

- [Scalar parameters](#scalar-parameters) represent a single value.
- [List parameters](#list-parameters) represent multiple values.

### Scalar Parameters

Follow the steps below to create a scalar runtime parameter:

1. In the main window of the component click **[Edit Parameters]**. The window “Edit Runtime Parameters” opens.

1. Click **[Add Scalar]** to define scalar parameters to be used as placeholders for actual values. The placeholders need to be populated with actual values at runtime.

   Tip

   Parameter0..-n is the default naming for the added parameter. You can enter a name of your choice.

1. Select one of the following data types from the drop-down menu. The data types may correlate to SAP data types.

   | Type | Description | | --- | --- | | *Text* | Can be used for any type of SAP selection field. | | *Number* | Can be used for numeric SAP selection fields. | | *Flag* | Can only be used for SAP selection fields THAT require an ‘X’ (true) or a blank ‘‘ (false) as input value. |

1. Click **[OK]** to confirm.

The runtime parameters are now available in the component.

### List Parameters

Follow the steps below to create a list runtime parameter:

1. In the main window of the component click **[Edit Parameters]**. The window “Edit Runtime Parameters” opens.

1. Click **[Add List]** to define list parameters that contain multiple values separated by commas e.g., 1,10 or “1”, “10”. The placeholders need to be populated with actual values at runtime.

   Tip

   Parameter0..-n is the default naming for the added parameter. You can enter a name of your choice.

1. Click **[OK]** to confirm.

The runtime parameters are now available in the component.

## Assign Runtime Parameters

Follow the steps below to assign the runtime parameters to selections.

1. In the main window of the component, click the **[Edit]** button next to the selection you want to parameterize. The window "Edit Selections" opens.
1. Add a filter to the selection, see [Edit Selections](../variants-and-selections/#edit-selections).
1. Click the icon button next to the input field to switch between static values () and runtime parameters (). If no icon button is available, [create a runtime parameter](#create-runtime-parameters).
1. Select a runtime parameter from the dropdown-list.
1. Click **[OK]** to confirm the input.

## Pass Values at Runtime

Follow the steps below to replace runtime parameters with actual values at runtime:

1. [Create and assign runtime parameters](#create-runtime-parameters) in the Xtract Report component.
1. Close the Xtract Report component.
1. Define the input values for the runtime parameters , e.g., single values or lists.
1. Make sure that the data type of the input values match the data type of the corresponding runtime parameter.
1. Make sure that the name of the input matches the name of the corresponding runtime parameter. The values in the input are automatically assigned to a runtime parameter by the same name.
1. Connect the input to the Xtract Report component using the input anchor "P" .
1. Run the workflow to test if the runtime parameters are assigned correctly.

Note

Parameterization via input anchors is supported as of Xtract for Alteryx version 1.19. When using an older version of Xtract for Alteryx, parameterize Xtract components using batch macros, see [Parameterizing via Batch Macros](../../../knowledge-base/parameterization-via-batch-macros/).

This page shows how to define the columns in the result set of a report extraction.

A report column is defined by its name, offset and length. Per default, all columns are of data type *string*. To identify a columns, the report needs to be executed. Columns can then be identified based on the output.

Tip

At this stage, use a selection or variant that returns only a few records. This can be adapted later on.

- Certain classical ABAP reports are developed to use the pipe symbol '|' as a delimiter for the output columns. In this case the Xtract Report component can automatically identify the columns. Automatic column detection also works for most ALV reports. Example:
- For reports where the output is not separated by the pipe symbol, the columns must be identified manually. Example:

For information on how to parse rows as columns, see [Parse Header Row as New Column](../report-rows-define/#parse-header-row-as-new-column).

### Define Columns Automatically

#### Automatically detect columns

Click **[Automatically detect columns]** to execute the report based on the selected variant or selections. If they can be identified automatically, the column name, width and offset are displayed in the *Columns* section in the main window of the component.

#### Dynamic column width and offset

If this option is active, the column width and offset is adjusted dynamically at report runtime. This can be required for reports that have varying column widths depending on the report's selection criteria.

### Define Columns Manually

When automatic column detection is not possible, the column names, widths and offsets must be set manually.

1. Make sure no columns are defined yet. If columns are defines, click **[]** in the *Columns* section in the main window of the component to delete the columns.
1. Click **[Load live preview]**. The report is executed based on the selected report variant or selections. The output of the report is displayed in the *Load Preview* section.
1. To define the beginning (offset) of a column, press and hold down the left mouse button in the *Load Preview* section.
1. To define the length of a column, move the mouse pointer to the right while still holding down the left mouse button.
1. Let go of the cursor. The report column is highlighted with a green background and an entry is added to the *Columns* section.
1. To change the column name, offset and width, click in the respective fields in the *Columns* section and enter a new value.
1. Repeat steps 3 to 6 until all columns are defined.

Note

Once a column is set and highlighted with a green background, its width and offset cannot be changed via the graphics editor. Change it using the *Columns* section.

______________________________________________________________________

#### Related Links

- [Knowledge Base Article: Parse Reports in Xtract for Alteryx](../../../knowledge-base/parse-reports/).

This page shows how to define the rows in the result set of a report extraction.\
The row settings are located in the tab *Skip and Parse Rows*.

### Row Settings

The Xtract Report component offers the following options to remove rows from the result set of a report extraction:

| Option | Description | | --- | --- | | [Skip rows from top](#skip-rows-from-top) | Removes the first n number of rows from the top of the report. | | [Skip rows from button](#skip-rows-from-bottom) | Removes the last n number of rows from the button of the report. | | [Skip rows by pattern](#skip-rows-from-bottom) | Uses a pattern or regular expression to remove rows that contain the pattern. | | [Skip rows by keyword](#add-row-to-skip) | Uses a keyword to remove all rows that contain the keyword. |

For more information on how to remove and parse rows to merge groups of data sets into a single data set, see [Knowledge Base Article: Parse Reports in Xtract for Alteryx](../../../knowledge-base/parse-reports/).

#### Skip rows from top

Enter the number of rows you want to skip at the beginning of the report. Some reports display meta information in the header section of the report, before the actual report body. This setting allows skipping the meta information.

#### Skip rows from bottom

Similar to *skip rows from top*. Enter the number of rows you want to skip in the footer section of the report.

#### Report rows per data row

Use this setting for ABAP reports that return two or more "physical" rows to display a single "semantic" data row. Enter the number of physical rows that represent a single data row.\
Example: Report RIEQUI20

#### Report width

Use this setting in combination with **Report rows per data row**. **Report width** defines the length of each physical row. The maximum width of extracted reports is limited to 1024 characters per row.

#### Header pattern

Enter a search pattern to detect the table header, e.g., *Created on*.\
The Xtract Report component scans the report output for this pattern and uses the row that contains this pattern as the report header. Any duplicates of the header row are removed from the result set.

Rows that contain the header pattern are displayed in a blue font in the preview section.

Tip

Alternatively, right-click the row that you want to use as a header and select **Select as header** from the context menu.

This setting is usually not required if the report's columns can be [detected automatically](../report-columns-define/#define-columns-automatically) and *Dynamic column widths and offsets* is active in the main window of the component.

#### Skip rows by pattern

Enter a search pattern. All report rows that contain the pattern are removed from the result set.\
The skip row setting can be used to skip header rows that are repeated in the output body of reports, see also [Skip rows by keyword](#skip-rows-by-keyword).\
The live preview in the Xtract Report component does not include the **Row Skip Pattern** option, because the rows are only removed after the report data is extracted from SAP.

- Regular expressions are supported.
- Multiple row skip patterns can be entered, separated by the pipe symbol "`|`", e.g., `2020|2021|-|Sum` removes all rows containing ‘2020’, ‘2021’, ‘-‘ and ‘Sum’.
- To process special symbols, add `\`before the symbol, e.g., `\*` removes rows that contain the sum symbol * .

Note

The setting *Skip rows by pattern* is usually not required if the report columns can be [detected automatically](../report-columns-define/#define-columns-automatically) and *Dynamic column widths and offsets* is checked in the Report window.

### Skip rows by keyword

Define rows that are removed from the result set of the report extraction. This option can be used to skip header rows that are repeated in the output body of reports.

#### Add Row to Skip

Click **[Add row to skip]** to define a row that is removed from the result set of the report extraction.\
Enter a unique keyword from the row you want to remove.\
Example: `**` removes all rows that contain the characters `**`.

Rows that are excluded from the result set are displayed in a gray font in the preview section.

Tip

Alternatively, right-click the row you want to remove and select **Ignore/unignore row** from the context menu.

### Parse Header Row as new Column

Define rows that are added to the result set as columns.\
This option can be used for reports that contain groups with multiple headers.

#### Add row to parse as column

Click **[Add row to parse as column]** to add a new column to the result set.\
Enter the following column properties manually or use the [parse helper](#parse-helper) to define the column properties:

| Property | Description | | --- | --- | | *Keyword* | Enter a unique keyword from the row to include it as a column in the result set. The report is scanned for rows that contain the string. The keyword search is case sensitive. | | *Name* | Enter a name for the new column. | | *Offset* | Define the beginning (offset) of the content that is written into the new column. *Example:* Enter 0 if the content for the new column is located at the start of the row. Enter 25 if the content starts 25 characters into the row. | | *Width* | Define the width of the new column. |

Tip

Alternatively, to add row to parse as column, right-click a header row you want to use as a column and select **Parse header row as new column** from the context menu.

Rows that are parsed as a column are displayed in a red font in the preview section.\
For more information, see [Knowledge Base Article: Parse Reports in Xtract for Alteryx](../../../knowledge-base/parse-reports/).

#### Parse Helper

The parse helper is a feature that helps you define properties for new columns:

1. In the subsection *Parse Header Row as new Column*, click **[Add row to parse as column]** to add a new column to the result set.

1. Click **[]** . The window "Parse Helper" opens and a new preview of the report data is fetched. This process may take several seconds to complete.

1. Under **Search keyword** enter a unique keyword from the row you want to parse as a column. Matching rows are displayed in the preview section of the window.

   Note

   The keyword search is case sensitive.

1. Make sure only header rows are displayed in the preview section. If the preview includes regular rows, edit the keyword until only header rows remain.

1. Under **New Column Name** enter a name for the new column.

1. Mark the content of the column in the preview section by pressing and dragging the mouse pointer over the length of the content.

1. Click **[OK]** to save the column properties.

The new column is added at the beginning of the report *after* running the workflow. Therefore, the new column is not included in the preview section of the component.

Rows that are parsed as a column are displayed in a red font in the preview section.

______________________________________________________________________

#### Related Links

- [Knowledge Base Article: Parse Reports in Xtract for Alteryx](../../../knowledge-base/parse-reports/).

This page contains an overview of the extraction settings in the Xtract Report component.\
To open the extraction settings, click ****[Extraction Settings]**** in the main window of the component.

### Batch Processing

#### Use Background Mode

If you choose this option, the ABAP report is executed as a batch job in SAP. Use this option for long running reports in SAP that would run into an RFC timeout when called in dialog mode. Certain reports that throw an error message when running in dialog mode can be extracted when run in background mode.

#### Background Job Timeout

Enter a time period (in seconds). The Xtract Report component polls the status of the batch job in SAP for the specified time period. If the SAP batch job is not finished by the specified time period, the extraction aborts.

#### Background Job Name

The name of the background job under which the report is run in SAP.

#### Spool Destination

Enter the name of the spool destination (printer). If the ABAP report produces an output, a spool destination is generated. The spool destination defines where the output would go if printed, e.g., LP01 or LOCL. You can display all spool requests in SAP using the SAP transaction SP01.

### Function Module

The Report component requires installation of the custom function module `Z_XTRACT_IS_REMOTE_REPORT` in your SAP system, see [Install Report Custom Function Module](../../setup-in-sap/custom-function-module-for-reports/). If you manually created the function module in your SAP system and gave it a different name, enter that name in this field. The default is `Z_XTRACT_IS_REMOTE_REPORT`.

______________________________________________________________________

#### Related Links

- [Microsoft: Regular Expressions in the Microsoft Online Help](http://msdn.microsoft.com/en-us/library/az24scfc.aspx)
- [Knowledge Base Article: Parse Reports in Xtract for Alteryx](../../../knowledge-base/parse-reports/)
- [Install Report Custom Function Module](../../setup-in-sap/custom-function-module-for-reports/)

This page contains an overview of the settings in the configuration menu of the Xtract Report component. To display the configuration menu, select an Xtract Report component in the workflow.

### About

At the top of the configuration menu, click **About** to display information about the software version and license.

### Connection

The section *Connection* of the configuration menu defines which [SAP Connection](../../sap-connection/) is used for the component.

| Button | Description | | --- | --- | | **New** | Opens the "SAP Connection Details" window to create a new SAP connection. For more information, see [Knowledge Base Article: SAP Connection using the Xtract for Alteryx GUI](../../../knowledge-base/sap-connection-using-xfa-gui/). | | **Edit** | Opens the "SAP Connection Details" window to edit the selected SAP connection. | | **Delete** | Deletes the selected SAP connection. |

### Selected Extraction

The section *Selected Extraction* of the configuration menu displays the description and name of the primary SAP object that is used in the component.

| Button | Description | | --- | --- | | **Edit** | Opens the main window of the Xtract Report component. The majority of the functions of the Xtract Report component can be accessed using the main window. |

Most reports allow entering selections before report execution. Selections limit the result set of the report to extract only records that match the selection.

In SAP a [selection variant](https://help.sap.com/docs/btp/ABAP/3353524716.html) can be created in the input screen of an ABAP report. The purpose of a variant is to save selection settings on your input screen and to minimize the necessity to enter selections when running a report.

Note

Manual selections and variants can be combined. Manual selections overwrite any selections in the variant.

### Choose a Variant

Choose a variant from the drop-down-list *Variant*.\
When creating a new variant in SAP after creating the extraction, click **[]** to load the new variant.

The selections of the variant are **not** displayed in the *Selection Screen* section of the window. To see the definition of a variant, open the variant in SAP.

### Edit Selections

The *Selection Screen* in the main window of the component corresponds to the input screen in SAP.

Note

Some selection fields only have a technical name and no description. To understand which field corresponds to a field in SAP, open the input screen in SAP. Click on a selection field and press the function key `F1` to display the technical name of the selection field.

Follow the steps below to edit selection fields and filter data:

1. In the subsection *Selection Screen*, click **[Edit]** next to the field you want to edit. The window “Edit selection” opens.

1. Click **[Single]**, **[Range]** or **[List]** to add a corresponding filter, see [Filter Options](#filter-options).

1. In the column **Sign** , select *Include* to add the filtered data to the output or select *Exclude* to remove the filtered data from the output.

1. In the column **Option** , select an operator, see [Filter Options](#filter-options).

1. In the column **Value**, enter values directly into the input fields **Low** and **High** or assign existing [runtime parameters](../edit-runtime-parameters/) to the selection fields .

   Note

   When runtime parameters are available, you can use the icon button next to the input field to switch between static values () and runtime parameters ().

1. Click **[OK]** to confirm your input.

1. Click **[Load live preview]** in the main window of the component to check the result of your selection. If runtime parameters are defined, you are prompted to populate the parameters with actual values.

Note that edited selection fields overwrite the selection fields in the variant.

Tip

If you use multiple selection parameters, it is more efficient to create a variant in SAP.

### Filter Options

The Xtract Report component offers the following filter options:

| Type | Operator | Description | | --- | --- | --- | | Single | | Compare data to a single specified value. | | | *(not) like pattern* | True if data values do (not) contain to the specified value. | | | *(not) equal to* | True if data is (not) equal to the specified value. | | | *at least* | True if data is greater than or equal to the specified value. | | | *more than* | True if data is greater than the specified value. | | | *at most* | True if data is less than or equal to the specified value. | | | *less than* | True if data is less than the specified value. | | Range | | Check if the data is (not) within a specified range of values. | | | *(not) between* | True if data values do (not) lie between the 2 specified values. | | List | | Check if the data is part of a specified list of values. | | | *element of* | True if data values are part of the list. |

### Data Format

Use the following internal SAP representation for input:

- Date: The date 01.01.1999 has the internal representation 19990101 (YYYYMMDD).
- Year period: The year period 001.1999 has the internal representation 1999001 (YYYYPPP).
- Numbers: Numbers must contain the leading zeros, e.g., customer number 1000 has the internal representation 0000001000.

Warning

**Values accept only the internal SAP representation.**\
Input that does not use the internal SAP representation results in error messages. Use the internal SAP representation. Example:

```text
ERPConnect.ABAPProgramException: RfcInvoke failed(RFC_ABAP_MESSAGE): Enter date in the format \_.\_.\_

```

______________________________________________________________________

#### Related Links

- [SAP Help: Report variants in SAP](https://help.sap.com/docs/btp/ABAP/3353524716.html)

This page shows how to connect to SAP using the [Data Connection Manager](https://help.alteryx.com/current/en/designer/tools/dcm---designer.html) (DCM) of Alteryx.\
The installation of Xtract for Alteryx includes the Xtract data source technology that connects to SAP systems.

An SAP connection is required to use any Xtract for Alteryx component.

Warning

**Missing Authorization.**\
To establish a connection to SAP, the access to general authority objects must be available. Adjust the [SAP Authority Objects](/xtract-for-alteryx/documentation/setup-in-sap/sap-authority-objects#general-authorization-objects) accordingly.

Note

The usage of the Alteryx Data Connection Manager is supported as of Alteryx Designer version 2022.3. To use the DCM, it needs to be enabled for your organization, see [Alteryx Documentation: Data Connection Manager](https://help.alteryx.com/current/en/designer/tools/dcm---designer.html). If cannot use the Alteryx Data Connection Manager, refer to the knowledge base article [Create an SAP Connection](../../knowledge-base/sap-connection-using-xfa-gui/) to create SAP connections using the Xtract for Alteryx UI.

**Supported Connection Methods**

- Connection to a single application server
- Connection to a message server (Load Balancing)

**Supported Authentication Methods**

- Plain login using SAP username and password (system or dialogue user)
- [Secure Network Communication (SNC)](snc-authentication/) using username and password via basic authentication
- [SSO with Login-Ticket](sso-with-logon-ticket/) using username and password via basic authentication

### Create an Xtract Data Source

Follow the steps below to create an Xtract data source that connects to SAP:

1. In the main menu of the Alteryx Designer navigate to **File > Manage Connections**. The window "Connection Manager" opens.
1. In the tab *Data Sources* click **[New]** to create a new data source.
1. Select the **Xtract** technology to create an Xtract data source.
1. Fill out the data source settings for your SAP system, see [Xtract Data Source Settings](settings/).
1. Click **[Save]** to save the SAP connection. The subsection *Connection* opens.
1. In the subsection *Connection* select one of the following authentication methods:
   - *Plain* uses the SAP username and password.
   - [*SNC*](snc-authentication/) uses an encrypted connection between Xtract for Alteryx and SAP with an SAP username and password.
   - [*Ticket Issuer*](sso-with-logon-ticket/) uses SAP Logon-Tickets in place of user credentials. This connection is not encrypted.
1. Select an existing credential for your SAP system or click **+ Connect Credential** to create a new credential. For more information, see [Create Credentials](#create-credentials).
1. Click **[Link]** / **[Create and link]** to link the credential to the connection. Example:

The SAP connection is now available for selection in the Xtract for Alteryx components, see [Assign an SAP Connection to Xtract Components](#assign-an-sap-connection-to-xtract-components).

### Create Credentials

Follow the steps below to create an Xtract data source that connects to SAP:

1. In the main menu of the Alteryx Designer navigate to **File > Manage Connections**. The window "Connection Manager" opens.
1. In the tab *Credentials* click **[New]** to create a new credential.
1. Enter a name for the credential and select one of the following authentication methods:
   - *Username and password* uses the SAP username and password.
   - [*SAP SNC*](snc-authentication/) uses an encrypted connection between Xtract for Alteryx and SAP with username and password.
   - [*SAP Ticket Issuer*](sso-with-logon-ticket/) uses SAP Logon-Tickets in place of user credentials. This connection is not encrypted.
1. Enter your authentication details. The depicted example uses plain authentication.
1. Click **[Save]** to save the credential.

The credential is displayed in the list of credentials.

Tip

You can link credentials to multiple data sources.

## Assign an SAP Connection to Xtract Components

1. Drag&drop an Xtract for Alteryx component from the Alteryx Designer toolbox onto the canvas . The configuration window of the component opens.
1. Select an SAP connection from the dropdown list .

If no SAP connections are available, [create an Xtract data source](#create-an-xtract-data-source) in the Alteryx Connection Manager.

______________________________________________________________________

#### Related Links

- [Alteryx Documentation: Data Connection Manager - Server](https://help.alteryx.com/current/en/server/use-alteryx-server-ui/data-connection-manager--server-ui.html)
- [Connection Settings](settings/)

This page contains an overview of the SAP connection settings in the Xtract data source.

### Xtract Data Source Settings

Some input fields for the SAP connection vary depending on the selected connection method in the field **Technology**.

| Input Field | Description | | --- | --- | | **Data Source Name** | Name of the Xtract data source. | | **Host** | Host name or IP address of the application server (Property Host). | | **Sys. No.** | A two-digit number between 00 and 99 (Property SystemNumber). | | **Client** | A three-digit number of the SAP client between 000 and 999, e.g., 800. | | **Language** | The logon language for the SAP system, e.g., EN for English or DE for German. |

| Input Field | Description | | --- | --- | | **Data Source Name** | Name of the Xtract data source. | | **Message Server** | Name or IP address of the message server (Property MessageServer). | | **Client** | A three-digit number of the SAP client between 000 and 999, e.g., 800. | | **Language** | The logon language for the SAP system, e.g., EN for English or DE for German. |

Tip

Input values for the SAP connection can be found in the Properties of the SAP Logon Pad or they can be requested from the SAP Basis team.

### Advanced Options

#### RFC Libraries

Select an RFC library. The following RFC libraries are supported:

- NetWeaver RFC library (sapnwrfc.dll)
- Classic RFC library (librfc32.dll)

The RFC API (Remote Function Call) allows to establish an RFC connection to an SAP system from an external system that communicates as Client or Server with the SAP system. For more information on SAP libraries, see [SAP Help: RFC Libraries](https://help.sap.com/saphelp_nwpi71/helpdata/de/45/18e96cd26321a1e10000000a1553f6/frameset.htm).

SAP does not [support librfc32.dll](https://blogs.sap.com/2012/08/15/support-for-classic-rfc-library-ends-march-2016/) anymore.

#### Trace Directory

You can log debug information and save it locally.\
Enter a path to a local directory in the field **Trace directory** to save the debug information. For more information, see [Troubleshooting: Trace Directory](https://support.theobald-software.com/helpdesk/KB/View/14455-how-to-activate-tracing-for-xtract-products).

Clear the **Trace Directory** field when it is not needed.

Warning

**Increase of used hard drive memory.**\
A big amount of information is collected when debug logging is activated. This can decrease the capacity of your hard drives dramatically. Activate the debug logging only when necessary e.g., upon request of the support team.

### Expert Options

#### Use SAP GUI for specialized BAPIs

There are SAP Reports and BAPIs that require an installed SAP GUI even when they are called remotely.\
Activate this option only if necessary.

Warning

**'sapgui' start failed.**\
Sometimes SAP opens a pop-up window that requires input when running extractions. To deactivate pop-up windows, open the SAP GUI Logon pad and navigate to **Options... > Security Settings**. Click the **[Open Security Configuration]** button and select *Allow* as the **Default Action**. Apply the changes and close the SAP GUI Logon pad.

This page shows how to configure the Xtract data source to use encrypted communication via [Secure Network Communication (SNC)](https://help.sap.com/doc/saphelp_nw73ehp1/7.31.19/en-US/e6/56f466e99a11d1a5b00000e835363f/content.htm?no_cache=true) between Xtract for Alteryx and SAP.

### Prerequisites

- SNC must be configured in your SAP system. For more information about SNC configuration in SAP, see [SAP Help: Configuring the Application Server](http://help.sap.com/saphelp_nw73/helpdata/en/44/0e2e0cc7330d19e10000000a114a6b/frameset.htm).
- Check the SAP profile parameter *snc/gssapi_lib* in SAP (transaction RZ10) to determine, which library is used for encryption in your SAP system. Your SAP Basis has to import and configure the same library on the application server and on the machine that runs Xtract for Alteryx, e.g., `sapcrypto.dll`.

For information on how to set up SNC via X.509 certificate, refer to the [Knowledge Base Article: Enable Secure Network Communication (SNC) via X.509 certificate](../../../knowledge-base/enable-snc-using-pse-file/).

### Secure Network Communication (SNC)

Follow the steps below to set up SNC credentials for an SAP connection:

1. In the main menu of the Alteryx Designer navigate to **File > Manage Connections**. The window “Connection Manager” opens.
1. In the tab *Credentials* click **[New]** to create a credential.
1. Enter a name for the credential, e.g., "alice-SNC".
1. Select the authentication method *SAP SNC*.
1. Enter the SAP Partner Name configured for the SAP application server in the field **Partner Name**, e.g., `p:SAPserviceERP/Alice@THEOBALD.LOCAL`.
1. Enter the path to the SNC library in the **Library Path** field, e.g., `C:\Program Files\SAP\FrontEnd\SecureLogin\sapcrypto.dll`.
1. Click **[Save]** to save the credential.

### Assign SNC Credentials to an Xtract Data Source

Follow the steps below to assign the SNC credentials to an Xtract data source:

1. In the main menu of the Alteryx Designer navigate to **File > Manage Connections**. The window “Connection Manager” opens.
1. In the tab *Data Sources* click on a data source to display the details of the data source.
1. Click **+ Connect Credential**.
1. Select the authentication method *SAP SNC*. The sections **USERNAME AND PASSWORD** and **SAP SNC** are displayed.
1. In the section **USERNAME AND PASSWORD**, select the credential that contains the username and password of the SAP dialog or system user that is used for the SAP connection.
1. In the section **SAP SNC**, select the credential that contains the SNC settings for the SAP connection.
1. Click **[Link]** to assign the credentials to the Xtract data source.

This page shows how to configure the Xtract data source to use SSO via Logon-Tickets between Xtract for Alteryx and SAP. Note that this connection is not encrypted.

### SAP Logon Ticket

Follow the steps below to set up an SAP connection that uses SSO with Logon-Tickets:

1. In the main menu of the Alteryx Designer navigate to **File > Manage Connections**. The window “Connection Manager” opens.
1. In the tab *Credentials* click **[New]** to create a credential.
1. Enter a name for the credential, e.g., "alice-logon-ticket".
1. Select the authentication method *SAP Ticket issuer*.
1. Enter the URL of an Application Server Java (AS Java) that is configured to issue logon tickets in the field **Ticket issuer Url**. For more information, see [SAP Help: Configuring the AS Java to Issue Logon Tickets](https://help.sap.com/doc/saphelp_nw75/7.5.5/EN-US/4a/412251343f2ab1e10000000a42189c/frameset.htm).
1. Click **[Save]** to save the credential.

### Assign Ticket Issuer Credentials to an Xtract Data Source

Follow the steps below to assign the ticket issuer credentials to an Xtract data source:

1. In the main menu of the Alteryx Designer navigate to **File > Manage Connections**. The window “Connection Manager” opens.
1. In the tab *Data Sources* click on a data source to display the details of the data source.
1. Click **+ Connect Credential**.
1. Select the authentication method *SAP SNC*. The section **SAP TICKET ISSUER** is displayed.
1. In the section **SAP TICKET ISSUER**, select the credential that contains the Logon-Ticket settings for the SAP connection.
1. Click **[Link]** to assign the credential to the Xtract data source.

This section covers installation and maintenance topics for IT admins. This includes system requirements, backups and license information.

### Popular Topics

- [System Requirements](requirements/)
- [Backup & Update](update/)
- [Supported SAP Releases & Databases](requirements/#supported-sap-systems-and-releases)
- [License Installation](license/#about-the-licensing-concept-of-xtract-for-alteryx)

### Download Xtract for Alteryx

You can download a 30 day trial version from the [Theobald Software website](https://theobald-software.com/en/download-trial/). The trial version is only time limited and works otherwise without any restrictions.

### Evaluate Xtract for Alteryx

You are guaranteed to get unrestricted support by the Theobald Software support team during the evaluation phase. In case of questions or doubts, feel free to contact Theobald Software at any time:

- [Support Portal](https://support.theobald-software.com)
- [Contact Forms](https://theobald-software.com/en/contact/)

### Technical Support

Theobald Software offers support in English and German.

1. Open a ticket in our [Support Portal](https://support.theobald-software.com).
1. Provide as much information as possible for the Theobald Software support team to understand and analyze the issue.
1. If there is an error message, copy and paste the error message into the ticket.
1. Copy and paste the software logs in the ticket, see [Required Support Information for Xtract for Alteryx](https://support.theobald-software.com/helpdesk/KB/View/15098-required-support-information-for-xtract-for-alteryx).

Disclaimer

SAP versions that are no longer supported by the manufacturer are excluded from the Theobald Software support. Issues specific to custom BAPIs (Z function modules) or custom reports (Z reports) are also excluded from the scope of support.

This page shows how and where to install Xtract for Alteryx.

### Prerequisites

Administrator permissions are required to install Xtract for Alteryx.

### Setup

`XtractForAlteryxSetup.exe` is an industry standard setup. Execute the `XtractForAlteryxSetup.exe` file and follow the instructions of the setup program.

Note

During the setup you need to specify the installation directory for Xtract for Alteryx and also the installation directory of Alteryx. If you have multiple instances of Alteryx installed, choose the instance on which you want to use Xtract for Alteryx.

After the installation is completed, check if the following entries and extensions are available in the Alteryx installation directory:

- `Alteryx\Settings\AdditionalPlugins\XtractForAlteryx.ini`
- `Alteryx\bin\RuntimeData\icons\categories\XtractForAlteryx.png`
- `Alteryx\bin\RuntimeData\DefaultSettings.xml`

For information on how to install a license, see [Licensing](../license/#install-the-xtract-for-alteryx-license).

### Installation Directory Files

The list below shows several most important files that are placed into the default directory `C:\Program Files\XtractForAlteryx` after installation:

| Filename | Description | | --- | --- | | ABAP directory | Directory with SAP function modules. Read the readme.txt within the directory for more information. See also [SAP Customization](../../setup-in-sap/). | | XtractForAlteryxSetup.exe | Main installation application that installs Xtract for Alteryx as a plug-in to the Alteryx Designer / Server running on the system. | | Uninstall Xtract for Alteryx | Shortcut to uninstall and remove Xtract for Alteryx with all its components from your machine. | | Eula_Xtract_for_Alteryx.rtf | Document containing the license agreement for the use of the software Xtract for Alteryx. | | XtractForAlteryxLicense.json | License file with information about the server, the component and runtime. | | XtractForAlteryxSetup.log | Log file to see the exact modifications performed on your system and check whether any errors occurred during installation |

The installation of Xtract for Alteryx can be initiated unattended without the GUI in a non-interactive way via the Windows Command Prompt. Execute the `XtractForAlteryxSetup.exe` via command line and use the switch `--unattended`.

```console
start /wait XtractForAlteryxSetup.exe --unattended

```

`XtractForAlteryxSetup.exe` is Windows applications, meaning the Windows Command Prompt does not wait until the installation is complete. To wait until the installation is complete, use the [start](https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/start) command with the `/wait` switch.

Note

All switches are case sensitive.

### Version Number

When installing Xtract for Alteryx, the version of the product is displayed in the installation menu. To check the version of the installed product in Windows, open the Windows Settings and navigate to **Apps > Installed apps**.

### About the Licensing Concept of Xtract for Alteryx

The following licensing options are available for Xtract for Alteryx:

- Desktop license for use with the Alteryx Designer
- Server license for deployment on the Alteryx Server

A trial license is automatically installed with the installation of Xtract for Alteryx.\
A regular license is provided in the [customer portal - My Theobald Software](https://my.theobald-software.com/) after purchasing the product.

### Install the Xtract for Alteryx License

Place the "XtractForAlteryxLicense.json" file that is provided in the [Customer Portal - My Theobald Software](https://my.theobald-software.com) into the installation directory on the server, e.g., `C:\Program Files\XtractForAlteryx`.

Tip

To inspect your current license data, click the *About* link located in each Xtract component.

### Maintenance

Contact the [sales department](mailto:sales@theobald-software.com) for information about available maintenance options.\
In case of technical difficulties, contact our [support](https://support.theobald-software.com/helpdesk).

______________________________________________________________________

#### Related Links

- [My Theobald Software - Portal for Customers and Partners](https://my.theobald-software.com/)

This page contains information about system requirements and compatible SAP systems for Xtract for Alteryx.

### Supported SAP Systems and Releases

The following SAP Systems are supported:

- All SAP ABAP based systems that provide RFC connectivity and all SAP S/4 HANA (Cloud) systems that provide OData connectivity are supported.
- SAP ABAP systems on any database are supported (including HANA). The database used by the SAP system is irrelevant, because the integration occurs at SAP application server level.
- SAP systems running on Big Endian and Little Endian hardware are supported.
- SAP industry solutions like IS-U, IS-R, etc. are supported.
- SAP releases 4.6C and newer are supported.
- All operating systems are supported.

Examples

- [SAP S/4HANA](/xtract-for-alteryx/knowledge-base/supported-sap-and-hana-versions)
- mySAP
- SAP Application Server ABAP
- Message Server
- Router
- Standalone Gateway
- SAP Business Suite 7 (CRM, SRM, SCM etc.)
- SAP Business All in One, CAR, APO, PI
- SAP BW 3.1 and later
- SAP BW/BI 7.x
- SAP ERP / ECC 5.0 / ECC 6.0 (including all EhPs)
- SAP R/3 Version 4.6C and later
- SAP BW/4HANA
- ...and more.

**Disclaimer**

While SAP versions that are no longer supported by SAP still work with Theobald Software products, they are excluded from the Theobald Software support service.

#### Not Supported SAP Systems

The following SAP Systems are not supported:

- SAP systems that don’t run on ABAP systems
- SAP systems that don't provide RFC connectivity.

Examples

- SAP S/4HANA Cloud Public Edition
- Business By Design
- Business One
- Business Objects
- Sybase
- Ariba
- Success Factors
- Concur

### HANA Database

You can use Operational Data Provisioning (ODP) to connect the SAP HANA database of an SAP ABAP source system. Communication is done via RFC. With the ODP context for SAP HANA (HANA) the following HANA View types are available for extracting:

- Analysis Views
- Calculation Views
- Associated Attribute Views

Direct access to a HANA database without an SAP ABAP source system running on the corresponding HANA database is not supported.

### Ports

The following ports between the Windows server that runs Xtract for Alteryx and the SAP server, must be open:

| SAP NetWeaver Component | Port (NN = System number of the SAP system) | | --- | --- | | SAP Application Server | 33<NN> | | SAP Message Server | 36<NN> | | Secure Network Communication (SNC) | 48<NN> | | SAP-Router | 3299 |

For more information, see [SAP Help: TCP/IP Ports of All SAP Products](https://help.sap.com/viewer/ports).

### Installation and Configuration on SAP

| Component | SAP Release | Requirements on the SAP System | | --- | --- | --- | | [Xtract Table](/xtract-for-alteryx/documentation/table/) | Rel. > 4.6C | Installation of a custom function module [/THEO/READ_TABLE](/xtract-for-alteryx/documentation/setup-in-sap/custom-function-module-for-table-extraction/#installation-of-theoread_table) is recommended. | | [Xtract BAPI](/xtract-for-alteryx/documentation/bapi/) | Rel. > 4.6C | No requirements. Only remote-enabled functions are supported. | | [Xtract Query](/xtract-for-alteryx/documentation/query/) | Rel. > 4.6C | No requirements. | | [Xtract Report](/xtract-for-alteryx/documentation/report/) | Rel. > 4.6C | Installation of a custom function module [Z_XTRACT_IS_REMOTE_REPORT](/xtract-for-alteryx/documentation/setup-in-sap/custom-function-module-for-reports/) is required. | | [Xtract Cube](/xtract-for-alteryx/documentation/bwcube/) | Rel. > BW 3.1 | No requirements. BEx Queries require external access ("Allow External Access to this Query" option must be active). | | [Xtract Hierarchy](/xtract-for-alteryx/documentation/hierarchy/) | Rel. > BW 3.1 | No requirements. | | [Xtract ODP](/xtract-for-alteryx/documentation/odp/) | SAP_BASIS >= 730, BW >= 7,3X | No requirements. |

For Information about the installation of the custom function modules and the SAP customization, check the section [SAP Customization](/xtract-for-alteryx/documentation/setup-in-sap/).

### SAP Licenses

Additional SAP licenses might be required for extracting data from SAP. Contact SAP to verify these requirements.

### Operating Systems

- Windows 11
- Windows Server 2022 (until 2031-10-14)
- Windows 10 (until 2025-10-14)
- Windows Server 2022
- Windows Server 2019 (until 2029-01-09)
- Windows Server 2016 (until 2027-01-12)

### Other Applications and Frameworks

- .NET Framework 4.7.2 or higher, see [Download .NET Framework from Microsoft](https://support.microsoft.com/en-us/help/4054530/microsoft-net-framework-4-7-2-offline-installer-for-windows).

### Hardware

The following requirements apply to the hardware:

| Hardware | Minimum Requirement | | --- | --- | | Processor Cores | 2 Cores, 1 additional core is required for each additional parallel extraction | | Processor Speed | 1.4 GHz, recommended: 2.0 GHz or faster | | Main Memory | 8 GB, recommended: 12 GB for up to two parallel extractions 4 GB dedicated memory in average for each additional parallel extraction. Check the exact storage requirements of an extraction in your scenario. | | Disk Space | min. 150 MB total for Installation | | 64-Bit Environment | 64-Bit operating systems only | | Display Resolution | 1920x1080x1.25 with 1.25 display scaling |

This page shows how to backup and update an already installed Xtract for Alteryx version.

### Preparations

Recommendations:

- Use a working test environment with a valid license and maintenance. The test environment is a copy of the current production environment.
- Update the software regularly, see [recommended update interval](../../../changelog/#recommended-update-interval).
- Create a [backup](#create-a-backup) of the current installation.

Before updating, check the [Changelog](../../../changelog/) for breaking changes:

- Make any necessary preparations and changes as described in the Release Notes.
- Note the current product version so that you can switch back to the same version in the event of an error.

Tip

Subscribe to our [technical newsletter](https://theobald-software.com/en/newsletter/) that informs you about new software releases.

### Create a Backup

It is recommended to create backups at regular intervals to switch back to the previous version, if necessary.

1. Copy all Alteryx workflows that use Xtract for Alteryx.
1. Copy the directory that contains the SAP connections. Depending on the Alteryx settings it is located in the following directory:\
   `C:\Users\[USERNAME]\AppData\Roaming\Theobald Software\Xtract for Alteryx\Connections`

### Update a Test Environment

A newer version can be installed over the old version. It is not necessary to uninstall the previous version. New versions are available in the [Theobald Software Customer Portal](https://my.theobald-software.com).

During the installation, the setup program checks whether other processes are running in the background that are related to the software being installed. If this is the case, a message with various options is displayed:

| Option | Description | | --- | --- | | **Check Again** | Close the affected programs and click **[Check Again]** to continue the installation. | | **Kill Process** | Kill the affected process and continue with the installation. | | **Ignore** | Ignore the message, but the installation may be canceled due to the locking of certain files. | | **Quit Install** | Cancel the installation and resume it at another time. |

#### Upgrade with Breaking Changes

The setup checks if an older version of Xtract for Alteryx is already installed on the machine. If an older version is found, the setup displays a list of all (breaking) changes that were released between the old version and the current version. If there are breaking changes, make sure to follow the instructions in the release notes of the breaking changes to ensure a smooth update.

#### Test the Update

Install the software update on the test environment and test the new version carefully.

1. Test all your existing workflows.
1. After successful testing, install the current version on the production environment.
1. In the case of an error, create a ticket in the [Support Portal](https://support.theobald-software.com).\
   Register if you do not have a customer account yet. Use your backup until a solution is provided.

### Update a Production Environment

After successfully testing the update on the test environment, install the update on the production environment. Make sure to create a backup beforehand and conduct all the necessary preparations and changes.

______________________________________________________________________

#### Related Links

- [Customer Portal](https://my.theobald-software.com)
- [Changelog](../../../changelog/)
- [Support Portal](https://support.theobald-software.com)

This section covers [user rights](sap-authority-objects/) and customization topics for the SAP Basis.\
For information on [supported SAP systems](../setup/requirements/#supported-sap-systems-and-releases) and other IT topics, see [Setup](../setup/).

### Custom Function Modules

The following components require the installation of a custom function module:

| Component | Custom Function Module | Installation | | --- | --- | --- | | Xtract Report | [Z_XTRACT_IS_REMOTE_REPORT](custom-function-module-for-reports/) | Required | | Xtract Table | [/THEO/READ_TABLE](custom-function-module-for-table-extraction/) | Recommended |

Theobald Software distributes custom function modules as part of Xtract for Alteryx. The custom function modules can be installed in SAP using transport requests. The transport requests are available in the installation directory of Xtract for Alteryx, e.g., `C:\Program Files\XtractForAlteryx\ABAP\`.

For information on how to use transport request, see [Import an SAP Transport Request](/xtract-for-alteryx/knowledge-base/import-an-sap-transport-request).

Note

All objects that come with any of the transport requests, can be deleted by importing the `Z_THEO_READ_TABLE-deletion_request.zip` transport request.

### Popular Topics

- [SAP User Rights](sap-authority-objects/)
- [Download SAP Roles](sap-authority-objects/#sap-authorization-profiles)
- [Function Module for Table Extractions](custom-function-module-for-table-extraction/)
- [Function Module for Report Extractions](custom-function-module-for-reports/)

The extraction of reports requires the installation of a custom function module in your SAP system.\
If you cannot install the function module, turn to your SAP Basis team for help.

Note

As of version 1.2 of the custom function module `Z_XTRACT_IS_REMOTE_REPORT` access to reports must be explicitly granted, see [Authority Objects for Z_XTRACT_IS_REMOTE_REPORT](#authority-objects-for-z_xtract_is_remote_report).

### Installation of Z_XTRACT_IS_REMOTE_REPORT

Install the function module using the transport request *Z_XTRACT_IS_REMOTE_REPORT-transport.zip*.\
The transport request is located in the following installation directory: `C:\Program Files\[XtractProduct]\ABAP\Report\Z_XTRACT_IS_REMOTE_REPORT-transport.zip`.

The transport request needs to be imported into SAP by your SAP Basis team.

### Authority Objects for Z_XTRACT_IS_REMOTE_REPORT

As of Z_XTRACT_IS_REMOTE_REPORT version 1.2 access to reports must be explicitly granted.\
There are 2 ways to verify that the SAP user is allowed to extract a report:

- Use authentication groups, see [Authorizing Access to Reports via Authorization Groups](../../../knowledge-base/authorize-access-to-specific-reports/).
- Use the custom authorization object Z_TS_PROG.

______________________________________________________________________

#### Related Links

- [Knowledge Base: Import an SAP Transport Request](../../../knowledge-base/import-an-sap-transport-request/)
- [Knowledge Base: Authorizing Access to Specific Reports](../../../knowledge-base/authorize-access-to-specific-reports/)
- [SAP Help: Create Function Group](https://help.sap.com/viewer/bd833c8355f34e96a6e83096b38bf192/7.52.0/en-US/d1801ef5454211d189710000e8322d00.html)

SAP customization for the Xtract Table component is optional. The installation of the custom function module `/THEO/READ_TABLE` is recommended to improve performance and to bypass restrictions of the SAP standard function module RFC_READ_TABLE.

### RFC_READ_TABLE Restrictions

Especially with older SAP releases you may encounter a few restrictions when using the SAP standard function module (RFC_READ_TABLE) for table extraction:

- The overall width of all columns to be extracted must not exceed 512 bytes.
- It is not possible to extract data from tables that contain one or more columns of the data type f (FLTP, floating point), DEC (decimal, e.g. for percentage) or x (RAW, LRAW).
- Poor extraction performance with larger tables. Can cause also duplicates.
- Depending on the SAP version there may be other restrictions.

When facing restrictions, install the Theobald Software custom function module [/THEO/READ_TABLE](./#installation-of-theoread_table) on your SAP system.

Warning

**Converting issues**\
Error while converting value '\*.0' of row 1530, column 3.\
The SAP standard module *RFC_READ_TABLE* for table extraction can only extract the ABAP data type DEC to a limited extent. This leads to the mentioned example error during extraction. Use the function module */THEO/READ_TABLE*.

### Installation of /THEO/READ_TABLE

An SAP transport request for the installation of the function module is provided in the installation directory of Xtract for Alteryx: `C:\Program Files\XtractForAlteryx\ABAP\`.\
Transport requests are imported into SAP by your SAP Basis team. For more information, see [Knowledge Base: Import an SAP Transport Request](/xtract-for-alteryx/knowledge-base/import-an-sap-transport-request/).

Note

Take a look at the README.pdf in the installation directory (e.g.,`C:\Program Files\XtractForAlteryx\ABAP\README.pdf`) before installing any custom function modules.

It is recommended to install the latest custom function module THEO/READ_TABLE:

| Transport Request | Compatible SAP Systems | | --- | --- | | `THEO_READ_TABLE_740SP05.zip` | ABAP version 7.40 SP05 and higher | | `THEO_READ_TABLE_710.zip` | ABAP version 7.10 to 7.40 SP04 | | `THEO_READ_TABLE_640.zip` | ABAP versions from 6.40 until 7.03 | | `THEO_READ_TABLE_46C.zip` | ABAP versions from 4.6C |

When importing the transport requests on older SAP releases a syntax error may occur. Contact [Theobald Support](https://support.theobald-software.com) and send the dedicated error message text.

Warning

**Generating Short Dumps.**\
Testing the function modules on an SAP system is not possible. Function modules /THEO/READ_TABLE and Z_THEO_READ_TABLE can only be called by Theobald Software products due to the callback function of the module. Avoid calling function modules /THEO/READ_TABLE and Z_THEO_READ_TABLE directly from an SAP system.

### Supported Features

| Supported Features by THEO_READ_TABLE | \_740SP05 | \_710 | \_640 | 46C | | --- | --- | --- | --- | --- | | WHERE Clause | | | | | | HAVING Clause | | | | | | INNER JOIN | | | | | | LEFT OUTER JOIN | | | | | | Conversion exits | | | | | | Aggregate functions | | | | | | SQL expressions (subqueries) | | | | | | Background jobs | | | | |

______________________________________________________________________

#### Related Links

- [Knowledge Base: Import an SAP Transport Request](/xtract-for-alteryx/knowledge-base/import-an-sap-transport-request/)
- [Xtract Table Component](../../table/)

To use Xtract for Alteryx you need an SAP connection user with sufficient authorization in SAP. Authorizations are assigned via authorization objects in SAP. Redirect this page to your SAP Basis administrators to get the relevant authorization objects for your SAP connection user.

The authorizations in the section [General authorization objects](#general-authorization-objects) are required to establish an SAP connection with the SAP application server. The required authorizations for each component are listed in their respective section.

### SAP Authorization Profiles

Theobald Software collected and combined the necessary authorizations for all components into SAP roles. You can download the SAP profiles and upload them to your SAP system:

| Component | SAP Role File | | --- | --- | | [General Authorization Objects](#general-authorization-objects) | [ZXTGENERAL.SAP](/xtract-for-alteryx/assets/files/sap_roles/ZXTGENERAL.SAP) | | [BAPI](#bapi) | [ZXTBAPI.SAP](/xtract-for-alteryx/assets/files/sap_roles/ZXTBAPI.SAP) | | [BW Cube](#bw-cube-bw-query) | [ZXTBWCUBE.SAP](/xtract-for-alteryx/assets/files/sap_roles/ZXTBWCUBE.SAP) | | [BW Hierarchy](#bw-hierarchy) | [ZXTBWHIERARCHY.SAP](/xtract-for-alteryx/assets/files/sap_roles/ZXTBWHIERARCHY.SAP) | | [ODP (Operational Data Provisioning)](#odp) | [ZXTODP.SAP](/xtract-for-alteryx/assets/files/sap_roles/ZXTODP.SAP) | | [Query](#query) | [ZXTQUERY.SAP](/xtract-for-alteryx/assets/files/sap_roles/ZXTQUERY.SAP) | | [Report](#report) | [ZXREPORT.SAP](/xtract-for-alteryx/assets/files/sap_roles/ZXREPORT.SAP) | | [Table](#table) | [ZXTABLE.SAP](/xtract-for-alteryx/assets/files/sap_roles/ZXTABLE.SAP) |

Note

If you still get an authorization error, ask SAP Basis to record an ST01-/ or SU53-authorization trace in SAP. This trace shows which authorizations objects are missing.

### General Authorization Objects

The following authorization objects are required to establish a connection to SAP.

Necessary SAP authorizations

```text
S_RFC           RFC_TYPE=FUGR; RFC_NAME=SYST; ACTVT=16
S_RFC           RFC_TYPE=FUGR; RFC_NAME=SRFC; ACTVT=16
S_RFC           RFC_TYPE=FUGR; RFC_NAME=RFC1; ACTVT=16
S_RFC           RFC_TYPE=FUGR; RFC_NAME=OCS_CRM; ACTVT=16

```

[Download SAP profile for general authorization](/xtract-for-alteryx/assets/files/sap_roles/ZXTGENERAL.SAP)

### BAPI

Necessary SAP authorizations

```text
S_RFC            ACTVT=16; RFC_TYPE=FUGR; RFC_NAME=DDIF_FIELDINFO_GET, SDIFRUNTIME     

```

[Download SAP profile for BAPI Extractions](/xtract-for-alteryx/assets/files/sap_roles/ZXTBAPI.SAP)

### BW Cube / BW Query

Authorizations for the underlying Queries, Cubes, InfoAreas and analysis need to be assigned via:

- `S_RS_COMP`
- `S_RS_COMP1`
- `S_RS_AUTH`

Necessary SAP authorizations

```text
S_RFC            RFC_TYPE=FUGR; RFC_NAME=RSOB; ACTVT=16
S_RFC            RFC_TYPE=FUGR; RFC_NAME=RRX1; ACTVT=16
S_TABU_NAM       ACTVT=03; TABLE=RSRREPDIR
S_TABU_NAM       ACTVT=03; TABLE=RSZGLOBV
S_TABU_NAM       ACTVT=03; TABLE=RSADMINC

```

Necessary SAP authorizations

```text
S_RFC            RFC_TYPE=FUGR;RFC_NAME=SYST;ACTVT=16;type=RF;name=RFCPING;
S_RFC            RFC_TYPE=FUGR; RFC_NAME=RSOBJS_RFC_INTERFACE; ACTVT=16; type=RF;name=RSOBJS_GET_NODES;
S_RFC            RFC_TYPE=FUGR;RFC_NAME=RSAO_CORE;ACTVT=16;type=RF;name=RSAO_BICS_SESSION_INITIALIZE
S_RFC            RFC_TYPE=FUGR;RFC_NAME=RSBOLAP_BICS_CONSUMER;ACTVT=16;type=RF;name=BICS_CONS_CREATE
S_RFC            RFC_TYPE=FUGR;RFC_NAME=RSBOLAP_BICS_PROVIDER;ACTVT=16;type=RF;name=BICS_PROV_OPEN;
S_RFC            RFC_TYPE=FUGR;RFC_NAME=RSBOLAP_BICS_PROVIDER_VAR;ACTVT=16;type=RF;name=BICS_PROV_VA
S_ADMI_FCD       S_ADMI_FCD=PADM;

```

Necessary SAP authorizations

```text
S_TABU_NAM       ACTVT=03; TABLE=DD03L

```

Alternatively, you can assign the SAP role template `S_RS_RREPU`.

[Download SAP profile for BW Cube / BW Query](/xtract-for-alteryx/assets/files/sap_roles/ZXTBWCUBE.SAP)

### BW Hierarchy

Necessary SAP authorizations

```text
S_RFC          RFC_TYPE=FUNC, FUGR; RFC_NAME=RSNDI_SHIE; ACTVT=16
S_RFC          RFC_TYPE=FUNC, FUGR; RFC_NAME=BAPI_IOBJ_GETDETAIL; ACTVT=16
S_RFC          RFC_TYPE=FUNC, FUGR; RFC_NAME=DDIF_FIELDINFO_GET; ACTVT=16
S_RFC          RFC_TYPE=FUNC, FUGR; RFC_NAME=RFC1; ACTVT=16
S_RFC          RFC_TYPE=FUNC, FUGR; RFC_NAME=RFC_GET_FUNCTION_INTERFACE; ACTVT=16
S_RFC          RFC_TYPE=FUNC, FUGR; RFC_NAME=RFC_READ_TABLE; ACTVT=16
S_RFC          RFC_TYPE=FUNC, FUGR; RFC_NAME=RSBAPI_IOBJ; ACTVT=16 
S_RFC          RFC_TYPE=FUNC, FUGR; RFC_NAME=RSNDI_SHIE; ACTVT=16
S_RFC          RFC_TYPE=FUNC, FUGR; RFC_NAME=SDIFRUNTIME; ACTVT=16
S_RFC          RFC_TYPE=FUNC, FUGR; RFC_NAME=SDTX; ACTVT=16
S_RFC          RFC_TYPE=FUNC, FUGR; RFC_NAME=SYST; ACTVT=16
S_RS_ADMWB     RSADMWBOBJ=INFOOBJECT; ACTVT=03
S_TABU_DIS     ACTVT=03; DICBERCLS=BWC
S_TABU_DIS     ACTVT=03; DICBERCLS=BWG
S_TABU_NAM     ACTVT=03; TABLE=/BIC/*
S_TABU_NAM     ACTVT=03; TABLE=ENLFDIR
S_TABU_NAM     ACTVT=03; TABLE=RSHIEDIR

```

[Download SAP profile for BW Hierarchy](/xtract-for-alteryx/assets/files/sap_roles/ZXTBWHIERARCHY.SAP)

### ODP

For a complete and detailed list of authorization objects refer to [SAP Note 2855052](https://launchpad.support.sap.com/#/notes/2855052) - Authorizations required for ODP Data Replication API 2.0.

Necessary SAP authorizations

```text
S_TABU_NAM       ACTVT=03; TABLE=TCURX

```

[Download SAP profile for ODP](/xtract-for-alteryx/assets/files/sap_roles/ZXTODP.SAP)

### Query

Necessary SAP authorizations

```text
S_RFC            RFC_TYPE=FUGR; RFC_NAME=AQRC; ACTVT=16 

```

[Download SAP profile for SAP Query](/xtract-for-alteryx/assets/files/sap_roles/ZXTQUERY.SAP)

### Report

Necessary SAP authorizations

```text
S_RFC            RFC_TYPE=FUGR; RFC_NAME=ZXTRACTABAP; ACTVT=16
S_TABU_NAM       ACTVT=03; TABLE=TRDIR, TRDIRT, TSTC, VARID
S_GUI            ACTVT=61 
S_TABU_DIS       ACTVT=03; DICBERCLS=&NC& 
S_TABU_DIS       ACTVT=03; DICBERCLS=SS
S_BTCH_ADM       BTCADMIN=Y
S_BTCH_JOB       JOBGROUP=*; JOBACTION=RELE

```

Note

The necessary transport request for function group *ZXTRACTABAP* is located in the following path: `C:\Program Files\[XtractProduct]\ABAP\Report\Z_XTRACT_IS_REMOTE_REPORT-transport.zip` of the default installation.

[Download SAP profile for Report](/xtract-for-alteryx/assets/files/sap_roles/ZXREPORT.SAP)

To execute a report with Xtract for Alteryx, the SAP connection user needs explicit authorization to execute the report. Authorization can be granted using one of the following methods:

- [Assign the authorization object Z_TS_PROG](../../../knowledge-base/create-the-custom-authority-object-z-ts-prog/)
- [Assign an authorization group](../../../knowledge-base/authorize-access-to-specific-reports/)

### Table

Necessary SAP authorizations

```text
S_RFC            ACTVT=16; RFC_TYPE=FUGR; RFC_NAME=SDTX, SDIFRUNTIME, /THEO/READ_TABLE                   
S_TABU_DIS       ACTVT=03; DICBERCLS=XXXX
S_TABU_NAM       ACTVT=03; TABLE=DD02V, DD17S, DD27S, ENLFDIR
S_DSAUTH         ACTVT=16;    

```

XXXX (stands for a placeholder) is the authorization group for the table. To determine, which authorization group belongs to which table, check the table TDDAT - Maintenance Areas for Tables. If the table is not listed, the authorization group is &NC&. For authorizing specific tables use authorization object S_TABU_NAM instead of S_TABU_DIS.

Note

The transport request for function group */THEO/READ_TABLE* and *Z_THEO_READ_TABLE* is located in the following path: `C:\Program Files\[XtractProduct]\ABAP\Table` of the default installation.

Additional options:

Necessary SAP authorizations

```text
S_BTCH_ADM       BTCADMIN=Y
S_BTCH_JOB       JOBGROUP=*; JOBACTION=RELE

```

Necessary SAP authorizations

```text
S_RFC            RFC_TYPE=FUNC; RFC_NAME=EM_GET_NUMBER_OF_ENTRIES; ACTVT=16  

```

Necessary SAP authorizations

```text
S_TABU_NAM       ACTVT=03; TABLE=TCURX

```

[Download SAP profile for Table](/xtract-for-alteryx/assets/files/sap_roles/ZXTABLE.SAP)

______________________________________________________________________

#### Related Links

- [SAP Help: Role Administration](https://help.sap.com/doc/saphelp_nw74/7.4.16/en-us/52/6714a9439b11d1896f0000e8322d00/content.htm)
- [SAP ONE Support Launchpad](https://launchpad.support.sap.com/#/notes/2855052)

This page shows how to use the Xtract Table component.\
The Xtract Table component can be used to extract data from SAP Tables and Views.

### Supported SAP Objects

- Transparent tables
- Views
- ABAP CDS Views (without parameters)
- HANA CDS Views
- Pool tables (joining not possible)
- Cluster tables (joining not possible)

### RFC_READ_TABLE Restrictions

Especially with older SAP releases you may encounter a few restrictions when using the SAP standard function module (RFC_READ_TABLE) for table extraction:

- The overall width of all columns to be extracted must not exceed 512 bytes.
- It is not possible to extract data from tables that contain one or more columns of the data type f (FLTP, floating point), DEC (decimal, e.g. for percentage) or x (RAW, LRAW).
- Poor extraction performance with larger tables. Can cause also duplicates.
- Depending on the SAP version there may be other restrictions.

When facing restrictions, install the Theobald Software custom function module [/THEO/READ_TABLE](../setup-in-sap/custom-function-module-for-table-extraction/#installation-of-theoread_table) on your SAP system.

Warning

**Converting issues**\
Error while converting value '\*.0' of row 1530, column 3.\
The SAP standard module *RFC_READ_TABLE* for table extraction can only extract the ABAP data type DEC to a limited extent. This leads to the mentioned example error during extraction. Use the function module */THEO/READ_TABLE*.

### Prerequisites

- A connection to an SAP system is available, see [SAP Connection](../sap-connection/).
- The SAP user has sufficient user rights, see [SAP Authority Objects](../setup-in-sap/sap-authority-objects/#table).

Warning

**Missing Authorization.**\
To use the Xtract Table component, access to the designated authority objects (RFC) in SAP must be available. Adjust [SAP Authority Objects](../setup-in-sap/sap-authority-objects/#table) accordingly.

### Add an Xtract Table Component

Follow the steps below to add an Xtract Table component to your workflow:

1. Drag & drop the Xtract component to your Alteryx workflow .
1. Assign an existing SAP connection .
1. Click **[ Edit]** to open the main window of the component.

The majority of the functions of the component can be accessed in the main window.

### Look up an SAP Table

1. In the main window of the component, click **[Add]** to add a table. The window "Table Lookup" opens.
1. In the field **Table Name**, enter the name of the table to extract . Use wildcards (\*) if needed.
1. Click **[]** . Search results are displayed.
1. Select a table and click **[OK]**.

All relevant metadata information of the table is retrieved from SAP. The application returns to the main window of the component.

### Define the Xtract Table Component

The Xtract Table component offers the following options for table extractions:

1. Select the columns you want to extract. By default all columns are selected. Deselect the columns you do not want to extract.
1. Optional: Define a [WHERE clause](where-clause/) or a [HAVING clause](having-clause/) to filter table records. By default all data is extracted.
1. Optional: Join two or more tables and extract the result of the join. For more information, see [Table Joins](table-join/).
1. Click **[Load live preview]** to display a live preview of the first 100 records.
1. Check the [Extraction Settings](settings/) before running the workflow.
1. Click **[OK]** to save the component.
1. Optional: Check the column name style and date conversion options in the [tool configuration](tool-configuration/) of the component.

You can now run the workflow.

______________________________________________________________________

#### Related Links

- [Sample Workflows: Xtract Table](../../sample-workflows/#xtract-table)
- [Knowledge Base Articles: Xtract Table](../../knowledge-base/#xtract-table)

Runtime parameters are are placeholders for values that are passed at runtime. They can be created in context of using the [WHERE Clause](../where-clause/).

## Create Runtime Parameters

There are two types of runtime parameters:

- [Scalar parameters](#scalar-parameters) represent a single value.
- [List parameters](#list-parameters) represent multiple values.

### Scalar Parameters

Follow the steps below to create a scalar runtime parameter:

1. Open the *Edit Runtime Parameters* tab.

1. Click **[Add Scalar]** to define scalar parameters to be used as placeholders for actual values. The placeholders need to be populated with actual values at runtime.

   Tip

   Parameter0..-n is the default naming for the added parameter. You can enter a name of your choice.

1. Select one of the following data types from the drop-down menu. The data types may correlate to SAP data types.

   | Type | Description | | --- | --- | | *Text* | Can be used for any type of SAP selection field. | | *Number* | Can be used for numeric SAP selection fields. | | *Flag* | Can only be used for SAP selection fields THAT require an ‘X’ (true) or a blank ‘‘ (false) as input value. |

1. Click **[OK]** to confirm.

The runtime parameters are now available in the component.

### List Parameters

Follow the steps below to create a list runtime parameter:

1. In the main window of the component click **[Edit Parameters]**. The window “Edit Runtime Parameters” opens.

1. Click **[Add List]** to define list parameters that contain multiple values separated by commas e.g., 1,10 or “1”, “10”. The placeholders need to be populated with actual values at runtime.

   Tip

   Parameter0..-n is the default naming for the added parameter. You can enter a name of your choice.

1. Click **[OK]** to confirm.

The runtime parameters are now available in the component.

## Use Runtime Parameters in the WHERE Clause Editor

1. Navigate to the WHERE clause tab in the main window of the extraction and open the WHERE clause editor.
1. Add a new WHERE clause criteria that uses the **[Default with Parameter]** template.
1. Click the *Parameter* component. A drop-down list that displays all available parameters opens. Select a parameter from the list.
1. To test the WHERE clause, click **[Load live preview]**. Provide parameter values when prompted.

## Pass Values at Runtime

Follow the steps below to replace runtime parameters with actual values at runtime:

1. [Create and assign runtime parameters](#create-runtime-parameters) in the Xtract Table component.
1. Close the Xtract Table component.
1. Define the input values for the runtime parameters , e.g., single values or lists.
1. Make sure that the data type of the input values match the data type of the corresponding runtime parameter.
1. Make sure that the name of the input matches the name of the corresponding runtime parameter. The values in the input are automatically assigned to a runtime parameter by the same name.
1. Connect the input to the Xtract Table component using the input anchor "P" .
1. Run the workflow to test if the runtime parameters are assigned correctly.

Note

Parameterization via input anchors is supported as of Xtract for Alteryx version 1.19. When using an older version of Xtract for Alteryx, parameterize Xtract components using batch macros, see [Parameterizing via Batch Macros](../../../knowledge-base/parameterization-via-batch-macros/).

The HAVING clause can be used to filter groups of rows, see [SAP ABAP Documentation: SELECT-HAVING](https://help.sap.com/doc/abapdocu_750_index_htm/7.50/en-US/abaphaving_clause.htm).

### Create a HAVING Clause

The following example shows how many materials are assigned to a material type (MTART). After applying the HAVING Clause, the preview shows only the material types with more than 10 materials assigned.

1. Select an aggregate function for a field you want to use in the HAVING-clause.

   Note

   Aggregate functions are only supported for numeric field types, which is why the field BRGEW (Gross Weight) is used in the example.

1. Navigate to tab *HAVING Clause* .

1. Enter a HAVING Clause using the [syntax](#having-clause-syntax) in accordance to your SAP Release, e.g., `COUNT(BRGEW) > 10`.

1. Click **[Load live preview]** to display the results in the *Preview* section.

Note

When fields with the same name exist in different tables, the field names must be formatted as [Table]~[Column], e.g., MAKT~MATNR. This can be the case with [table joins](../table-join/).

### HAVING Clause Syntax

With regard to syntax and formulas, the same rules apply as for the [WHERE Clause](../where-clause/#where-clause-syntax). Depending on your SAP release the syntax may varry, see [SAP Help - ABAP SQL - SQL Expressions sql_exp](https://help.sap.com/doc/abapdocu_latest_index_htm/latest/en-US/abenabap_sql_strictmode_754.htm) .

This section contains an overview and description of the *Tables and Fields* tab in the main window of the Xtract Table component.

### Tables

The subsection *Tables* lists all SAP Tables and Views that were added to the component.

- Click **[Add]** to add an SAP Table or View to the component.
- Click **[Remove]** to remove an SAP Table or View from the component.

Tip

Select an SAP Table to define the corresponding settings, e.g, output columns, WHERE clause, etc. You can switch between the SAP Tables.

### Fields

The subsection *Fields* displays all columns in the selected SAP Table or View.

The Xtract Table component imports and highlights the dedicated indexes of an SAP Table, such as primary key and/or sorting options.

Note

Use the indicated fields for filtering increases performance when applying WHERE-clause.

| Columns | Description | | --- | --- | | / | Defines whether or not a table column is added to the output of the component. By default, all table columns are extracted. | | **Name** | Name of a column in the SAP Table. The column name can be filtered. | | **Description** | Description of the column. The column description can be filtered. | | **Aggregate Function** | Applies [aggregate functions](#aggregate-functions) to numeric fields. | | **Conv.** | Activates SAP [conversion routines](#conversion-routines). |

#### Aggregate Functions

Aggregate functions are only available for numeric field data types, e.g., INT, FLOAT, DECIMAL. The following aggregation functions are available:

- *None*: No aggregation
- *MEAN*: Average
- *COUNT*: Number
- *MAX*: Maximum
- *MIN*: Minimum
- *SUM*: Total

#### Conversion Routines

Conversion routines are stored in the Data Dictionary that is used for the respective fields. Activating the conversion routines in SAP leads to significant performance decrease. After the conversion, the value is displayed as it appears in the transaction *SE16N* in the SAP GUI.

Examples:

- Language keys, e.g., `D` in the database becomes `DE` after conversion
- Project numbers, e.g., `T000012738GT` becomes `T/12738/GT` after conversion.

| State | Description | Safety | | --- | --- | --- | | | no conversion routines selected | - | | | conversion routines enabled requires the function module Z_XTRACT_IS_TABLE_COMPRESSION | no data type safety | | | conversion routines enabled requires the function module [/THEO/READ_TABLE](../../setup-in-sap/custom-function-module-for-table-extraction/) | assured data type safety |

### Preview

The subsection *Preview* displays a real-time preview of the first 100 fields of the SAP table when clicking the button **[Load live preview]**.

Note

The use non-indexed fields in the WHERE-clause can lead to timeouts during the preview of large tables.

### Buttons

**[Extraction Settings]**\
Opens the [Extraction Settings](../settings/) menu.

**[Edit Parameters]**\
Opens the [runtime parameters](../edit-runtime-parameters/) menu.

**[Load live preview]**\
Allows a real-time preview of the extraction data without executing the extraction.\
You can also preview the data with aggregation functions.

**[Count rows]**\
Returns the number of rows/data records of an extraction, considering the WHERE and HAVING clauses stored.

**[Refresh metadata]**\
A new lookup is performed on the selected table(s). Existing mappings and field selections are retained, which is not the case when the table is added again.\
It can be necessary to refresh the metadata when a table has been adjusted in SAP, when another source system is assigned to the component, or when the source system was updated. In such cases, data inconsistencies can occur that are resolved by this function.

This page contains an overview of the extraction settings in the Xtract Table component.\
The extraction settings are located in the tab *Extraction Settings*.

Warning

**Could not load list of available function modules because permission for table ENLFDIR is missing**\
This warning appears if a technical SAP user does not have authorization rights to access the SAP table *ENLFDIR*. Confirm the warning as the user can **still** adjust the extraction settings.

### Extraction Settings

#### Package Size

The extracted data is split into packages of the defined size. The default value is 50000 lines.\
A package size between 20000 and 50000 is advisable for large amounts of data. 0 means no packaging. Not using packaging can lead to an RFC timeout for large data extractions.

Warning

**RFC_ERROR_SYSTEM_FAILURE - No more storage space available for extending an internal table**\
To avoid a memory overflow on the SAP source system and to avoid huge overheads, choose a package size that suits your memory capacity.

#### Row Limit

Specifies the maximum number of extracted records. 0 extracts all data. You can use this option to perform tests with a small amount of data by entering a row limit of e.g., 1000.

### Function Module

Specifies the name of the function module used for data extraction. This field is filled automatically depending on what function modules are installed on your SAP system. Custom function modules are supported.

The following function modules can be used to extract tables:

- RFC_READ_TABLE (TAB512)
- /BODS/RFC_READ_TABLE (TAB2048)
- /SAPDS/RFC_READ_TABLE (TAB2048)
- /BODS/RFC_READ_TABLE2
- /SAPDS/RFC_READ_TABLE2
- Z_THEO_READ_TABLE
- [/THEO/READ_TABLE](/xtract-for-alteryx/documentation/setup-in-sap/custom-function-module-for-table-extraction) (recommended)

Warning

**Duplicates in the target environment.**\
The SAP standard modules for table extraction do not have pointers for table fields. In larger tables this may cause low performance and duplicates in the target environment. Use the function module [THEO/READ_TABLE](../../setup-in-sap/custom-function-module-for-table-extraction/#installation-of-theoread_table) from Theobald Software to ensure smooth extractions.

Note the necessary [SAP Authority Objects](../../setup-in-sap/sap-authority-objects/#table):

```text
S_TABU_NAM ACTVT=03; TABLE=ENLFDIR

```

### Extract Data in Background Job

If *Background job timeout (seconds)* checkbox is activated, the table extraction is executed as a background job in SAP. This setting is optional and is supported in combination with function module THEO/READ_TABLE or Z_THEO_READ_TABLE version 2.0. Activate the setting *Background job timeout (seconds)* for long-running extractions with a large amounts of data that may run into a timeout error (“Time limit exceeded”), when using the foreground mode.

Tip

The extraction jobs can be found in the SAP JobLog (**SM37**) under the JobName *theo_read_table*.

Warning

**Shared Memory ran out of memory!**\
If this error message pops up when running an extraction in the background, adjust the size of the Shared Memory. SAP recommends a Shared Memory size of 800MB~1.5GB for a production/test system or 2GB~4GB for S/4 systems, see [SAP Support: How to solve SYSTEM_NO_SHM_MEMORY runtime error](https://ga.support.sap.com/dtp/viewer/#/tree/1080/actions/12107).

### Advanced Settings

#### Background Job Timeout (seconds)

Sets a timeout period for extractions that run in background mode.\
The default value is 180 seconds. The maximum timeout value is 3600 seconds.

Note

The background job timeout setting only takes effect if the extractions run in background mode using [/THEO/READ_TABLE](../../setup-in-sap/custom-function-module-for-table-extraction/).

#### Adjust Currency Decimals

The default number of decimal places for a currency in the SAP database is 2 decimals. Currencies that do not have decimals are also stored in this format, e.g. JPY, VND, KRW, etc.

Example:

| Currency | Actual Amount | Amount stored in SAP database | | --- | --- | --- | | JPY | 100 | 1.00 | | KRW | 10000 | 100.00 |

When extracting currencies with no decimals, the amount stored in SAP is returned e.g., 100 JPY are extracted as 1.00. To correct the decimal placement of the extracted data, activate **Adjust Currency Decimals**. If **Adjust Currency Decimals** is active, currencies without decimals are multiplied by a factor that balances out the decimals.

**Adjust Currency Decimals** also requires the extraction of the corresponding CURRENCY field that can be used as a reference for the multiplication factor. Use the **[Load live preview]** function to find the correct currency field/s.

- If the currency field is part of the table, add it to the output.
- If the currency field is in another table, join the tables.
- If the reference is not part of a table, **Adjust Currency Decimals** cannot be used.

Note

The multiplication factor used in *Adjust Currency Decimals* is determined by the SAP currency table TCURX. To access the table, the following SAP Authority objects must be set in SAP: *S_TABU_NAM ACTVT=03; TABLE=TCURX*.

The *Join* functionality allows joining two or more tables and extract the result of the join. To perform the extraction the corresponding SQL command is generated dynamically and the join is executed on the SAP server.

Possible scenarios can be joining tables for header and item data or tables for master data and texts.

### Supported Join Types

The following join types are supported:

- Inner Join
- Left Outer Join, also referred to as *Left Join*.

For more information on join types see [SAP Help: Inner Join and Outer Join](https://help.sap.com/doc/saphelp_nwpi71/7.1/en-US/cf/21ec77446011d189700000e8322d00/content.htm?no_cache=true).

Note

Joining of cluster or pool tables is not supported. Cluster or pool tables need to be extracted individually and joined in the destination.

### Prerequisites

To use table join, the function module [/THEO/READ_TABLE](../../setup-in-sap/custom-function-module-for-table-extraction/#installation-of-theoread_table) needs to be available in SAP.

### Join Tables

The following example shows how to join the tables KNA1 and KNVV.

1. In the tab *Tables and Fields*, click **[Add]** to add two tables (e.g., KNA1 and KNVV).

1. Select both tables on the left and check the fields you want to extract .

1. Optional: Switch to the *WHERE clause* tab and specify a [WHERE clause](../where-clause/).

1. Switch to the *Joins* tab . A Join condition with default values is automatically available. The join condition is based on the foreign key relationship of the joined tables.

1. Click **[]** to edit the join condition. The window "Join" opens.

1. Select a table column in the *Left Table* field and in the *Right Table* field to map the table contents. In the depicted example a left outer join on tables KNA1 (left table) and KNVV (right table) on the field KUNNR is performed. It is possible to add multiple join conditions.

   - Click **[Add]** to extend the join condition to more fields.
   - Click **[]** to delete existing joins.

   Tip

   Different tables can have identical field / column names. Defining a join condition based on the identical field names not always delivers the expected result, e.g., VBAK~VBELN \<> LIPS~VBELN. Make sure the fields you use in a join condition contain the same content/data.

1. Click **[OK]** to save the join.

You can join additional tables by adding tables more in the tab *Tables and Fields*.

Warning

**RFC_ERROR_SYSTEM_FAILURE - Illegal access to the right table of a LEFT OUTER JOIN.**\
Using a WHERE clause on the right table of a LEFT OUTER JOIN is only possible as of SAP Release 7.40, SP05.

#### Auto Mapping

The **[Auto-map]** button deletes existing join conditions and performs a new field mapping based on the foreign key relationship of the joined tables.

Recommendation

To avoid poor extraction performance, do not join more than five tables.

This page contains an overview of the settings in the configuration menu of the Xtract Table component. To display the configuration menu, select an Xtract Table component in the workflow.

### About

At the top of the configuration menu, click **About** to display information about the software version and license.

### Connection

The section *Connection* of the configuration menu defines which [SAP Connection](../../sap-connection/) is used for the component.

| Button | Description | | --- | --- | | **New** | Opens the "SAP Connection Details" window to create a new SAP connection. For more information, see [Knowledge Base Article: SAP Connection using the Xtract for Alteryx GUI](../../../knowledge-base/sap-connection-using-xfa-gui/). | | **Edit** | Opens the "SAP Connection Details" window to edit the selected SAP connection. | | **Delete** | Deletes the selected SAP connection. |

### Selected Extraction

The section *Selected Extraction* of the configuration menu displays the description and name of the primary SAP object that is used in the component.

| Button | Description | | --- | --- | | **Edit** | Opens the [main window](../main-window/) of the Xtract Table component. The majority of the functions of the Xtract Table component can be accessed using the main window. |

### Column Name Style

Defines the style of the column name. Following options are available:

| Option | Description | | --- | --- | | *Code* | The SAP technical column name is used as column name in the destination e.g., MAKTX. | | *PrefixedCode* | The SAP technical column name is prefixed by SAP object name and the tilde character e.g., MAKT~MAKTX | | *CodeAndText* | The SAP technical column name and the SAP description separated by an underscore are used as column name in the destination e.g., MAKTX_Material Description (Short Text). | | *TextAndCode* | The SAP description and the SAP technical column name description separated by an underscore are used as column name in the destination e.g., Material Description (Short Text)\_MAKTX. | | *Text* | The SAP description is used as column name in the destination e.g., Material Description (Short Text). |

### SAP Date Conversion

When this option is active, the following date conversions are applied:

- *Replacement for invalid dates*
- *Replacement for 0000XXXX*
- *Replacement for 9999XXXX*

#### Replacement for invalid dates

Replaces an invalid date format, e.g., *20190132* (January 32nd 2019). Enter a replacement value for invalid SAP dates in the format yyyy-mm-dd. The default value is *NULL*.

#### Replacement for 0000XXXX

Replaces SAP dates that contain the year 9999, e.g., *99990101* (January 1st 9999). Enter a replacement value in the format yyyy-mm-dd. The value NULL is supported. The default value is *1970-01-01*.

#### Replacement for 9999XXXX

Replaces SAP dates that contain the year ‘9999’, e.g., ‘99990101’ (January 1st 9999). Enter a replacement value in the format yyyy-mm-dd. The value NULL is supported. The default value is *2099-12-31*.

A WHERE clause can be used to filter table records, see [SAP ABAP Documentation: SELECT-WHERE](https://help.sap.com/doc/abapdocu_750_index_htm/7.50/en-us/abapwhere.htm). Enter WHERE clauses manually in *Text mode* or use the [WHERE Clause Editor](#where-clause-editor) in *Editor Mode*.

## Create a WHERE Clause

1. Open a Xtract Table component.
1. Navigate to the tab *WHERE Clause*.
1. Enter a WHERE clause [manually](#where-clause-text-mode) or use the [WHERE Clause Editor](#where-clause-editor).
1. Click **[Load live preview]** to display the results in the *Preview* section.

## WHERE Clause Text Mode

The WHERE clause text mode allows you to directly enter a WHERE clauses. The text mode of the WHERE clause supports script expressions.

Warning

**Extraction fails due to incorrect syntax.**\
The extractions fail, if incorrect syntax is used in the WHERE clause.\
Make sure to use correct SAP OpenSQL syntax. Several important syntax rules are listed in this help section.

Tip

To check the syntax of the WHERE clause, click **[Load live preview]**. This way there is no need to run an extraction to see, if the syntax is correct.

### WHERE Clause Syntax

The WHERE Clause syntax generally uses the following structure:

```bash
[Table]~[Column][Space][Operator][Space][Filter-Value]

```

**Example:**

```text
KNA1~LAND1 = 'US'

```

The following rules apply to filter values:

| Rule | Correct | Wrong | | --- | --- | --- | | Enter a space before and after the equal sign | *YEAR = '1999'* | *YEAR= '1999 '*, *YEAR ='1999'* or *YEAR='1999'* | | Set floating point numbers in single quotation mark | *KMENG > '10.3'* | *KMENG > 10.3* | | Values must use the internal SAP representation: Date: YYYYMMDD Year Period: YYYYPPP Numbers with leading zeroes, e.g., customer numbers | 19990101 1999001 0000001000 | 01.01.1999 001.1999 1000 |

The following operations are supported in the WHERE clause:

| Operator | Description | | --- | --- | | =, EQ | True if the content of operand1 is equal to the content of operand2. | | \<>, NE | True if the content of operand1 is not equal to the content of operand2. | | \<, LT | True if the content of operand1 is less than the content of operand2. | | >, GT | True if the content of operand1 is greater than the content of operand2. | | \<=, LE | True if the content of operand1 is less than or equal to the content of operand2. | | >=, GE | True if the content of operand1 is greater than or equal to the content of operand2. | | (NOT) LIKE | True if the value of operand1 matches (does not match) the pattern in operand2. | | (NOT) IN | True if the content of operand1 is (not) part of the content of operand2. Operand2 must be of type LIST or SQL. |

For more details on the OpenSQL syntax, see [SAP Help: Select WHERE](https://help.sap.com/doc/abapdocu_752_index_htm/7.52/en-US/abapwhere.htm?file=abapwhere.htm)

Tip

To increase extracting performance, make sure to place the indexed fields as the first selection filter operation in the WHERE clause.

Note

When fields with the same name exist in different tables, the field names must be formatted as [table name]~[field name], e.g., MARC~MATNR. This can be the case when extracting multiple tables.

### Subqueries

Note

The usage of subqueries is only possible as of SAP Release 7.40, SP05.

A subquery is an SQL query nested inside a larger query. Subqueries are nested queries that provide data to the enclosing query. Subqueries need be enclosed with parenthesis and can return individual values or a list of records. Get more details about subqueries on the [SAP Help: Conditions](https://help.sap.com/doc/abapdocu_752_index_htm/7.52/en-US/abenwhere_logexp_in_subquery.htm).

**Example:**

In the following example a subquery is used with the *IN* operator. The following statement returns all the *active* customers (rows in the table KNA1) that have i.e. a sales document in the table VBAK for sales document header data.

```text
KUNNR IN ( SELECT KUNNR FROM VBAK )

```

## WHERE Clause Editor

The WHERE clause editor offers a toolkit for those who are not familiar with the syntax of the WHERE clause. Click **[Editor mode]** to open the editor.

There are 2 options for adding criteria to the WHERE clause:

- **[Add Criteria]** adds single criteria.
  - The default structure for a single criteria with static values is `[Table~Column][Operator][Filer-Value]` e.g., *MARC~WERKS = 1000*.
  - The default structure for a single criteria with parameters is `[Column][Operator][Parameter]` e.g., *MARC~WERKS = [p_WERKS]*.
- **[Add Criteria Group]** adds a group of criteria.
  - The default structure for a criteria group is `([Table~Column1][Operator1][Filter-Value1][Boolean][Table~Column2][Operator2][Filter-Value2])` e.g., *(MARC~PSTAT = 'L' OR MARC~PSTAT = 'LB')*.

Tip

Combine multiple criteria and criteria groups to create complex filters e.g., *MARC~WERKS = 1000 AND (MARC~PSTAT = 'L' OR MARC~PSTAT = 'LB')* extracts only data where the column WERKS equals 1000 and the column PSTAT equals either 'L' or 'LB'.

### Components of the WHERE Clause Editor

The following buttons and options are available in the WHERE Clause Editor:

| Icon | Component | Function | | --- | --- | --- | | | Delete row | deletes a criteria. | | | Move row up | changes the sequence of the criteria. The selected criteria moves up. The sequence of criteria can also be changed with Drag and drop. | | | Move row down | changes the sequence of the criteria. The selected criteria moves down. The sequence of criteria can also be changed with Drag and drop. | | | Column | adds a column. Click on the component to select a column from the available tables. | | | SQL | adds an Open SQL statement, see [SAP Help: Open SQL](https://help.sap.com/doc/abapdocu_750_index_htm/7.50/en-us/abenopensql.htm). | | | Operator | adds an operator e.g., =, \<, >, etc. | | | Value | adds a static value of type *String*, *Number*, *Flag* or *List*. *List* offers a separate editor to create lists of type *String*, *Number* or *Select*. *Select* enables usage of SELECT statements. For more information, see [Working with Lists in the WHERE-Clause Editor](../../../knowledge-base/where-clause-editor-lists/). | | | Criteria | adds a new criteria after the selected criteria. | | | Group | adds a new group of criteria the selected criteria. | | | Parameter | adds a previously defined runtime parameter, see [Runtime Parameters](../edit-runtime-parameters/). |

Note

When adding or editing a criteria only the relevant components are displayed e.g., **Add Operator** is only available if there is a column or SQL statement to use an operator on.

#### Edit and Delete Components

- Click on a component to edit it. All areas that are marked green can be edited.
- To delete a component, click the (x) icon above the component.

### SAP System Fields

You can use [SAP system fields for date and time](https://help.sap.com/doc/abapdocu_751_index_htm/7.51/en-US/abentime_system_fields.htm) in a WHERE clause. The usage of SAP system fields requires SAP NW 7.4 SP5 or higher and the custom function module [/THEO/READ_TABLE](../../setup-in-sap/custom-function-module-for-table-extraction/#installation-of-theoread_table).

Example:

1. Navigate to [WHERE Clause Editor](#where-clause-editor) and select a column of the type Date *here: BUDAT* .
1. Delete the criterion "Value" and use the criterion "SQL" .
1. Within the "SQL" criterion, use the supported system fields for date and time with a preceding "@" character, *here: @sy-datum* .
1. Click **[Load live preview]** to check the result.

______________________________________________________________________

#### Related Links

- [Knowledge Base Article: Delta Table Extraction](../../../knowledge-base/delta-table-extraction/)
- [Knowledge Base Article: Working with Lists in the WHERE-Clause Editor](../../../knowledge-base/where-clause-editor-lists/)
- [Knowledge Base Article: LIKE Operand in WHERE Clauses](../../../knowledge-base/like-operand-where-clause/)
# Knowledge Base Articles

This section contains in-depth articles and sample use cases for Xtract for Alteryx.

### Xtract for Alteryx

- [Create an SAP Connection using the Xtract for Alteryx GUI](sap-connection-using-xfa-gui/)
- [Parameterization via Batch Macros](parameterization-via-batch-macros/)
- [Xtract for Alteryx Performance Considerations](xtract-for-alteryx-performance/)

______________________________________________________________________

### SAP

- [Check the Accessibility to an SAP System](check-the-accessibility-to-an-sap-system/)
- [Authorize Access to Reports via Authorization Groups](authorize-access-to-specific-reports/)
- [Create / Configure the Custom Authorization Object Z_TS_PROG](create-the-custom-authority-object-z-ts-prog/)
- [Enable Secure Network Communication (SNC) via X.509 certificate](enable-snc-using-pse-file/)
- [Import an SAP Transport Request](import-an-sap-transport-request/)
- [Supported SAP S/4HANA Versions](supported-sap-and-hana-versions/)

______________________________________________________________________

### Xtract BAPI

- [Create and Load Purchase Requisitions in SAP](create-and-load-purchase-requisitions-in-sap/)
- [Read and Download SAP Attachment Files](read-sap-attachment-files/)
- [Read Data from Cluster Fields in Tables PCL1 and PCL2 (Payroll)](read-data-from-cluster-fields-in-the-tables-pcl1-and-pcl2-payroll/)

______________________________________________________________________

### Xtract ODP

- [Alternatives for Xtract ODP](alternatives-for-odp/)
- [Delta Extraction of Sales and Customer Data from SAP](delta-extraction-of-sales-data/)

______________________________________________________________________

### Xtract ODP (OData)

- [Create OData Services using the SAP Gateway Builder](create-odata-services-using-the-sap-gateway-builder/)

______________________________________________________________________

### Xtract Report

- [Authorize Access to Reports via Authorization Groups](authorize-access-to-specific-reports/)
- [Create / Configure the Custom Authorization Object Z_TS_PROG](create-the-custom-authority-object-z-ts-prog/)
- [Extract Reports with ALV Layouts](extract-report-layouts/)
- [Parse Reports in Xtract for Alteryx](parse-reports/)

______________________________________________________________________

### Xtract Table

- [Extraction Mechanism of Table](table-extraction-mechanism/)
- [Delta Table Extraction](delta-table-extraction/)
- [Dynamic Table Extractions](dynamic-table-extractions/)
- [Read and Download SAP Attachment Files](read-sap-attachment-files/)
- [Read Data from Cluster Fields in Tables PCL1 and PCL2 (Payroll)](read-data-from-cluster-fields-in-the-tables-pcl1-and-pcl2-payroll/)
- [Working with Lists in the WHERE-Clause Editor](where-clause-editor-lists/)
- [Working with LIKE operand in WHERE-Clauses](like-operand-where-clause/)

The following article shows how to replace most Xtract ODP [provider contexts](../../documentation/odp/provider-context/) with other components.

Aside from the components presented in this article, Xtract for Alteryx offers the [Xtract ODP (OData)](../../documentation/odp-odata/) component that enables users to extract ODP data via OData protocol. While Xtract ODP (OData) covers all provider contexts, the extraction time for large data sets is longer compared to components that use the standard RFC protocol.

| Provider Context | Alternative | | --- | --- | | ABAP Core Data Services \[[ABAP_CDS](../../documentation/odp/provider-context/#abap-cds-views)\] | [Xtract Table](../../documentation/table/) | | HANA Information Views \[[HANA](../../documentation/odp/provider-context/#hana-views)\] | [Xtract Table](../../documentation/table/) [Xtract Cube](../../documentation/bwcube/) | | SAP NetWeaver Business Warehouse or BW4/HANA \[[BW](../../documentation/odp/provider-context/#bw-infoproviders)\] | [Xtract Cube](../../documentation/bwcube/) [Xtract Table](../../documentation/table/) | | Datasources/Extractors \[[SAPI](../../documentation/odp/provider-context/#extractors)\] | - | | SAP LT Queue Alias \[[SLT~your_queue_alias](../../documentation/odp/provider-context/#slt-server)\] | [Xtract Table](../../documentation/table/) |

### Extract Data from CDS Views

Alternative for the *ABAP Core Data Services [ABAP_CDS]* provider context:\
To extract data from CDS Views, use the [Xtract Table](../../documentation/table/) component.

Note

When looking up CDS Views in Xtract for Alteryx, make sure to look up the name of the DDL SQL View (CDS Database View) instead of the CDS View name.

### Extract Data from HANA Views

Alternative for the *HANA Information Views [HANA]* provider context:\
To extract data from HANA Views, use the [Xtract Cube](../../documentation/bwcube/) component or the [Xtract Table](../../documentation/table/) component.

- **Extraction via Xtract Table**

  ______________________________________________________________________

  - In SAP, expose the HANA View to ABAP CDS Views, see [SAP Community: How to consume HANA Calculation views in S/4HANA CDS views](https://community.sap.com/t5/technology-blogs-by-members/how-to-consume-hana-calculation-views-in-s-4hana-cds-views/ba-p/13476798).
  - Extract the CDS View using the [Xtract Table](../../documentation/table/) component.

- **Extraction via Xtract Cube**

  ______________________________________________________________________

  - In SAP, expose the HANA View to CompositeProviders, see [SAP Learning: Consuming a Calculation View with SAP BW/4HANA](https://learning.sap.com/learning-journeys/upgrading-your-sap-bw-skills-to-sap-bw-4hana/consuming-a-calculation-view-with-sap-bw-4hana_ac069075-173b-41fb-bb35-b950b213d407)
  - Extract the CompositeProvider using the [Xtract Cube](../../documentation/table/) component.

### Extract Data from BW Systems (CompositeProviders, Cubes, InfoObjects, etc.)

Alternative for the *SAP NetWeaver Business Warehouse or BW4/HANA [BW]* provider context:

- To extract data from CompositeProviders, InfoCubes, MultiProviders, aDSO/DSOs etc., use the [Xtract Cube](../../documentation/bwcube/) component.
- To extract data from InfoObjects (Master data, Text data or Hierarchies), look up the respective tables (P, T, H) in the [Xtract Table](../../documentation/table/) component.
- To extract data from Hierarchy InfoObjects, use the [Xtract Hierarchy](../../documentation/hierarchy/) component.

### Extract Data from Tables

Alternative for the *SAP LT Queue Alias [SLT~your_queue_alias]* provider context:\
To extract data from regular (application) tables, cluster or pooled tables, use the [Xtract Table](../../documentation/table/) component.

______________________________________________________________________

#### Related Links

- [Guidance on SAP Note 3255746 for Theobald Software Xtract Products](https://theobald-software.com/en/products-technology-en/guidance-on-sap-note-3255746-for-theobald-software-xtract-products/).
- [Create (ODP) OData Services using the SAP Gateway Builder](../create-odata-services-using-the-sap-gateway-builder/)

The following article shows how to set up access to reports by assigning authorization groups to reports.\
Access is then granted through the S_PROGRAM authorization object, see [SAP Note 338177](https://launchpad.support.sap.com/#/notes/338177).

### Set Up Access to Specific Reports

1. Log into SAP and use transaction code SE38 to open the ABAP Editor.
1. Enter the name of the report you want to access and select **Attributes** as the *Subobjects*.
1. Click **[Change]**. A window that contains the program attributes opens.
1. Assign an authorization group.
1. Edit or create a user role you want to grant access to (transaction code PFCG).
1. Manually assign the authorization object S_PROGRAM to the user role.
1. Select the actions **SUBMIT** and **BTCSUBMIT** in the S_PROGRAM object field *P_ACTION*.
1. Assign the same authorization group that is assigned to the report to the S_PROGRAM object field *P_GROUP*.
1. Save and generate the authorization.
1. Assign the user role to users.

______________________________________________________________________

#### Related Links

- [Create the Custom Authorization Object Z_TS_PROG](../create-the-custom-authority-object-z-ts-prog/)
- [SAP Authorization Objects for Reports](../../documentation/setup-in-sap/sap-authority-objects/#report)
- [Documentation: Report](../../documentation/report/)

The following article shows how to load data incrementally (daily) from an SAP Table with no delta pointers / date fields. The depicted example scenario uses two tables:

- MAKT (Material Descriptions), which has no date fields.
- CDHDR (Change Documents Header), which holds the header information of the changed records. CDHDR is used to determine the delta information of MAKT and other tables.

### Prerequisites

- Prepare a record for the delta extraction:\
  Change the description of a material in MAKT, e.g., change the description “ABC” of material 2593 to "Test_delta”.
- Check if CDHDR registered the change:\
  Filter the field UPDATE for today's date. The change made in MAKT should be listed.

### Daily Data Extraction

The following steps describe how to only extract the data from MAKT that has been changed on today’s date.

1. Create a new Table extraction.

1. Look up the tables MAKT and CDHDR.

1. Select the fields OBJECTID and UDATE from CDHDR for the output.

   - OBJECTID contains information about the Key on which the changes are made. This field is used for joining the tables and to get the delta data from MAKT.
   - UDATE contains the date on which updates occurred. This field is used to filter the data for specific dates.

1. Select the fields you want to extract from MAKT for the output (MATNR is mandatory).

1. Open the tab *Joins* and click **[Add]**. The window "Join" opens.

1. Select the join type *INNER_JOIN* to combine the tables CDHDR and MAKT. The OBJECTID from CDHDR and MATNR from MAKT have same entries and thus form an inner join condition.

1. Click **[Add]** and confirm your selection with **[OK]**.

1. Open the tab *WHERE Clause* and enter the following filter criteria:

   ```text
   CDHDR~UDATE = '#{ DateTime.Now.ToString("yyyyMMdd") }#'

   ```

   This criteria uses script expressions to get the current date in the SAP format ("yyyyMMdd").

1. Click **[Load live review]** to check the results. Only the data in MAKT that has been changed on today's date is extracted.

1. Schedule the workflow daily.

Tip

To extract all changes of the day before, change the WHERE clause to `CDHDR~UDATE >= '#{ DateTime.Now.AddDays(-1).ToString("yyyyMMdd") }#'` and schedule the extraction every night at 1p.m. or later.

______________________________________________________________________

#### Related Links

- [Delta Table Extraction](../delta-table-extraction/)
- [Xtract Table: WHERE Clause](../../documentation/table/where-clause/)

The following article shows how to check the accessibility of an SAP system using the [paping.exe](https://code.google.com/archive/p/paping) tool. Alternatively, you can also use the Microsoft [telnet](https://learn.microsoft.com/de-de/windows-server/administration/windows-commands/telnet) tool.

Sometimes the firewall is blocking the traffic to the SAP System. This could be a local firewall, but also a firewall in the destination network. You can use the paping.exetool to ping the port and to check if the firewall is open.

### Ping the SAP System

Use the following syntax with paping.exe:

```console
paping.exe SAPServer -p port -c 3*

```

```console
paping.exe 192.168.0.9 -p 3305 -c 3

```

### Port Numbers

If an SAP-Router is used, the ports are 3299 and 3399.\
If not, the ports are 32XX and 33XX. XX is usually the system number, e.g., 00, or 05.

Some important port numbers:

```console
sapdp00 3200/tcp # SAP Dispatcher. 3200 + Instance-Number
sapgw00 3300/tcp # SAP Gateway. 3300 + Instance-Number
sapsp00 3400/tcp # 3400 + Instance-Number
sapms00 3500/tcp # 3500 + Instance-Number
sapmsSID 3600/tcp # SAP Message Server. 3600 + Instance-Number
sapgw00s 4800/tcp # SAP Secure Gateway 4800 + Instance-Number

```

The following article shows how to use the Xtract BAPI component of Xtract for Alteryx to create a new purchase requisition in SAP and how to load the data of the purchase requisition into Alteryx.

### About this Workflow

This article leads you through all necessary steps to set up the following workflow:

- Create a new purchase requisition in an SAP ERP system.\
  This process uses a simple input table that contains the data for the purchase requisition.
- Use the new purchase requisition number to load the details of the purchase requisition into Alteryx.\
  This process uses an input parameter and a batch macro to pass the input parameter to the Xtract BAPI component.

Note

When using Xtract for Alteryx version 1.18 and below tables can be passed to the Xtract BAPI component directly via an input anchor, while single values require the use of batch macros. As of Xtract for Alteryx version 1.19 all input parameters can be passed to the Xtract BAPI component without batch macros.

[Download Workflow](../../assets/files/xfa/BAPI-ERP-ReadAndWriteWithMacro.yxzp)

| SAP System | SAP Objects | Xtract for Alteryx Component | | --- | --- | --- | | SAP ERP | *BAPI_REQUISITION_CREATE* (Create Purchase Requisition) *BAPI_REQUISITION_GETDETAIL* (Display Purchase Requisition Details) | Xtract BAPI |

### Prerequisites

To use the Xtract BAPI component, access to the designated authority objects (RFC) in SAP must be available, see [SAP User Rights: BAPI](../../documentation/setup-in-sap/sap-authority-objects/#bapi).

### Create a new Purchase Requisition in SAP

Follow the steps below to create a new purchase requisition in SAP:

1. Drag & drop the Xtract BAPI component into your Alteryx workflow .
1. Select an SAP connection . If no SAP connection is available, create a new connection, see [Documentation: SAP Connection](../../documentation/sap-connection/).
1. Click **[Edit]** to open the main window of the Xtract BAPI component.
1. In the main window of the component click . The window “Function Module Lookup” opens.
1. In the field **Function Name** enter the name of the BAPI *BAPI_REQUISITION_CREATE*. Use wildcards (\*), if needed.
1. Click and select the BAPI *BAPI_REQUISITION_CREATE* from the displayed list .
1. Click **[OK]**. The window "Function Module Lookup" closes.
1. In the tab *Tables* of the Xtract BAPI component click to look up the names and data types of the table REQUISITION_ITEMS. Use this information to prepare the input data of the purchase requisition:
1. Connect the input data to the Xtract BAPI component .
1. Open the Xtract BAPI component.
1. In the tab *Tables* assign the input data to the table REQUISITION_ITEMS.
1. Add the tables REQUISITION_ITEMS and RETURN to the output of the Xtract BAPI component.
1. In the tab *Exports* add the export parameter NUMBER for the output.
1. Click **[OK]** to save the settings.
1. Select the Xtract BAPI component and activate the option **Commit work in SAP after execution**.

The Xtract BAPI component can now be used to create purchase requisitions in SAP.

### Load Purchase Requisition Data from SAP

Follow the steps below to create a [batch macro](http://downloads.alteryx.com/betawh_xnext/BatchMacro.htm) that loads the SAP purchase requisition data of any given purchase requisition number:

1. Create a new workflow.
1. Drag & drop the Xtract BAPI component into your Alteryx workflow .
1. Select an SAP connection . If no SAP connection is available, create a new connection, see [Documentation: SAP Connection](../../documentation/sap-connection/).
1. Click **[Edit]** to open the main window of the Xtract BAPI component.
1. In the main window of the component click . The window “Function Module Lookup” opens.
1. In the field **Function Name** enter the name of the BAPI *BAPI_REQUISITION_GETDETAILS*. Use wildcards (\*), if needed.
1. Click and select the BAPI *BAPI_REQUISITION_GETDETAILS* from the displayed list.
1. Click **[OK]**. The window "Function Module Lookup" closes.
1. In the main window of the component click **[Edit Parameters]**. The window "Edit Runtime Parameters" opens.
1. Click **[Add Scalar]** to define a new input parameter for the Xtract BAPI component. The depicted example uses a string parameter *Req_Number* to represent the purchase requisition number.
1. Click **[OK]**. The window "Edit Runtime Parameters" closes.
1. In the *Imports* tab assign the parameter *Req_Number* to the import parameter NUMBER.
1. In the *Tables* tab add the tables REQUISITION_ITEMS and RETURN to the output of the Xtract BAPI component.
1. Click **[OK]** to save the settings of the Xtract BAPI component.
1. Navigate to the Alteryx workflow configuration and set the workflow type to \**Batch Macro*.
1. Save the workflow.
1. Add a **Control Parameter** tool from the *Interface* toolbox. Label the parameter *Req Number Input*.
1. Connect the **Control Parameter** tool to the Xtract BAPI component. This creates the *Action* tool **Update Value**.
1. Select the **Update Value** tool and mark the Xtract BAPI parameter *Req_Number* in the tree menu *Value or Attribute to Update* to map the parameters.
1. Add two **Macro Output** tools from the *Interface* toolbox to create outputs for the batch macro.
1. Connect the output of the Xtract BAPI component to the **Macro Output** tools.
1. Save the macro.

The batch macro can now be used to load SAP purchase requisition data of any given purchase requisition number.

______________________________________________________________________

#### Related Links

- [Documentation: Xtract BAPI](../../documentation/bapi/)
- [Sample Workflows](../../sample-workflows/)

This article shows how to use the SAP Gateway Builder to create OData services that provide ODP based data for the [Xtract ODP (OData) component](../../documentation/odp-odata/) of Xtract for Alteryx.

Note

This article focuses on SAP on-premise systems.\
For information on how to create OData services in the SAP cloud, refer to [SAP Help: Setting up Communication Management](https://learning.sap.com/learning-journeys/implement-sap-s-4hana-cloud-public-edition-for-sourcing-and-procurement/setting-up-communication-management_a913171c-c96d-47a9-81ec-dc9ee8754320).

### Prerequisites

- SAP NetWeaver Gateway Release 2.0 Support Package 4 or higher. In SAP S/4HANA, the Gateway is embedded, but needs to be activated.
- SAP user with access to the SAP Gateway Service Builder.
- To extract data using the BW InfoProvider (ODP context BW), an open hub license is required.
- Optional: to transport services from one SAP system to another, e.g., from a test environment to a production environment, authorization for CTS (Change and Transport System) is required.

Tip

To test services directly in SAP, activate the SAP Gateway Client via transaction /IWFND/GW_CLIENT.

### Workflow

The creation of OData services can be divided into the following phases:

1. **Service Definition Phase:**\
   Create a project to bundle all artifacts that are needed to develop a service.
1. **Data Model Definition Phase:**\
   Define the model that the service is based on, e.g., entity types, associations, etc.).
1. **Service Implementation Phase:**\
   Implement the operations that are supported by the service.
1. **Service Maintenance Phase:**\
   Register and activate the service in an SAP Gateway system.

### Service Definition

Follow the steps below to create a project that bundles all artifacts necessary to develop a service:

1. Log in to the SAP GUI.
1. Go to transaction SEGW. The SAP Gateway Builder opens.
1. Click **Create Project** ().
1. Enter a name and description for the OData service.
1. In the field **Project Type**, select *Service with SAP Annotations*.
1. If you want to transport the service to another SAP system, define a transport package.\
   Otherwise, enter *$TMP* (temporary objects).
1. Click **Continue** () to create the project.

The new project is listed in the main window of the SAP Gateway Builder.

### Data Model Definition

Follow the steps below to define the model the service is based on:

1. In the main window of the SAP Gateway Builder, select your project and navigate to the *DataModel* directory of the project.

1. Right-click the *DataModel* directory and select **Redefine > ODP Extraction** from the context menu.

   The window "Wizard step 1: OData access for Operational Data Provisioning" opens.

1. In the field **ODP Context**, select a provider context that can access the SAP data source you want to extract. For more information, see [Documentation: Provider Context](../../documentation/odp/provider-context/). The depicted example uses the *DataSources/Extractors* context.

1. In the field **ODP Name**, select an existing ODP object. The depicted example uses the *0CUSTOMER_ATTR* extractor.

1. Click **[Add ODP]** to add the ODP object to the data model.

   Tip

   An OData service can access multiple ODP objects.

1. Click **Next** to continue on to step 2 of the Wizard.

1. Fill out any missing information and click **Next**. The window "Create Object Directory Entry" opens.

1. If you want to transport the service to another SAP system, define a transport package. If not, click **Save** () to continue on to step 3 of the Wizard.

1. Use the file tree menu to select the entities and artifacts you want to add to the service.

   Note

   - *EntityOf* defines the structure of your data. Select the fields you want to add to the service.
   - *DeltaLinksOfEntity* contains delta links that are required to retrieve only changes (new, updated, or deleted records) to the dataset instead of fetching the entire dataset. Select all items to activate delta updates.
   - *SubscribedToEntity* checks whether a client is subscribed to tracking delta changes. Select this artifact to activate delta updates.
   - *TerminateDeltasForEntity* allows the client to stop tracking delta changes. Select this artifact to clean up unnecessary delta subscriptions.
   - *entityOf* defines the relationship between entities in the OData services, e.g., it links the main entity (*EntityOf*) with its delta-tracking entity (*DeltaLinksOfEntity*).

1. Click **Finish** ().

The subdirectories of the *DataModel* directory now contain the selected entities and artifacts.

### Service Implementation

When using the Wizard during the [Data Model Definition](#data-model-definition), the service implementation is auto-generated based on the underlying ODP framework.

The following use cases require manual adjustments:

- Modify how data is retrieved, e.g., to filter or transform the data before returning it to the client.
- Add custom business logic, e.g., to trigger additional actions when data is created/updated.
- Expose custom function imports, e.g., to execute a custom SAP function.

### Generate the Service

Before the service can be activated, follow the steps below to generate the runtime objects of the service:

1. In the main window of the SAP Gateway Builder, select your project.
1. Click **Generate Runtime Objects** (). The window "Model and Service Definition" opens.
1. Click **Continue** (). The window "Create Object Directory Entry" opens.
1. If you want to transport the service to another SAP system, define a transport package. If not, click **Save** ().

The runtime objects for the service are now generated.

### Service Maintenance

Follow the steps below to register and activate the service:

1. Go to transaction /n/IWFND/MAINT_SERVICE. The "Activate and Maintain Services" menu opens.

1. Click **Add Service**. The menu "Add Selected Services" opens.

1. In the field **System Alias**, select *LOCAL*.

1. Click **Get Services** to display a list of all services on your SAP system.

1. Select the service you want to register.

   Tip

   Use **Find** () to look up the service.

1. Click **Add Selected Services**. The window "Add Service" opens.

1. Check the service information and click **Continue** (). The window "Add Service" closes.

1. Exit the "Add Selected Services" menu and check if the service is now listed in the service catalog.

The service can now be consumed by Xtract for Alteryx's Xtract ODP (OData) component.

______________________________________________________________________

#### Related Links

- [SAP Help: SAP Gateway Service Builder](https://help.sap.com/docs/SAP_NETWEAVER_AS_ABAP_751_IP/68bf513362174d54b58cddec28794093/cddd22512c312314e10000000a44176d.html)
- [SAP Learning: Building OData Services with SAP Gateway](https://learning.sap.com/learning-journeys/building-odata-services-with-sap-gateway)
- [SAP Help: ODP-Based Data Extraction via OData](https://help.sap.com/doc/saphelp_nw75/7.5.5/en-US/11/853413cf124dde91925284133c007d/frameset.htm)

The following article shows how to create the Z_TS_PROG authorization object for the custom function module The Theobald Software custom function module [Z_XTRACT_IS_REMOTE_REPORT](../../documentation/setup-in-sap/custom-function-module-for-reports/) enables the extractions of reports from SAP systems.

The Theobald Software custom function module Z_XTRACT_IS_REMOTE_REPORT enables the extractions of reports from SAP systems. If no authorization group is assigned to a report, Z_XTRACT_IS_REMOTE_REPORT uses a custom authorization object Z_TS_PROG to verify whether the SAP user is allowed to extract a report. The access to reports is granted based on the name of the report.

### Create the Custom Authorization Object Z_TS_PROG

1. Use transaction SU21 to create a new authorization object.
1. Expand the *Create* menu and click **[Authorization Object]**. The window "Create Authorization Object" opens.
1. Enter the following values:\
   **Object:** Z_TS_PROG\
   **Text:** Theobald Software Report Authorization
1. Click **[Continue]** to enable editing of the section *Authorization fields*.
1. Manually enter S_NAME as the first entry in *Authorization fields*.
1. Click **[Save]** to save the authorization object.

### Configure the Custom Authorization Object Z_TS_PROG

1. Either download the provided [SAP role](../../documentation/setup-in-sap/sap-authority-objects/#sap-authorization-profiles) or manually [create the Custom Authorization Object Z_TS_PROG](#create-the-custom-authorization-object-z_ts_prog).
1. Enter the change mode within the "Role Maintenance" window to configure the object.
1. Navigate to *Authorizations* and click *Change Authorization Data* (). The window "Change Role: Authorizations" opens.
1. Expand the tree view **Basis: Administration > Theobald Software authorization for reports**.
1. Click **[]**. The window "Field values" opens.
1. Enter the names of relevant ABAP reports and transfer the corresponding values.

______________________________________________________________________

#### Related Links

- [Authorize Access to Reports via Authorization Groups](../authorize-access-to-specific-reports/)
- [SAP Authorization Objects for Reports](../../documentation/setup-in-sap/sap-authority-objects/#report)

This article provides examples on how to handle SAP credentials and authorization for Xtract for Alteryx workflows on the Alteryx Server.

### About the Use Case

When creating workflows, it is common for the creator to provide their own SAP credentials. Once the workflow is shared with other users on the Alteryx Server, it can be necesary for the users to provide their own SAP credentials to meet security guidelines. As Xtract for Alteryx does not support external management of credentials by Alteryx's Data Connection Manager (DCM), alternative approaches are necessary to ensure data security.

The examples presented in this article are no best practices or recommendations. The following are suggestions that have been implemented by users.

### Single Technical User

One way to ensure that no unauthorized users have access, is by controlling which Gallery Users are allowed to run the workflow on the Alteryx Server. How to set up the workflow authorization:

1. Set up your workflow with an [SAP connection](../../documentation/sap-connection/) that uses the credentials of an SAP Technical User.
1. Share your workflow on an Alteryx Server.
1. Use the authorization options provided by Alteryx to control which users can run the workflow. Examples:
   - Use *Collections* to control access by inviting only users or groups to the collection that should have access and assign "Run" permissions to the allowed users.
   - Restrict access in the workflow settings to remove any public or unwanted access.
   - If the Alteryx Server is connected to an authentication system (e.g., EntraID), set permissions at the user level or group level.

### Analytic App

How to make workflows executable by other Gallery Users using an Alteryx [Analytic App](https://help.alteryx.com/current/en/designer/apps-and-macros/analytic-apps.html):

1. Set up your workflow as an Analytic App.
1. On the Alteryx Server the Gallery Users create their own [SAP connection in the DCM](../../documentation/sap-connection/) with their personal SAP login credentials.
1. When executing the app, the Gallery Users can select their SAP connection via a drop-down list.

Tip

This approach also allows the use of different SAP instances.

The following article shows how to use the Xtract ODP component of Xtract for Alteryx to load sales documents and customer master data from an SAP ERP system.

### About this Workflow

This article leads you through all necessary steps to set up the following workflow:

- Load all customer master data from the SAP ERP system
- Process the extracted SAP data
- Load sales data using the delta mechanism of the Xtract ODP component

The delta mechanism of the Xtract ODP component allows loading only the added or changed data (since the last run) from an SAP ERP system.

[Download Workflow](../../assets/files/xfa/ODP-ERP-Delta.yxmd)

| SAP System | SAP Objects | Xtract for Alteryx Component | | --- | --- | --- | | SAP ERP | BW Extractors: *2LIS_11_VAITM* (Sales Document Item Data) & *0CUSTOMER_ATTR* (Customer Master Data) | Xtract ODP |

### Prerequisites

To use the Xtract ODP component, multiple prerequisites must be met, see [Documentation: ODP - Prerequisites](../../documentation/odp/#prerequisites).

### Delta Extraction of Sales Documents

Follow the steps below to load sales data from your SAP ERP system:

1. Drag & drop the Xtract ODP component into your Alteryx workflow .
1. Select an SAP connection . If no SAP connection is available, create a new connection, see [Documentation: SAP Connection](../../documentation/sap-connection/).
1. Click **[Edit]** to open the main window of the Xtract ODP component.
1. In the main window of the component click . The window “Operational Data Provider Lookup” opens.
1. In the field **Name** enter the name of the sales data extractor: *2LIS_11_VAITM*. Use wildcards (\*), if needed.
1. Click and select the *2LIS_11_VAITM* extractor from the displayed list .
1. Click **[OK]**.
1. Select the fields you want to add to the output of the Xtract ODP component. For more information on selections and filters, see [Documentation: Xtract ODP - Selections](../../documentation/odp/selections/).
1. In the section *Update Mode* select the option **Delta Update** to only load data from the SAP system that was added or changed since the last run. By default, the first run loads all data from the SAP system. Deactivate the *On delta initialization* option **Extract data** to prevent loading of any data on the first run.\
   For more information on selections and filters, see [Documentation: Xtract ODP - Update Mode](../../documentation/odp/update-mode/).
1. Click **[Load live preview]** to display a live preview of the data without running an extraction.
1. Click **[OK]** to save your input.

The Xtract ODP component can now be used to access and process the extracted SAP sales data.

### Extraction of Customer Master Data

Follow the steps below to load customer master data from your SAP ERP system:

1. Drag & drop the Xtract ODP component into your Alteryx workflow .
1. Select an SAP connection . If no SAP connection is available, create a new connection, see [Documentation: SAP Connection](../../documentation/sap-connection/).
1. Click **[Edit]** to open the main window of the Xtract ODP component.
1. In the main window of the component click . The window “Operational Data Provider Lookup” opens.
1. In the field **Name** enter the name of the customer master data extractor: *0CUSTOMER_ATTR*. Use wildcards (\*), if needed.
1. Click and select the *0CUSTOMER_ATTR* extractor from the displayed list .
1. Click **[OK]**.
1. Select the fields you want to add to the output of the Xtract ODP component. For more information on selections and filters, see [Documentation: Xtract ODP - Selections](../../documentation/odp/selections/).
1. Click **[Load live preview]** to display a live preview of the data without executing an extraction.
1. Click **[OK]** to save your input.

The Xtract ODP component can now be used to access and process the extracted SAP customer data.

______________________________________________________________________

#### Related Links

- [Alteryx Community - ODP based Delta Extraction of Sales and Customer Data from SAP ERP with Xtract for Alteryx](https://community.alteryx.com/t5/Community-Gallery/ODP-based-Delta-Extraction-of-Sales-and-Customer-Data-from-SAP/ta-p/1140120)
- [Documentation: Xtract ODP (Operational Data Provisioning)](../../documentation/odp/)
- [Sample Workflows](../../sample-workflows/)

The following article shows how to load data incrementally (daily) from an SAP Table based on date fields. The depicted example scenarios use the table VBAK (SAP Sales Document Header), which has two date fields:

- ERDAT for creation date
- AEDAT for update date

### Extract Data using a Date Parameter

The depicted example extracts data that was created or changed after a specific date. The date is provided as a parameter at runtime.

1. Create a new Xtract Table extraction.

1. Look up a table you want to extract data from, e.g., VBAK.

1. Open the WHERE clause tab of theXtract Table component and enter the following criterion:

   ```text
   ( VBAK~ERDAT GE @LastDate AND VBAK~AEDAT EQ '00000000' ) OR VBAK~AEDAT GE @LastDate

   ```

   This criterion extracts data if one of the following conditions is true:

   - The data was created (ERDAT) after the date provided by the parameter `@LastDate` and it has not been changed (AEDAT).
   - The data has changed (ARDAT) after the date provided by the parameter `@LastDate`.

1. Click **[OK]** to confirm your input.

1. Create a runtime parameter `LastDate` of type string.

1. Enter a value for `LastDate` in the format `YYYYmmDD` when running the workflow.

1. Check the results.

### Daily Data Extraction

The depicted example extracts data that was created or changed the day before. The depicted example uses script expressions to query the current date.

1. Create a new Table extraction.

1. Look up a table you want to extract data from, e.g., VBAK.

1. Open the WHERE clause tab of the Table component and enter the following criterion:

   ```text
   (ERDAT >= '#{ DateTime.Now.AddDays(-1).ToString("yyyyMMdd") }#' AND AEDAT = '00000000') OR AEDAT >= '#{ DateTime.Now.AddDays(-1).ToString("yyyyMMdd") }#'` <br>

   ```

   This criterion extracts data if one of the following conditions is true:

   - The data was created (ERDAT) the day before the current date and it has not been changed (AEDAT).
   - The data has changed (ARDAT) the day before the current date.

1. Click **[OK]** to confirm your input.

1. Run the workflow.

The extraction can be scheduled every night at 1p.m. or later to extract all changes of the day before. Providing extraction dates is not necessary.

______________________________________________________________________

#### Related Links

- [Xtract Table: WHERE Clause](../../documentation/table/where-clause/)

The following article shows how to use the Xtract Table component of Xtract for Alteryx with different types of runtime parameters.

### About this Workflow

This article leads you through all necessary steps to set up the following workflow:

- Pass a single value as a runtime parameter to an Xtract Table component, see [Scalar Parameters](#scalar-parameters).
- Pass a list of values as a runtime parameter to an Xtract Table component, see [List Parameters](#list-parameters).
- Pass multiple runtime parameters to an Xtract Table component, see [Multiple Parameters](#multiple-parameters).

[Download Workflow](../../assets/files/xfa/Table-Dynamic-Parameters.yxmd)

| SAP System | SAP Objects | Xtract for Alteryx Component | | --- | --- | --- | | SAP S/4HANA | SAP Table: *ACDOCA* (Universal Journal Entry Line Items) | Xtract Table |

### Prerequisites

To use the Xtract Table component, access to the designated authority objects (RFC) in SAP must be available, see [SAP User Rights: Table](../../documentation/setup-in-sap/sap-authority-objects/#table).

### Scalar Parameters

Follow the steps below to pass a single value as a runtime parameter to the Xtract Table component.\
The depicted example uses the runtime parameter to dynamically filter SAP journal entries based on the fiscal year of the entry.

1. Drag & drop the Xtract Table component into your Alteryx workflow .

1. Select an SAP connection . If no SAP connection is available, create a new connection, see [Documentation: SAP Connection](../../documentation/sap-connection/).

1. Click **[Edit]** to open the main window of the Xtract Table component.

1. [Look up](../../documentation/table/#look-up-an-sap-table) an SAP table, e.g., *ACDOCA* (Universal Journal Entry Line Items).

1. Click **[Edit Parameters]**. The window "Edit Runtime Parameters" opens.

1. Click **[Add Scalar]** to create a new runtime parameter for passing single values.

   Tip

   Parameter0..-n is the default naming for added runtime parameters. You can enter a name of your choice, e.g., PARAM.

1. Click the drop-down menu and assign a data type to the parameter. The data types can, but don’t need to correlate to SAP data types.

1. Click **[OK]** to save the runtime parameter.

1. Define a WHERE clause to filter the SAP data using the runtime parameter created in step 6.\
   Example: `ACDOCA~GJAHR >= [PARAM]` only extracts SAP journal entries that contain the fiscal year provided by the runtime parameter PARAM.

1. Click **[Load live preview]** to display a live preview of the data without running the extraction.\
   When prompted, provide a value for the runtime parameter, e.g., `2023`.

1. Click **[OK]** to save the extraction.

1. Create/add input values for the runtime parameter in your workflow. Make sure that the name and data type of the input matches the name and data type of the runtime parameter created in step 6.

1. Connect the input value to the input anchor "P" of the Xtract Table component . The input is automatically mapped to the runtime parameter.

The Xtract Table component can now be used to dynamically filter SAP data.

### List Parameters

Follow the steps below to pass a list of values as a runtime parameter to the Xtract Table component.\
The depicted example uses the runtime parameter to dynamically filter SAP journal entries based on a list of booking dates.

1. Drag & drop the Xtract Table component into your Alteryx workflow .

1. Select an SAP connection . If no SAP connection is available, create a new connection, see [Documentation: SAP Connection](../../documentation/sap-connection/).

1. Click **[Edit]** to open the main window of the Xtract Table component.

1. [Look up](../../documentation/table/#look-up-an-sap-table) an SAP table, e.g., *ACDOCA* (Universal Journal Entry Line Items).

1. Click **[Edit Parameters]**. The window "Edit Runtime Parameters" opens.

1. Click **[Add List]** to create a new runtime parameter that can pass multiple values.

   Tip

   Parameter0..-n is the default naming for added runtime parameters. You can enter a name of your choice, e.g., PARAM.

1. Click **[OK]** to save the runtime parameter.

1. Define a WHERE clause to filter the SAP data using the runtime parameter created in step 6.\
   Example: `ACDOCA~BUDAT IN [PARAM]` only extracts SAP journal entries that contain the booking dates provided by the runtime parameter PARAM.

1. Click **[Load live preview]** to display a live preview of the data without running the extraction.\
   When prompted, provide a value for the runtime parameter, e.g., `20171008,20181008`.

1. Click **[OK]** to save the extraction.

1. Create/add input values for the runtime parameter in your workflow. Make sure that the name and data type of the input matches the name and data type of the runtime parameter created in step 6.

1. Connect the input value to the input anchor "P" of the Xtract Table component . The input is automatically mapped to the runtime parameter.

The Xtract Table component can now be used to dynamically filter SAP data.

### Multiple Parameters

Follow the steps below to pass a multiple runtime parameters to the Xtract Table component.\
The depicted example uses the runtime parameters to dynamically filter SAP journal entries based on lists of customer numbers and fiscal years.

1. Drag & drop the Xtract Table component into your Alteryx workflow .

1. Select an SAP connection . If no SAP connection is available, create a new connection, see [Documentation: SAP Connection](../../documentation/sap-connection/).

1. Click **[Edit]** to open the main window of the Xtract Table component.

1. [Look up](../../documentation/table/#look-up-an-sap-table) an SAP table, e.g., *ACDOCA* (Universal Journal Entry Line Items).

1. Click **[Edit Parameters]**. The window "Edit Runtime Parameters" opens.

1. Click **[Add List]** to create new runtime parameters that can pass multiple values.

   Tip

   Parameter0..-n is the default naming for added runtime parameters. You can enter a name of your choice, e.g., PARAM.

1. Click **[OK]** to save the runtime parameter.

1. Define a WHERE clause to filter the SAP data using the runtime parameters created in step 6.\
   Example: `(ACDOCA~KUNNR IN [PARAM1]) AND (ACDOCA~GJAHR IN [PARAM2])` only extracts SAP journal entries that contain the customer numbers provided by the runtime parameter PARAM1 and that contain the fiscal years provided by runtime parameter PARAM2.

1. Click **[Load live preview]** to display a live preview of the data without running the extraction.\
   When prompted, provide a value for the runtime parameter, e.g., `USCU_S13,USCU_L04` for PARAM1 and `2020,2021` for PARAM2.

1. Click **[OK]** to save the extraction.

1. Create/add input values for the runtime parameters in your workflow. Make sure that the name and data type of the input matches the name and data type of the runtime parameter created in step 6.

1. Connect the input value to the input anchor "P" of the Xtract Table component . The input is automatically mapped to the runtime parameters.

The Xtract Table component can now be used to dynamically filter SAP data.

______________________________________________________________________

#### Related Links

- [Documentation: Xtract Table](../../documentation/table/)
- [Sample Workflows](../../sample-workflows/)

The following article describes how to establish an SNC connection to an SAP source system.

The depicted approach uses an X.509 certificate that provides the logon data of the Windows AD user. The correctness of this X.509 certificate is ensured via the company's internal certification authority (ca).

### Workflow

1. Upon connection start, the Secure Login Client retrieves the SNC name from the SAP NetWeaver AS ABAP.
1. The Secure Login Client uses the authentication profile for this SNC name.
1. The user unlocks the security token, for example, by entering the PIN or password.
1. The Secure Login Client receives the X.509 certificate from the user security token.
1. The Secure Login Client provides the X.509 certificate for single sign-on and secure communication between SAP GUI or Web GUI and the AS ABAP.
1. The user is authenticated and the communication is secured.

Tip

The configuration of the X.509 certificate should be implemented by the network & SAP Basis team and requires basic knowledge in this area.

### Requirements

The following system settings are a prerequisite for using this SNC solution:

- Install the [Secure Login Client](https://help.sap.com/viewer/df185fd53bb645b1bd99284ee4e4a750/3.0/en-US/da610fd072e4409baa8b6a96973b5c67.html).
- The SAP application server is configured and activated for Secure Network Communication (SNC).
- The SNC standard library *sapcryptolib* is used as the SNC solution.
- The following SNC parameters are configured:

| SNC parameter | Value | Example | | --- | --- | --- | | snc/gssapi_lib | Path and file name where the SAP Cryptographic Library is located. | *$(DIR_EXECUTABLE)\\sapcrypto.dll* | | snc/identity/as | Application server's SNC name Syntax: p:\<Distinguished_Name> The Distinguished Name part must match the Distinguished Name that you specify when creating the SNC PSE. | *p:CN=saperp.theobald.local* |

### Step-by-Step Guide

Follow the steps below to set up the SNC connectivity ins SAP:

1. Generate the certificate for the application server and AD-user context from common Certificate Authority (ca).

   Note

   The X.509 certificate is available when placed in folder **Certmgr > Personal > Certificates** within Windows certificate store (user).

1. Convert the .pfx file to SAP PSE format e.g., `sapgenpse.exe import_p12 -p cert.pse cert.pfx`.

1. Import the created PSE file via **TA STRUST > Edit mode > PSE Import > PSE Save as SNC Libcrypto**.

1. Edit the SNC configuration of the corresponding SAP user via transaction SU01 > **SNC** > **SNC Name** = p:\<Full Distinguished_Name>, e.g., `p:EMAIL="RandomUser@domain",CN="Random User",OU="Users",OU="TheobaldSoftware",DC="theobald",DC="local"`.

1. Set up SNC authentication in the Xtract for Alteryx SAP connection settings.

______________________________________________________________________

#### Releated Links

- [SAP Help: Workflow with X.509 Certificate without Secure Login Server](https://help.sap.com/viewer/df185fd53bb645b1bd99284ee4e4a750/3.0/en-US/06d9e59a0fd44aa4aa082ffad7d618e3.html)
- [SAP Help: Secure Network Communications (SNC)](https://help.sap.com/doc/saphelp_nw70/7.0.31/en-us/e6/56f466e99a11d1a5b00000e835363f/content.htm?no_cache=true)
- [SAP Help: Configuring SNC: External Programs AS ABAP Using RFC](https://help.sap.com/doc/saphelp_nwpi71/7.1/en-US/d9/e8a740bbaa4d8f8bee6f7b173bd99f/content.htm?loaded_from_frameset=true)
- [SAP Help: Setting the SNC Profile Parameters](https://help.sap.com/doc/saphelp_nw73ehp1/7.31.19/en-US/19/164442c1a1c353e10000000a1550b0/content.htm?no_cache=true)
- [SAP Help: Configuring SAP GUI and SAP Logon for Single Sign-On](https://help.sap.com/doc/saphelp_nw73ehp1/7.31.19/en-US/44/0ea40dc6970d1ce10000000a114a6b/content.htm?no_cache=true)
- [SAP Help: Secure Login Client](https://help.sap.com/viewer/df185fd53bb645b1bd99284ee4e4a750/3.0/en-US/ba21970855064e54a9246b6c6de67fb2.html)
- [SAP Additional Content: List of SNC Error Codes](https://wiki.scn.sap.com/wiki/display/Security/List+of+SNC+Error+Codes)

The following article shows how to extract ABAP reports that use an SAP ABAP List Viewer (ALV) layout.

### About Layouts

Layouts in ABAP reports define and control the visual presentation of report data. They determine how data is displayed to the user, including column visibility, column order, column width, aggregation (totals, subtotals), sorting, filtering and other formatting options. Layouts do not affect the actual data.

### Option 1 - Use Layouts in Variants

Some ALV-based reports have a **Layout** field in the selection screen . This field can be used to select a layout before running the report. If the selection screen includes a **Layout** field, that field's value can be saved as part of a [Report Variant](../../documentation/report/variants-and-selections/) . This way, every time the report is executed using that variant, it will automatically use this layout.

Make sure to select the variant in your Xtract for Alteryx [Report extraction](../../documentation/report/variants-and-selections/#choose-a-variant).

### Option 2 - User-Specific Default Layouts

A user-specific default layout is a layout that is saved together with your SAP user ID. This way, SAP automatically applies the layout each time your SAP user runs the report, if no layout is explicitly chosen.

To use a user-specific default layout in Xtract for Alteryx, create the layout for the SAP user that is used in your [SAP Connection](../../documentation/sap-connection/).

For more information on how to create a user-specific layout in ALV, see [SAP Help: Working with the SAP List Viewer (ALV) - Saving Layouts](https://help.sap.com/docs/ABAP_PLATFORM_NEW/b1c834a22d05483b8a75710743b5ff26/4d620265d79751b0e10000000a42189c.html?utm_source=chatgpt.com).

______________________________________________________________________

#### Related Links

- [Report Component](../../documentation/report/)
- [SAP Help: Working with the SAP List Viewer (ALV)](https://help.sap.com/docs/ABAP_PLATFORM_NEW/b1c834a22d05483b8a75710743b5ff26/4d5edc88767161bee10000000a42189b.html?utm_source=chatgpt.com)

The following article shows how to import transport requests for custom functions modules that are included in the installation directory of your product, e.g., `C:\Program Files\XtractForAlteryx\ABAP`.

### Upload SAP Transport Requests to SAP

If you have access to the file system of SAP, you can copy and paste the files of your transport request directly into the `data` and `cofiles` folders of your SAP system. If you don't have access to the file system, follow the steps below to upload the files of your transport request using the SAP function module ARCHIVFILE_CLIENT_TO_SERVER:

1. Unzip the transport request provided in the installation directory of your product, e.g., `C:\Program Files\XtractForAlteryx\ABAP`.
1. Open SAP and go to transaction AL11.
1. Find the entry DIR_TRANS in the column *Name of Directory Parameter*. Note or copy the path shown in the column *Directory*.
1. Go to SAP transaction SE37.
1. Enter name of function module ARCHIVFILE_CLIENT_TO_SERVER and click **[Test/Execute]**.
1. In the field **PATH** you select your request file from from step 1. The name of the file starts with an "R", e.g., R900472.
1. In the field **TARGET PATH** you construct your target path using the following pattern:\
   `{copied path from step 2}\data\{request file name}`.
1. Enable case-sensitivity and click **[Execute]**. When prompted, confirm the upload.
1. In the field **PATH** you select your cofile from from step 1. The name of the file starts with a "K", e.g., K900472.
1. In the field **TARGET PATH** you construct your target path using the following pattern:\
   `{copied path from step 2}\cofiles\{cofile name}`.
1. Enable case-sensitivity and click **[Execute]**. When prompted, confirm the upload.

The files are now available in SAP.

Note

Another method for uploading files to SAP is the SAP transaction CG3Z. This transaction is only available on ERP systems.

### Import SAP Transport Requests

Follow the steps below to add the transport requests to the import queue and import them:

1. Go to SAP transaction STMS to open the transport management system.
1. Click **[Import Overview]** ( icon).
1. Double click on the import queue in which you want to load the transport request into.
1. Open the transport request selection dialog via **More > Extras > Other Requests > Add**.
1. Select the transport request and confirm. If prompted, confirm the import.
1. Select your transport request from the list and click **[Import Request]** ( icon). The window "Import Transport Request" opens.
1. Enter the target client. If the version of the SAP system where the transport request was created differs from your SAP system version, select the option **Ignore Invalid Component Version**.
1. Confirm your settings.

The transport request is imported.

### Check the Status of Transport Requests

The import overview of the transport management system (transaction STMS) lists all transport requests.\
The status of the transport requests is displayed in the column "RC".

A green bar indicates that the import was successful. In case of warnings or errors, double click on the icon to view the error messages.

The following article shows how to use the LIKE operand in WHERE-Clauses of the Xtract Table component.\
The LIKE operand represents a pattern using the following wildcard characters:

- "%" is any character string (including an empty string)
- "\_" is any character

The pattern is case-sensitive. Trailing blanks in operands are ignored. This also applies in particular to operands of the type string with trailing blanks that are otherwise respected in ABAP.

### Examples

| WHERE-Condition | Description | | --- | --- | | `MSEG~MJAHR LIKE '20__'` | Filter back all fiscal years of the table column MSEG~MJAHR that start with *20*. | | `MSEG~MBLNR LIKE '0049%'` | Filters all records of the table column MSEG~MBLNR that return the Number of Material Document starting with the value *0049*. | | `BKPF~BUKRS LIKE '__1_'` | Filters all records that have a *1* in the third digit of the value for the company code (BKPF~BUKRS). |

______________________________________________________________________

#### Related Links

- [SAP Help: Open SQL - Operands and Expressions - LIKE](https://help.sap.com/doc/abapdocu_752_index_htm/7.52/en-US/abenwhere_logexp_like.htm)

There are 2 ways to parameterize Xtract components:

- Pass parameters using the input anchors of Xtract components.\
  Input anchors are available for all Xtract components as of Xtract for Alteryx version 1.19.
- Pass parameters using [control parameters](http://downloads.alteryx.com/betawh_xnext/ControlParam.htm) in [batch macros](http://downloads.alteryx.com/betawh_xnext/BatchMacro.htm).\
  The parameterization via batch macros is supported by Xtract BAPI, Xtract Table, Xtract Cube and Xtract ODP.

The following article shows how to parameterize Xtract components using batch macros.

### Create an Extraction for a Batch Macro

The following example uses the Xtract ODP component to show how to parameterize selection filters.

1. Create a **new** workflow.
1. Add an Xtract ODP component.
1. [Look up](../../documentation/odp/#look-up-data-objects) the DataSource *0MATERIAL_ATTR*.
1. Create 2 new [runtime parameters](../../documentation/odp/edit-runtime-parameters/#create-runtime-parameters) of type *String* and name them *p_MATNR_low* and *p_MATNR_high*.
1. Assign the parameters as [selection filters](../../documentation/odp/selections/#edit-selections) to the column *MATNR*, so that only materials with numbers between *p_MATNR_low* and *p_MATNR_high* are included in the result data.

For more detailed information on how to create an ODP extraction, see [Documentation: Define an ODP Extraction](../../documentation/odp/#define-the-xtract-odp-component).

### Create a Batch Macro with Control Parameters

1. Create a new workflow that contains an extraction as described in [Create an Extraction for a Batch Macro](#create-an-extraction-for-a-batch-macro).
1. To use the workflow as a batch macro, navigate to the *Workflow Configuration* and select **Batch Macro** as the Workflow Type from drop down list.
1. Save the file. Once the workflow is saved as a batch macro each tool in the workflow gets a lightning bolt anchor. Only *Interface* Tools can connect to these anchors.
1. Add a **Control Parameter** tool from the *Interface* toolbox and label the parameter e.g., name one *cp_MATNR_low* and another *cp_MATNR_high* to differentiate between the two .
1. Connect the **Control Parameter** tools to the Xtract component. This creates the *Action* tool **Update Value** .
1. To assign the control parameters to an Xtract parameter, select an **Update Value** tool and mark the Xtract parameter in the tree menu *Value or Attribute to Update* . For this example, assign the control parameter *cp_MAKT_low* to the Xtract ODP runtime parameter *p_MATNR_low* and *cp_MAKT_high* to *p_MATNR_high*.
1. Drag and drop the **Macro Output** tool from the *Interface* toolbox onto the canvas to create an output for the batch macro .
1. Save the macro.

Note

To use formulas with parameters, select *Update Value with Formula* from the drop-down list **Select an action type** in the *Action Configuration* menu. Enter a formula directly into the **Formula** field at the bottom of the menu or click **[...]** to open a formula editor.

#### Parameterize Components without Runtime Parameters

Some Xtract components don't use runtime parameters, but have offer other settings in the *Action Configuration* menu. Example: Parameterizing a WHERE-clause of an Xtract Table component.

- To parameterize a WHERE-clause, mark the WHERE-clause in the tree menu *Value or Attribute to Update*.
- To parameterize only parts of a WHERE-clause, activate **Replace a specific string** and specify what part of the WHERE-clause is to be replaced e.g., in the WHERE-clause `KNA1~LAND1 = 'param'` "param" can be used as a placeholder for the actual input.

### Integrate a Batch Macro into a Workflow

The depicted example uses the **Text Input** tool to define the parameters for the extraction.

1. Add a **Text Input** tool to define the input for the batch macro. Enter valid parameter values and add a new column for every control parameter . Example:\
   *p_MATNR_low*: `000000000000000023`\
   *p_MATNR_high*: `000000000000000100`
1. To import the batch macro right-click the canvas and navigate to **Insert > Macro**. Add the macro that contains the Xtract component.
1. Connect the **Text Input** to the batch macro .
1. Select the batch macro and use the drop-down list **Choose field** to assign the values from the **Text Input** columns to the control parameters of the batch macro.
1. Add the **Browse** tool to check the results of the batch macro and run the workflow.

______________________________________________________________________

#### Related Links

- [Alteryx Documentation](https://help.alteryx.com/current/en/designer.html)
- [Alteryx Documentation: Batch Macros](http://downloads.alteryx.com/betawh_xnext/BatchMacro.htm)

This articles shows how to use Xtract for Alteryx to parse ABAP reports that contain groups of data sets and merge them into a single data set. The depicted example uses the report *FBL3N* that contains multiple groups where each group has its own header and calculation rows.

The article leads you through the following steps to merge all groups into a single data set:

- [Remove rows](#remove-rows) that calculate the content of the rows before.
- [Select a header](#select-a-header) for the report and remove duplicates.
- [Parse rows that contain additional headers as columns.](#parse-rows-with-additional-headers-as-columns)

### Remove Rows

Follow the steps below to remove rows that calculate the content of the rows before. Calculation rows are marked with an * symbol.

1. [Look up](../../documentation/report/#look-up-a-report-or-transaction) a report that contains groups of data. The depicted example uses report FBL3N (RFITEMGL).
1. If the report has variants, [select a variant](../../documentation/report/variants-and-selections/#choose-a-variant).
1. Click **[Load Preview]** to load a preview of the first 100 rows.
1. Click **[Automatically detect columns]** to define the columns of the report.
1. Open the tab *Skip and Parse Rows*.
1. Click **[Add rows to skip]**.
1. To remove calculation rows, enter the keyword \*.\
   All rows that contain the keyword are displayed in a gray font in the preview section.
1. To remove additional rows that separate calculation rows and headers, enter the keyword ---.
1. Click **[OK]** to save the changes.

The calculation rows are skipped during the report extraction.\
For more information on how to manipulate rows in report extractions, see [Documentation: Define Rows](../../documentation/report/report-rows-define/).

### Select a Header

Follow the steps below to select one of multiple available headers as the report header:

1. Open the report extraction from [Remove Rows](#remove-rows) or any other report that contains multiple headers.

1. Click **[Load Preview]** to load a preview of the first 100 rows.

1. Open the tab *Skip and Parse Rows*.

1. In the preview section, right-click the header row and select **Select as header** from the context menu. All rows that contain the header are displayed in a blue font in the preview section.

   Tip

   If the header is not part of the preview (first 100 rows of the report), enter a pattern in the field [**Header pattern**](../../documentation/report/report-rows-define/#header-pattern) to scan all report rows for the pattern.

1. Click **[OK]** to save the changes.

The report parses the selected header as the report header during report extraction.\
Any duplicates of the header are removed from the result set.

### Parse Rows with Additional Headers as Columns

Follow the steps below to parse header rows that contain information about a data set as columns. The depicted example parses the header rows containing the *G/L Account* number and the *Company Code* of a data set as columns.

1. Open the report extraction from [Select a Header](#select-a-header) or any other report that contains multiple headers.

1. Click **[Load Preview]** to load a preview of the first 100 rows.

1. Open the tab *Skip and Parse Rows*.

1. Click **[Add row to parse as column]** to add a new column.

1. Click **[]**. The window "Parse Helper" opens and a new preview of the report data is fetched. This can take a while.

1. Under **Search keyword** enter a unique keyword from the row you want to parse as a column. Matching rows are displayed in the preview section of the window.

1. Make sure only header rows are displayed in the preview section. If the preview includes regular rows, edit the keyword until only header rows remain.

1. Under **New Column Name** enter a name for the new column.

1. Mark the content of the column in the preview section by pressing and dragging the mouse pointer over the length of the content.

1. Click **[OK]** to save the column properties. All rows that will be parsed as a column are displayed in a blue font in the preview section.

1. Repeat steps 4 to 9 for the *Company Code*.

   Tip

   If the *Company Code* is not relevant for your report analysis, remove the corresponding header row from the result set, see [Remove Rows](#remove-rows).

1. Click **[OK]** to save the changes.

1. Run the workflow and check if the rows are parsed correctly.

The extracted report returns a single data set that includes the content of all original data set groups.

______________________________________________________________________

#### Related Links

- [Xtract Report](../../documentation/report/)
- [Skip Rows by Keyword](../../documentation/report/report-rows-define/#skip-rows-by-keyword)

The following article shows how to extract data from the SAP HCM tables PCL1 and PCL2.\
The data can only be extracted using a custom function module and the Xtract BAPI component. Data extraction via Xtract Table component is not supported.

### Custom Function Module Z_HR_CLUSTER_READ

Create the following custom function module in SAP:

1. Use SAP transaction SE37 to create a remote enabled custom function module Z_HR_CLUSTER_READ.

1. Create the following parameters:

   ```text
   PERNR            TYPE=PC2B0-PERNR;
   ACTIONID         TYPE=CHAR2; DEFAULT = 'P1'
   STARTDATE        TYPE=DATS;
   ENDDATE          TYPE=DATS;

   ```

   ```text
   ERT        LIKE=PC2B8
   ST         LIKE=PC2B5
   CRT        LIKE=PC208

   ```

1. Copy and paste the following ABAP source code into the source code area of the function module.

   ```abap
        FUNCTION Z_HR_CLUSTER_READ.

        *"----------------------------------------------------------------------

        *"*"Local Interface:
        *"  IMPORTING
        "     VALUE(PERNR) TYPE  PC2B0-PERNR OPTIONAL
        *"     VALUE(ACTIONID) TYPE  CHAR2 DEFAULT 'P1'
        *"     VALUE(STARTDATE) TYPE  DATS OPTIONAL
        *"     VALUE(ENDDATE) TYPE  DATS OPTIONAL
        *"  TABLES
        *"      ERT STRUCTURE  PC2B8 OPTIONAL
        *"      ST STRUCTURE  PC2B5 OPTIONAL
        *"      CRT STRUCTURE  PC208 OPTIONAL
        *"----------------------------------------------------------------------
        DATA : BEGIN OF it_pcl1 OCCURS 0,
        srtfd TYPE pcl1-srtfd,
        END OF it_pcl1.

        DATA BEGIN OF b1_key.
             INCLUDE STRUCTURE pdc10.
        DATA END OF b1_key.

        IF actionid = 'P1'.

        SELECT srtfd
        FROM pcl1
        INTO TABLE it_pcl1
        WHERE relid EQ 'B1'
        AND srtfd EQ pernr
        AND srtf2 EQ 0.

       LOOP AT it_pcl1.
         MOVE it_pcl1-srtfd TO b1_key.
         IMPORT st ert FROM DATABASE pcl1(b1) ID b1_key.
         IF sy-subrc EQ 0.
         ENDIF.
       ENDLOOP.

        ENDIF.

        IF actionid = 'P2'.
        DATA : it_rgdir TYPE TABLE OF pc261 INITIAL SIZE 0,
              wa_rgdir LIKE LINE OF it_rgdir,
              it_crt TYPE pay99_result-inter-crt,
              wa_crt LIKE LINE OF it_crt,
              wa_payrollresult TYPE pay99_result,
              v_molga TYPE molga.

       DATA : BEGIN OF wa_out,
               pernr TYPE pernr-pernr,
               gross TYPE pc207-betrg, "Amount
               net TYPE pc207-betrg,
              END OF wa_out,
              it_outtab LIKE TABLE OF wa_out.

        wa_out-pernr = PERNR.
        CALL FUNCTION 'CU_READ_RGDIR'
        EXPORTING
        persnr          = PERNR
        IMPORTING
        molga           = v_molga
        TABLES
        in_rgdir        = it_rgdir
        EXCEPTIONS
        no_record_found = 1
        OTHERS          = 2.
        IF sy-subrc = 0.



       LOOP AT it_rgdir INTO wa_rgdir
                          WHERE fpbeg GE startdate AND
                                fpend LE enddate AND
                                srtza EQ 'A'.  "Current result
           CALL FUNCTION 'PYXX_READ_PAYROLL_RESULT'
             EXPORTING
               clusterid                    = 'RD'
               employeenumber               = PERNR
               sequencenumber               = wa_rgdir-seqnr
               READ_ONLY_INTERNATIONAL      = 'X'
             CHANGING

               payroll_result               = wa_payrollresult
             EXCEPTIONS
               illegal_isocode_or_clusterid = 1
               error_generating_import      = 2
               import_mismatch_error        = 3
               subpool_dir_full             = 4
               no_read_authority            = 5
               no_record_found              = 6
               versions_do_not_match        = 7
               error_reading_archive        = 8
               error_reading_relid          = 9
               OTHERS                       = 10.

           IF sy-subrc = 0.
             LOOP AT wa_payrollresult-inter-crt INTO wa_crt.
               CASE wa_crt-lgart.
                 WHEN '/101'.  " Gross
                   APPEND wa_crt TO crt.
               ENDCASE.
               CLEAR wa_out.
             ENDLOOP.
           ENDIF.
         ENDLOOP.
       ENDIF.
     ENDIF.
   ENDFUNCTION.

   ```

1. Save the function module.

### How to use the Custom Function Module

Depending on the table you want to access, define the following parameters:

1. Look up the function module using the Xtract BAPI component.

1. Populate the import parameter ACTIONID with value *P1*.

1. Populate the field PERNR with a value for Personnel Number. The personnel number has to be entered with leading zeroes.

1. Run the workflow. The data is available in the table parameter ST.

1. Look up the function module using the Xtract BAPI component.

1. Populate the import parameter ACTIONID with value *P2*.

1. Enter a start date and end date using the parameters STARTDATE and ENDDATE. The date fields have the format YYYYmmDD.

1. Run the workflow. The data is available in the table parameter CRT.

The following article shows how to extract attachment files of all formats from an SAP system, e.g., .pdf files of purchase orders.

### About this Workflow

This article leads you through all necessary steps to set up the following workflows:

- Get a list of attached files from the SAP ERP system (Object IDs and file names)
- Use the Object IDs to download SAP attachment files of any format

[Download Workflow](../../assets/files/xfa/SAP-Read-Attachment-Files.yxmd)

| SAP System | SAP Objects | Xtract for Alteryx Component | | --- | --- | --- | | SAP ERP | *SRGBTBREL* (Relationships in GOS Environment) *SOOD* (SAPoffice: Object Definition) | Xtract Table | | SAP ERP | *SO_DOCUMENT_READ_API1* (SAPoffice: View object from folder using RFC) | Xtract BAPI |

### Prerequisites

To use the Xtract BAPI component and the Xtract Table component, access to the designated authority objects (RFC) in SAP must be available, see [SAP User Rights: BAPI](../../documentation/setup-in-sap/sap-authority-objects/#bapi) and [SAP User Rights: Table](../../documentation/setup-in-sap/sap-authority-objects/#table).

### Get a List of all SAP Attachments

Follow the steps below to set up the following workflow:

- Read the table *SRGBTBREL* to get all object IDs that are attached to business objects
- Read the table *SOOD* to get the corresponding file names and extensions of the object IDs.

1. Drag & drop the Xtract Table component into your Alteryx workflow .
1. Select an SAP connection . If no SAP connection is available, create a new connection, see [Documentation: SAP Connection](../../documentation/sap-connection/).
1. Click **[Edit]** to open the main window of the Xtract Table component.
1. [Look up](../../documentation/table/#look-up-an-sap-table) the SAP table *SRGBTBREL*.
1. Select the columns TYPEID_A (source of the attached file) and INSTID_B (Object ID) for output.
1. Click **[OK]** to save the table extraction.
1. Optional: Add a **Formula** tool after the Xtract Table component to separate the key objects of INSTID_B into the following columns: "Object", "OBJTP" (object type), "OBJYR" (object year) and "OBJNO" (object number).

The processed list of attached files contains the following information:

1. Drag & drop the Xtract Table component into your Alteryx workflow.
1. Select an SAP connection. If no SAP connection is available, create a new connection, see [Documentation: SAP Connection](../../documentation/sap-connection/).
1. [Look up](../../documentation/table/#look-up-an-sap-table) the SAP table *SOOD*. The table contains all document IDs attached to business objects.
1. Select the columns OBJTP, OBJYR and OBJNO for output.
1. Click **[Edit parameters]** and [create a runtime parameter](../../documentation/table/edit-runtime-parameters/#create-runtime-parameters) *OBJNO* of type string.
1. Navigate to the WHERE Clause tab and create the following WHERE clause: `SOOD~OBJNO IN [OBJNO]`.
1. Click **[OK]** to save the table extraction.
1. Define an object number as the input for the runtime parameter of the Xtract Table component, e.g., *000000001276*.
1. Add a **Join** tool to join the results of the two table extraction into a single list.

Note

The workflow provided in the Alteryx community contains further steps to download the first file in the list of attached files in the SAP ERP system.

### Download SAP Attachment Files

Follow the steps below to download SAP attachment files using their Object ID as input:

1. Drag & drop the Xtract BAPI component into your Alteryx workflow .

1. Select an SAP connection . If no SAP connection is available, create a new connection, see [Documentation: SAP Connection](../../documentation/sap-connection/).

1. Click **[Edit]** to open the main window of the Xtract BAPI component.

1. In the main window of the component click . The window “Function Module Lookup Lookup” opens.

1. [Look up](../../documentation/bapi/#look-up-a-function-module-bapi) the function module *SO_DOCUMENT_READ_API1*.

1. Click **[Edit parameters]** and [create a runtime parameter](../../documentation/bapi/edit-runtime-parameters/#create-runtime-parameters) *ObjectIdentifier* of type string.

1. In the *Import* tab, set the DOCUMENT_ID to the runtime parameter *ObjectIdentifier*.

1. In the *Export* tab, select DOCUMENT_DATA for output.

1. In the *Table* tab, select CONTENTS_HEX for the output. CONTENTS_HEX contains the attachment file in the format of a HEX string.

1. Click **[OK]** to save your input.

1. Define an Object ID as the input for the runtime parameter of the Xtract BAPI component, e.g., *FOL18 4 EXT45000000000229*.

   Tip

   Object IDs are available in the SAP table SRGBTBREL, see [Get a List of all SAP Attachments](#get-a-list-of-all-sap-attachments).

1. Add a **Summarize** tool to concatenate the multi-line HEX string returned by the Xtract BAPI component into a single line.

1. Add a **Select** and a **Formula** tool to concatenate the file name using the Xtract BAPI output fields OBJDES and FILE_EXT, e.g., `example.pdf`.

1. Add a **Append Fields** tool to append the file name to the HEX string.

1. Add a **Blob Convert** tool to convert the HEX string to a Binary Large OBject (BLOB). BLOB data types can store multiple file types, e.g., images, audio, and other objects, see [Alteryx Documentation: Blob Convert Tool](https://help.alteryx.com/current/en/designer/tools/developer/blob-convert-tool.html) for more information.

1. Add a **Blob Output** tool to save the file.

______________________________________________________________________

#### Related Links

- [Alteryx Community - Read SAP Attachment Files](https://community.alteryx.com/t5/Community-Gallery/Read-and-Download-SAP-Attachment-Files-using-Xtract-for-Alteryx/ta-p/1212418)
- [Documentation: Xtract Table](../../documentation/table/)
- [Documentation: Xtract BAPI](../../documentation/bapi/)
- [Sample Workflows](../../sample-workflows/)

The following section shows how to create an SAP connection using the Xtract for Alteryx UI.\
An SAP connection is required to use any Xtract for Alteryx component.

Note

Creating SAP connections using the Xtract for Alteryx UI is deprecated.\
The recommended method for creating SAP connections involves the use of Alteryx' Data Connection Manager and requires an Alteryx Designer version >= 2022.3. For more information, see [Documentation: SAP-Connection](../../documentation/sap-connection/).

### Create an SAP Connection

1. Drag and drop an Xtract for Alteryx component from the Alteryx Designer tool box onto the canvas . The configuration window of the component opens.
1. Click **[New]** to create a new connection . The window "SAP Connection Details" opens.
1. Fill out the connection details to establish an SAP connection. The connection details consist of four subsections:
   - [System](#system)
   - [Client and Language](#client-and-language)
   - [Authentication](#authentication)
   - [Miscallaneous](#miscellaneous).
1. Click **[Test Connection]** to test the SAP connection. A confirmation window opens.
1. Click **[OK]** to save the SAP connection.

The SAP connection is now available for selection in the configuration window .\
To edit the SAP connection, select the SAP connection from the dropdown list and click **[Edit]**.

Tip

Values to fill out the connection details can be found in the SAP Logon Pad in the *Properties* or acquired from SAP Basis team.

Note

The connection details of an SAP connection are stored in a JSON file in the following directory:\
`C:\Users\<UserName>\AppData\Roaming\Theobald Software\Xtract for Alteryx\Connections\<SAPSourceName>.json`

### System

There are two possibilities to connect to an SAP source system:

- Use a Single Application Server
- Use a Load Balancing Server (message server)

| Input Field | Description | | --- | --- | | **Host** | Host name or IP address of the application server (Property Host) | | **Sys. No.:** | A two-digit number between 00 and 99 (Property SystemNumber) |

| Input Field | Description | | --- | --- | | **Message Server** | Name or IP address of the message server (Property MessageServer) | | **Group** | Property LogonGroup, usually *PUBLIC* | | **SID** | Three-digit System ID (Property SID e.g., MSS) |

For more information, see [SAP Help: Load Balancing](https://help.sap.com/saphelp_nwpi711/helpdata/en/c4/3a644c505211d189550000e829fbbd/content.htm?no_cache=true).

#### Access via SAP router

If you access the SAP source system (Application server or Message server) via an SAP router, set the router string before the host name. Example: If the application server is "hamlet" and the router string is `/H/lear.theobald-software.com/H/`, set the host property to `/H/lear.theobald-software.com/H/hamlet`.|

For more information, see [SAP Help: SAP-Router](https://help.sap.com/viewer/6d9a59096c4b1014b507f15bed51571f/7.01.22/en-US/486b41efb74c07bee10000000a42189d.html).

### Client and Language

| Input Field | Description | | --- | --- | | **Client** | A three-digit number of the SAP client between 000 and 999, e.g., 800. | | **Language** | The logon language for the SAP system, e.g., *EN* for English or *DE* for German. |

### Authentication

The following authentication methods are supported:

- **SNC** : encrypted connection between Xtract for Alteryx and SAP with username and password.
- **Plain** : SAP username and password (system or dialogue user)
- **SAP Log On Ticket** : uses SAP Logon-Tickets in place of user credentials. This connection is not encrypted.

| Input Field | Description | | --- | --- | | **SNC library path** | Complete path to the SAP cryptograhic library location, e.g., `C:\Program Files\SAP\FrontEnd\SecureLogin\lib\sapcrypto.dll`. | | **SNC partner name** | SAP partner name configured for the SAP application server, e.g., `p:SAPserviceERP/Alice@THEOBALD.LOCAL`. |

Tip

Check the SAP parameter *snc/gssapi_lib* to determine which library is used for encryption in your SAP system. Your SAP basis has to import and configure the same library on the application server and on the machine that runs Xtract for Alteryx.

For more information on SNC, see [Enabling Secure Network Communication (SNC) via X.509 certificate](../enable-snc-using-pse-file/).

| Input Field | Description | | --- | --- | | **User** | SAP username. | | **Password** | Password of the SAP user. |

| Input Field | Description | | --- | --- | | **Ticket Issuer** | Enter the URL of an Application Server Java (AS Java) that is configured to issue logon tickets. For more information, see [SAP Help: Configuring the AS Java to Issue Logon Tickets](https://help.sap.com/doc/saphelp_nw75/7.5.5/EN-US/4a/412251343f2ab1e10000000a42189c/frameset.htm). |

### Miscellaneous

Select an RFC library. The following RFC libraries are supported:

- **Use classic RFC library (librfc32.dll)**
- **Use NetWeaver RFC libraries (sapnwrfc.dll)**

The RFC API (Remote Function Call) allows to establish an RFC connection to an SAP system from an external system that communicates as Client or Server with the SAP system. For more information on SAP libraries, see [SAP Help: RFC Libraries](https://help.sap.com/saphelp_nwpi71/helpdata/de/45/18e96cd26321a1e10000000a1553f6/frameset.htm).

SAP does not [support the librfc32.dll](https://blogs.sap.com/2012/08/15/support-for-classic-rfc-library-ends-march-2016/) anymore.

Note

When using the NetWeaver RFC library with DeltaQ or OHS extractions, the RFC destination in SM59 must be set to Unicode.

#### Trace Directory (Debug Logging)

You can log debug information and save it locally. In the field **Trace directory** enter a local path to a folder, where you want to save the debug information. For more information, see the knowledge base article [How to activate tracing for Xtract Products](https://support.theobald-software.com/helpdesk/KB/View/14455-how-to-activate-tracing-for-xtract-products).\
Clear the **Trace Directory** field when it is not needed.

Warning! : Increase of used hard drive memory

A big amount of information is collected when debug logging is activated. This can decrease the capacity of your hard drives dramatically. Activate the debug logging only when necessary e.g., upon request of the support team.

The following article gives an overview of all SAP S/4HANA systems supported by Xtract for Alteryx.

### Supported SAP S/4HANA Cloud Systems

The following table lists all available SAP S/4HANA cloud systems and their compatibility with Xtract for Alteryx.\
SAP S/4HANA Cloud Edition (Cloud ERP):

| | S/4HANA Public Cloud | S/4HANA Private Cloud | | --- | --- | --- | | **Compatible with Xtract for Alteryx:** | (with limitations) | | | **Limitations:** | Only OData services released via Communication Scenarios are supported. | - |

### SAP S/4HANA On Premise Systems

The following table lists all available SAP S/4HANA on premise systems and their compatibility with Xtract for Alteryx.\
SAP S/4HANA AnyPremise (ERP in the Cloud):

| | S/4HANA Private Cloud Managed by SAP (HEC) | SAP HEC Customer Edition | S/4HANA AnyPremise | S/4HANA AnyPremise | | --- | --- | --- | --- | --- | | Additional Information: | On-Premises Edition | Runs on Customer Data Center | Public Cloud (AZURE/AWS/GCP) | called ERP in DC (Customer Data Center) | | Compatible with Xtract for Alteryx: | | | | |

The following article illustrates the extraction mechanism of the Xtract Table component.

### Table Extraction Process

The extraction mechanism of Table includes the following processes:

- Lookup process to read SAP metadata for the definition of the Table extraction.
- Configuration of the Xtract Table component definition.
- Execution of the asynchron data loading process.

The depicted graphic illustrates the mechanism in both Xtract for Alteryx and in SAP. Click the graphic to zoom in.

The following article shows how to use lists and SELECT statements in the [WHERE Clause Editor](../../documentation/table/where-clause/#where-clause-editor) of the Xtract Table component.\
Lists can contain multiple values separated by commas e.g., `1,10` or `“1”, “10”`.

### List Parameters

1. Create a Xtract Table extraction.
1. Look up the table KNA1, see [Documentation: Define the Xtract Table Component](../../documentation/table/#define-the-xtract-table-component).
1. Click **[Edit Parameters]**. The window "Edit runtime parameters" opens.
1. Click **[Add List]** to define a list parameter, e.g., *Parameter0*.
1. Click **[OK]** to save the parameter. The window "Edit runtime parameters" closes.
1. Open the *WHERE Clause* tab and click **[Editor Mode]** to open the WHERE clause editor.
1. Click **[Add criteria]**, then **[Default with parameter]** to create an empty template in the WHERE clause editor.
1. Select the column *ORT01* from KNA1 as the data you want to filter.
1. Select *IN* as the operator. *IN* is the only operator that can be used for lists.
1. Click **[Select parameter]** in the static parameter component of the WHERE clause. A drop down list opens.
1. Select an existing list parameter from the drop down list, e.g., *Parameter0*.
1. Click **[OK]** to confirm your input.
1. Click **[Load live preview]** or run the workflow to check the output.\
   When providing values for the list parameter, use multiple values separated by commas e.g., `1,10` or `“1”, “10”`.

### Static Lists

The depicted example statement returns all active customers (rows in the table KNA1) that have an address in one of the following cities: Berlin, Stuttgart, Paris, Seattle, Hong Kong or Dongguan.

1. Create a Xtract Table extraction.
1. Look up the table KNA1, see [Documentation: Define the Xtract Table Component](../../documentation/table/#define-the-xtract-table-component).
1. Open the *WHERE Clause* tab and click **[Editor Mode]** to open the WHERE clause editor.
1. Click **[Add criteria]**, then **[Default with literal]** to create an empty template in the WHERE clause editor.
1. Select the column *ORT01* from KNA1 as the data you want to filter.
1. Select *IN* as the operator. *IN* is the only operator that can be used for lists.
1. Select *List* as the type of the static filter value.
1. Click **[Press to Edit]** in the static value component of the WHERE clause. The window "Edit List" opens.
1. Select *String* as the **Type** of the list. When working with numbers, select *Number*.
1. Click **[Add]** to add items to the list. You can edit items via double-click.
1. Click **[OK]** to confirm your input.
1. Click **[Load live Preview]** or run the workflow to check the output.\
   When providing values for the list parameter, use multiple values separated by commas e.g., `1,10` or `“1”, “10”`.

### SELECT Statement

SELECT statements can be used to select data from SAP tables, see [ABAP Documentation: Open SQL SELECT](https://help.sap.com/doc/abapdocu_750_index_htm/7.50/en-us/abapselect.htm).\
The depicted example statement returns all active customers (rows in the table KNA1) that have a sales document in the table VBAK for sales document header data.

Note

The usage of SELECT statements is only possible as of SAP Release 7.40, SP05.

1. Create a new Xtract Table extraction.

1. Look up the table KNA1, see [Documentation: Define the Xtract Table Component](../../documentation/table/#define-the-xtract-table-component).

1. Open the *WHERE Clause* tab and click **[Editor Mode]** to open the WHERE clause editor.

1. Click **[Add criteria]**, then **[Default with literal]** to create an empty template in the WHERE clause editor.

1. Select the column *KUNNR* from KNA1 as the data you want to filter.

1. Select *IN* as the operator. *IN* is the only operator that can be used for lists.

1. Select *List* as the type of the static filter value.

1. Click **[Press to Edit]** in the static value component of the WHERE clause. The window "Edit List" opens.

1. Select *SELECT* as the **Type** of the list.

1. Enter the following SELECT statement to create a list that contains all items of the column KUNNR from the SAP table VBAK:

   ```text
   SELECT KUNNR FROM VBAK

   ```

1. Click **[OK]** to confirm your input.

1. Click **[Load live Preview]** or run the workflow to check the output.

______________________________________________________________________

#### Related Links

- [Documentation: WHERE Clause Editor](../../documentation/table/where-clause/#where-clause-editor)

The following article contains information on performance measurements for Xtract for Alteryx.\
This includes the reliability of performance measurements, best practices to enhance the performance and an example benchmark.

### Reliability of Performance Measurements

Extraction times in Xtract for Alteryx depend mainly on the SAP system’s processing time and the network.

Performance measurements on SAP systems cannot be generalized because SAP systems are highly customized. The performance of SAP systems depends on a variety of factors that are specific to each system. These factors include:

- hardware configuration
- network infrastructure
- system workload
- data volume
- software customization

Conclusion: Performance measurements and benchmarks are not meaningful.

### Factors for Performance Measurements

Performance measurements for Xtract for Alteryx must be specific to each individual system. The following factors must be considered:

- Network latency
- Data volume
- Hardware capacity (SAP system and Alteryx Designer)

Note that Alteryx workflows are not meant to be real-time data processing solutions, but rather analytical workflows that process mass data. Therefore, it is usually not important whether a workflow finishes within a few seconds or a minute.

### Best Practices to Enhance Performance

The following best practices enhance the performance of extractions with Xtract for Alteryx:

- Make sure that the Xtract for Alteryx user and the SAP source system are as close as possible in the network to reduce network latency. For more information, see [Alteryx Community: Alteryx Workflow Performance - The Network Effect](https://community.alteryx.com/t5/Engine-Works/Alteryx-Workflow-Performance-The-Network-Effect/ba-p/1030910).
- Make sure that the machine that runs the Alteryx workflow has sufficient free hardware capacity (CPU, Memory, etc.).
- Limit the amount of data that needs to be processed and transferred. Example: Use filters and/or WHERE clauses to reduce the number of columns and rows that need to be extracted.
- ODP and Change Data Capture (CDC) extractions offer the option to only extract the changes made to the data since the last extraction. This makes the extraction faster and more efficient, because less data needs to be transferred and processed.
- Use the latest version of Xtract for Alteryx to take advantage of new features and performance improvements.

Tip

Table and Report extractions offer the option to run as background jobs in the SAP system. This means that the user can continue to work on the same machine while the extraction is run in the background.

### Example

The depicted example workflow finishes within 7.2 seconds:

- Workflow: contains 1 Xtract Table component to extract SAP tables and a Browse tool to view the extracted data
- Extracted data: 166.169 rows and 15 columns from the SAP Table ACDOCA (Universal Ledger)
- SAP source system: S/4HANA
- Custom Function Module: Z_THEO_READ_TABLE for table extractions
- Hardware: 16GB RAM

______________________________________________________________________

#### Related Links

- [Download the latest Version of Xtract for Alteryx](https://my.theobald-software.com)
# Free Alteryx Workflows for Download

This section offers a set of sample workflows you can download and use as a base to design your own processes.

______________________________________________________________________

How to get started:

1. Download one of the sample workflows.
1. Open the workflow in your Alterx Designer.
1. Assign a valid [SAP Connection](../documentation/sap-connection/) to all Xtract components in the workflow.
1. Start using the workflow or start editing until the workflow suits your requirements.

______________________________________________________________________

### SAP Migration Scenarios

Workflows that support SAP migration, e.g., from ECC to S/4HANA:

- **Data Anonymization and Replication to QA system**

  ______________________________________________________________________

- **Short-term Bridge App**

  ______________________________________________________________________

- **Source & Target Validations - Report level**

  ______________________________________________________________________

  This workflow uses the [Xtract Report](../documentation/report/) component to validate data integrity between source and target systems.

  [Download](../assets/files/xfa/S4%20Migration%20-%20Source%20%26%20Target%20Validations%20-%20Report%20level.yxmd)

- **Source & Target Validations - Table level**

  ______________________________________________________________________

  This workflow uses the [Xtract Table](../documentation/table/) component to validate data integrity between source and target systems.

  [Download](../assets/files/xfa/S4%20Migration%20-%20Source%20%26%20Target%20Validations%20-%20Table%20level.yxmd)

- **Source & Target Validations - Table & other**

  ______________________________________________________________________

  This workflow uses the [Xtract Table](../documentation/table/) component to validate data integrity between source and target systems. This workflow can be used for tests and demos, as it uses a flat file as a target to resemble the source system with minor changes that are discovered in the reconciliation.

  [Download](../assets/files/xfa/S4%20Migration%20-%20Source%20%26%20Target%20Validations%20-%20Table%20%26%20other.yxzp)

______________________________________________________________________

### Xtract BAPI

Workflows that execute SAP BAPIs and function modules:

- **Read and Write Data with BAPIs**

  ______________________________________________________________________

  This workflow demonstrates using [Xtract BAPI](../documentation/bapi/) to create a purchase requisition in SAP and load the data of the purchase requisition into Alteryx.

  [Download](../assets/files/xfa/BAPI-ERP-ReadandWrite.yxmd)

- **Read SAP LongTexts**

  ______________________________________________________________________

  This workflow demonstrates using [Xtract BAPI](../documentation/bapi/) to read SAP long texts in different languages.

  [Download](../assets/files/xfa/SAP-Read-Long-Texts.yxmd)

- **Read SAP Attachment Files**

  ______________________________________________________________________

  This workflow demonstrates extracting attachments of all formats from an SAP systems, e.g., .pdf files of purchase orders, images, and other objects. For more information, see [Knowledge Base Article: Read and Download SAP Attachment Files](../knowledge-base/read-sap-attachment-files/).

  [Download](../assets/files/xfa/SAP-Read-Attachment-Files.yxmd)

- **Sync Purchase Requisitions from ERP to S4**

  ______________________________________________________________________

  This workflow demonstrates syncing purchase requisitions from ERP to S/4. It involves creating a new requisition in ERP, checking its absence in S/4, syncing by generating corresponding entries in both systems, and confirming the presence in S/4.

  [Download](../assets/files/xfa/BAPI-Sync-PRs-from-ERP-to-S4.yxmd)

______________________________________________________________________

### Xtract Cube

Workflows that extract data from SAP BW InfoCubes and BEx Queries:

- **Cube: BWInfoProvider**

  ______________________________________________________________________

  This workflow demonstrates using [Xtract Cube](../documentation/bwcube/) to load data from an SAP BW InfoProvider.

  [Download](../assets/files/xfa/Cube-BWInfoProvider.yxmd)

- **Cube: BWQuery**

  ______________________________________________________________________

  This workflow demonstrates using [Xtract Cube](../documentation/bwcube/) to load data from an SAP BW Query.

  [Download](../assets/files/xfa/Cube-BWQuery.yxmd)

______________________________________________________________________

### Xtract Hierarchy

Workflows that extract Hierarchies from an SAP BW system:

- **BW CostCenter Hierarchy**

  ______________________________________________________________________

  This workflow demonstrates using [Xtract Hierarchy](../documentation/hierarchy/) to load data from an SAP BW CostCenter hierarchy. This workflow also showcases the different hierarchy representations "Parent-Child" and "Natural".

  [Download](../assets/files/xfa/Hierarchy-BW.yxmd)

______________________________________________________________________

### Xtract ODP

Workflows that extract data via the SAP Operational Data Provisioning (ODP) framework:

- **Read & Merge Data from SAP BW**

  ______________________________________________________________________

  This workflow demonstrates using [Xtract ODP](../documentation/odp/) to load sales documents and customer master data from an SAP BW system. The loaded data is then combined, cleaned, and prepared for further analysis.

  [Download](../assets/files/xfa/ODP-BW-Full.yxmd)

- **Read & Merge Delta Data from SAP BW**

  ______________________________________________________________________

  This workflow demonstrates using [Xtract ODP](../documentation/odp/) to load delta sales documents and customer master data from an SAP BW system. Sales documents are loaded using Xtract ODP's delta function, which retrieves only data that has changed since the last execution.

  [Download](../assets/files/xfa/ODP-BW-Delta.yxmd)

- **Read & Merge Data from SAP ERP**

  ______________________________________________________________________

  This workflow demonstrates using [Xtract ODP](../documentation/odp/) to load sales documents and customer master data from an SAP ERP system. The loaded data is then combined, cleaned, and prepared for further analysis.

  [Download](../assets/files/xfa/ODP-ERP-Full.yxmd)

- **Read & Merge Delta of Data from SAP ERP**

  ______________________________________________________________________

  This workflow demonstrates using [Xtract ODP](../documentation/odp/) to load delta sales documents and customer master data from an SAP ERP system. Sales documents are loaded using Xtract ODP's delta function, which retrieves only changed data since the last execution. For more information, see [Knowledge Base Article: ODP based Delta Extraction of Sales and Customer Data](../knowledge-base/delta-extraction-of-sales-data/).

  [Download](../assets/files/xfa/ODP-ERP-Delta.yxmd)

- **Read SAP S/4HANA CDS Views**

  ______________________________________________________________________

  This workflow demonstrates using [Xtract ODP](../documentation/odp/) to load business partner master data from SAP S/4HANA CDS views. The loaded data is then cleaned and filtered for further analysis.

  [Download](../assets/files/xfa/ODP-S4-Full.yxmd)

- **Read Delta of SAP S/4HANA CDS Views**

  ______________________________________________________________________

  This workflow demonstrates using [Xtract ODP](../documentation/odp/) to load the delta data of suppliers and customers from SAP S/4HANA CDS views. The loaded data is then checked for missing address information.

  [Download](../assets/files/xfa/ODP-S4-Delta.yxmd)

______________________________________________________________________

### Xtract Report

Workflows that extract data from SAP ABAP Reports:

- **Read Reports from SAP ERP**

  ______________________________________________________________________

  This workflow demonstrates using [Xtract Report](../documentation/report/) to load data from the ABAP Report RLT10010 (Evaluation of Movements per Storage Type).

  [Download](../assets/files/xfa/Report-ERP-ABAPReport.yxmd)

- **Read Reports from an SAP S/4HANA Transaction**

  ______________________________________________________________________

  This workflow demonstrates using [Xtract Report](../documentation/report/) to load a list of sales orders from an SAP S/4HANA transaction.

  [Download](../assets/files/xfa/Report-S4-TCode.yxmd)

______________________________________________________________________

### Xtract Table

Workflows that extract data from SPA table and Views:

- **Read SAP Tables from SAP ERP**

  ______________________________________________________________________

  This workflow demonstrates using [Xtract Table](../documentation/table/) to load customer master data and to prepare the data for further analysis in Excel or a 3rd party BI solution.

  [Download](../assets/files/xfa/Table-ERP.yxmd)

- **Read & Join SAP Tables from SAP ERP**

  ______________________________________________________________________

  This workflow demonstrates using [Xtract Table](../documentation/table/) to perform a table join of the SAP tables KNA1 (Customer Master Data) and KNVV (Customer Master Sales Data) and to prepare the data for further analysis in Excel or a 3rd party BI solution.

  [Download](../assets/files/xfa/Table-ERP-Join.yxmd)

- **Read Universal Journal Data from SAP S/4HANA**

  ______________________________________________________________________

  This workflow demonstrates using [Xtract Table](../documentation/table/) to load data from SAP S/4HANA's Universal Journal and to prepare the data for further analysis in Excel or a 3rd party BI solution.

  [Download](../assets/files/xfa/Table-S4.yxmd)

- **Parameterize SAP Table Extractions**

  ______________________________________________________________________

  This workflow demonstrates how to use scalar and list parameters with the [Xtract Table](../documentation/table/) component.

  [Download](../assets/files/xfa/Table-Dynamic-Parameters.yxmd)

______________________________________________________________________

#### Related Links

- [Theobald Software Product Page: Xtract for Alteryx](https://theobald-software.com/xtract-for-alteryx/)
- [Knowledge Base: Xtract for Alteryx](../knowledge-base/)
