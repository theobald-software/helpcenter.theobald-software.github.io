# Xtract IS HelpCenter

> Unleash the power of your SAP data with our SAP plug-in for Microsoft SQL Server Integration Services (SSIS). Learn how to use Xtract IS by browsing our documentation, articles and more.

Full: https://helpcenter.theobald-software.com/xtract-is/llms-full.txt

# Getting Started

This section shows how to install and set up Xtract IS for the first time.

### Installation

1. [Download](https://theobald-software.com/en/download-trial/) a 30 day trial version of Xtract IS or download the latest version from the [customer portal](https://my.theobald-software.com/).
1. Make sure you meet all [prerequisites](../documentation/setup/installation/#prerequisites), before installing Xtract IS.
1. Run the Xtract IS executable (XtractISSetup.exe) to install Xtract IS. For information on system requirements, see [Requirements](../documentation/setup/requirements/).
1. Open Visual Studio and create a Visual Studio Integration Services project. The Xtract IS components are available in the SSIS toolbox of a Data Flow Task.

Note

If the Xtract IS components are not displayed in the SSIS toolbox, check if the deployment target version of the SSIS project matches the version of the installed SQL Server Data Tools (SSDT), see [Xtract IS Components in Visual Studio](../documentation/setup/installation/#xtract-is-components-in-visual-studio).

For more information, see [Setup](../documentation/setup/).

### Connect to SAP

Before connecting to SAP for the first time, set up an SAP dialog user with the necessary [SAP user rights](../documentation/setup-in-sap/sap-authority-objects/#general-authorization-objects).

1. Create a new connection manager by right-clicking within the “Solution Explorer” area and selecting **New Connection Manager** in the context menu. The window “Add SSIS Connection Manager” opens.
1. Select the XTRACT Connection Manager from the list of available connection managers and click **[Add...]**. The XTRACT Connection Manager is now available in the connection managers area.
1. Double-click the XTRACT Connection Manager. The window "XTRACT Connection Manager" opens.
1. Enter the system details of your SAP system and enter the SAP username and password of an SAP system or dialogue user.
1. Click **[Test connection]** to validate the connection parameters.
1. Click **[OK]** to save the XTRACT Connection Manager.

For more information, see [SAP Connection](../documentation/sap-connection/).

### Use Xtract Components in Data Flow Tasks

Follow the steps below to add an Xtract component to your data flow task:

1. Set up a **Data Flow Task** by dragging the dataflow component into the "Control Flow" canvas. Double-click the dataflow component to open the dataflow canvas.
1. Make sure that at least one XTRACT Connection Manager is available in the data flow task.
1. Drag & drop an Xtract component from the SSIS toolbox into the data flow task:
1. Double-click the Xtract component. An XTRACT Connection Manager is automatically assigned and the main window of the component opens. The majority of the functions of the component can be accessed in the main window.

Xtract IS offers the following components:

| Component | Type | Description | | --- | --- | --- | | [Xtract BAPI](../documentation/bapi/) | Transformation | Execute BAPIs and Function Modules. | | [Xtract BWCube](../documentation/bwcube/) | Source | Extract data from SAP BW InfoCubes and BEx Queries. | | [Xtract BWLoader](../documentation/bwloader/) | Destination | Load data into SAP BW systems. | | [Xtract Hierarchy](../documentation/hierarchy/) | Source | Extract Hierarchies from an SAP BW / BI system. | | [Xtract DeltaQ](../documentation/deltaq/) | Source | Extract data from DataSources (OLTP) and extractors from ERP and ECC systems. | | [Xtract ODP](../documentation/odp/) | Source | Extract data via the SAP Operational Data Provisioning (ODP) framework. | | [Xtract OHS](../documentation/ohs/) | Source | Extract data from InfoSpokes and OHS destinations. | | [Xtract Query](../documentation/query/) | Source | Extract data from ERP queries. **Note: BEx queries are covered by the Xtract BWCube component**. | | [Xtract Report](../documentation/report/) | Source | Extract data from SAP ABAP reports. | | [Xtract Table](../documentation/table/) | Source | Extract data from SAP tables and views. | | [Xtract TableCDC](../documentation/table-cdc/) | Source | Extract delta data from SAP tables and views. |

#### A Simple SAP Data Extraction for Beginners

Follow the steps below to extract customer master data from the SAP table KNA1:

1. Drag & drop an Xtract Table component from the SSIS toolbox into the data flow task.
1. Double-click the Xtract Table component. An XTRACT Connection Manager is automatically assigned and the main window of the component opens.
1. Click **[Add]** to look up an SAP table. The window “Table Lookup” opens.
1. In the field **Table Name**, enter the name of the table to extract (KNA1) . Use wildcards (\*) if needed.
1. Click **[]** . Search results are displayed.
1. Select the table KNA1 and click **[OK]**. The application returns to the main window of the component.
1. Optional: Select the table columns you want to extract. By default all columns are extracted. For more information on filter options and advanced settings, see, [Define the Xtract Table Component](../documentation/table/#define-the-xtract-table-component)
1. Click **[Load live preview]** to display a live preview of the first 100 records.
1. Click **[OK]** to save the component.

You can now add tools to process the data returned by Xtract Table and run the SSIS package.
# User Documentation

The user documentation of Theobald Software is designed to introduce readers to the main functions of Xtract IS.

Theobald Software's claim is to keep the user documentation up to date according to the latest product version. Information concerning the older version is removed gradually from the documentation content. It is generally recommended to always install the latest version of the product.

Theobald Software's claim is to always update all the used screenshots of other software vendors, nevertheless this cannot be guaranteed.

©2024 Theobald Software GmbH. All rights reserved.

### Target group and audience

This documentation is created for all users of Xtract IS. The user documentation offers an overview of the interface, of the navigation and of the basic information to the users who never or rarely worked with the product. Experienced users can find more detailed information on more complex topics and use the user documentation for reference.

Reading the "Getting Started" section is the prerequisite for working with the product. The documentation can also be useful during the evaluation phase.

### Typographical conventions

| Convention | Used for marking: | Example | | --- | --- | --- | | bold & square brackets | Buttons | **[Edit]** | | bold | URL buttons | **Subscriptions** | | bold | Fields within a window, tab names | **Name** | | italics | Input values | *MATNR* | | italics | Drop-down menu options | *TextAndCode* |

#### Notes and warning messages

There are three main types of warning messages with the corresponding colors.

| Signal word | Color | Severity and meaning | | --- | --- | --- | | Note | Blue | Additional information | | Warning | Yellow | Information that is important for executing an error free procedure | | Tip | Green | Tips | | Recommendation | Green | Theobald Software recommendations and best practices advice |

Warning Messages comply with EN 82079 and formulated according the SAFE-method that is derived from German. The SAFE method is a procedure for systematically designing safety instructions. The severity of the danger as well as the source of the danger.

**"SAFE"** stands for:

**S**chwere der Gefahr (Signalwort) **A**rt und Quelle der Gefahr **F**olgen bei Missachtung der Gefahr **E**ntkommen (Maßnahmen zur Abwehr der Gefahr)

Translation: Severity of the danger (Signal word) Type and source of the danger Consequences of disregarding the danger Escape (measures to avert the danger)

Example:

Warning

**RFC_ERROR_SYSTEM_FAILURE - No more storage space available for extending an internal table**\
To avoid a memory overflow on the SAP source system and to avoid huge overheads, choose a package size that suits your memory capacity.

Note

The corresponding SQL command is generated dynamically and executed on the SAP server.

This section contains user documentation for Xtract IS.

Find more information on how to use and navigate through the user documentation in the section ["About this Documentation"](../about-this-documentation/).

### About Xtract IS

Xtract IS is a plug-in for the [SQL Server Integration Services (SSIS)](https://docs.microsoft.com/en-us/sql/integration-services/sql-server-integration-services). Xtract IS allows extracting data from SAP systems and writing data to SAP systems.

### Xtract Components

Xtract IS offers the following components to cover a wide range of data extraction scenarios.

This page shows how to use the Xtract BAPI component.\
The Xtract BAPI component can be used to parameterize and execute SAP function modules and BAPIs for automation.

### About Function Modules / BAPIs

Function modules are procedures that encapsulate and reuse global functions in the SAP system. SAP systems contain several predefined functions modules that can be called from any ABAP program. A Business Application Programming Interface (BAPI) is a remote function module that can access business data and processes of an SAP system from different systems.

### Custom BAPIs

The use of custom BAPIs (Z function modules) is possible. Issues specific to Z function modules are not included in the scope of support provided by Theobald Software.

### Prerequisites

- A connection to an SAP system is available, see [SAP Connection](../sap-connection/).
- The SAP user has sufficient user rights, see [SAP Authority Objects](../setup-in-sap/sap-authority-objects/#bapi).

Warning

**Missing Authorization.**\
To use the Xtract BAPI component, access to the designated authority objects (RFC) in SAP must be available. Adjust [SAP Authority Objects: BAPI](../setup-in-sap/sap-authority-objects/#bapi) accordingly.

### Add an Xtract BAPI Component

Follow the steps below to add an Xtract Table component to your SSIS package:

1. Drag&drop the Xtract BAPI component from the SSIS toolbox into your data flow task.

1. Double-click the component. A connection manager is automatically assigned to the component and the main window of the component opens.

   Note

   If there are multiple connection managers, the window "Select Connection Manager" opens, see [SAP Connection](../sap-connection/#assign-connection-managers-to-xtract-components). Once a connection manager is selected, the main window of the component opens.

The majority of the functions of the component can be accessed in the main window.

### Look up a Function Module / BAPI

1. In the main window of the component, click **[]** to look up a Function Module / BAPI. The window "Function Module Lookup" opens.
1. In the window "Function Module Lookup" enter the name of the function module or BAPI . Use wildcards (\*) if needed.
1. Click **[]** . Search results are displayed.
1. Select a Function Module / BAPI and click **[OK]**.

The application returns to the main window of the component.

### Define the Xtract BAPI Component

The Xtract BAPI component offers the following options for defining parameters of a Function Module / BAPI:

1. Add input parameters (data you want to send to SAP) in **Imports**, see [Import Parameters](input-and-output/#import-parameters).\
   You can enter scalar values or structures .

1. Add output parameters (data you want to receive from SAP) in **Exports**, see [Export Parameters](input-and-output/#export-parameters).\
   Select output by activating the checkbox next to the items.

1. Optional: If available, define input and output parameters in **Changings**, see [Changings Parameters](input-and-output/#changing-parameters).

1. Add tables to the output of the component or add table parameters to the input of the component in **Tables**, see [Table Parameters](input-and-output/#table-parameters).

   - Click **[]** to check the names and data types of the table fields .
   - Activate the checkbox in the output column to add items to the output .
   - Click **[]** to edit the content of the table .

1. Optional: If available, define which exceptions thrown by the Function Module / BAPI are ignored during runtime, see [Exceptions](input-and-output/#exceptions).

1. Click **[OK]** to save the component.

You can now run the SSIS package.

### Custom Properties of Xtract BAPI

The *Custom Properties* are properties that are unique to the component. When parameterizing the component using SSIS variables, the *Custom Properties* are overwritten.

The *Custom Properties* of the Xtract BAPI component are displayed in the "Properties" window.

#### Commit Transaction

Some SAP Function Modules require calling the function module BAPI_TRANSACTION_COMMIT to successfully update data in the database, e.g., BAI_PO_CREATE. To automatically call BAPI_TRANSACTION_COMMIT after the selected Function Module / BAPI is processed, aset this option to *true*.

______________________________________________________________________

#### Related Links

- [Knowledge Base Article: Write CATS Data to SAP](../../knowledge-base/write-cats-data-to-sap/)
- [Knowledge Base Article: Write Product Data to SAP](../../knowledge-base/write-product-data-to-sap/)

This page shows how to change the [XTRACT Connection Manager](../../sap-connection/#connect-to-sap) that is assigned to an Xtract BAPI component.

### About XTRACT Connection Managers in Xtract BAPI

An XTRACT connection Manager is automatically assigned or selected when you open the main window of the Xtract BAPI component for the first time, see [Assign Connection Managers to Xtract Components](../../sap-connection/#assign-connection-managers-to-xtract-components). Connection managers are usually changed in the *Advanced Editor* of a component. Because the Xtract BAPI component does not have an *Advanced Editor*, it is not possible to change the connection manager outside of the component.

### Change the XTRACT Connection Manager

Follow the steps below to change the connnection manager of an Xtract BAPI component:

1. In the main window of the Xtract BAPI component, click **Change Connection Manager**. This option is only available when there is more than one defined XTRACT Connection Manager. The window "Select Connection Manager" opens.
1. Select a Connection Manager from the drop-down-menu.
1. Click **[OK]** to confirm your selection.

The selected XTRACT connection manager is now assigned to the Xtract BAPI component.

This page contains an overview and description of the Import, Export, Changings and Tables parameter in the Xtract BAPI component.

Each Import, Export, Changings and Tables parameter can have one of the following representations:

- A scalar field (e.g., characters, date, time, number, amount etc.).
- A structure consisting of several components.
- A table (tabular array of data) consisting of columns (data values of the same type) and rows (data records).

## Import Parameters

Import parameters represent the input values sent from the client to SAP. In the tab **Imports** you can define import parameters that can be presented as scalar values or structures .

To use the filtering function, enter text in the headers of the columns **Name** and **Description**.

### Scalar Parameters

Assign single values to an import parameter by using one of the following options:

- If the input field is empty, enter a static value.
- If a checkbox is displayed in the input field, the parameter is predefined in SAP. The value in SAP is displayed in a light gray font. To disable the predefined value, activate the checkbox and leave the field empty or enter a new value.
- If **[]** is displayed in the input field, enter a static value. Click **[]** to switch between static values and dynamic values that are set at runtime.
- If **[]** is displayed in the input field, select an SSIS variable / parameter. This option is only available if the project contains SSIS variables. Click **[]** to switch between dynamic values and static values.

When using SSIS variables, make sure the data type of the input matches the data type in SAP.

### Structure Parameters

When a Function Module / BAPI uses structures as import parameters, you can assign structure elements (i.e. fields) similarly to single [scalar fields](#scalar-parameters). Setting a single value or a parameter for the whole structure is not possible.

1. Click **[]**. The window "Edit Structures" opens.
1. Enter static values ( **[]** icon or no icon) or assign SSIS variables ( **[]** icon).

Tip

It is possible to use tables as input parameters, see [Tables Parameters](#table-parameters).

## Export Parameters

Export parameters represent the output values sent from SAP back to the client after the execution of a Function Module. In the tab **Export** you can select the items you want to add to the output of the component.

### Add Items to Output

Mark the checkbox in the output column to add an item to the output of the component.

To use the filtering function, enter text in the headers of the columns **Name** and **Description**.

Tip

It is possible to use tables as output parameters, see [Add Tables to Output](#add-tables-to-output).

## Changing Parameters

Changing parameters represent parameters that can be used for input and output. In the tab **Changings** you can define the changing parameters.

## Table Parameters

Table parameters are parameters presented in a table structure consisting of multiple rows. Tables can be used for input and output. In the tab **Tables** you can define table parameters for importing and exporting data into and from an SAP Function Module or BAPI.

Tables represent a structure of multiple rows of the same data type.

To use the filtering function, enter text in the headers of the columns **Name** and **Description**.

Note

Only **5** tables are available for parallel exporting.

- Click **[]** to check the names and data types of the table fields .
- Activate the checkbox in the output column to add items to the output .
- Click **[]** to edit tables .

### Access Metadata of Tables

Click **[]** to display the metadata of a table. The metadata includes the name and the data type of all fields. After the function module was edited in SAP, refresh the metadata by clicking **Refresh metadata**

### Add Tables to Output

Mark the checkbox in the output column to add a table to the output.

### Edit Tables

You can assign tables elements (i.e. fields) similarly to single [scalar fields](#scalar-parameters):

1. Click **[]**. The window "Edit Table Contents" opens.
1. Click **[Add]** to add new set of parameters.
1. Enter values or SSIS variables.\
   When using SSIS variables, make sure the data type of the input matches the SAP data type.
1. Click **[Remove]** to delete a row.

### Map Input Tables

When connecting tables to the Xtract BAPI component, a data mapping is executed automatically. To correctly map the data, the following requirements apply:

- The column names of the input table must be the same as in the Xtract BAPI component.
- The data types in the input table must be the same as in the Xtract BAPI component. Click **[]** next to a table to look up column names and data types in the Xtract BAPI component.

Tip

If the column names and / or datatypes of the input table and the Xtract BAPI table do not match, add a *Derived Column* component to convert the input data.

## Exceptions

**Exceptions** refer to ABAP exceptions / errors messages of an SAP BAPI. If an exception occurs during runtime, Xtract IS returns a corresponding error message.

By default, all exceptions result in errors when running the Xtract BAPI component. To ignore exceptions during runtime, deselect the exceptions in the **Exceptions** tab.

This page shows how to use the Xtract BWCube component.\
The Xtract BWCube component can be used to extract MDX or BICS data directly from BW InfoProviders (e.g., Cubes) or from BW Queries. The BW Queries can be based on InfoProviders.

### Prerequisites

- A connection to an SAP system is available, see [SAP Connection](../sap-connection/).
- The SAP user has sufficient user rights, see [SAP Authority Objects](../setup-in-sap/sap-authority-objects/#bw-cube-bw-query).
- To extract a BW Query, the attribute *Allow External Access to this Query* of the Query must be active in the BEx Query Designer or the BW Modeling Tool, see [Troubleshooting Article: Allow external access to BW Queries](https://support.theobald-software.com/helpdesk/KB/View/13800-allow-external-access-to-bw-queries).

Warning

**Missing Authorization.**\
To use the Xtract BWCube component, access to the designated authority objects (RFC) in SAP must be available. Adjust [SAP Authority Objects: BW Query / BW Cube](../setup-in-sap/sap-authority-objects/#bw-cube-bw-query) accordingly.

### Add an Xtract BW Cube Component

Follow the steps below to add an Xtract Table component to your SSIS package:

1. Drag&drop the Xtract BW Cube component from the SSIS toolbox into your data flow task.

1. Double-click the component. A connection manager is automatically assigned to the component and the main window of the component opens.

   Note

   If there are multiple connection managers, the window "Select Connection Manager" opens, see [SAP Connection](../sap-connection/#assign-connection-managers-to-xtract-components). Once a connection manager is selected, the main window of the component opens.

The majority of the functions of the component can be accessed in the main window.

### Look Up a BW Cube or Query

By default, the Xtract BWCube component extracts data using the MDX interface.\
To use [BEX mode](settings/#bex) or to enter [MDX statements](settings/#mdx), change the [settings](settings/) before the looking up a BW Cube or Query.

1. In the main window of the component, click the search botton. The window “Cube and Query Lookup” opens.
1. Select the type of cube you want to extract data from (Info Cube or Query) .
1. In the search bar, enter the name of a Query or a BW Cube / InfoProvider . Use wildcards (\*), if needed.
1. Click the search button. Search results are displayed.
1. Select a Query or BW Cube / InfoProvider and click **[OK]** to confirm.

The application now returns to the main window of the component.

Note

Click **Refresh Metadata** to renew metadata. This is necessary if a data source has been adjusted in SAP, another source system has been connected, or the source system has been updated.

Warning

**Invalid action**\
A BW Query must have the attribute *Allow External Access to this Query* switched on in the BEx Query Designer or the BW Modeling Tool to appear in the list. For additional details see the [Troubleshooting Article: Allow external access to BW Queries](https://support.theobald-software.com/helpdesk/KB/View/13800-allow-external-access-to-bw-queries).

### Define the Xtract BWCube Component

The Xtract BWCube component offers the following options for Query and BW Cube extractions:

1. In the tree structure of the component, double-click the measure (key figures) you want to extract.

   Tip

   The tree structure represents the metadata of the Query (or InfoProvider).\
   The first directory contains all the measures (key figures) . The following directories correspond to dimensions and often contain additional dimension properties .

1. Within the key figures directory, click the arrow to display the available units. Select a unit, if needed.

1. In the following directories, select the dimensions and properties you want to extract .

1. Optional: Click the **Filter** option next to a dimension to add filters , see [Dimension Filters](variables-and-filters/#set-dimension-filters).

1. Optional: If a BW Query has a defined variable, click **Variables** to edit the variable or provide input values, see [Variables](variables-and-filters/#edit-variables).

1. Click **[Preview]** to display a live preview of the data. For every selected dimension or property, a key figure and a unit is displayed in the result.

1. Check the [Settings](settings/) before running the SSIS package.

1. Click **[OK]** to save the component.

You can now run the SSIS package.

This page shows how to parameterize the Xtract BWCube component using SSIS variables directly in the component and by using SSIS expressions to set *Data Flow Properties*.

### Parameterization using SSIS Variables

SSIS variables store values that an SQL Server Integration Services package and its containers, tasks, and event handlers can use at runtime. The following settings in the Xtract BWCube component allow entry of an SSIS variable:

- [BEx variables](../variables-and-filters/#edit-variables): for BEx variables of type *Multiple Single*, enter a single SSIS variable, set a delimiter for custom property *DelimiterForMultipleSSISVariableValues* and enter multiple single values in the SSIS variable separated by the delimiter.
- [Dimension Filters](../variables-and-filters/#set-dimension-filters): the SSIS variable can be filled with multiple single entries separated by comma.
- [MDXVariable](#mdxvariable): enter an SSIS variable and fill the SSIS variable with the complete MDX statement.

#### Use SSIS Variables with @-Notation

To use SSIS variables in input fields of the component, place an @ symbol before the variable name.

1. Choose an input field that supports SSIS variables.
1. Instead of entering a fixed a value, enter a variable name using the @-notation, e.g., *@vDate*.
1. Create a new SSIS variable with the same name, but without the @ symbol, e.g., *vDate*.
1. Make sure to select the correct data type.

You can now use the SSIS variable to set dynamic input values for the input field.

### Custom Properties of Xtract BWCube

The *Custom Properties* are properties that are unique to the component. When parameterizing the component using SSIS variables, the *Custom Properties* are overwritten.

The *Custom Properties* of the Xtract BWCube component are displayed in the "Properties" window.

#### CubeName

Corresponds to the setting [*Cube Name*](../#look-up-a-bw-cube-or-query) in the Xtract BWCube component.

#### DelimiterForMultipleSSISVariableValues

Delimiter for multiple input variables, see [Parameterization using SSIS Variables](#parameterization-using-ssis-variables).

#### IgnoreMDXErrors

If set to *true*, MDX errors do not lead to SSIS errors.

#### MDXVariable

Enter an SSIS variable in the MDX textbox and fill the SSIS variable with the complete MDX statement, see [Parameterization using SSIS Variables](#parameterization-using-ssis-variables).

#### StringConversion

Corresponds to the seeting [String Conversion](../settings/#string-conversion).

______________________________________________________________________

#### Related Links

- [Microsoft Documentation: Integration Services (SSIS) Variables](https://docs.microsoft.com/en-us/sql/integration-services/integration-services-ssis-variables?view=sql-server-ver15)

This page contains an overview of the settings in the Xtract BW Cube component.\
To open the settings, click ****Settings**** in the main window of the component.

### String Conversion

#### Automatic String Conversion

All strings are converted into VarChar strings if the source system is non-Unicode, and all strings are converted into NVarChar if the source system is Unicode.

#### Convert Strings to VarChar

All strings are converted to VarChar regardless if the source system is Unicode or not.

#### Convert Strings to NVarChar

All strings are converted to NVarChar regardless if the source system is Unicode or not

### Extraction Type

#### Regular

Extracts the data using the MDX interface.

#### BEX

This option has to be used in case of BEx Queries with rows containing structures. In this case the query will be delivered with the same output (structure and data) as in the BEx analyzer. There are no options to change the selection of the dimension or the key figures.

Using the BEX Extraction mode you can even extract a Query View. After selecting the BEx query, set the query view name in the field Query View.

| Option | Description | | --- | --- | | **Fill Empty Cells** | Fills the empty cells of the dimension accordingly. | | **Eliminate Result Lines** | Removes the result row (e.g. sum). |

#### MDX

If this option is active, the main window of the component provides a text field where you can directly insert an MDX statement. After inserting the MDX statement, click **[Execute MDX and Refresh Metadata]** to load the metadata from the BW system. Variables can be used either for the whole MDX statement or within the MDX statement.

#### Use new OLAP BAPIs

Those BAPIs will be used by default if they are available on the BW system to remove the 1,000,000 cell restriction. It requires the following version of the SAP Netweaver BI:

- version 7.01 SP2 or higher (7.0 with ehp1 and support package 2 or later)
- version 7.11 with support package 00 or higher (SAPKW71100)

#### Decimal Separator (deprecated)

If the packaging is enabled (Package Size > 0) the component has to find out the correct decimal place conversion for the current SAP user. In case of security reasons you can declare a decimal separator so the component will not look for the settings and use the defined separator. Normally you will use a dot (.) or a comma (,).

### Misc

#### Do not tread ‘Axis has no rows’ as Error

Defines whether an error message is given when there is no data to be selected.

#### Use Description for Pipeline

Defines that the name of the pipeline element is given by the column description and not by the technical name.

#### User Formatted Values

Defines that the value of the key data will be extracted as defined in the query designer (e.g. scaling factor and decimal places). Debug Details Creates an detailed output of the single steps in the SSIS-protocol.

#### Debug Details

Generates more detailed log entries to enable easier error detection.

#### Measure Unit in Resultset

Displays the units of the key figures.

#### Package Size

The extracted data is split into packages of the defined size. The default value is 50000 lines.\
A package size between 20000 and 50000 is advisable for large amounts of data. 0 means no packaging. Not using packaging can lead to an RFC timeout for large data extractions.

Warning

**RFC_ERROR_SYSTEM_FAILURE - No more storage space available for extending an internal table**\
To avoid a memory overflow on the SAP source system and to avoid huge overheads, choose a package size that suits your memory capacity.

#### Automatic Slicing Dimension

This option sets a dimension for an automatic slicing. Slicing is the act of picking a subset of a cube by choosing a single value for one of its dimensions. Automatic slicing means that a loop is executed for each single value of the chosen slicing dimension (characteristic) to extract the result from BW.

Automatic Slicing Dimension allows the extraction of a large amount of data (millions of records) from BW.

#### Legacy metadata retrieval

This is for BWCube extractions that were created with Xtract IS version 2.5.17 or smaller. If you need to refresh the BW Cube’s metadata please check this flag first. This is necessary as the metadata retrieval has changed after 2.5.17 which does especially affect BEx Queries which contain two structures.

This page shows how to use variables and dimension filters to filter the data that is extracted with the Xtract BWCube component. There are two options for filtering:

- [Variables](#edit-variables) are usually defined in SAP to create filter options for BW Queries. They can be edited in the Xtract BWCube component.
- [Dimension Filters](#set-dimension-filters) are defined in the Xtract BWCube component to filter data from InfoProviders or BW Queries that do not have variables.

### Edit Variables

BW queries often have defined variables to create filter options. Depending on the type of BEx variable (single value, multiple value, interval or complex selection) input fields of the variables are enabled or disabled.

In the main window of the component, click **Variables**. The window "Edit BW Query Cube Variables" opens. Variables can be edited and entered using the variable editor shown below.

#### Complex Selections

If the query variable represents a complex selection, click **Edit** to open an additional menu.

#### Static Values

Enter values directly into the input fields.

#### Pre-Defined Values

Click an empty button next to an input field to open a list of values that are defined in SAP. Select a pre-defined value.

#### SSIS Variables

The use of SSIS variables is supported. To use SSIS variables in input fields of the component, place an @ symbol before the variable name, e.g., *@vDate* for a variable *vDate*.\
For more information, see [Use SSIS Variables with @-Notation](../parameterization/#parameterization-using-ssis-variables).

### Set Dimension Filters

Each dimension of a BEx Query or an InfoCube offers the possibility to set a filter to execute the MDX statement in BW using the selected filter values.

In the main window of the component, click **Filter** next to a selected dimension. The window "Member Filter" opens.

#### Pre-Defined Values

The window "Member Filter" displays a list of values that are defined in SAP. You can select pre-defined values to filter the result

#### Define a Variable for the Filter Values

1. Write the variable name into the field Variable, e.g., `CompanyCode`.
1. When you execute the extraction, set the value, e.g., `CompanyCode=1000`.\
   To pass multiple values, use comma as seperator, e.g., `CompanyCode=1000,2000`.

#### Exclude Values from the Result Set

Activate **Exclude Values from Resultset** to exclude the filter values from the result set.

Note

Dimensions with a hierarchy are supported.

This page shows how to use the Xtract BWLoader component.\
Unlike the other components, the Xtract BWLoader component is a data destination, not a data source.

### Add an Xtract BW Loader Component

Follow the steps below to add an Xtract Table component to your SSIS package:

1. Drag&drop the Xtract BW Loader component from the SSIS toolbox into your data flow task.

1. Double-click the component. A connection manager is automatically assigned to the component and the main window of the component opens.

   Note

   If there are multiple connection managers, the window "Select Connection Manager" opens, see [SAP Connection](../sap-connection/#assign-connection-managers-to-xtract-components). Once a connection manager is selected, the main window of the component opens.

The majority of the functions of the component can be accessed in the main window.

### Prerequisites

For the Xtract BWLoader component to deliver data correctly, an InfoPackage is required. Create the following InfoPackage in the SAP BW system:

- Create a new source system of the type *3rd party / Staging BAPIs*. The Xtract BWLoader component requires the program ID of the source.
- When using a 3.x data flow, you can assign the source system to the InfoSource and create an InfoPackage.
- When using a 7.x data flow, create a DataSource for the newly created 3rd party source system and create an InfoPackage. Xtract BWLoader loads data to the PSA of the DataSource.

For more information on how to create data imports in SAP BW, refer to the SAP Documentation.

### Look up an InfoPackage

1. In the main window of the component, click the search botton. The window “Look Up InfoPackage” opens.
1. Look up the name of an InfoPackage, an Info Source or a Source System . Use wildcards (\*) if needed.
1. Click the search button. Search results are displayed.
1. Select an item from the list and click **[OK]** to confirm.

The lookup finds InfoPackages based on either 3.x or 7.x DataSources.

### Define the Xtract BWLoader Component

1. In the main window of the component enter values for the following fields or use the search button to look up available RFC Destinations:

   | Input Field | Description | | --- | --- | | **Gateway Host** | the network address of your BW system. | | **Gateway Service** | usually "sapgwXX" (substitute XX with your system number). | | **Program ID** | is the Program ID that is defined in the BW SourceSystem. |

1. Click **[OK]** to save your input.

1. Pass input data to the input pipeline of the Xtract BWLoader component.

1. Open the main window of the Xtract BWLoader component component.

1. Map each element of the pipeline to one element of the transfer structure.

1. Check the [settings](settings/) before running the SSIS package.

1. Click **[OK]** to save your input.

You can now run the SSIS package.

### Load Data into SAP BW

There are two options on how data can be loaded into SAP BW.

1. The InfoPackage that initiates the data load is triggered from SSIS.
1. The InfoPackage is started from within SAP.

For the second scenario there are two options:

- **Option 1**

  ______________________________________________________________________

  Set the setting [*No InfoPackage start (Only wait)*](settings/#no-infopackage-start) to *true*. In this case the SSIS package must be started and running. Then you can start the InfoPackage in BW manually or by scheduler and the process in SSIS will continue.

- **Option 2**

  ______________________________________________________________________

  Use the BI Notification Receiver. The BI Notification Receiver enables triggering multiple SSIS packages from BW without having to run the SSIS packages all the time. This application registers itself to BW as an external system and waits for notification.

In the previous chapters data targets (InfoObjects, InfoSource, InfoPackages) are modeled in the BW system. The Xtract BWLoader component offers the possibility of creating all necessary objects right from within the editor.

You can find the BWLoaderSampleDB.sql file in the installation directory, e.g., C:\\Program Files\\XtracIS. This file contains all necessary SQL commands needed to create and fill in the tables used in the following examples in a test database.

### Master Data Transfer

In this first example, the goal is to create and fill in a master data InfoObject.

1. Set up a new data flow and create an OleDB source that reads the product table.
1. Link the pipeline with a BW Loader target (after setting up the connection manager to SAP):
1. Open the editor of the BW Loader. Click the *New* button for the InfoSource.
1. Select *Master Data* in the following dialog window. A dialogue window opens in which an InfoSource can be set up.
1. Click the *Create New InfoObject* button.
1. Enter the name of the InfoObject (ZPROD) and click the *CHAR data type* (with a length of 20). In addition, short and long texts are to be filled here later, which are depending on the language, and the InfoObject will have master data:
1. The color attribute has to be added to the ZPROD InfoObject. The color attribute can be newly created by clicking the *Create New Attribute* button. The screenshot below shows the ZCOLOR InfoObject to be created; it has no master data, but allows lower case characters (see above right).
1. Save and activate the *ZPROD* InfoObject. The program returns to our original InfoSource setup.
1. Edit the InfoSource according to the screenshot.
1. Save and activate the InfoSource. Apart from creating an InfoSource, transfer rules for the selected source system are also created here.
1. Create an InfoPackage in the main template with the *Create New InfoPackage* button. The InfoPackage is based on the previously created InfoSource.
1. Define the technical access parameters for the source system and mapping of the pipeline elements to the InfoPackage's transfer structure. The main template should look like this when you're done:

Start the upload in debug-mode. In the monitor in transaction RSA1, the upload looks like this:

### Texts

In the previous section, we created a master data InfoObject while specifying that there are language-dependent texts. These are located in the ProductText table.

1. Create a new data flow (or a new package)
1. Prepare the connection manager and define an OleDB source for the ProductText table.
1. Define a BW Loader target and draw the pipeline to the target.
1. Create a new InfoPackage by clicking *Create New InfoPackage* button. The dialog should be filled in as follows:
1. Because we already specified in the ZPROD setup that there are language dependent short and long texts, the transfer structure is already built accordingly. Now only the pipeline elements have to be mapped to the transfer structure elements, as shown in the following screenshot:
1. A test run uploads the texts to the BW. The following screenshot shows the RSA1 transaction. It shows both InfoPackages for the attributes and texts under the ZPROD InfoSource. The XTRACTSYS source system forms the transfer layer. Depending on the release you use, this screenshot might look different.

The following screenshot shows the contents of the PSA table after posting. In an Unicode system, any fonts can be posted (e.g. Japanese).

### Create an InfoCube

An InfoCube into which the data can be loaded is required.

1. Create a new SSIS package.

1. Define an OleDB source in the Sales test table and link the pipeline with a BW Loader target.

1. Click the link *Create Cube* in the editor. The following window opens:

   Through the already linked pipeline, Xtract IS has the correct properties of the cube. One InfoObject for each element is necessary to create a cube.

1. Click the *Create* link to create an OrderID in the system as an InfoObject:

1. Two key figures are needed: quantity and price. A fixed unit (ST for Stück, unit in German) is specified under quantity. For price, a reference is made to the 0CURRENCY InfoObject.

1. The three remaining elements are defined through InfoObjects that already exist (ZPROD for product, 0CALDAY for the date and 0CURRENCY for the currency):

1. Create a new InfoSource of the *Transaction Data* type. It is set up just like the cube. Only in the price field we have to make an explicit reference to the currency column (*Unit Field* column):

1. Open the cube administration in the RSA1 transaction and then select *Environment* in the *menu -> Update Rules -> Create*.

1. Select the InfoSource you just created and confirm with *Enter*.

1. Save and activate the rule.

### Load Transaction Data

Create an InfoPackage of the Transaction type for the InfoSource, and link the pipeline elements with the elements of the transfer structure. The following screenshot shows the completed link. The transaction data can now be loaded.

### Parameterization using SSIS Variables

SSIS variables store values that an SQL Server Integration Services package and its containers, tasks, and event handlers can use at runtime. The following settings in the Xtract BWLoader component allow entry of an SSIS variable:

- [*Package Size*](../settings/#package-size)
- [*Gateway host*](../#define-the-xtract-bwloader-component)
- [*Gateway service*](../#define-the-xtract-bwloader-component)
- [*Program ID*](../#define-the-xtract-bwloader-component)

#### Use SSIS Variables with @-Notation

To use SSIS variables in input fields of the component, place an @ symbol before the variable name.

1. Choose an input field that supports SSIS variables.
1. Instead of entering a fixed a value, enter a variable name using the @-notation, e.g., *@vDate*.
1. Create a new SSIS variable with the same name, but without the @ symbol, e.g., *vDate*.
1. Make sure to select the correct data type.

You can now use the SSIS variable to set dynamic input values for the input field.

### Custom Properties of Xtract BWLoader

The *Custom Properties* are properties that are unique to the component. When parameterizing the component using SSIS variables, the *Custom Properties* are overwritten.

The *Custom Properties* of the Xtract BWLoader component are displayed in the "Properties" window.

List of relevant *Custom Properties*:

| Property | Comment | | --- | --- | | *DataSourceType* | Corresponds to the setting [*Data Source*](../#look-up-an-infopackage) in the Xtract BWLoader component | | *GatewayHost* | Corresponds to the setting [*Gateway host*](../#define-the-xtract-bwloader-component) in the Xtract BWLoader component. | | *GatewayService* | Corresponds to the setting [*Gateway service*](../#define-the-xtract-bwloader-component) in the Xtract BWLoader component. | | *InfoPackage* | Corresponds to the setting [*InfoPackage*](../#look-up-an-infopackage) in the Xtract BWLoader component. | | *InfoSource* | Corresponds to the setting [*InfoSource*](../#look-up-an-infopackage) in the Xtract BWLoader component. | | *LogSys* | Corresponds to the [*Logical System*](../#look-up-an-infopackage) of the DataSource. | | *NolPackageStartOnlyWait* | Corresponds to the setting [*No InfoPackage Start (Only Wait)*](../settings/#no-infopackage-start) in the Xtract BWLoader component. | | *PackageSize* | Corresponds to the setting [*Package Size*](../settings/#package-size) in the Xtract BWLoader component. | | *ProcessChain* | Corresponds to the setting [*Trigger Process Chain after Upload*](../settings/#trigger-process-chain) in the Xtract BWLoader component. | | *ProgramID* | Corresponds to the setting [*Program ID*](../#define-the-xtract-bwloader-component) in the Xtract BWLoader component. | | *WaitUntilFinished* | Corresponds to the setting [*Wait data transfer to be finished*](../settings/#wait-data-transfer-to-be-finished) in the Xtract BWLoader component |

______________________________________________________________________

#### Related Links:

- [Integration Services (SSIS) Variables](https://docs.microsoft.com/en-us/sql/integration-services/integration-services-ssis-variables?view=sql-server-ver15)

This page contains an overview of the settings in the Xtract BW Loader component.\
To open the settings, click ****Settings**** in the main window of the component.

### General

#### Package Size

The extracted data is split into packages of the defined size. The default value is 50000 lines.\
A package size between 20000 and 50000 is advisable for large amounts of data. 0 means no packaging. Not using packaging can lead to an RFC timeout for large data extractions.

Warning

**RFC_ERROR_SYSTEM_FAILURE - No more storage space available for extending an internal table**\
To avoid a memory overflow on the SAP source system and to avoid huge overheads, choose a package size that suits your memory capacity.

#### Wait data transfer to be finished

If this option is checked, the component waits until data processing is completed. You will receive additional error messages if data processing fails.

#### Trigger Process Chain

If you want to trigger a process chain after uploading just type in the name of the process chain here.

### SAP BI 3rd party notification

#### No InfoPackage Start

The best way to upload data is to trigger the InfoPackage (default value). Under some conditions it might be useful not to trigger the InfoPackage but only to wait for notification (sleeping mode). In this case check this option.

#### Use external Notifier

Corresponds to an option in [Load Data into SAP BW](../#load-data-into-sap-bw).

#### Request ID variable

Corresponds to an option in [Load Data into SAP BW](../#load-data-into-sap-bw).

### Performance Improvement

#### Debug Details

Generates more detailed log entries to enable easier error detection

#### Enable Parallel Processing

Enables multiple uploads at the same time.

#### Allow multiple SAP connections

Allows to establish more than one connection to SAP which improves performance.

#### Max. Number of Threads

Maximum number of application threads that prepare the packages to be uploaded.

This page shows how to use the Xtract DeltaQ component.\
The Xtract DeltaQ component can be used to extract delta data from SAP DataSources. This means that only recently added or changed data is extracted, instead of a full load. For more information on the delta process, see [Initialize a Delta Process](update-mode/#initialize-a-delta-process).

### Prerequisites

- A connection to an SAP system is available, see [SAP Connection](../sap-connection/).
- The SAP user has sufficient user rights, see [SAP Authority Objects](../setup-in-sap/sap-authority-objects/#deltaq).
- Configure your SAP system to make DataSources accessible, see [SAP Customization for DeltaQ](../setup-in-sap/customization-for-deltaq/).
- To use DataSources in Xtract IS, make sure that the DataSources are activated in SAP.

Warning

**Missing Authorization.**\
To use the Xtract DeltaQ component, access to the designated authority objects (RFC) in SAP must be available. Adjust [SAP Authority Objects: DeltaQ](../setup-in-sap/sap-authority-objects/#deltaq) accordingly.

### SAP Transactions for Working with DeltaQ

The following SAP transaction can support you when working with DataSources:

- SBIW - SAP DataSources start page

- RSA3 - Extractor Checker

- RSA5 - Install DataSources and Hierarchies from Business Content

- RSA6 - Postprocess DataSources and Hierarchies

- SM59 - Configuration of RFC Connections

- SMQS - qRFC Monitor (QOUT Scheduler): Number of *Max.Conn.* should be at least 10

- SM37 - Background jobs

- SM58 - Transactional RFC

- SM50 - Process overview

- SMGW - Gateway Monitor

- RSA7 - Delta Queue Maintenance

- SMQ1 - qRFC Monitor (outbound queue)

- WE02 - IDoc list

- WE20 - Partner profiles

### Add an Xtract DeltaQ Component

Follow the steps below to add an Xtract Table component to your SSIS package:

1. Drag&drop the Xtract DeltaQ component from the SSIS toolbox into your data flow task.

1. Double-click the component. A connection manager is automatically assigned to the component and the main window of the component opens.

   Note

   If there are multiple connection managers, the window "Select Connection Manager" opens, see [SAP Connection](../sap-connection/#assign-connection-managers-to-xtract-components). Once a connection manager is selected, the main window of the component opens.

The majority of the functions of the component can be accessed in the main window.

### Look Up Extractors or Hierarchies

1. In the main window of the component, click **[]**. The window “Look Up OLTP Source” opens.

1. In the field **Name**, enter the name of a DataSource . Use wildcards ( * ), if needed.

1. Click **[]**. Search results are displayed.

1. Select an extractor and click **[OK]** to confirm.

1. In the main window of the component, click **[]**. The window “Look Up OLTP Source” opens

1. In the field **Name**, enter the name of a Hierarchy . Use wildcards ( * ), if needed. Alternatively, enter the description of a Hierarchy in the field **Description**.

1. Click **[]**. Search results are displayed.

1. Select an extractor of type *HIER* and click **[OK]** to confirm. All available Hierarchies are fetched and the window "Look Up DeltaQ Hierarchies" opens.

1. Select a Hierarchy and click **[OK]** to confirm.

The application now returns to the main window of the component.

### Define the Xtract DeltaQ Component

The Xtract DeltaQ component offers the following options for DataSource extractions:

1. Navigate to **Gateway** and click **[]** to look up an RFC destination. For more information, see [DeltaQ Customizing: Gateway](deltaq-customization/#gateway).

1. Navigate to **Logical Destination** and click **[]** to look up a logical RFC target system. For more information, see [DeltaQ Customizing: Logical Destination](deltaq-customization/#logical-destination).

1. Click **Customizing Check** to validate the DeltaQ Customizing on the SAP system. Make sure that all check marks are green. For more information, see [DeltaQ Customizing: Customizing Check](deltaq-customization/#customizing-check).

1. Select an [Update Mode](update-mode/), e.g., to initialize delta extractions.

1. Select the items you want to extract.

1. Optional: click the **Edit** option next to an item to [filter the data](selections/).

1. Click **[Activate]** to activate the extraction in SAP. After a successful activation, a corresponding status message opens:

   Note

   The activation is only required for the update modes *Delta*, *Full* or *Init*. Do not activate the extraction for the *Delta Update* mode.

1. Check the [Settings](settings/) before running the SSIS package.

1. Click **[OK]** to save the component.

1. Navigate to **Gateway** and click **[]** to look up an RFC destination. For more information, see [DeltaQ Customizing: Gateway](deltaq-customization/#gateway).

1. Navigate to **Logical Destination** and click **[]** to look up a logical RFC target system. For more information, see [DeltaQ Customizing: Logical Destination](deltaq-customization/#logical-destination).

1. Click **Customizing Check** to validate the DeltaQ Customizing on the SAP system. Make sure that all check marks are green. For more information, see [DeltaQ Customizing: Customizing Check](deltaq-customization/#customizing-check).

1. Select an [Update Mode](update-mode/), e.g., to initialize delta extractions.

1. Select the items you want to extract.

1. Optional: click the **Edit** option next to an item to [filter the data](selections/).

1. Optional: click **Settings** to set the language and output format of the Hierarchy, see [settings](settings/).

1. Click **[OK]** to save the component.

Tip

Unlike attributes and transactions, Hierarchies do not have to be activated.

You can now run the SSIS package.

### Execute DeltaQ in Parallel

When extracting multiple DataSources in parallel, it is recommended to use separate RFC destinations, e.g., XTRACT01, XTRACT02, etc.\
Parallel execution of DataSources with an identical RFC destination is possible, but not recommended.

______________________________________________________________________

#### Related Links

- [DeltaQ Troubleshooting Guide](../../troubleshooting/#deltaq-troubleshooting).
- [SAP Help: Activate the BI Content DataSource](https://help.sap.com/saphelp_scm70/helpdata/ru/d8/8f5738f988d439e10000009b38f842/content.htm?no_cache=true)
- [Knowledge Base Article: Create Generic DataSource using Function Module and Timestamps](../../knowledge-base/create-generic-datasource-using-function-module-and-timestamps/)

This page shows how to reference the SAP RFC destination in the Xtract DeltaQ component.

Using the Xtract DeltaQ component requires customization in SAP, see [Customizing for DeltaQ](../../setup-in-sap/customization-for-deltaq/). After an RFC Destination is set up in SAP, the RFC destination and the RFC target system must be entered in the Xtract DeltaQ component.

### Settings in the Xtract DeltaQ Component

#### Gateway

Click **[]** to look up an [RFC destination](../../setup-in-sap/customization-for-deltaq/) or enter the data of your RFC destination manually:

| Input Field | Description | | --- | --- | | Host | The name (or IP address) of your SAP system. Make sure that the Gateway host is the same as in your [SAP Connection](../../sap-connection/). | | Service | The gateway service is generally *sapgwNN*, where *NN* is the instance number of your SAP system, e.g., a number between *00* and *99*. *NN* must have the same value as the *System No* field in your [SAP Connection](../../sap-connection/) or the instance number in your SAP logon. | | Program ID | The name of the registered RFC server. Make sure that the registration of the Program ID and the host is whitelisted in the reginfo ACL on the SAP Gateway, see [SAP Blog: RFC Gateway Security](https://blogs.sap.com/2021/01/26/rfc-gateway-security-part-1-basic-understanding/). |

#### Logical Destination

Click **[]** to look up a logical RFC target system or enter the name of the RFC target system manually.

### Customizing Check

In the main window of the component click **Customizing Check** to validate the DeltaQ customizing on the SAP system. Make sure that all check marks are green.

This page shows how to parameterize the Xtract DeltaQ component using SSIS variables directly in the component and by using SSIS expressions to set *Data Flow Properties*.

### Parameterization using SSIS Variables

SSIS variables store values that an SQL Server Integration Services package and its containers, tasks, and event handlers can use at runtime.

You can use SSIS variables for selections. Available SSIS variables are listed in the selection settings when parameter input () is selected, see [Edit Selections](../selections/#edit-selections).

#### Use SSIS Variables with @-Notation

The following input fields in the Xtract DeltaQ component allow entry of an SSIS variable:

- [*Logical Destination*](../deltaq-customization/#logical-destination)
- [*Gateway Host*](../deltaq-customization/#gateway)
- [*Gateway Service*](../deltaq-customization/#gateway)
- [*Program ID*](../deltaq-customization/#gateway)
- [*Update Mode Variable*](../settings/#update-mode-variable)
- [*RequestID*](../settings/#request-id)

To use SSIS variables in input fields of the component, place an @ symbol before the variable name.

1. Choose an input field that supports SSIS variables.
1. Instead of entering a fixed a value, enter a variable name using the @-notation, e.g., *@vDate*.
1. Create a new SSIS variable with the same name, but without the @ symbol, e.g., *vDate*.
1. Make sure to select the correct data type.

You can now use the SSIS variable to set dynamic input values for the input field.

### Parameterization using Expression Properties

The recommended way of parameterization is to use SSIS expressions to set *Data Flow Properties*. *Data Flow Properties* are displayed in the "Properties" window of the Data Flow Task.

Note

*Data Flow Properties* are not to be confused with *Custom Properties* that are displayed in the "Properties" window of the component. When parameterizing the *Data Flow Properties*, the *Custom Properties* are overwritten.

For more information on property expressions, see [Microsoft Documentation: Use Property Expressions in Packages](https://learn.microsoft.com/en-us/sql/integration-services/expressions/use-property-expressions-in-packages).

1. Right-click the Data Flow canvas and select **Properties**. The window "Properties" opens.
1. Add an *Expression* by clicking using **[…]**. The window "Property Expression Editor" opens.
1. Select a property from the drop-down list under *Property*.
1. Open the "Expression Builder" using the **[…]** button under *Expression*.
1. Build your Expression and click **[Evaluate Expression]** to check for correct syntax.
1. Confirm your input with **[OK]**.

### Data Flow Properties of Xtract DeltaQ

List of *Data Flow Properties* that can be parameterized:

| Property | Description | | --- | --- | | *[Xtract DeltaQ].[GatewayHost]* | Corresponds to the setting [Gateway Host](../deltaq-customization/#gateway) in the Xtract DeltaQ component. | | *[Xtract DeltaQ].[GatewayService]* | Corresponds to the setting [Gateway Service](../deltaq-customization/#gateway) in the Xtract DeltaQ component. | | *[Xtract DeltaQ].[ProgramID]* | Corresponds to the setting [Program ID](../deltaq-customization/#gateway) in the Xtract DeltaQ component. | | *[Xtract DeltaQ].[RequestID]* | Corresponds to the setting [RequestID](../settings/#request-id) in the Xtract DeltaQ component. | | *[Xtract DeltaQ].[TargetSystem]* | Corresponds to the setting [Logical Destination](../deltaq-customization/#logical-destination) in the Xtract DeltaQ component. | | *[Xtract DeltaQ].[UpdateType]* | Corresponds to the drop-down menu [Update Mode](../update-mode/#update-modes) in the Xtract DeltaQ component. Permitted values are: Full (70), Delta (68), Init (67), InitNoData (83), Repeat (82), InitNonCumulative (73), Activate (65). |

### Custom Properties of Xtract DeltaQ

The *Custom Properties* are properties that are unique to the component. When parameterizing the component using SSIS variables, the *Custom Properties* are overwritten.

The *Custom Properties* of the Xtract DeltaQ component are displayed in the "Properties" window.

List of the relevant *Custom Properties*:

| Property | Description | | --- | --- | | *GatewayHost* | Corresponds to the setting [Gateway Host](../deltaq-customization/#gateway) in the Xtract DeltaQ component. | | *GatewayService* | Corresponds to the setting [Gateway Service](../deltaq-customization/#gateway) in the Xtract DeltaQ component. | | *HierClass* | Corresponds to the setting [Hierarchy Class](../settings/#hierarchy-class) in the Xtract DeltaQ component. | | *HierName* | Corresponds to the setting [Hierarchy Name](../settings/#hierarchy-name) in the Xtract DeltaQ component. | | *Language* | Corresponds to the setting [Language](../settings/#language) in the Xtract DeltaQ component. | | *NewTimeStampFormatInRequestLog* | If this value is set to *true* (X), the format of the timestamp in the request log is changed. | | *OLTPSourceName* | Name of the OLTP source to be extracted. | | *OLTPSourceType* | Type of the OLTP source to be extracted. | | *ProgramID* | Corresponds to the setting [Program ID](../deltaq-customization/#gateway) in the Xtract DeltaQ component. | | *RequestID* | Corresponds to the setting [RequestID](../settings/#request-id) in the Xtract DeltaQ component. | | *TargetSystem* | Corresponds to the setting [Logical Destination](../deltaq-customization/#logical-destination) in the Xtract DeltaQ component. | | *Timeout* | Sets a timeout for the extraction. | | *TransferMethod* | Corresponds to the setting [Transfer Mode](../settings/#transfer-mode) in the Xtract DeltaQ component (tRTF or IDoc). | | *TransferStructure* | The transfer structure of the source, e.g., ROHIEROS. | | *UpdateType* | Corresponds to the drop-down menu [Update Mode](../update-mode/#update-modes) in the Xtract DeltaQ component. Permitted values are: Full (70), Delta (68), Init (67), InitNoData (83), Repeat (82), InitNonCumulative (73), Activate (65). | | *UseLegacyVarUpdate* | Set to *True* for backward compatibility with extractions that use the deprecated update mode [(V)Variable](../settings/#update-mode-variable). | | *UseWideString* | Defines whether DT_WSTR / DT_NTEXT (true) or DT_STR / DT_TEXT (false) is used as the data type for string columns. |

______________________________________________________________________

#### Related Links

- [Microsoft Documentation: Integration Services (SSIS) Variables](https://docs.microsoft.com/en-us/sql/integration-services/integration-services-ssis-variables?view=sql-server-ver15)
- [Microsoft Documentation: Use Property Expressions in Packages](https://learn.microsoft.com/en-us/sql/integration-services/expressions/use-property-expressions-in-packages)

______________________________________________________________________

content/en/xis-specific/parameterization/parametrization-via-variables.md

This page shows how to filter the data that is extracted by the Xtract DeltaQ component.

### Edit Selections

Note

Do not define selections when using the update mode Delta Update, because the selections of the Init mode are automatically applied.

Follow the steps below to edit selection fields and filter data:

1. In the subsection *OLTP Fields*, click **Edit** next to the field you want to edit. The window “Edit selection” opens.

1. Click **[Single]** or **[Range]** to add a corresponding filter, see [Filter Options](#filter-options).

1. In the column **Sign** , select *Include* to add the filtered data to the output or select *Exclude* to remove the filtered data from the output.

1. In the column **Option** , select an operator, see [Filter Options](#filter-options).

1. In the column **Value**, enter values directly into the input fields **Low** and **High** or assign existing SSIS variables to the selection fields .

   Note

   When SSIS variables are available, you can use the icon button next to the input field to switch between static values () and SSIS variables ().

1. Click **[OK]** to confirm your input.

1. Click **[Load live preview]** in the main window of the component to check the result of your selection. If SSIS variables are defined, you are prompted to populate the parameters with actual values.

### Filter Options

The Xtract DeltaQ component offers the following filter options:

| Type | Operator | Description | | --- | --- | --- | | Single | | Compare data to a single specified value. | | | *(not) like pattern* | True if data values do (not) contain to the specified value. | | | *(not) equal to* | True if data is (not) equal to the specified value. | | | *at least* | True if data is greater than or equal to the specified value. | | | *more than* | True if data is greater than the specified value. | | | *at most* | True if data is less than or equal to the specified value. | | | *less than* | True if data is less than the specified value. | | Range | | Check if the data is (not) within a specified range of values. | | | *(not) between* | True if data values do (not) lie between the 2 specified values. |

### Script Expressions for DeltaQ

Script expressions are usually used to determine a dynamic date based on the current date.

| Input | Description | | --- | --- | | `#{ DateTime.Now.ToString("yyyyMMdd") }#` | Current date in SAP format (yyyyMMdd) | | `#{ String.Concat(DateTime.Now.Year.ToString(), "0101") }#` | Current year concatenated with "0101" (yyyy0101) | | `#{ String.Concat(DateTime.Now.ToString("yyyy"), "0101") }#` | Current year concatenated with "0101" (yyyy0101) | | `#{ String.Concat(DateTime.Now.ToString("yyyyMMdd").Substring(0,4), "0101") }#` | Current year concatenated with "0101" (yyyy0101) |

### Data Format

Use the following internal SAP representation for input:

- Date: The date 01.01.1999 has the internal representation 19990101 (YYYYMMDD).
- Year period: The year period 001.1999 has the internal representation 1999001 (YYYYPPP).
- Numbers: Numbers must contain the leading zeros, e.g., customer number 1000 has the internal representation 0000001000.

Warning

**Values accept only the internal SAP representation.**\
Input that does not use the internal SAP representation results in error messages. Use the internal SAP representation. Example:

```text
ERPConnect.ABAPProgramException: RfcInvoke failed(RFC_ABAP_MESSAGE): Enter date in the format \_.\_.\_

```

This page contains an overview of the settings in the Xtract DeltaQ component.\
To open the settings, click ****Settings**** in the main window of the component.

The Xtract DeltaQ settings consist of the following tabs:

- [*Base*](#base-settings)
- [*Misc*](#misc-settings)
- [*Hierarchy*](#hierarchy-settings)

## Base Settings

### Transfer Mode

The raw data packages can be sent by SAP via *tRFC* call or *Data-IDoc*. *tRFC* is is the default setting.\
Switch to *IDoc* to monitor the raw data packages in the transaction WE02 (IDoc-Monitoring) for debugging reasons.

### Convert Dates

#### Min Date

Converts the SAP date 00000000 to the entered value. NULL is supported as a value.

#### Max Date

Converts the SAP date 9999XXXX to the entered value. NULL is supported as a value.

#### Replace invalid date with

In case of no convertable date values you have to enter a default date value into the textbox. Every invalid value is converted into this value.

## Misc. Settings

#### Update Mode Variable

Defines a variable for the update mode. Enter the name of an SSIS variable in the format `@variable_name` and set the component's custom property *UseLegacyVarUpdate* to *true* to overwrite the Update Mode. The SSIS variable can process the following values: F, C, D, S, I and R, as it is listed in [Update Mode](../update-mode/).

#### Request ID

This field is optional. If a value (e.g., XtractDatasource) is set, it will be used as suffix in the SAP job name (e.g., BIXtractDatasource), otherwise a combination of process ID and timestamp will be used (e.g. REQU_pppppppp_yyyyMMddHHmmss), with process ID being the ID of the Windows process, the XtractDeltaQServerPool.exe is running under.

#### Automatic Synchronization

Option to prevent manual changes in the transactional system when switching from test environment to production environment.\
Example: To use DeltaQ extractions in the production environment, the data source has to be enabled in the production environment. If **Automatic Synchronization** is active, the activation is performed automatically and the timestamp of the data source is changed to be consistent with the settings of the SAP system.

Note

If the data source is modified in the SAP system, manually activate the data source in the DeltaQ component, even when **Automatic Synchronization** is active. Otherwise data load will fail. This behavior belongs to the SAP design, see [SAP Help: Replication of DataSources](https://help.sap.com/viewer/ccc9cdbdc6cd4eceaf1e5485b1bf8f4b/7.4.19/en-US/4a12eaff76df1b42e10000000a42189c.html).

#### Add Serialization Info to Output

Adds the columns *DataPackageID* and *RowCounter* to the output.\
Example: the following columns that are a composite key of the SAP records are included in the output:

- *RequestID*
- *DataPackageID*
- *RowCounter*

Note

Newer data has a higher PackageID. In the same package newer data has a higher RowCounter.

## Hierarchy Settings

The following settings only apply to Hierarchy extractions.

#### Language

Enter the language of the Hierarchy, e.g., ‘E’ or ‘D’.

#### Hierarchy Name

Enter the name of the Hierarchy.

#### Hierarchy Class

Enter the class of the Hierarchy.

#### Hierarchy Version

Enter the version of the Hierarchy.

## Maintenance

Click **[Maintenance]** to open a list of Init requests of the DataSource (SAP transaction RSA7).

Select an Init request and click **[]** to delete it. This is necessary when re-initializing a delta process.

The Xtract DeltaQ component is primarily used for delta extractions. This means that only recently added or changed data is extracted, instead of a full load. The data that is extracted is defined by the **Update Mode** setting in the main window of the component.

### Update Modes

The Xtract DeltaQ component offers the following update modes:

| Mode | Parameter Value | Description | | --- | --- | --- | | Full | *Full* | Extracts all data that match the set selection criteria. | | Delta Update | *Delta* | Only extracts data added or changed on the SAP system since the last delta request. [Initialize a delta process](#initialize-a-delta-process) before running a delta update. To prevent errors, aborts and gaps in your data during a delta run, run the next extraction in the update mode **Repeat**. | | Delta Initialization | *Init* | Extracts all data as full load and initializes the delta process. When re-initializing a delta process, first delete any existing Inits using the **[Maintenance]** button in the [settings](../settings/) menu. | | Repeat | *Repeat* | Repeats the last delta run and updates and any delta data accumulated since the last run. Deletes any data from the last (unsuccessful) delta update before running a repeat. You can run a repeat multiple times. | | Delta Init (without data) | *InitNoData* | Initializes the delta process without extracting any data from the SAP DataSources. The result of the *Delta Init* on the SAP side. When re-initializing a delta process, first delete any existing Inits using the **[Maintenance]** button in the [settings](../settings/) menu. | | Non-cumulative init | *InitNoncumulative* | Relevant for DataSources like *2LIS_03_BX*. | | Activate (don't extract) | *Activate* | Activates a DataSource similar to the **[Activate]** button, but it is more practical when activating DataSources in a batch. No data is extracted. |

Tip

**Update mode** can be set dynamically at runtime using the parameters values to overwrite the [custom property](../parameterization/#custom-properties-of-xtract-deltaq) *updateType*.

For more information about when to use which update mode, see [Initialize a Delta Process](#initialize-a-delta-process)

### Initialize a Delta Process

To start a delta process with the Xtract DeltaQ component, the delta must be initialized first. The following delta process shows when to use which [Update Modes](#update-modes).

#### Step 1: Delta Initialization [C]

This mode requests all data that meets the selection criteria.

Set **Update Mode** to *Delta Initialization* and run the extraction.\
The initialization selections are copied to load the delta records. You can now use *Delta Update*.

Note

When re-initializing a delta process, first delete any existing Inits (initialization requests) by clicking **[Maintenance]** in the [settings](../settings/).

#### Alternative Step 1: Delta Init (without data) [S]

This mode is similar to *Delta Initialization*, but no data is extracted from the SAP DataSource.

Set **Update Mode** to *Delta Init (without data)* and run the extraction.\
You can now use *Delta Update*.

Note

When re-initializing a delta process, first delete any existing Inits (initialization requests) by clicking **[Maintenance]** in the [extraction settings](../settings/).

#### Step 2: Delta Update [D]

*Delta Update* only extracts data added or changed on the SAP system since the last delta request.

Run the extraction with *Delta Initialization* or *Delta Init (without data)* once before setting the **Update Mode** to *Delta Update*.

Note

To prevent errors, aborts and gaps run the next extraction in the update mode *Repeat*.

#### Optional: Repeat [R]

This mode repeats the last delta run and updates all data accumulated since the last run. If the last run was unsuccessful, all data from the last delta update are deleted before a new run is started.\
A **Repeat** can be started several times.

Many DataSources have the field ROCANCEL. This field defines if records are added or overwritten depending on the delta process type of the DataSource. It defines how a record is updated in the delta process.\
In an ABR mode:

- *blank* returns an after image
- *'X'* returns a before image
- *'D'* deletes the record
- *'R'* returns a reverse image

#### Optional: Delta Queue - RSA7

Once delta is activated, you can view the queued datasets in the Delta queue in SAP transaction RSA7.\
If there is no new data to be transferred, a corresponding protocol message is displayed and the data pipeline is empty.

Note

Before initiating the next update, make sure that a delta update has been executed successfully. Running a new delta update removes the last one.

______________________________________________________________________

#### Related Links

- [SAP Help: Delta Transfer to BI](https://help.sap.com/doc/saphelp_nw70/7.0.31/en-US/37/4f3ca8b672a34082ab3085d3c22145/content.htm?no_cache=true)
- [SAP Help: Delta Process](https://help.sap.com/viewer/ccc9cdbdc6cd4eceaf1e5485b1bf8f4b/7.4.23/en-US/4f18f6aa3fca410ae10000000a42189d.html)

This page shows how to use the Xtract Hierarchy component. The Xtract Hierarchy component can be used to extract Hierarchies and InfoObjects from SAP BW systems.

Note

To extract hierarchies from a BW system, use the Xtract Hierarchy component. To extract hierarchies from an ERP system like ECC or S4, use the [Xtract ODP](../odp/) component.

### Prerequisites

- A connection to an SAP system is available, see [SAP Connection](../sap-connection/).
- The SAP user has sufficient user rights, see [SAP Authority Objects](../setup-in-sap/sap-authority-objects/#bw-hierarchy).

Warning

**Missing Authorization.**\
To use the Xtract Hierarchy component, access to the designated authority objects (RFC) in SAP must be available. Adjust [SAP Authority Objects](/xtract-is/documentation/setup-in-sap/sap-authority-objects#bw-hierarchy) accordingly.

### Add an Xtract Hierarchy Component

Follow the steps below to add an Xtract Table component to your SSIS package:

1. Drag&drop the Xtract Hierarchy component from the SSIS toolbox into your data flow task.

1. Double-click the component. A connection manager is automatically assigned to the component and the main window of the component opens.

   Note

   If there are multiple connection managers, the window "Select Connection Manager" opens, see [SAP Connection](../sap-connection/#assign-connection-managers-to-xtract-components). Once a connection manager is selected, the main window of the component opens.

The majority of the functions of the component can be accessed in the main window.

### Look Up a Hierarchy

1. In the main window of the component, click **[]**. The window “Hierarchy Lookup” opens.
1. Enter the name of a Hierarchy in the field **Hierarchy Name** or the name of an InfoObject in the field **InfoObject** . Use wildcards (\*) if needed.
1. Click **[]**. Search results are displayed.
1. Select a Hierarchy and click **[Select]**.

The application returns to the main window of the component.

### Define the Xtract Hierarchy Component

The Xtract Hierarchy component offers the following options for Hierarchy extractions:

1. Define the output format of the Hierarchy in the [settings](settings/#extraction-settings) . The Xtract Hierarchy component supports the following output formats:

   - [ParentChild Format](output-format/#parentchild-format)
   - [Natural Format](output-format/#natural-format)
   - [ParentChildWithNodeNames Format](output-format/#parentchildwithnodenames-format)

1. Click **[Load live preview]** to display a live preview of the first 100 records.

1. Click **[OK]** to save the component.

You can now run the SSIS package.

______________________________________________________________________

#### Related Links

- [Settings](settings/)
- [SAP Help: Uploading Hierarchies from Flat Files](https://help.sap.com/saphelp_scm700_ehp02/helpdata/en/fa/e92637c2cbf357e10000009b38f936/frameset.htm)

This page shows the which output formats are supported by the Xtract Hierarchy component. The output format can be selected in the [settings](../settings/) of the Xtract Hierarchy component.

### ParentChild Format

The default output of the Xtract Hierarchy component contains the following columns:

| Column | Description | | --- | --- | | **NodeID** | Unique node key. | | **ParentNodeID** | Key for parent node. | | **FirstChildNodeID** | Key for first child node. | | **NextNodeID** | Key for next node in the same hierarchical level. | | **InfoObjectName** | Name of InfoObject behind the corresponding node. | | **NodeName** | The node’s (technical) name. | | **NodeText** | The description text of the node. This column is only created when [**Fetch description texts**](../settings/#fetch-description-texts) is active. | | **DateFrom** | Date from which the node is valid. | | **DateTo** | Date the node is valid to. | | **Link** | If the value in *Link* is greater than 0, the node is a link node. The ID of the original node that was linked from is displayed. | | **Row** | Number of the row. The row number can be used as an ID or sort criterion when processing the extracted data. |

Example:

### Natural Format

| Column | Description | | --- | --- | | **LevelN** | Technical name of the node of the nth level. The number of levels is set in [**Level Count**](../settings/#level-count). The level count starts at level 0. | | **LevelTextN** | The description text of the nth level's node. This column is only created when [**Description texts for levels**](../settings/#description-texts-for-levels) is active. | | **InfoObjectName** | Name of InfoObject behind the node of the highest level. | | **NodeName** | Technical name of the node of the highest level. | | **NodeText** | The description text of the node of the highest level. This column is only created when [**Fetch description texts**](../settings/#fetch-description-texts) is active. | | **DateFrom** | Date from which the node is valid | | **DateTo** | Date the node is valid to. | | **Link** | If the value in *Link* is greater than 0, the node is a link node. The ID of the original node that was linked from is displayed. | | **Row** | Number of the row. The row number can be used as an ID or sort criterion when processing the extracted data. |

Example:

### ParentChildWithNodeNames Format

| Column | Description | | --- | --- | | **NodeID** | Unique node key. | | **NodeName** | The node’s (technical) name. | | **NodeText** | The description text of the node. This column is only created when [**Fetch description texts**](../settings/#fetch-description-texts) is active. | | **ParentNodeID** | Key for parent node. | | **ParentNodeName** | Name of the parent node. | | **InfoObjectName** | Name of InfoObject behind the corresponding node. | | **DateFrom** | Date from which the node is valid. | | **DateTo** | Date the node is valid to. | | **Link** | If the value in *Link* is greater than 0, the node is a link node. The ID of the original node that was linked from is displayed. | | **Row** | Number of the row. The row number can be used as an ID or sort criterion when processing the extracted data. |

Example:

This page contains an overview of the settings in the Xtract Hierarchy component.\
To open the settings, click ****Settings**** in the main window of the component.

### Extraction Settings

#### Representation

- *ParentChild*: The Hierarchy is represented in the SAP parent-child format, see [Output Formats: ParentChild](../output-format/#parentchild-format). Example:
- *Natural*: The SAP parent-child Hierarchy is transformed into a regular hierarchy, see [Output Formats: Natural](../output-format/#natural-format). Example:
- *ParentChildWithNodeNames*: The Hierarchy is represented in a reduced SAP parent-child format that only includes single nodes and their parent, see [Output Formats: ParentChildWithNodeNames](../output-format/#parentchildwithnodenames-format). Example:

#### Remove Leading Zeros

If this option is active, all leading zeros in the column *NodeName* of the leaves are removed. *NodeName* can then be used in a JOIN-condition with the corresponding Dimension-Key of a BW Cube extraction.\
The conversion works for compound InfoObjects, too. Example: 0CO_AREA (1000) and 0COSTCENTER (0000003100) become 1000/3100.

#### Fetch description texts

Sets the node text in the column *NodeText*.\
All texts of InfoObjects that have language dependent texts will be retrieved in the language that the SAP source connection uses. If no texts exist, the result does not contain any texts for entries of that InfoObject.

### Natural Settings

Note

The subsection *Natural Settings* is only active, when the **Representation** is set to *Natural*.

#### Level Count

Defines the maximum number of levels. The following example shows a Hierarchy with four levels.

#### Fill empty levels

Copies the bottom element of the Hierarchy until the last level. The following example depicts the previously shown Hierarchy with the activated *Repeat Leaves* option.

#### Description texts for levels

Sets the output field *LevelTextN* for each field *LevelN* containing the text based on the system language settings.

#### Leaves only

Returns only the leaves as data records.

### Debug

#### Enable Debug Logging

Adds more detailed logs for the Xtract Hierarchy component to the extraction logs. Activate **Enable Debug Logging** only when necessary, e.g., upon request of the support team.

______________________________________________________________________

#### Related Links

- [SAP Help: About SAP BW Hierarchies](https://help.sap.com/saphelp_scm41/helpdata/en/90/fd36709c6411d5b4000050dadfb23f/content.htm?no_cache=true)

This page shows how to use the Xtract ODP component.\
The Xtract ODP component can be used to extract data via the SAP Operational Data Provisioning (ODP) framework.

### About ODP

Operational data provisioning (ODP) is a framework in SAP ABAP applications for transferring data between systems. ODP provides a technical infrastructure for data extraction and replication from different SAP (ABAP) Systems, e.g.:

- ECC
- S/4 HANA
- BW
- BW/4 HANA

The Xtract ODP component acts as a subscriber (consumer) and [subscribes](subscriptions/) to a data provider. ODP supports mechanisms to load data incrementally from data providers. For SAP BW/4HANA, ODP is the central infrastructure for data extraction and replication from SAP (ABAP) applications to an SAP BW/4HANA Data Warehouse.

The Xtract ODP component provides data transfer from the following providers (also called [Provider Context](provider-context/)):

| Provider Context | SAP Source Objects | | --- | --- | | ABAP Core Data Services \[[ABAP_CDS](provider-context/#abap-cds-views)\] | - CDS Views | | SAP NetWeaver Business Warehouse or BW4/HANA \[[BW](provider-context/#bw-infoproviders)\] | **BW/4HANA:** - DSO / aDSO - CompositeProvider - InfoObjects - Query as InfoProvider **BW systems:** - CompositeProvider - InfoCubes - Semantically partitioned objects - HybridProviders - MultiProviders - InfoSets | | SAP HANA Information Views \[[HANA](provider-context/#hana-views)\] | - Analysis Views - Calculation Views - Associated Attribute Views | | DataSources/Extractors \[[SAPI](provider-context/#extractors)\] | - DataSources and Extractors | | SAP LT Queue Alias \[[SLT~your_queue_alias](provider-context/#slt-server)\] | - SAP Tables - Cluster tables - Pool tables |

Depending on the connected SAP source system there are differences in available provider contexts.\
For more information on SAP ODP, see [SAP Wiki: Operational Data Provisioning (ODP) and Delta Queue (ODQ)](https://wiki.scn.sap.com/wiki/pages/viewpage.action?pageId=449284646).

### Prerequisites

- A connection to an SAP system is available, see [SAP Connection](../sap-connection/).
- The SAP user has sufficient user rights, see [SAP Authority Objects](../setup-in-sap/sap-authority-objects/#odp).
- Implement the following SAP notes to use ODP:
  - [1931427 - ODP Data Replication API 2.0](https://launchpad.support.sap.com/#/notes/1931427)
  - [2232584 - Release of SAP extractors for ODP replication (ODP SAPI)](https://launchpad.support.sap.com/#/notes/2232584)
  - [1560241 - Release of DataSources for ODP data replication API](https://launchpad.support.sap.com/#/notes/1560241)
  - [2196500 - ODP Package size cannot be reduced below 50 MB](https://launchpad.support.sap.com/#/notes/2196500/D)
  - [2191995 - ODQ Package Size cannot be reduced below 50 MByte](https://launchpad.support.sap.com/#/notes/2191995/D)
- DataSources have to be activated in SAP, see [SAP Help: Activating DataSources in the SAP OLTP System](https://help.sap.com/docs/SLH_advanced_compliance_reporting_service/7a60944343e543a1ab99e9b2904dab09/e5d447257a95416190d29638a64a5dfa.html).
- Before creating ODP extractions, test the ODP source in SAP using the ABAP report RODPS_REPL_TEST to rule out and troubleshoot ODP problems in the ODP source. For more information, see [SAP Wiki: Replication test with RODPS_REPL_TEST](https://wiki.scn.sap.com/wiki/display/BI/Replication+test+with+RODPS_REPL_TEST).

Note

The ODP API 1.0 has limitations compared to ODP API 2.0, e.g., ODP API 1.0 does not support the extraction of Hierarchy DataSources. For more information, see [SAP Wiki: Limitation of ODP API 1.0](https://wiki.scn.sap.com/wiki/display/BI/Limitation+of+ODP+API+1.0).

Warning

**Missing Authorization.**\
To use the Xtract ODP component, access to the designated authority objects (RFC) in SAP must be available. Adjust [SAP Authority Objects](../setup-in-sap/sap-authority-objects/#odp) accordingly.

### Add an Xtract ODP Component

Follow the steps below to add an Xtract Table component to your SSIS package:

1. Drag&drop the Xtract ODP component from the SSIS toolbox into your data flow task.

1. Double-click the component. A connection manager is automatically assigned to the component and the main window of the component opens.

   Note

   If there are multiple connection managers, the window "Select Connection Manager" opens, see [SAP Connection](../sap-connection/#assign-connection-managers-to-xtract-components). Once a connection manager is selected, the main window of the component opens.

The majority of the functions of the component can be accessed in the main window.

### Look up Data Objects

1. In the main window of the component, click **[]**. The window “Operational Data Provider Lookup” opens.
1. In the field **Name**, enter the name of an extractor . Use wildcards (\*), if needed.
1. Select a *Context* . Depending on the connected SAP source system there are differences in available [Provider Contexts](provider-context/).
1. Click **[]**. Search results are displayed.
1. Select an extractor and click **[OK]** to confirm.

The application now returns to the main window of the component.

Note

To find DataSources, they have to be activated in SAP.

### Define the Xtract ODP Component

The Xtract ODP component offers the following options for data extractions:

1. In the section *Fields*, select the items you want to extract.

   Note

   TS_SEQUENCE_NUMBER is a technical primary key that can be added to the output. When working with identical data sets, the data set with the highest sequence number is the most current data set.

1. Optional: edit selections to apply (dynamic) filters. For more information, see [Edit Selections](selections/#edit-selections).

   Note

   If your data source is a Hierarchy, see [Hierarchy Segments](provider-context/#segments-to-extract) for filter options.

1. Select an [Update Mode](update-mode/), e.g., to initialize delta extractions.

1. Click **[Load live preview]** to display a live preview of the first 100 records.

1. Check the [Settings](settings/) before running the SSIS package.

1. Click **[OK]** to save the component.

You can now run the SSIS package.

This page shows how to parameterize the Xtract ODP component using SSIS variables and SSIS expressions to set *Data Flow Properties*.

### Parameterization using SSIS Variables

SSIS variables store values that an SQL Server Integration Services package and its containers, tasks, and event handlers can use at runtime.

You can use SSIS variables for selections. Available SSIS variables are listed in the selection settings when parameter input () is selected, see [Edit Selections](../selections/#edit-selections).

### Parameterization using Expression Properties

The recommended way of parameterization is to use SSIS expressions to set *Data Flow Properties*. *Data Flow Properties* are displayed in the "Properties" window of the Data Flow Task.

Note

*Data Flow Properties* are not to be confused with *Custom Properties* that are displayed in the "Properties" window of the component. When parameterizing the *Data Flow Properties*, the *Custom Properties* are overwritten.

For more information on property expressions, see [Microsoft Documentation: Use Property Expressions in Packages](https://learn.microsoft.com/en-us/sql/integration-services/expressions/use-property-expressions-in-packages).

1. Right-click the Data Flow canvas and select **Properties**. The window "Properties" opens.
1. Add an *Expression* by clicking using **[…]**. The window "Property Expression Editor" opens.
1. Select a property from the drop-down list under *Property*.
1. Open the "Expression Builder" using the **[…]** button under *Expression*.
1. Build your Expression and click **[Evaluate Expression]** to check for correct syntax.
1. Confirm your input with **[OK]**.

### Data Flow Properties of Xtract ODP

List of *Data Flow Properties* that can be parameterized:

| Property | Description | | --- | --- | | *[Xtract ODP].[SubscriptionSuffix]* | Adds a suffix to the ODP subscription generated by the Xtract ODP component. This allows using an SSIS package in two different SSIS environments, e.g. QA and PROD. accessing the same SAP system. The suffix allows generating a subscriber for each SSIS environment from the same ODP component. | | *[Xtract ODP].[UpdateMode]* | Runs a delta initialization with or without extracting data on init, see [Update Mode](../update-mode/#delta-update). | | *[Xtract.ODP].[ExtractDataOnDeltaInit]* | Runs a delta initialization with or without extracting data on init, see [Update Mode](../update-mode/). | | *[Xtract.ODP].[HierarchyName]* | Applies to Hierarchy DataSources only, see [Select Hierarchy](../provider-context/#hierarchies). Example: Loop over a list of hierarchies. | | *[Xtract.ODP].[PackageSize]* | Corresponds to the setting [Package Size](../settings/#package-size). |

### Custom Properties of Xtract ODP

The *Custom Properties* are properties that are unique to the component. When parameterizing the component using SSIS variables, the *Custom Properties* are overwritten.

The *Custom Properties* of the Xtract ODP component are displayed in the "Properties" window.

#### ConvertsDates

When this property is set to *True* (default) SAP date fields (YYYYMMDD) assume the SSIS pipeline type DT_DBDATE instead of DT_WSTR. For the date conversions to apply, set the property *UseLegacyDateConversion* to *False*. In case of invalid data in SAP date fields, the following date conversions are applied:

- *InvalidDateReplacement*
- *MaxDateReplacement*
- *MinDateReplacement*

#### InvalidDateReplacement

Replaces an invalid date format. The default value is *1970-01-02*. To use the property enter a replacement value for invalid SAP dates, such as '20190132' (January 32nd 2019) in the format yyyy-mm-dd. The value NULL is supported.

#### MaxDateReplacement

Replaces SAP dates with the year 9999. The default value is *2099-12-31*. To use the property enter a replacement value in the format yyyy-mm-dd that contains the year ‘9999’. Example: ‘99990101’ (January 1st 9999). The value NULL is supported.

#### MinDateReplacement

Replaces SAP dates with the year *0000*. The default value is *1970-01-01*. To use the property enter a replacement value in the format yyyy-mm-dd that contains the year '0000'. Example: '00000000'. The value NULL is supported.

#### ExtractDataOnDeltaInit

Runs a delta initialization with or without extracting data on init, see [Update Mode](../update-mode/#delta-update).

#### HierarchyName

Applies to Hierarchy DataSources only, see [Select Hierarchy](../provider-context/#hierarchies). Example: Loop over a list of hierarchies. Example: Loop over a list of hierarchies.

#### PackageSize

Corresponds to the setting [Package Size](../settings/#package-size).

#### SubscriptionSuffix

Adds a suffix to the ODP subscription generated by the Xtract ODP component. This allows using an SSIS package in two different SSIS environments, e.g. QA and PROD. accessing the same SAP system. The suffix allows generating a subscriber for each SSIS environment from the same ODP component.

#### UpdateMode

Sets the [update mode](../update-mode/) of an extraction. Permitted values are:

- (F)ull
- (D)elta
- (R)ecovery

______________________________________________________________________

#### Related Links

- [Microsoft Documentation: Integration Services (SSIS) Variables](https://docs.microsoft.com/en-us/sql/integration-services/integration-services-ssis-variables?view=sql-server-ver15)
- [Microsoft Documentation: Use Property Expressions in Packages](https://learn.microsoft.com/en-us/sql/integration-services/expressions/use-property-expressions-in-packages)

This page shows how to use the Provider Contexts of the Xtract ODP component. The Xtract ODP component supports the following Provider Contexts:

| Provider Context | SAP Source Objects | | --- | --- | | ABAP Core Data Services \[[ABAP_CDS](#abap-cds-views)\] | - CDS Views | | SAP NetWeaver Business Warehouse or BW4/HANA \[[BW](#bw-infoproviders)\] | **BW/4HANA:** - DSO / aDSO - CompositeProvider - InfoObjects - Query as InfoProvider **BW systems:** - CompositeProvider - InfoCubes - Semantically partitioned objects - HybridProviders - MultiProviders - InfoSets | | SAP HANA Information Views \[[HANA](#hana-views)\] | - Analysis Views - Calculation Views - Associated Attribute Views | | DataSources/Extractors \[[SAPI](#extractors)\] | - DataSources and Extractors | | SAP LT Queue Alias \[[SLT~your_queue_alias](#slt-server)\] | - SAP Tables - Cluster tables - Pool tables |

## ABAP CDS Views

According to the Core Data Service (CDS) concept, data models based on CDS serve as central definitions that can be used in many different domains, such as transactional and analytical applications.

CDS is defined using an SQL-based data definition language (DDL). DLL leverages the standard SQL with several additional concepts, such as associations, which define the relationships between CDS views, and annotations that direct the domain-specific use of CDS artifacts.

### Available CDS

There are two types of CDS available:

- HANA CDS (defined in XS engine)
- ABAP CDS

For each ABAP CDS entity defined in the DDL source code, an SQL view is generated in the ABAP Dictionary. The same way as the views created with Dictionary tools (transaction SE11), ABAP CDS entities can be accessed in ABAP using Open SQL statements.

CDS is important for SAP application development. For example, S/4HANA uses CDS to provide both core transactional functionality as well as analytical content for reporting. In BW/4 HANA, ABAP based CDS views can be used for data extraction.

Two possible use cases for CDS:

- Direct access to a CDS view from BW/4 HANA
- Delta extraction from a CDS view in S/4 HANA to BW

CDS Views support Full and Delta Extraction.

### Replace BW Extractors with CDS Views in S/4HANA

In majority of cases traditional BW extractors can be used to extract data from an S/4HANA systems. Due to simplifications in the S/4HANA system, several extractors are now deprecated or can no longer be used in a usual manner. To use the deprecated or altered extractors, SAP may deliver extraction relevant (via the analytical annotations) CDS Views.

### Use ABAP CDS Views

Note

To find an ABAP CDS view it must have the following Annotation: `@Analytics.dataExtraction.Enabled: true`. If the source SAP system is not on a HANA DB, an additional Annotation is needed: `@Analytics.dataCategory: #CUBE/#FACT/#DIMENSION`.

Things that need to be considered when using BW InfoProviders:

1. When looking up ABAP CDS Views in the Xtract ODP component, make sure to select the correct context.
1. When the delta load is available for the source object in the SAP source system, the **Delta Update** option is available in the Xtract ODP component.
1. Click **[Load live preview]** to preview the data without running an extraction.

## BW InfoProviders

The Operational Data Provisioning (ODP) framework allows you to extract data from the InfoProviders in your source BW and BW/4 HANA systems. Available InfoProvider types are dependent on your source BW and BW/4 HANA system.

### Available InfoProviders

- **Available InfoProviders in SAP BW∕4HANA**

  ______________________________________________________________________

  - CompositeProvider - object type HCPR (full extraction)
  - DataStore objects (with delta extraction)
    - InfoObjects
    - Master data
    - Texts
    - Hierarchies
  - Query as InfoProvider

- **Additional InfoProviders in BW Systems**

  ______________________________________________________________________

  - CompositeProvider - object type HCPR (full extraction)
  - InfoCubes (with delta extraction)
  - Semantically partitioned objects
  - HybridProviders
  - MultiProviders
  - InfoSets

### Use BW InfoProviders

Things that need to be considered when using BW InfoProviders:

1. When looking up BW InfoProviders in the Xtract ODP component, make sure to select the correct context.
1. When the delta load is available for the source object in the SAP source system, the **Delta Update** option is available in the Xtract ODP component.
1. Click **[Load live preview]** to preview the data without running an extraction.

## Extractors

The Xtract ODP component can be used to extract data from Business Content DataSource (Extractors). The majority of DataSources, including generic (custom) DataSources, can be released for Operational Data Provisioning.

The Xtract ODP component does not change the implementation of application extractors. All features and capabilities remain unchanged.

An extractor (in ERP or S/4 HANA) is an encapsulated business object, representing multiple source tables already in the source system

### Available Extractors

- Transactional data
- Master data
- Text data
- Hierarchy data

There are standard delta extraction methods available for master data and transaction data.

### Use Extractors

Things that need to be considered when using Extractors:

- DataSources have to be activated in SAP, see [SAP Help: Set Up and Activate DataSources](https://help.sap.com/viewer/7a60944343e543a1ab99e9b2904dab09/CLOUD/en-US/e5d447257a95416190d29638a64a5dfa.html).
- When looking up DataSources or Extractors, make sure to select the correct context.
- If delta load is available for the source object in the SAP source system, the **Delta Update** option is available in the Xtract ODP component.
- If the DataSource is a Hierarchy, there are additional settings, see [Hierarchies](#hierarchies).

### Hierarchies

If the selected source object is of type Hierarchy, the window "Select Hierarchy" opens.

1. Select a Hierarchy from the list of Hierarchies in the "Select Hierarchy" window.
1. Confirm your selection with **[OK]**.\
   The name of the selected Hierarchy is displayed under *Selected Hierarchy* .
1. Select which segments to extract .

#### Segment(s) to extract

Hierarchies are divided into segments by the API. Choose which segments of the Hierarchy to extract . The selected data is displayed in the *Fields* section.

| Option | Description | | --- | --- | | **Merges** | All segments contain the field Node ID. Using the Node ID *Merges* automatically combines all 3 segments. | | **Elements** | The segment *Elements* contains information about the elements of the Hierarchy e.g., name, parent, child, etc. | | **Texts** | The segment *Texts* contains the description texts of the *Elements*. The language of the descriptions depends on the language settings of the SAP connection. | | **Intervals** | The segment *Intervals* contains additional information if an element is an interval. In ODP no TO and FROM columns are displayed, see [SAP Note 3090500](https://launchpad.support.sap.com/#/notes/3090500). |

Note

Hierarchies can be passed as runtime parameters at runtime.

## HANA Views

Operational Data Provisioning (ODP) can be used to connect SAP HANA database of an SAP ABAP source system. The connection is provided via RFC.

### Available HANA Views:

- Analysis Views
- Calculation Views
- Associated Attribute Views

### Use HANA Views

Things that need to be considered when using HANA Views:

1. When looking up HANA Views in the Xtract ODP component, make sure to select the correct context.
1. When the delta load is available for the source object in the SAP source system, the **Delta Update** option is available in the Xtract ODP component.
1. Click **[Load live preview]** to preview the data without running an extraction.

## SLT Server

The Operational Data Provisioning (ODP) framework allows you to extract tables and simple views from SAP HANA systems via an SAP Landscape Transformation Replication Server (SLT). The SLT server is a trigger-based CDC solution that can replicate SAP tables and views and make them available as delta extracts.

### Available Tables

- Regular SAP tables
- Cluster tables
- Pool tables

### Requirements

The SLT server context requires an SAP Landscape Transformation Replication Server (SLT) that is set up for ODP, see [SAP Help: Transferring Data from SLT Using Operational Data Provisioning](https://help.sap.com/docs/SAP_NETWEAVER_750/ccc9cdbdc6cd4eceaf1e5485b1bf8f4b/6ca2eb9870c049159de25831d3269f3f.html?locale=en-US).

The following requirements apply to the SLT server:

- Minimum release version of the SLT server:
  - Add-On DMIS 2011 SP05
  - SAP NetWeaver 7.3 SPS10, 7.31 SPS09 or 7.4 SPS04 (ODP infrastructure)
- Add-On DMIS_2011 SP03/SP04 or higher or 2010 SP08/SP09 is installed in the SAP source system.
- The following SAP Notes are published in the SAP source system:
  - SAP Note 1863476
  - SAP Note 1817467 when using Add-On DMIS 2011 SP05

### Use SLT Server

Consider the following when using an SLT server:

1. When looking up data via an SLT server, make sure to select the correct context.
1. A live preview of the data is not available in the SLT server context.

For more information on SLT servers, see [SAP Help: Transferring Data from SLT Using Operational Data Provisioning](https://help.sap.com/docs/SAP_NETWEAVER_750/ccc9cdbdc6cd4eceaf1e5485b1bf8f4b/6ca2eb9870c049159de25831d3269f3f.html?locale=en-US) or download the [SLT-Performance-Guide (Nov 2022)](../../../assets/files/SLT-Performance-Guide_Nov_2022.pdf).

This page shows how to filter the data that is extracted by the Xtract ODP component. Selections limit the result set of the Xtract ODP component to extract only records that match the selection.

### Edit Selections

Follow the steps below to edit selection fields and filter data:

1. In the subsection *Fields*, click **Edit** next to the field you want to edit. The window “Edit selection” opens.

1. Click **[Single]** or **[Range]** to add a corresponding filter, see [Filter Options](#filter-options).

1. In the column **Sign** , select *Include* to add the filtered data to the output or select *Exclude* to remove the filtered data from the output.

1. In the column **Option** , select an operator, see [Filter Options](#filter-options).

1. In the column **Value**, enter values directly into the input fields **Low** and **High** or assign existing SSIS variables to the selection fields .

   Note

   When SSIS variables are available, you can use the icon button next to the input field to switch between static values () and SSIS variables ().

1. Click **[OK]** to confirm your input.

1. Click **[Load live preview]** in the main window of the component to check the result of your selection. If SSIS variables are defined, you are prompted to populate the parameters with actual values.

The number of defined filters is displayed in square brackets next to the **Edit** option.

### Filter Options

The Xtract ODP component offers the following filter options:

| Type | Operator | Description | | --- | --- | --- | | Single | | Compare data to a single specified value. | | | *(not) like pattern* | True if data values do (not) contain to the specified value. Not not all ODP contexts and data sources support this option. | | | *(not) equal to* | True if data is (not) equal to the specified value. | | | *at least* | True if data is greater than or equal to the specified value. | | | *more than* | True if data is greater than the specified value. | | | *at most* | True if data is less than or equal to the specified value. | | | *less than* | True if data is less than the specified value. | | Range | | Check if the data is (not) within a specified range of values. | | | *(not) between* | True if data values do (not) lie between the 2 specified values. |

### Data Format

Use the following internal SAP representation for input:

- Date: The date 01.01.1999 has the internal representation 19990101 (YYYYMMDD).
- Year period: The year period 001.1999 has the internal representation 1999001 (YYYYPPP).
- Numbers: Numbers must contain the leading zeros, e.g., customer number 1000 has the internal representation 0000001000.

Warning

**Values accept only the internal SAP representation.**\
Input that does not use the internal SAP representation results in error messages. Use the internal SAP representation. Example:

```text
ERPConnect.ABAPProgramException: RfcInvoke failed(RFC_ABAP_MESSAGE): Enter date in the format \_.\_.\_

```

This page contains an overview of the settings in the Xtract ODP component.\
To open the settings, click ****Settings**** in the main window of the component.

### Extraction Settings

#### Package Size

The extracted data is split into packages of the defined size. The default package size is 14400000 bytes. When the package size is set to 0, SAP uses the default ODP packaging size.

Make sure that your SAP version includes the necessary notes, see [Prerequisites](../#prerequisites).

#### Adjust Currency Decimals

The default number of decimal places for a currency in the SAP database is 2 decimals. Currencies that do not have decimals are also stored in this format, e.g. JPY, VND, KRW, etc.

Example:

| Currency | Actual Amount | Amount stored in SAP database | | --- | --- | --- | | JPY | 100 | 1.00 | | KRW | 10000 | 100.00 |

When extracting currencies with no decimals, the amount stored in SAP is returned e.g., 100 JPY are extracted as 1.00. To correct the decimal placement of the extracted data, activate **Adjust Currency Decimals**. If **Adjust Currency Decimals** is active, currencies without decimals are multiplied by a factor that balances out the decimals.

**Adjust Currency Decimals** also requires the extraction of the corresponding CURRENCY field that can be used as a reference for the multiplication factor. Use the **[Load live preview]** function to find the correct currency field/s.

- If the currency field is part of the table, add it to the output.
- If the currency field is in another table, join the tables.
- If the reference is not part of a table, **Adjust Currency Decimals** cannot be used.

Note

The multiplication factor used in *Adjust Currency Decimals* is determined by the SAP currency table TCURX. To access the table, the following SAP Authority objects must be set in SAP: *S_TABU_NAM ACTVT=03; TABLE=TCURX*.

This page contains a description of the "Show active subscriptions" menu in the Xtract ODP component. To open the menu, click **Show active subscriptions** in the main window of the component.

### Show Active Subscriptions

The Xtract ODP component acts as a subscriber (consumer) to [data providers](../provider-context/) to extract data from the data provider. The window "Delta Subscriptions for product" displays details about subscribers.

| Column Name | Description | | --- | --- | | Name | Technical name of all subscriptions of a specific Theobald Software Xtract product (e.g., Xtract Universal). | | Process | Technical name of a subscription | | R. (number of requests) | Number of executed delta requests | | Last request | Timestamp of the last delta request |

To delete a subscription, click **[]** on the right side of the window.

Tip

The information displayed in the "Delta Subscriptions for product" window can also be viewed in SAP transaction *ODQMON*.

The Xtract ODP component can be used for delta extractions. This means that only recently added or changed data is extracted, instead of a full load. The data that is extracted is defined by the **Update Mode** setting in the main window of the component.

### Update Modes

#### Full update

Extracts all data (full mode).

#### Delta update

Note

The **Delta update** option is ready for input only if the ODP provider in the SAP source system supports delta updates.

Runs a delta initialization, if no delta initialization is available for the selected subscriber. Runs a delta update, if there is a delta initialization for the selected subscriber. A delta update only extracts data that was added or changed on the SAP system since the last delta request.

- **Extract data**\
  Allows extracting data when running a delta initialization. Leaving this checkbox unchecked runs a delta initialization without extracting data.
- **Auto-sync subscription**\
  Allows deletion of the existing subscription and creates a new subscription, if required. Each extraction has an internal ID, which is part of the subscriber. If you change the filter of an extraction after the delta initialization, the *Auto-sync subscription* option automatically deletes the existing subscription and creates a new one. A subscription is deleted, if the error message "Illegal change in selection parameters" returns from the SAP system. To delete subscriptions manually, see [Subscriptions](../subscriptions/).

#### Delta recovery

Re-runs the last delta update.

#### Direct read (without ODQ)

Directly reads all available data, bypassing the ODQ (Operational Delta Queue). Direct read is the only update mode that supports data aggregation functions (*Maximum*, *Minimum* and *Sum*).

This page shows how to use the Xtract OHS component.\
The Xtract OHS component can be used to extract data from Open Hub Service (OHS) destinations.

### Prerequisites

- A connection to an SAP system is available, see [SAP Connection](../sap-connection/).
- The SAP user has sufficient user rights, see [SAP Authority Objects](../setup-in-sap/sap-authority-objects/#table).
- Configure your SAP BW system to make data sources accessible, see [Customization for OHS in BW](../setup-in-sap/customization-for-ohs-in-bw/).

Warning

**Missing Authorization.**\
To use the Xtract OHS component, access to the designated authority objects (RFC) in SAP must be available. Adjust [SAP Authority Objects](../setup-in-sap/sap-authority-objects/#ohs) accordingly.

### Add an Xtract OHS Component

Follow the steps below to add an Xtract Table component to your SSIS package:

1. Drag&drop the Xtract OHS component from the SSIS toolbox into your data flow task.

1. Double-click the component. A connection manager is automatically assigned to the component and the main window of the component opens.

   Note

   If there are multiple connection managers, the window "Select Connection Manager" opens, see [SAP Connection](../sap-connection/#assign-connection-managers-to-xtract-components). Once a connection manager is selected, the main window of the component opens.

The majority of the functions of the component can be accessed in the main window.

### Look up an OHS Destination

1. In the main window of the component, select an **Extraction type** in the main window of the component.

   - Select **Table** if you use BW4Hana2.0 and make sure that the open hub destination type in SAP is set to *database table*.
   - Select **Third party tool (legacy)** if you use BW4Hana2.0 and make sure that the open hub destination type in SAP is set to *third party tool*.

1. Click **[ Lookup]**. The window “OHS Lookup” opens.

1. In the field **OHS Destination**, enter the name of an OHS destination . Use wildcards (\*) if needed.

1. Click **[]**. Search results are displayed .

1. Select an OHS destination and click **[OK]** to confirm.

The application now returns to the main window of the component.

### Define the Xtract OHS Component

The Xtract OHS component offers the following options for OHS extractions:

1. If **Process Chain** is empty, enter an SAP process chain assigned to your OHS destination, see [SAP Help: Display/Maintenance of Process Chain Attributes](https://help.sap.com/docs/SAP_NETWEAVER_701/6da591e86c4b1014b43de329b9ffb859/4a2cf30c6ed91c62e10000000a42189c.html?locale=en-US).

   Note

   If **Process Chain** is left empty, the extraction fails.

1. Optional: Use the **Timeout** setting to set a maximum time period to wait for a notification from the BW system. If the time limit is reached, the extraction fails.

1. Check the [Settings](settings/) before running the SSIS package.

1. Click **[OK]** to save the component.

You can now run the SSIS package.

This page shows how to parameterize the Xtract OHS component using SSIS variables directly in the component and by using SSIS expressions to set *Data Flow Properties*.

### Parameterization using Expression Properties

The recommended way of parameterization is to use SSIS expressions to set *Data Flow Properties*. *Data Flow Properties* are displayed in the "Properties" window of the Data Flow Task.

Note

*Data Flow Properties* are not to be confused with *Custom Properties* that are displayed in the "Properties" window of the component. When parameterizing the *Data Flow Properties*, the *Custom Properties* are overwritten.

For more information on property expressions, see [Microsoft Documentation: Use Property Expressions in Packages](https://learn.microsoft.com/en-us/sql/integration-services/expressions/use-property-expressions-in-packages).

1. Right-click the Data Flow canvas and select **Properties**. The window "Properties" opens.
1. Add an *Expression* by clicking using **[…]**. The window "Property Expression Editor" opens.
1. Select a property from the drop-down list under *Property*.
1. Open the "Expression Builder" using the **[…]** button under *Expression*.
1. Build your Expression and click **[Evaluate Expression]** to check for correct syntax.
1. Confirm your input with **[OK]**.

### Data Flow Properties of Xtract OHS

List of *Data Flow Properties* that can be parameterized:

| Property Name | Description | | --- | --- | | *[Xtract OHS].[ConvertsDates]* | Enable or disable conversion of SAP dates, see [ConvertsDates](#convertsdates). | | *[Xtract OHS].[ConvertsTimes]* | Enable or disable conversion of SAP times. | | *[Xtract OHS].[MinDateReplacement]* | Converts the SAP date 00000000 to the entered value, see [MinDateReplacement](#mindatereplacement). | | *[Xtract OHS].[MaxDateReplacement]* | Converts the SAP date 9999XXXX to the entered value, see [MaxDateReplacement](#maxdatereplacement). | | *[Xtract OHS].[InvalidDateReplacement]* | Every invalid value will be converted into the entered value, see [InvalidDateReplacement](#invaliddatereplacement). |

### Custom Properties of Xtract OHS

The *Custom Properties* are properties that are unique to the component. When parameterizing the component using SSIS variables, the *Custom Properties* are overwritten.

The *Custom Properties* of the Xtract OHS component are displayed in the "Properties" window.

#### ConvertsDates

When this property is set to *True* (default) SAP date fields (YYYYMMDD) assume the SSIS pipeline type DT_DBDATE instead of DT_WSTR. For the date conversions to apply, set the property *UseLegacyDateConversion* to *False*. In case of invalid data in SAP date fields, the following date conversions are applied:

- *InvalidDateReplacement*
- *MaxDateReplacement*
- *MinDateReplacement*

#### InvalidDateReplacement

Replaces an invalid date format. The default value is *1970-01-02*. To use the property enter a replacement value for invalid SAP dates, such as '20190132' (January 32nd 2019) in the format yyyy-mm-dd. The value NULL is supported.

#### MaxDateReplacement

Replaces SAP dates with the year 9999. The default value is *2099-12-31*. To use the property enter a replacement value in the format yyyy-mm-dd that contains the year ‘9999’. Example: ‘99990101’ (January 1st 9999). The value NULL is supported.

#### MinDateReplacement

Replaces SAP dates with the year *0000*. The default value is *1970-01-01*. To use the property enter a replacement value in the format yyyy-mm-dd that contains the year '0000'. Example: '00000000'. The value NULL is supported.

______________________________________________________________________

#### Related Links

- [Xtract OHS Settings](../settings/)
- [Microsoft Documentation: Use Property Expressions in Packages](https://learn.microsoft.com/en-us/sql/integration-services/expressions/use-property-expressions-in-packages)

This page contains an overview of the settings in the Xtract OHS component.\
To open the settings, click ****Settings**** in the main window of the component.

The OHS settings consist of two tabs:

- [*Table*](#table-settings)
- [*Third party tool (legacy)*](#third-party-tool-settings)

The settings correspond to the selected extraction type. Set either *Table* or *Third party tool (legacy)* settings.

Warning

**Could not load list of available function modules because permission for table ENLFDIR is missing**\
This warning appears if a technical SAP user does not have authorization rights to access the SAP table *ENLFDIR*. Confirm the warning as the user can **still** adjust the extraction settings.

## Table Settings

### Extraction Settings

#### Package Size

The extracted data is split into packages of the defined size. The default value is 50000 lines.\
A package size between 20000 and 50000 is advisable for large amounts of data. 0 means no packaging. Not using packaging can lead to an RFC timeout for large data extractions.

Warning

**RFC_ERROR_SYSTEM_FAILURE - No more storage space available for extending an internal table**\
To avoid a memory overflow on the SAP source system and to avoid huge overheads, choose a package size that suits your memory capacity.

#### Row Limit

Specifies the maximum number of extracted records. 0 extracts all data. You can use this option to perform tests with a small amount of data by entering a row limit of e.g., 1000.

### Function Module

Specifies the name of the function module used for data extraction. This field is filled automatically depending on what function modules are installed on your SAP system. Custom function modules are supported.

The following function modules can be used to extract tables:

- RFC_READ_TABLE (TAB512)
- /BODS/RFC_READ_TABLE (TAB2048)
- /SAPDS/RFC_READ_TABLE (TAB2048)
- /BODS/RFC_READ_TABLE2
- /SAPDS/RFC_READ_TABLE2
- Z_THEO_READ_TABLE
- [/THEO/READ_TABLE](/xtract-is/documentation/setup-in-sap/custom-function-module-for-table-extraction) (recommended)

Warning

**Duplicates in the target environment.**\
The SAP standard modules for table extraction do not have pointers for table fields. In larger tables this may cause low performance and duplicates in the target environment. Use the function module [THEO/READ_TABLE](../../setup-in-sap/custom-function-module-for-table-extraction/#installation-of-theoread_table) from Theobald Software to ensure smooth extractions.

Note the necessary [SAP Authority Objects](../../setup-in-sap/sap-authority-objects/#table):

```text
S_TABU_NAM ACTVT=03; TABLE=ENLFDIR

```

### Extract Data in Background Job

If *Background job timeout (seconds)* checkbox is activated, the table extraction is executed as a background job in SAP. This setting is optional and is supported in combination with function module THEO/READ_TABLE or Z_THEO_READ_TABLE version 2.0. Activate the setting *Background job timeout (seconds)* for long-running extractions with a large amounts of data that may run into a timeout error (“Time limit exceeded”), when using the foreground mode.

Tip

The extraction jobs can be found in the SAP JobLog (**SM37**) under the JobName *theo_read_table*.

Warning

**Shared Memory ran out of memory!**\
If this error message pops up when running an extraction in the background, adjust the size of the Shared Memory. SAP recommends a Shared Memory size of 800MB~1.5GB for a production/test system or 2GB~4GB for S/4 systems, see [SAP Support: How to solve SYSTEM_NO_SHM_MEMORY runtime error](https://ga.support.sap.com/dtp/viewer/#/tree/1080/actions/12107).

### Advanced Settings

#### Background Job Timeout (seconds)

Sets a timeout period for extractions that run in background mode.\
The default value is 180 seconds. The maximum timeout value is 3600 seconds.

Note

The background job timeout setting only takes effect if the extractions run in background mode using [/THEO/READ_TABLE](../../setup-in-sap/custom-function-module-for-table-extraction/).

#### Adjust Currency Decimals

The default number of decimal places for a currency in the SAP database is 2 decimals. Currencies that do not have decimals are also stored in this format, e.g. JPY, VND, KRW, etc.

Example:

| Currency | Actual Amount | Amount stored in SAP database | | --- | --- | --- | | JPY | 100 | 1.00 | | KRW | 10000 | 100.00 |

When extracting currencies with no decimals, the amount stored in SAP is returned e.g., 100 JPY are extracted as 1.00. To correct the decimal placement of the extracted data, activate **Adjust Currency Decimals**. If **Adjust Currency Decimals** is active, currencies without decimals are multiplied by a factor that balances out the decimals.

**Adjust Currency Decimals** also requires the extraction of the corresponding CURRENCY field that can be used as a reference for the multiplication factor. Use the **[Load live preview]** function to find the correct currency field/s.

- If the currency field is part of the table, add it to the output.
- If the currency field is in another table, join the tables.
- If the reference is not part of a table, **Adjust Currency Decimals** cannot be used.

Note

The multiplication factor used in *Adjust Currency Decimals* is determined by the SAP currency table TCURX. To access the table, the following SAP Authority objects must be set in SAP: *S_TABU_NAM ACTVT=03; TABLE=TCURX*.

## Third Party Tool Settings

#### Gateway host

Enter the data of your gateway host. It is often the same host as the SAP application server.

#### Gateway service

Enter the data of your gateway service (*sapgwXX*, where XX is the system number).

#### Program ID

Enter the program ID of the SAP RFC destination.

This page shows how to use the Xtract Query component.\
The Xtract Query component can be used to extract data via SAP queries.

### About SAP Queries

SAP Queries are used to access data sets in SAP, see [SAP Help - Working with Queries](https://help.sap.com/viewer/b1c834a22d05483b8a75710743b5ff26/7.51.6/en-US/0e05493bbccf41a79caed7099c82bd48.html) for more information. The SAP queries that can be used with Xtract Query component are created by the SAP transactions SQ02 and SQ01. To use a BW Query as a data source, see [BW InfoCubes and BExQueries](../bwcube/).

### Prerequisites

- A connection to an SAP system is available, see [SAP Connection](../sap-connection/).
- The SAP user has sufficient user rights, see [SAP Authority Objects](../setup-in-sap/sap-authority-objects/#query).

Warning

**Missing Authorization.**\
To use the Xtract Query component, access to the designated authority objects (RFC) in SAP must be available. Adjust [SAP Authority Objects: SAP Query](../setup-in-sap/sap-authority-objects/#query) accordingly.

### Add an Xtract Query Component

Follow the steps below to add an Xtract Table component to your SSIS package:

1. Drag&drop the Xtract Query component from the SSIS toolbox into your data flow task.

1. Double-click the component. A connection manager is automatically assigned to the component and the main window of the component opens.

   Note

   If there are multiple connection managers, the window "Select Connection Manager" opens, see [SAP Connection](../sap-connection/#assign-connection-managers-to-xtract-components). Once a connection manager is selected, the main window of the component opens.

The majority of the functions of the component can be accessed in the main window.

### Look up an SAP Query

1. In the main window of the component, click **[]**. The window "Query Lookup" opens.
1. Enter the name of an SAP query in the field **Query Name** or the name of a user group in the field **User group** . Use wildcards (\*) if needed.
1. Select the query work area that contains the query object . For more information, see [SAP Help: Query Areas](https://help.sap.com/doc/saphelp_nw74/7.4.16/en-us/4e/3bdad0b8503b0fe10000000a42189e/frameset.htm).
1. Click **[]**. Search results are displayed.
1. Select a query and click **[OK]**.

The application returns to the main window of the component.

### Define the Xtract Query Component

The Xtract Query component offers the following options for query extractions:

1. If the SAP query has variants, select a variant from the drop-down-list *Variant*. For more information, see [Choose a Variant](variants-and-selections/#choose-a-variant).
1. In the section *Selection Screen*, edit a selection criterion you want to change or dynamize . For more information, see [Edit Selections](variants-and-selections/#edit-selections).
1. Check the [Settings](settings/) before running the SSIS package.
1. Click **[OK]** to save the component.

You can now run the SSIS package.

This page shows how to parameterize the Xtract Query component using SSIS variables directly in the component and by using SSIS expressions to set *Data Flow Properties*.

### Parameterization using SSIS Variables

SSIS variables store values that an SQL Server Integration Services package and its containers, tasks, and event handlers can use at runtime.\
You can use SSIS variables for selections. Available SSIS variables are listed in the selection settings when parameter input () is selected, see [Edit Selections](../variants-and-selections/#edit-selections).

### Parameterization using Expression Properties

The recommended way of parameterization is to use SSIS expressions to set *Data Flow Properties*. *Data Flow Properties* are displayed in the "Properties" window of the Data Flow Task.

Note

*Data Flow Properties* are not to be confused with *Custom Properties* that are displayed in the "Properties" window of the component. When parameterizing the *Data Flow Properties*, the *Custom Properties* are overwritten.

For more information on property expressions, see [Microsoft Documentation: Use Property Expressions in Packages](https://learn.microsoft.com/en-us/sql/integration-services/expressions/use-property-expressions-in-packages).

1. Right-click the Data Flow canvas and select **Properties**. The window "Properties" opens.
1. Add an *Expression* by clicking using **[…]**. The window "Property Expression Editor" opens.
1. Select a property from the drop-down list under *Property*.
1. Open the "Expression Builder" using the **[…]** button under *Expression*.
1. Build your Expression and click **[Evaluate Expression]** to check for correct syntax.
1. Confirm your input with **[OK]**.

### Data Flow Properties of Xtract Query

List of *Data Flow Properties* that can be parameterized:

| Property | Description | | --- | --- | | *[Xtract Query].[Variant]* | Corresponds to the settings [Variants](../variants-and-selections/#choose-a-variant) in the Xtract Query component. |

### Custom Properties of Xtract Query

The *Custom Properties* are properties that are unique to the component. When parameterizing the component using SSIS variables, the *Custom Properties* are overwritten.

The *Custom Properties* of the Xtract Query component are displayed in the "Properties" window.

List of the relevant *Custom Properties*:

| Property | Description | | --- | --- | | *MaxRows* | Corresponds to the settings [MaxRows](../settings/#max-rows) in the Xtract Query component. | | *Variant* | Corresponds to the settings [Variants](../variants-and-selections/#choose-a-variant) in the Xtract Query component.. |

______________________________________________________________________

#### Related Links

- [Microsoft Documentation: Integration Services (SSIS) Variables](https://docs.microsoft.com/en-us/sql/integration-services/integration-services-ssis-variables?view=sql-server-ver15)
- [Microsoft Documentation: Use Property Expressions in Packages](https://learn.microsoft.com/en-us/sql/integration-services/expressions/use-property-expressions-in-packages)

This page contains an overview of the settings in the Xtract Query component.\
To open the settings, click ****Settings**** in the main window of the component.

### Extraction Settings

#### Max Rows

Specifies the maximum number of extracted records. 0 extracts all data. You can use this option to perform tests with a small amount of data by entering a row limit of e.g., 1000.

#### Treat 'No Data Selected' as Error

If this option is active, an error message is displayed when there is no data to be extracted.

Most queries allow entering selections before query execution. Selections limit the result set of the query to extract only records that match the selection.\
A selection variant can be created in SAP, see [SAP Help: Query Variants](https://help.sap.com/docs/SAP_NETWEAVER_750/40d2cb3a4f9249d58e9bbc95f4dbaff8/4e535406a32c4f49e10000000a42189e.html?locale=en-US). The purpose of a variant is to minimize the necessity to enter selections when running a query.

Note

Manual selections and variants can be combined. Manual selections overwrite any selections in the variant.

### Choose a Variant

Choose a variant from the drop-down-list *Variant*.\
When creating a new variant in SAP after creating the extraction, click **[]** to load the new variant.

The selections of the variant are **not** displayed in the *Selection Screen* section of the window. To see the definition of a variant, open the variant in SAP.

### Edit Selections

The *Selection Screen* in the main window of the component corresponds to the input screen in SAP.

Note

Some selection fields only have a technical name and no description. To understand which field corresponds to a field in SAP, open the input screen in SAP. Click on a selection field and press the function key `F1` to display the technical name of the selection field.

Follow the steps below to edit selection fields and filter data:

1. In the subsection *Selection Screen*, click **[Edit]** next to the field you want to edit. The window “Edit selection” opens.

1. Click **[Single]** or **[Range]** to add a corresponding filter, see [Filter Options](#filter-options).

1. In the column **Sign** , select *Include* to add the filtered data to the output or select *Exclude* to remove the filtered data from the output.

1. In the column **Option** , select an operator, see [Filter Options](#filter-options).

1. In the column **Value**, enter values directly into the input fields **Low** and **High** or assign existing SSIS variables to the selection fields .

   Note

   When SSIS variables are available, you can use the icon button next to the input field to switch between static values () and SSIS variables ().

1. Click **[OK]** to confirm your input.

Note that edited selection fields overwrite the selection fields in the variant.

Tip

If you use multiple selection parameters, it is more efficient to create a variant in SAP.

### Filter Options

The Xtract Query component offers the following filter options:

| Type | Operator | Description | | --- | --- | --- | | Single | | Compare data to a single specified value. | | | *(not) like pattern* | True if data values do (not) contain to the specified value. | | | *(not) equal to* | True if data is (not) equal to the specified value. | | | *at least* | True if data is greater than or equal to the specified value. | | | *more than* | True if data is greater than the specified value. | | | *at most* | True if data is less than or equal to the specified value. | | | *less than* | True if data is less than the specified value. | | Range | | Check if the data is (not) within a specified range of values. | | | *(not) between* | True if data values do (not) lie between the 2 specified values. |

### Data Format

Use the following internal SAP representation for input:

- Date: The date 01.01.1999 has the internal representation 19990101 (YYYYMMDD).
- Year period: The year period 001.1999 has the internal representation 1999001 (YYYYPPP).
- Numbers: Numbers must contain the leading zeros, e.g., customer number 1000 has the internal representation 0000001000.

Warning

**Values accept only the internal SAP representation.**\
Input that does not use the internal SAP representation results in error messages. Use the internal SAP representation. Example:

```text
ERPConnect.ABAPProgramException: RfcInvoke failed(RFC_ABAP_MESSAGE): Enter date in the format \_.\_.\_

```

This page shows how to use the Xtract Report component.\
The Xtract Report component can be used to extract data from most standard and custom ABAP reports and SAP transactions. A report extraction is possible if the report returns a table-like structure in SAP.

### About Reports

ABAP report programs extract and present huge amounts of data for SAP business applications. SAP offers predefined standard reports that cover the basic needs of customers. They can be executed via transaction codes.

Tip

Use transaction code SAP1 to get a list of all reports for all modules.

### Custom Reports

The extraction of custom reports (Z reports) is possible if the report returns a table-like structure in SAP. Issues specific to Z reports are not included in the scope of support provided by Theobald Software.

### Prerequisites

- A connection to an SAP system is available, see [SAP Connection](../sap-connection/).
- The SAP user has sufficient user rights, see [SAP Authority Objects](../setup-in-sap/sap-authority-objects/#report).
- The custom function module `Z_XTRACT_IS_REMOTE_REPORT` is installed in your SAP system, see [Function Module for Reports](../setup-in-sap/custom-function-module-for-reports/#installation-of-z_xtract_is_remote_report). As of `Z_XTRACT_IS_REMOTE_REPORT` version 1.2 access to reports must be explicitly granted, see [Knowledge BAse Article: Authorize Access to Specific Reports](../../knowledge-base/authorize-access-to-specific-reports/).
- The report must return a table-like structure in SAP.

Warning

**Missing Authorization.**\
To use the Xtract Report component, access to the designated authority objects (RFC) in SAP must be available. Adjust [SAP Authority Objects: Report](../setup-in-sap/sap-authority-objects/#report) accordingly.

### General Workflow

The following graphic shows the general workflow of using the Xtract Report component:

### Add an Xtract Report Component

Follow the steps below to add an Xtract Table component to your SSIS package:

1. Drag&drop the Xtract Report component from the SSIS toolbox into your data flow task.

1. Double-click the component. A connection manager is automatically assigned to the component and the main window of the component opens.

   Note

   If there are multiple connection managers, the window "Select Connection Manager" opens, see [SAP Connection](../sap-connection/#assign-connection-managers-to-xtract-components). Once a connection manager is selected, the main window of the component opens.

The majority of the functions of the component can be accessed in the main window.

### Look up a Report or Transaction

1. In the main window of the component, click **[]**. The window “Report Lookup” opens.

1. In the field **Report Name**, enter the name of a report to extract . Use wildcards (*), if needed. Alternatively, select* *TCODE*\* to look up SAP Transaction codes.

   Tip

   In certain cases reports cannot be determined based on the TCODE. You can check the report name of a TCODE using the SAP GUI menu **System > Status...**.

1. Click **[]** . Search results are displayed.

1. Select a report and click **[OK]** to confirm.

The application now returns to the main window of the component.

### Define the Xtract Report Component

The Xtract Report component offers the following options for report extractions:

1. If the report has variants, select a variant from the drop-down-list *Variant*. For more information, see [Choose a Variant](variants-and-selections/#choose-a-variant).
1. Optional: In the section *Selection Screen*, edit a selection criterion you want to change or dynamize . For more information, see [Edit Selections](variants-and-selections/#edit-selections).
1. Click **[Load live preview]** to display a live preview of the first 100 records.
1. Optional: If your report has varying column widths, activate **Dynamic column widths and offsets**. The column widths and offsets are then adjusted dynamically at report runtime.
1. Click **[Automatically detect columns]** to execute the report based on the selected variant or selections and detect columns automatically.
1. Check if the automatically detected columns are accurate.\
   When automatic column detection is not possible, the column names, widths and offsets must be set manually, see [Define Columns manually](report-columns-define/#define-columns-manually).
1. Optional: Define row settings to remove or parse certain rows, see [Define Rows](report-rows-define/).
1. Check the [Settings](settings/) before running the SSIS package.
1. Click **[OK]** to save the component.

You can now run the SSIS package.

### Example Extraction

The depicted example shows how to set up a simple report extraction:

1. Look up report RLT10010 (Evaluation of Movements per Storage Type).
1. Select variant *VAR01*.
1. Load a live preview.
1. Automatically detect columns.
1. Remove the header (skip the first 8 rows).

______________________________________________________________________

#### Related Links

- [SAP Wiki: Types of ABAP Reports](https://wiki.scn.sap.com/wiki/display/ABAP/Types+of+Reports)
- [Knowledge Base Article: Authorize Access to Specific Reports](../../knowledge-base/authorize-access-to-specific-reports/)

This page shows how to parameterize the Xtract Report component using SSIS variables directly in the component and by using SSIS expressions to set *Data Flow Properties*.

### Parameterization using SSIS Variables

SSIS variables store values that an SQL Server Integration Services package and its containers, tasks, and event handlers can use at runtime.\
You can use SSIS variables for selections. Available SSIS variables are listed in the selection settings when parameter input () is selected, see [Edit Selections](../variants-and-selections/#edit-selections).

Note

The Xtract Report component does not support variables of the data types *DateTime* and *DBNull*. For more information on the data types of system variables, see [Microsoft Documentation: System Variables](https://docs.microsoft.com/en-us/sql/integration-services/system-variables?view=sql-server-ver15).

### Parameterization using Expression Properties

The recommended way of parameterization is to use SSIS expressions to set *Data Flow Properties*. *Data Flow Properties* are displayed in the "Properties" window of the Data Flow Task.

Note

*Data Flow Properties* are not to be confused with *Custom Properties* that are displayed in the "Properties" window of the component. When parameterizing the *Data Flow Properties*, the *Custom Properties* are overwritten.

For more information on property expressions, see [Microsoft Documentation: Use Property Expressions in Packages](https://learn.microsoft.com/en-us/sql/integration-services/expressions/use-property-expressions-in-packages).

1. Right-click the Data Flow canvas and select **Properties**. The window "Properties" opens.
1. Add an *Expression* by clicking using **[…]**. The window "Property Expression Editor" opens.
1. Select a property from the drop-down list under *Property*.
1. Open the "Expression Builder" using the **[…]** button under *Expression*.
1. Build your Expression and click **[Evaluate Expression]** to check for correct syntax.
1. Confirm your input with **[OK]**.

### Data Flow Properties of Xtract Report

List of *Data Flow Properties* that can be parameterized:

| Property | Description | | --- | --- | | *[Xtract Report].[Variant]* | Corresponds to the settings [Variants](../variants-and-selections/#choose-a-variant) in the {{ r }} component. | | *[Xtract Report].[BatchJobDestination]* | Corresponds to the setting [Spool Destination](../settings/#spool-destination) in the Xtract Report component. | | *[Xtract Report].[BatchJobName]* | Corresponds to the setting [Background Job Name](../settings/#background-job-name) in the Xtract Report component. | | *[Xtract Report].[BatchJobTimeout]* | Corresponds to the setting [Background Job Timeout](../settings/#background-job-timeout) in the Xtract Report component. |

### Custom Properties of Xtract Report

The *Custom Properties* are properties that are unique to the component. When parameterizing the component using SSIS variables, the *Custom Properties* are overwritten.

The *Custom Properties* of the Xtract Report component are displayed in the "Properties" window.

List of the relevant *Custom Properties*:

| Property | Description | | --- | --- | | *BatchJobDestination* | Corresponds to the setting [Spool Destination](../settings/#spool-destination) in the Xtract Report component. | | *BatchJobName* | Corresponds to the setting [Background Job Name](../settings/#background-job-name) in the Xtract Report component. | | *BatchJobTimeout* | Corresponds to the setting [Background Job Timeout](../settings/#background-job-timeout) in the Xtract Report component. | | *DynamicColumnWidthsAndOffsets* | Corresponds to the setting [Dynamic Column Widths and Offsets](../report-columns-define/#dynamic-column-width-and-offset) in the Xtract Report component. | | *ReportRowsPerDataRow* | Corresponds to the setting [Report Rows Per Data Row](../report-rows-define/#report-rows-per-data-row) in the Xtract Report component. | | *ReportWidth* | Corresponds to the setting [Report Width](../report-rows-define/#report-width) in the Xtract Report component. | | *SkipBottomRows* | Corresponds to the setting [Skip Rows from Bottom](../report-rows-define/#skip-rows-from-bottom) in the Xtract Report component. | | *SkipTopRows* | Corresponds to the setting [Skip Rows from Top](../report-rows-define/#skip-rows-from-top) in the Xtract Report component. | | *UseBatch* | Corresponds to the setting [Use Background Mode](../settings/#use-background-mode) in the Xtract Report component. | | *Variant* | Corresponds to the setting [Variant](../variants-and-selections/#choose-a-variant) in the Xtract Report component. |

______________________________________________________________________

#### Related Links

- [Microsoft Documentation: Integration Services (SSIS) Variables](https://docs.microsoft.com/en-us/sql/integration-services/integration-services-ssis-variables?view=sql-server-ver15)
- [Microsoft Documentation: Use Property Expressions in Packages](https://learn.microsoft.com/en-us/sql/integration-services/expressions/use-property-expressions-in-packages)

This page shows how to define the columns in the result set of a report extraction.

A report column is defined by its name, offset and length. Per default, all columns are of data type *string*. To identify a columns, the report needs to be executed. Columns can then be identified based on the output.

Tip

At this stage, use a selection or variant that returns only a few records. This can be adapted later on.

- Certain classical ABAP reports are developed to use the pipe symbol '|' as a delimiter for the output columns. In this case the Xtract Report component can automatically identify the columns. Automatic column detection also works for most ALV reports. Example:
- For reports where the output is not separated by the pipe symbol, the columns must be identified manually. Example:

For information on how to parse rows as columns, see [Parse Header Row as New Column](../report-rows-define/#parse-header-row-as-new-column).

### Define Columns Automatically

#### Automatically detect columns

Click **[Automatically detect columns]** to execute the report based on the selected variant or selections. If they can be identified automatically, the column name, width and offset are displayed in the *Columns* section in the main window of the component.

#### Dynamic column width and offset

If this option is active, the column width and offset is adjusted dynamically at report runtime. This can be required for reports that have varying column widths depending on the report's selection criteria.

### Define Columns Manually

When automatic column detection is not possible, the column names, widths and offsets must be set manually.

1. Make sure no columns are defined yet. If columns are defines, click **[]** in the *Columns* section in the main window of the component to delete the columns.
1. Click **[Load live preview]**. The report is executed based on the selected report variant or selections. The output of the report is displayed in the *Load Preview* section.
1. To define the beginning (offset) of a column, press and hold down the left mouse button in the *Load Preview* section.
1. To define the length of a column, move the mouse pointer to the right while still holding down the left mouse button.
1. Let go of the cursor. The report column is highlighted with a green background and an entry is added to the *Columns* section.
1. To change the column name, offset and width, click in the respective fields in the *Columns* section and enter a new value.
1. Repeat steps 3 to 6 until all columns are defined.

Note

Once a column is set and highlighted with a green background, its width and offset cannot be changed via the graphics editor. Change it using the *Columns* section.

______________________________________________________________________

#### Related Links

- [Knowledge Base Article: Parse Reports in Xtract IS](../../../knowledge-base/parse-reports/).

This page shows how to define the rows in the result set of a report extraction.\
The row settings are located in the tab *Skip and Parse Rows*.

### Row Settings

The Xtract Report component offers the following options to remove rows from the result set of a report extraction:

| Option | Description | | --- | --- | | [Skip rows from top](#skip-rows-from-top) | Removes the first n number of rows from the top of the report. | | [Skip rows from button](#skip-rows-from-bottom) | Removes the last n number of rows from the button of the report. | | [Skip rows by pattern](#skip-rows-from-bottom) | Uses a pattern or regular expression to remove rows that contain the pattern. | | [Skip rows by keyword](#add-row-to-skip) | Uses a keyword to remove all rows that contain the keyword. |

For more information on how to remove and parse rows to merge groups of data sets into a single data set, see [Knowledge Base Article: Parse Reports in Xtract IS](../../../knowledge-base/parse-reports/).

#### Skip rows from top

Enter the number of rows you want to skip at the beginning of the report. Some reports display meta information in the header section of the report, before the actual report body. This setting allows skipping the meta information.

#### Skip rows from bottom

Similar to *skip rows from top*. Enter the number of rows you want to skip in the footer section of the report.

#### Report rows per data row

Use this setting for ABAP reports that return two or more "physical" rows to display a single "semantic" data row. Enter the number of physical rows that represent a single data row.\
Example: Report RIEQUI20

#### Report width

Use this setting in combination with **Report rows per data row**. **Report width** defines the length of each physical row. The maximum width of extracted reports is limited to 1024 characters per row.

#### Header pattern

Enter a search pattern to detect the table header, e.g., *Created on*.\
The Xtract Report component scans the report output for this pattern and uses the row that contains this pattern as the report header. Any duplicates of the header row are removed from the result set.

Rows that contain the header pattern are displayed in a blue font in the preview section.

Tip

Alternatively, right-click the row that you want to use as a header and select **Select as header** from the context menu.

This setting is usually not required if the report's columns can be [detected automatically](../report-columns-define/#define-columns-automatically) and *Dynamic column widths and offsets* is active in the main window of the component.

#### Skip rows by pattern

Enter a search pattern. All report rows that contain the pattern are removed from the result set.\
The skip row setting can be used to skip header rows that are repeated in the output body of reports, see also [Skip rows by keyword](#skip-rows-by-keyword).\
The live preview in the Xtract Report component does not include the **Row Skip Pattern** option, because the rows are only removed after the report data is extracted from SAP.

- Regular expressions are supported.
- Multiple row skip patterns can be entered, separated by the pipe symbol "`|`", e.g., `2020|2021|-|Sum` removes all rows containing ‘2020’, ‘2021’, ‘-‘ and ‘Sum’.
- To process special symbols, add `\`before the symbol, e.g., `\*` removes rows that contain the sum symbol * .

Note

The setting *Skip rows by pattern* is usually not required if the report columns can be [detected automatically](../report-columns-define/#define-columns-automatically) and *Dynamic column widths and offsets* is checked in the Report window.

### Skip rows by keyword

Define rows that are removed from the result set of the report extraction. This option can be used to skip header rows that are repeated in the output body of reports.

#### Add Row to Skip

Click **[Add row to skip]** to define a row that is removed from the result set of the report extraction.\
Enter a unique keyword from the row you want to remove.\
Example: `**` removes all rows that contain the characters `**`.

Rows that are excluded from the result set are displayed in a gray font in the preview section.

Tip

Alternatively, right-click the row you want to remove and select **Ignore/unignore row** from the context menu.

### Parse Header Row as new Column

Define rows that are added to the result set as columns.\
This option can be used for reports that contain groups with multiple headers.

#### Add row to parse as column

Click **[Add row to parse as column]** to add a new column to the result set.\
Enter the following column properties manually or use the [parse helper](#parse-helper) to define the column properties:

| Property | Description | | --- | --- | | *Keyword* | Enter a unique keyword from the row to include it as a column in the result set. The report is scanned for rows that contain the string. The keyword search is case sensitive. | | *Name* | Enter a name for the new column. | | *Offset* | Define the beginning (offset) of the content that is written into the new column. *Example:* Enter 0 if the content for the new column is located at the start of the row. Enter 25 if the content starts 25 characters into the row. | | *Width* | Define the width of the new column. |

Tip

Alternatively, to add row to parse as column, right-click a header row you want to use as a column and select **Parse header row as new column** from the context menu.

Rows that are parsed as a column are displayed in a red font in the preview section.\
For more information, see [Knowledge Base Article: Parse Reports in Xtract IS](../../../knowledge-base/parse-reports/).

#### Parse Helper

The parse helper is a feature that helps you define properties for new columns:

1. In the subsection *Parse Header Row as new Column*, click **[Add row to parse as column]** to add a new column to the result set.

1. Click **[]** . The window "Parse Helper" opens and a new preview of the report data is fetched. This process may take several seconds to complete.

1. Under **Search keyword** enter a unique keyword from the row you want to parse as a column. Matching rows are displayed in the preview section of the window.

   Note

   The keyword search is case sensitive.

1. Make sure only header rows are displayed in the preview section. If the preview includes regular rows, edit the keyword until only header rows remain.

1. Under **New Column Name** enter a name for the new column.

1. Mark the content of the column in the preview section by pressing and dragging the mouse pointer over the length of the content.

1. Click **[OK]** to save the column properties.

The new column is added at the beginning of the report *after* running the SSIS package. Therefore, the new column is not included in the preview section of the component.

Rows that are parsed as a column are displayed in a red font in the preview section.

______________________________________________________________________

#### Related Links

- [Knowledge Base Article: Parse Reports in Xtract IS](../../../knowledge-base/parse-reports/).

This page contains an overview of the settings in the Xtract Report component.\
To open the settings, click ****Settings**** in the main window of the component.

### Batch Processing

#### Use Background Mode

If you choose this option, the ABAP report is executed as a batch job in SAP. Use this option for long running reports in SAP that would run into an RFC timeout when called in dialog mode. Certain reports that throw an error message when running in dialog mode can be extracted when run in background mode.

#### Background Job Timeout

Enter a time period (in seconds). The Xtract Report component polls the status of the batch job in SAP for the specified time period. If the SAP batch job is not finished by the specified time period, the extraction aborts.

#### Background Job Name

The name of the background job under which the report is run in SAP.

#### Spool Destination

Enter the name of the spool destination (printer). If the ABAP report produces an output, a spool destination is generated. The spool destination defines where the output would go if printed, e.g., LP01 or LOCL. You can display all spool requests in SAP using the SAP transaction SP01.

### Function Module

The Report component requires installation of the custom function module `Z_XTRACT_IS_REMOTE_REPORT` in your SAP system, see [Install Report Custom Function Module](../../setup-in-sap/custom-function-module-for-reports/). If you manually created the function module in your SAP system and gave it a different name, enter that name in this field. The default is `Z_XTRACT_IS_REMOTE_REPORT`.

______________________________________________________________________

#### Related Links

- [Microsoft: Regular Expressions in the Microsoft Online Help](http://msdn.microsoft.com/en-us/library/az24scfc.aspx)
- [Knowledge Base Article: Parse Reports in Xtract IS](../../../knowledge-base/parse-reports/)
- [Install Report Custom Function Module](../../setup-in-sap/custom-function-module-for-reports/)

Most reports allow entering selections before report execution. Selections limit the result set of the report to extract only records that match the selection.

In SAP a [selection variant](https://help.sap.com/docs/btp/ABAP/3353524716.html) can be created in the input screen of an ABAP report. The purpose of a variant is to save selection settings on your input screen and to minimize the necessity to enter selections when running a report.

Note

Manual selections and variants can be combined. Manual selections overwrite any selections in the variant.

### Choose a Variant

Choose a variant from the drop-down-list *Variant*.\
When creating a new variant in SAP after creating the extraction, click **[]** to load the new variant.

The selections of the variant are **not** displayed in the *Selection Screen* section of the window. To see the definition of a variant, open the variant in SAP.

### Edit Selections

The *Selection Screen* in the main window of the component corresponds to the input screen in SAP.

Note

Some selection fields only have a technical name and no description. To understand which field corresponds to a field in SAP, open the input screen in SAP. Click on a selection field and press the function key `F1` to display the technical name of the selection field.

Follow the steps below to edit selection fields and filter data:

1. In the subsection *Selection Screen*, click **[Edit]** next to the field you want to edit. The window “Edit selection” opens.

1. Click **[Single]** or **[Range]** to add a corresponding filter, see [Filter Options](#filter-options).

1. In the column **Sign** , select *Include* to add the filtered data to the output or select *Exclude* to remove the filtered data from the output.

1. In the column **Option** , select an operator, see [Filter Options](#filter-options).

1. In the column **Value**, enter values directly into the input fields **Low** and **High** or assign existing SSIS variables to the selection fields .

   Note

   When SSIS variables are available, you can use the icon button next to the input field to switch between static values () and SSIS variables ().

1. Click **[OK]** to confirm your input.

1. Click **[Load live preview]** in the main window of the component to check the result of your selection. If SSIS variables are defined, you are prompted to populate the parameters with actual values.

Note that edited selection fields overwrite the selection fields in the variant.

Tip

If you use multiple selection parameters, it is more efficient to create a variant in SAP.

### Filter Options

The Xtract Report component offers the following filter options:

| Type | Operator | Description | | --- | --- | --- | | Single | | Compare data to a single specified value. | | | *(not) like pattern* | True if data values do (not) contain to the specified value. | | | *(not) equal to* | True if data is (not) equal to the specified value. | | | *at least* | True if data is greater than or equal to the specified value. | | | *more than* | True if data is greater than the specified value. | | | *at most* | True if data is less than or equal to the specified value. | | | *less than* | True if data is less than the specified value. | | Range | | Check if the data is (not) within a specified range of values. | | | *(not) between* | True if data values do (not) lie between the 2 specified values. |

### Data Format

Use the following internal SAP representation for input:

- Date: The date 01.01.1999 has the internal representation 19990101 (YYYYMMDD).
- Year period: The year period 001.1999 has the internal representation 1999001 (YYYYPPP).
- Numbers: Numbers must contain the leading zeros, e.g., customer number 1000 has the internal representation 0000001000.

Warning

**Values accept only the internal SAP representation.**\
Input that does not use the internal SAP representation results in error messages. Use the internal SAP representation. Example:

```text
ERPConnect.ABAPProgramException: RfcInvoke failed(RFC_ABAP_MESSAGE): Enter date in the format \_.\_.\_

```

______________________________________________________________________

#### Related Links

- [SAP Help: Report variants in SAP](https://help.sap.com/docs/btp/ABAP/3353524716.html)

This page shows how to connect to SAP using the "XTRACT" Connection Manager.\
A connection to an SAP system is required to perform tasks like designing ETL packages, extracting metadata, previewing and deploying data using Xtract IS.

An SAP connection is required to use any Xtract IS component.

Warning

**Missing Authorization.**\
To establish a connection to SAP, the access to general authority objects must be available. Adjust the [SAP Authority Objects](/xtract-is/documentation/setup-in-sap/sap-authority-objects#general-authorization-objects) accordingly.

**Supported Connection Methods**

- Connection to a single application server
- Connection to a message server (Load Balancing)

**Supported Authentication Methods**

- [Plain login](#connect-to-sap) using SAP username and password (system or dialogue user)
- [Secure Network Communication (SNC)](snc-authentication/) using username and password via basic authentication

### Connect to SAP

Follow the steps below to create a connection manager that connects to SAP:

1. Create a new Integration Services Project and add a data flow task.

1. Right-click within the “Solution Explorer” area and select **New Connection Manager** from the context menu. The window "Add SSIS Connection Manager" opens.

1. Select the XTRACT Connection Manager from the list of available connection managers and click **[Add...]**. The XTRACT Connection Manager is now available in the connection managers area.

1. Double-click the XTRACT Connection Manager. The window "XTRACT Connection Manager" opens.

1. Enter the system details of your SAP system and enter the SAP username and password of an SAP system or dialogue user.

   Tip

   Input values for the SAP connection can be found in the Properties of the SAP Logon Pad or they can be requested from the SAP Basis team.

1. Click **[Test connection]** to validate the connection parameters.

1. Click **[OK]** to save the XTRACT Connection Manager.

For information on how to connect to SAP using Secure Network Authentication (SNC), see [SNC Authentication](snc-authentication/). For information on properties and parameters of the XTRACT Connection Manager, see [Parameterize Connections](parameterize-connections/).

### Assign Connection Managers to Xtract Components

XTRACT Connection Managers can be assigned to an Xtract component automatically or manually.

1. Create an XTRACT Connection Manager as shown in [Connect to SAP](#connect-to-sap).

1. Drag & drop an Xtract component into the data flow task.

1. Double-click the Xtract component to automatically assign a Connection Manager. If there are multiple XTRACT Connection Managers, the window "Select Connection Manager" opens.

   Select an XTRACT Connection Manager and click **[OK]**.

1. Create an XTRACT Connection Manager as shown in [Connect to SAP](#connect-to-sap).

1. Drag & drop an Xtract component into the data flow task.

1. Select the Xtract component and click *Show Advanced Editor* in the *Properties* menu of the component . The window "Advanced Editor" opens .

1. Select an XTRACT Connection Manager from the drop-down-menu .

1. Confirm your selection with **[OK]** .

Note

The Xtract BAPI component does not have an *Advanced Editor*.\
To manually assign an XTRACT Connection Manager to an Xtract BAPI component, open the main window of the Xtract BAPI component. The main window of the Xtract BAPI component contains a *Change Connection Manager* menu.

### Connect via Router

If you access the SAP source system (Application server or Message server) via an SAP router, set the router string before the host name. For more information on SAP routers, see [SAP Help: SAP-Router](https://help.sap.com/viewer/6d9a59096c4b1014b507f15bed51571f/7.01.22/en-US/486b41efb74c07bee10000000a42189d.html).

Example:\
If the application server is "hamlet" and the router string is `/H/lear.theobald-software.com/H/`, set the host property to `/H/lear.theobald-software.com/H/hamlet`.

______________________________________________________________________

#### Related Links

- [Microsoft Documentation: Create connection managers](https://learn.microsoft.com/en-us/sql/integration-services/connection-manager/integration-services-ssis-connections?view=sql-server-ver16#create-connection-managers).
- [XTRACT Connection Manager: Properties and Parameters](parameterize-connections/)
- [Connection Settings](settings/)

This page shows how to parameterize an SAP connection.

### Parameterize an XTRACT Connection Manager

The properties of the XTRACT Connection Manager can be parameterized. Follow the steps below to set up project parameters for Connection Manager properties:

1. Right-click an XTRACT Connection Manager and select **Parameterize...** from the context menu. The window "Parameterize" opens.
1. Select the property you want to parameterize.
1. Select the option **Use existing parameter** to assign a parameter to the selected property or select the option **Create New Parameter** to create a new parameter.
1. In the section *Scope* select **Project** to create a project parameter.
1. Click **[OK]**. The new project parameter is now available under *Project.params* in the "Solution Explorer".

For more information on package and project parameters, see [Microsoft Documentation: Integration Services (SSIS) Package and Project Parameters](https://learn.microsoft.com/en-us/sql/integration-services/integration-services-ssis-package-and-project-parameters?view=sql-server-ver16).

### List of XTRACT Connection Manager Properties

| Property Name | Description | | --- | --- | | *AppServer* | Host name or IP address of the SAP application server. | | *AttachesSapGui* | Set to *True* for Reports and BAPIs that require an installed SAP GUI. | | *Client* | The three-digit number of the SAP client between 000 and 999. | | *InstanceNumber* | A two-digit number between 00 and 99. | | *InternalTableFunction* | The function module used for Xtract IS’ internal communication with SAP, e.g., retrieving metadata. | | *Language* | The logon language for the SAP system, e.g., EN for English or DE for German. | | *LegacyStorageMode* | Enables backward compatibility. SAP connection parameters are no longer stored as Connection Strings, but as Properties. | | *LoadBalancingEnabled* | Enables load balancing (SAP message server). | | *LogOnGroup* | SAP Logon group for Load Balancing. | | *MessageServer* | Name or IP address of the SAP message server. | | *Name* | Name of the Connection Manager. | | *Password* | Password of the SAP user. | | *PasswordObfuscated* | If *LegacySorageMode* is enabled, this property determines if the password is stored as plain text or if it is masked. | | *RfcLibrary* | Select an RFC library to establish an RFC connection to an SAP system. | | *SncEnabled* | Enables Secure Network Connection (SNC). | | *SncLibraryPathX64* | The complete path to the library location for 64 bit systems. | | *SncLibraryPathX86* | The complete path to the library location for 32 bit systems. | | *SncPartnerName* | The SAP Partner Name configured for the SAP application server, e.g., `p:SAPserviceERP/do_not_care@THEOBALD.LOCAL` | | *SncQualityOfProtection* | The SNC level of protection, e.g., *9 - Maximum* | | *SystemId* | A three-digit System ID, e.g., MSS. | | *TraceDirectory* | A local path to a folder, where you want to save the debug information. | | *User* | Name of the SAP user. |

### Sensitive Environment Variables in SSISDB Catalog

Environment variables in the [SSISDB catalog](https://learn.microsoft.com/en-us/sql/integration-services/catalog/ssis-catalog?view=sql-server-ver16) can be used in combination with project parameters to achieve the following:

- Parameterize SSIS packages after deploying to the server.
- Encode sensitive data, e.g., SAP passwords.

Follow the steps below to set up a sensitive environment variable for an XTRACT Connection Manager property:

1. Configure an XTRACT Connection Manager that uses project parameters, see [Parameterize an XTRACT Connection Manager](#parameterize-an-xtract-connection-manager).
1. Deploy the project to an SSISDB catalog.
1. Create an environment in the SSISDB catalog.
1. Create a sensitive variable in the environment properties.
1. Open the configuration menu of the project. The project parameters from step 1 are available in the parameter list.
1. Click **[...]** to assign a sensitive environment variable to a project parameter.
1. Execute a package using the environment.

______________________________________________________________________

#### Related Links

- [XTRACT Connection Manager](../#connect-to-sap)
- [SAP Connection with SNC](../snc-authentication/)
- [Microsoft Documentation: SSIS Catalog](https://learn.microsoft.com/en-us/sql/integration-services/catalog/ssis-catalog?view=sql-server-ver16)
- [Microsoft Documentation: Access Control for Sensitive Data in Packages](https://learn.microsoft.com/en-us/sql/integration-services/security/access-control-for-sensitive-data-in-packages#protection-level-setting-and-the-ssisdb-catalog)

This page contains an overview of the SAP connection settings in the XTRACT Connection Manager.\
For information on the properties of an XTRACT Connection Manager, see [List of XTRACT Connection Manager Properties](../parameterize-connections/#list-of-xtract-connection-manager-properties).

### Xtract Conenction Manager Settings

Some input fields for the SAP connection vary depending on the selected connection method.

| Input Field | Description | | --- | --- | | **Client** | A three-digit number of the SAP client between 000 and 999, e.g., 800. | | **Username** | SAP username. | | **Password** | Password of the SAP user. | | **Language** | The logon language for the SAP system, e.g., EN for English or DE for German. | | **Application server** | Host name or IP address of the application server (Property Host). | | **Instance number** | A two-digit number between 00 and 99 (Property SystemNumber). |

| Input Field | Description | | --- | --- | | **Client** | A three-digit number of the SAP client between 000 and 999, e.g., 800. | | **Username** | SAP username. | | **Password** | Password of the SAP user. | | **Language** | The logon language for the SAP system, e.g., EN for English or DE for German. | | **System ID** | Three-digit System ID (Property SID e.g., MSS). | | **Logon group** | Property LogonGroup, usually *PUBLIC*. | | **Message Server** | Name or IP address of the message server (Property MessageServer). |

#### Trace Directory

You can log debug information and save it locally.\
Enter a path to a local directory in the field **Trace directory** to save the debug information. For more information, see [Troubleshooting: Trace Directory](https://support.theobald-software.com/helpdesk/KB/View/14455-how-to-activate-tracing-for-xtract-products).

Clear the **Trace Directory** field when it is not needed.

Warning

**Increase of used hard drive memory.**\
A big amount of information is collected when debug logging is activated. This can decrease the capacity of your hard drives dramatically. Activate the debug logging only when necessary e.g., upon request of the support team.

#### RFC Libraries

Select an RFC library. The following RFC libraries are supported:

- NetWeaver RFC library (sapnwrfc.dll)
- Classic RFC library (librfc32.dll)

The RFC API (Remote Function Call) allows to establish an RFC connection to an SAP system from an external system that communicates as Client or Server with the SAP system. For more information on SAP libraries, see [SAP Help: RFC Libraries](https://help.sap.com/saphelp_nwpi71/helpdata/de/45/18e96cd26321a1e10000000a1553f6/frameset.htm).

SAP does not [support librfc32.dll](https://blogs.sap.com/2012/08/15/support-for-classic-rfc-library-ends-march-2016/) anymore.

Note

For certain older SAP releases, e.g., R/3 4.6C, it is necessary to enter the user name in upper case when using the NetWeaver RFC library.

Note

When using the NetWeaver RFC library with the [Xtract DeltaQ](../../deltaq/) component or the [Xtract OHS](../../ohs/) component, the RFC destination in SAP transaction SM59 must be set to *Unicode*. We recommend using the not supported librfc32.dll for certain components, e.g., Xtract DeltaQ as it runs more stable than the NetWeaver RFC library.

#### Test Connection

Clicking **[Test Connection]** validates the connection parameters. A window with a status message opens in the bottom right corner of the window.

### Additions

The "Additions" menu contains settings for Secure Network Communication (SNC), as well as some expert options.

In the window "XTRACT Connection Manager" click **Additions**. The window "XTRACT Connection Manager Additions" opens.

#### SNC

The section *SNC* contains the Secure Network Connection options of the XTRACT Connection Manager. For more information, see [SNC Authentication](../snc-authentication/)

| Input Field | Description | | --- | --- | | **SNC enabled** | Activate this option to enable Secure Network Communication (SNC) between Xtract IS and SAP. | | **SNC library (32 Bit, Visual Studio)** | Path to the SNC library for 32 Bit, e.g., `C:\Program Files (x86)\SAP\FrontEnd\SecureLogin\sapcrypto.dll` | | **SNC library (64 Bit)** | Path to the SNC library for 64 Bit, e.g., `C:\Program Files\SAP\FrontEnd\SecureLogin\sapcrypto.dll` | | **Partner Name** | The SAP Partner Name configured for the SAP application server, e.g., `p:SAPserviceERP/Alice@THEOBALD.LOCAL`. | | **Quality of Protection** | The SNC level of protection. The default value is *9 - Maximum*. For more information, see [SAP Help: Secure Network Communications (SNC) - Levels of Protection](https://help.sap.com/docs/SAP_NETWEAVER_701/6f3e0bea6c4b101484fcf5305b4d624b/e656f466e99a11d1a5b00000e835363f.html?version=7.01.22#levels-of-protection). |

#### Expert Options

| Input Field | Description | | --- | --- | | **Legacy storage mode (connection string)** | Activate this option, if you still use a single connection string for the SAP connection (default in Xtract IS versions before 09.2017). You can either use *Connection properties* or a *Connection string*, not both. *Connection string* does not support [sensitive environment variable](../parameterize-connections/#sensitive-environment-variables-in-ssisdb-catalog). | | **Obfuscate Password** | Masks the SAP connection password. This option is activated by default when activating **Legacy storage mode**. | | **Internal Table Function** | Defines the function module that is used for Xtract IS' internal communication with SAP, e.g., retrieving metadata. To [change the selected function module](../../setup-in-sap/custom-function-module-for-table-extraction/), type the name of function module manually. | | **AttachesSapGui** | This option is only accessible in the *Properties* of the XTRACT Connection Manager and not in the GUI. There are SAP Reports and BAPIs that require an installed SAP GUI even when they are called remotely. In this case, set the *AttachesSapGui* property in the *Expert Options* of the XTRACT Connection Manager to *True*. |

Warning

**'sapgui' start failed.**\
Sometimes SAP opens a pop-up window that requires input when running extractions. To deactivate pop-up windows, open the SAP GUI Logon pad and navigate to **Options... > Security Settings**. Click the **[Open Security Configuration]** button and select *Allow* as the **Default Action**. Apply the changes and close the SAP GUI Logon pad.

This page shows how to configure an XTRACT Connection Manager to use encrypted communication via [Secure Network Communication (SNC)](https://help.sap.com/doc/saphelp_nw73ehp1/7.31.19/en-US/e6/56f466e99a11d1a5b00000e835363f/content.htm?no_cache=true) between Xtract IS and SAP.

### Prerequisites

- SNC must be configured in your SAP system. For more information about SNC configuration in SAP, see [SAP Help: Configuring the Application Server](http://help.sap.com/saphelp_nw73/helpdata/en/44/0e2e0cc7330d19e10000000a114a6b/frameset.htm).
- Check the SAP profile parameter *snc/gssapi_lib* in SAP (transaction RZ10) to determine, which library is used for encryption in your SAP system. Your SAP Basis has to import and configure the same library on the application server and on the machine that runs Xtract IS, e.g., `sapcrypto.dll`.

For information on how to set up SNC via X.509 certificate, refer to the [Knowledge Base Article: Enable Secure Network Communication (SNC) via X.509 certificate](../../../knowledge-base/enable-snc-using-pse-file/).

### Configure an XTRACT Connection Manager to use SNC

Follow the steps below to set up an SAP connection that uses SNC:

1. Create or open an XTRACT Connection Manager. For more information, see [Connect to SAP](../#connect-to-sap).

1. Enter the system details of your SAP system and enter the SAP username and password of an SAP system or dialogue user.

   Tip

   Input values for the SAP connection can be found in the Properties of the SAP Logon Pad or they can be requested from the SAP Basis team.

1. In the "XTRACT Connection Manager" window, click **Additions**. The window "XTRACT Connection Manager Additions" opens.

1. Activate the option **SNC enabled**.

1. Enter the path to the SNC library for 32 Bit & 64 Bit in the **SNC library** fields, e.g., `C:\Program Files (x86)\SAP\FrontEnd\SecureLogin\sapcrypto.dll`.

1. Enter the SAP Partner Name configured for the SAP application server in the field **Partner Name**, e.g., `p:SAPserviceERP/Alice@THEOBALD.LOCAL`.

1. Select the SNC level of protection in the field **Quality of protection**. The default value is *9 - Maximum*.\
   For more information, see [SAP Help: Secure Network Communications (SNC) - Levels of Protection](https://help.sap.com/docs/SAP_NETWEAVER_701/6f3e0bea6c4b101484fcf5305b4d624b/e656f466e99a11d1a5b00000e835363f.html?version=7.01.22#levels-of-protection).

1. Click **[OK]** to confirm your input.

1. Click **[Test Connection]** to validate the connection parameters.

1. Click **[OK]** to save the XTRACT Connection Manager.

### Download Kerberos DLLs

It is possible to use Kerberos libraries for encryption between the client and the SAP server. For more information, see [SAP Note 2115486](https://launchpad.support.sap.com/#/notes/2115486).\
Different DLLs for 32-bit (`gsskrb5.dll`) and 64-bit (`gx64krb5.dll`) platforms are provided with [SAP Note 2115486](https://launchpad.support.sap.com/#/notes/2115486).

This section covers installation and maintenance topics for IT admins. This includes system requirements, backups and license information.

### Popular Topics

- [System Requirements](requirements/)
- [Backup & Update](update/)
- [Supported SAP Releases & Databases](requirements/#supported-sap-systems-and-releases)
- [License Installation](license/#about-the-licensing-concept-of-xtract-is)
- [Migration of SSIS packages to newer versions](ssis-migration/)

### Download Xtract IS

You can download a 30 day trial version from the [Theobald Software website](https://theobald-software.com/en/download-trial/). The trial version is only time limited and works otherwise without any restrictions.

### Evaluate Xtract IS

You are guaranteed to get unrestricted support by the Theobald Software support team during the evaluation phase. In case of questions or doubts, feel free to contact Theobald Software at any time:

- [Support Portal](https://support.theobald-software.com)
- [Contact Forms](https://theobald-software.com/en/contact/)

### Technical Support

Theobald Software offers support in English and German.

1. Open a ticket in our [Support Portal](https://support.theobald-software.com).
1. Provide as much information as possible for the Theobald Software support team to understand and analyze the issue.
1. If there is an error message, copy and paste the error message into the ticket.
1. Copy and paste the software logs in the ticket, see [Required Support Information for Xtract IS](https://support.theobald-software.com/helpdesk/KB/View/14458-required-support-information-for-xtract-is).

Disclaimer

SAP versions that are no longer supported by the manufacturer are excluded from the Theobald Software support. Issues specific to custom BAPIs (Z function modules) or custom reports (Z reports) are also excluded from the scope of support.

This page shows how and where to install Xtract IS.

### Prerequisites

- Administrator permissions are required to install Xtract IS.
- Make sure to install the necessary tools in the correct order:

| Order | Runtime Environment | Development Environment(s) | | --- | --- | --- | | | SQL Server (+ [Integration Services](https://learn.microsoft.com/en-us/sql/integration-services/install-windows/install-integration-services?view=sql-server-ver16#install-integration-services)) | [Visual Studio](https://visualstudio.microsoft.com/downloads) + [SQL Server Data Tools](https://learn.microsoft.com/en-us/sql/ssdt/download-sql-server-data-tools-ssdt?view=sql-server-ver16) | | | Optional: [Visual Studio](https://visualstudio.microsoft.com/downloads) + [SQL Server Data Tools](https://learn.microsoft.com/en-us/sql/ssdt/download-sql-server-data-tools-ssdt?view=sql-server-ver16) | [SQL Server Integration Services](https://marketplace.visualstudio.com/items?itemName=SSIS.MicrosoftDataToolsIntegrationServices) | | | Xtract IS | Xtract IS |

Note

When installing Visual Studio, select the Data Storage & Processing toolset.

The SQL Server runs on the runtime environment. On the runtime environment, the developed SSIS packages are deployed (SSISDB) and can be scheduled by means of SQL Server Agent.

In order to use Xtract IS Data Flow Tasks, the Xtract IS must be installed on all instances with a valid license. For more information, see [Licensing](../license/#install-the-xtract-is-license).

### Setup

`XtractISSetup.exe` is an industry standard setup. Execute the `XtractISSetup.exe` file and follow the instructions of the setup program. The Xtract IS Setup installs Xtract IS as a plug-in into SSIS.

For information on how to install a license, see [Licensing](../license/#install-the-xtract-is-license).

### Installation Directory Files

The list below shows several important files that are placed into the default directory `C:\Program Files\XtracIS` after installation:

| Filename | Description | | --- | --- | | ABAP directory | Directory with SAP function modules. Read the readme.txt within the directory for more information. See also [SAP Customization](../../setup-in-sap/). | | XtractISSetup.exe | Application for installing and registering the Xtract IS components within SSIS. | | XtractISConversionPreparer.exe | Tool, which prepares older version of SSIS packages (containing Xtract IS components) for migration to newer versions of SSIS. See also section [SSIS Migration](../ssis-migration/). | | XtractISVerisonInfo.exe | Starts the `XtractISVerisonInfo.exe` via the command line tool to display and read the currently installed version. | | XtractLicenseManager.exe | Application to manage and view licenses. | | Uninstall Xtract IS | Tool for uninstalling and removing Xtract IS with all its components from your machine. | | gac-uninstall.bat | **For debugging only**. Tool to clear the GAC of all Xtract IS related components in case of installation issues. | | Eula_XtractIS.rtf | Document containing the license agreement for the use of the software Xtract IS. | | XtractISLicense.json | License file with information about the server, the component and runtime. |

### Unattended Installation

The installation of Xtract IS can be initiated unattended without the GUI in a non-interactive way via the Windows Command Prompt.

- Execute the `XtractISSetup.exe` via command line and use the switch `--unattended`.
- Execute the `XtractLicenseManager.exe` (License Manager) via command line and pass the path to the license file as an argument.

`XtractISSetup.exe` and `XtractLicenseManager.exe` are Windows applications, meaning the Windows Command Prompt does not wait until the installation is complete. To wait until the installation is complete, use the [start](https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/start) command with the `/wait` switch.

Note

All switches are case sensitive.

```console
start /wait XtractISSetup.exe --unattended
start /wait XtractLicenseManager.exe "C:\Program Files\XtractIS\XtractISLicense.json"

```

### Version Number

When installing Xtract IS, the version of the product is displayed in the installation menu. To check the version of the installed product in Windows, open the Windows Settings and navigate to **Apps > Installed apps**.

### Xtract IS Components in Visual Studio

After a successful installation, the Xtract IS components are available in the SSIS Toolbox of a Data Flow Task in your Visual Studio Integration Services project.

The Xtract IS components may still be invisible due to version incompatibility issues.

The deployment target version of the SSIS project used must match the version of the installed SQL Server Data Tools (SSDT). If the versions do not match, the necessary Xtract IS extensions will be missing from the SQL Server installation (SSDT) and runtime errors may be displayed.

Change the Target Server version for deployment to display the Xtract IS components in the toolbox.

______________________________________________________________________

#### Related Links

- [Visual Studio + SQL Server Data Tools](https://visualstudio.microsoft.com/free-developer-offers/)
- [SQL Server Integration Services](https://marketplace.visualstudio.com/items?itemName=SSIS.MicrosoftDataToolsIntegrationServices)
- [Integration Services](https://learn.microsoft.com/en-us/sql/integration-services/install-windows/install-integration-services?view=sql-server-ver16#install-integration-services)

### About the Licensing Concept of Xtract IS

Xtract IS is licensed per Windows server on which SSIS packages are deployed and executed. The following graphic shows on which workstations the installation of Xtract IS is required to have a valid license.

The same license file can be used on the local workstations to develop the SSIS packages. A trial license is automatically installed with the installation of Xtract IS.\
A regular license is provided, after purchasing the product. The product license is bound to your company and a specific server name.

### Install the Xtract IS License

1. Execute the `XtractLicenseManager.exe` file in the installation directory of Xtract IS, e.g., `C:\Program Files\XtracIS`.\
   The license manager opens.
1. Click **[Install]**. The window "Install Xtract License" opens.
1. Locate and select the "XtractISLicense.json" file that is provided in the [Customer Portal - My Theobald Software](https://my.theobald-software.com).

Tip

To inspect your current license data, click the *Xtract IS Info* link located in each component.

### Maintenance

Contact the [sales department](mailto:sales@theobald-software.com) for information about available maintenance options.\
In case of technical difficulties, contact our [support](https://support.theobald-software.com/helpdesk).

______________________________________________________________________

#### Related Links

- [My Theobald Software - Portal for Customers and Partners](https://my.theobald-software.com/)

This page contains information about system requirements and compatible SAP systems for Xtract IS.

### Supported Visual Studio Versions

- Visual Studio 2015
- Visual Studio 2017
- Visual Studio 2019
- Visual Studio 2022

Note

To create SSIS packages in Visual Studio, SQL Server Data Tools (SSDT) are required. Make sure to use the SSDT that correlates to your SQL Server version. For more information, see [Microsoft Documentation: Download SQL Server Data Tools (SSDT) for Visual Studio](https://docs.microsoft.com/en-us/sql/ssdt/download-sql-server-data-tools-ssdt?view=sql-server-ver15).

### Supported SQL Server Versions

- SQL Server 2016
- SQL Server 2017
- SQL Server 2019
- SQL Server 2022

### Supported SQL Server Integration Services (SSIS)

- SQL Server Integration Services (SSIS) 2014 SP3 (until 2024-07-09)
- SQL Server Integration Services (SSIS) 2016 SP2 (until 2026-07-14)
- SQL Server Integration Services (SSIS) 2017 (until 2027-10-12)
- SQL Server Integration Services (SSIS) 2019 (until 2030-01-08)
- SQL Server Integration Services (SSIS) 2022

The version of the SQL Server Database used to read or write data can differ from the SQL Server Integration Services (SSIS) version, e.g., you can use SSIS version 2019 to write data to SQL Server Database version 2022.

### Supported SAP Systems and Releases

The following SAP Systems are supported:

- All SAP ABAP based systems that provide RFC connectivity and all SAP S/4 HANA (Cloud) systems that provide OData connectivity are supported.
- SAP ABAP systems on any database are supported (including HANA). The database used by the SAP system is irrelevant, because the integration occurs at SAP application server level.
- SAP systems running on Big Endian and Little Endian hardware are supported.
- SAP industry solutions like IS-U, IS-R, etc. are supported.
- SAP releases 4.6C and newer are supported.
- All operating systems are supported.

Examples

- [SAP S/4HANA](/xtract-is/knowledge-base/supported-sap-and-hana-versions)
- mySAP
- SAP Application Server ABAP
- Message Server
- Router
- Standalone Gateway
- SAP Business Suite 7 (CRM, SRM, SCM etc.)
- SAP Business All in One, CAR, APO, PI
- SAP BW 3.1 and later
- SAP BW/BI 7.x
- SAP ERP / ECC 5.0 / ECC 6.0 (including all EhPs)
- SAP R/3 Version 4.6C and later
- SAP BW/4HANA
- ...and more.

**Disclaimer**

While SAP versions that are no longer supported by SAP still work with Theobald Software products, they are excluded from the Theobald Software support service.

#### Not Supported SAP Systems

The following SAP Systems are not supported:

- SAP systems that don’t run on ABAP systems
- SAP systems that don't provide RFC connectivity.

Examples

- SAP S/4HANA Cloud Public Edition
- Business By Design
- Business One
- Business Objects
- Sybase
- Ariba
- Success Factors
- Concur

### HANA Database

You can use Operational Data Provisioning (ODP) to connect the SAP HANA database of an SAP ABAP source system. Communication is done via RFC. With the ODP context for SAP HANA (HANA) the following HANA View types are available for extracting:

- Analysis Views
- Calculation Views
- Associated Attribute Views

Direct access to a HANA database without an SAP ABAP source system running on the corresponding HANA database is not supported.

### Ports

The following ports between the Windows server that runs Xtract IS and the SAP server, must be open:

| SAP NetWeaver Component | Port (NN = System number of the SAP system) | | --- | --- | | SAP Application Server | 33<NN> | | SAP Message Server | 36<NN> | | Secure Network Communication (SNC) | 48<NN> | | SAP-Router | 3299 |

For more information, see [SAP Help: TCP/IP Ports of All SAP Products](https://help.sap.com/viewer/ports).

### Installation and Configuration on SAP

| Component | SAP Release | Requirements on the SAP System | | --- | --- | --- | | [Xtract Table](/xtract-is/documentation/table/) | Rel. > 4.6C | Installation of a custom function module [/THEO/READ_TABLE](/xtract-is/documentation/setup-in-sap/custom-function-module-for-table-extraction/#installation-of-theoread_table) is recommended. | | [Xtract BAPI](/xtract-is/documentation/bapi/) | Rel. > 4.6C | No requirements. Only remote-enabled functions are supported. | | [Xtract Query](/xtract-is/documentation/query/) | Rel. > 4.6C | No requirements. | | [Xtract Report](/xtract-is/documentation/report/) | Rel. > 4.6C | Installation of a custom function module [Z_XTRACT_IS_REMOTE_REPORT](/xtract-is/documentation/setup-in-sap/custom-function-module-for-reports/) is required. | | [Xtract BWCube](/xtract-is/documentation/bwcube/) | Rel. > BW 3.1 | No requirements. BEx Queries require external access ("Allow External Access to this Query" option must be active). | | [Xtract Hierarchy](/xtract-is/documentation/hierarchy/) | Rel. > BW 3.1 | No requirements. | | [Xtract ODP](/xtract-is/documentation/odp/) | SAP_BASIS >= 730, BW >= 7,3X | No requirements. | | [Xtract DeltaQ](/xtract-is/documentation/deltaq/) | Rel. > 4.6C | Customization required, see [Customization for DeltaQ](/xtract-is/documentation/setup-in-sap/customization-for-deltaq/). | | [Xtract OHS](/xtract-is/documentation/ohs/) | Rel. > BW 3.5 | Customization required, see [Customization for OHS in BW](/xtract-is/documentation/setup-in-sap/customization-for-ohs-in-bw/). | | [Xtract TableCDC](/xtract-is/documentation/table-cdc/) | SAP ECC 5.0 or above | Installation of a custom function modules is necessary, see [Table CDC Requirements](/xtract-is/documentation/table-cdc/#prerequisites). |

For Information about the installation of the custom function modules and the SAP customization, check the section [SAP Customization](/xtract-is/documentation/setup-in-sap/).

### SAP Licenses

Additional SAP licenses might be required for extracting data from SAP. Contact SAP to verify these requirements.

### Operating Systems

- Windows 11
- Windows Server 2022 (until 2031-10-14)
- Windows 10 (until 2025-10-14)
- Windows Server 2022
- Windows Server 2019 (until 2029-01-09)
- Windows Server 2016 (until 2027-01-12)

### Other Applications and Frameworks

.NET Framework 4.7.2 or higher, see [Download .NET Framework from the Microsoft website](https://support.microsoft.com/en-us/help/4054530/microsoft-net-framework-4-7-2-offline-installer-for-windows).

### Hardware

The following requirements apply to the hardware:

| Hardware | Minimum Requirement | | --- | --- | | Main Memory | 4 GB. Depending on data volume, more memory may be required | | Disk Space | min. 50 MB total for Installation | | 32/64-Bit Environment | both 32-Bit and 64-Bit operating systems are supported |

This page contains information on how to migrate SSIS packages with Xtract IS components from a lower SQL Server/SSIS version to a higher version.

- When migrating from SQL Server 2012 or lower to SQL Server 2019, follow the instructions in [Migrate from SQL Server 2008/2012 to SQL Server 2019](#migrate-from-sql-server-20082012-to-sql-server-2019).
- When migrating from SQL Server 2016 or higher to SQL Server 2019, follow the instructions in [Migrate from SQL Server 2016 to SQL Server 2019](#migrate-from-sql-server-20142016-to-sql-server-2019).

### Install the Latest Version of Xtract IS

Install the latest version of Xtract IS on your SSIS server and any development environment (Visual Studio/SSDT).

### Migrate from SQL Server 2008/2012 to SQL Server 2019

A migration from SQL Server 2012 to SQL Server 2019 also requires a migration of SSIS packages.

The SSIS packages are converted to run on SQL Server 2016 using the *Xtract IS Conversion Preparer* before they can be migrated to SQL Server 2019. The *Xtract IS Conversion Preparer* is a tool that prepares SSIS packages created for older SQL Server versions to migrate to newer SQL Server versions.

The *XtractISConversionPreparer.exe* is located in the installation directory of Xtract IS, e.g., `C:\Program Files\XtracIS\XtractISConversionPreparer.exe`.

1. Run the *XtractISConversionPreparer.exe*. The window "XtractIS Conversion Preparer" opens.

1. Click **[Add file(s)]** and select the packages that need to be prepared for conversion. If there is a package in the debug folder, it is automatically be included.

1. Select the SQL Server version, for which you want to prepare the packages from the drop-down list.\
   For migration to SQL Server 2019, select *SSIS 2016* from the pull-down menu. To migrate to SQL Server 2019 the extra step via SQL Server 2016 is mandatory. During conversion, the tool creates a backup of your SSIS package.

   Recommendation

   Manually create a backup copy prior to conversion.

1. Click **[Prepare]**. The conversion process is started.

1. To migrate from SQL Server 2016 to SQL Server 2019, follow the instructions in [Migrate from SQL Server 2014/2016 to SQL Server 2019](#migrate-from-sql-server-20142016-to-sql-server-2019).

Note

The password encryption of the SSIS packages set by the [ProtectionLevel property](https://docs.microsoft.com/en-us/sql/integration-services/security/access-control-for-sensitive-data-in-packages?view=sql-server-ver15#set_protection) must be deactivated or changed for the conversion of the SSIS packages.

### Migrate from SQL Server 2014/2016 to SQL Server 2019

Note

SSIS packages created by an SQL Server Data Tools (SSDT) / Visual Studio (VS) version from **before** 2015 must be migrated to SQL Server 2016 before it can be migrated to SQL Server 2019. To migrate correctly, select SQL Server 2016 as the target version, then save and reopen the project.

1. Open a new Solution in Visual Studio.
1. Open the project properties and select an SQL server as "Deployment Target Version":
   - If your SSIS packages have been created by an SSDT/VS version from **after** 2015 for SQL Server 2016, continue with step 6.
   - If your SSIS packages have been created by an SSTD/VS version from **before** 2015 for SQL Server 2016, select the SQL Server on which your packages have run until now (SQL Server 2014 or SQL Server 2016).
   - If the SSIS packages have been prepared by the *Xtract IS Conversion Preparer* from [Migrating from SQL Server 2008/2012 to SQL Server 2019](#migrate-from-sql-server-20082012-to-sql-server-2019), select SQL Server 2016.
1. Save the project.
1. Add the SSIS packages to the project.
1. Save the project again.
1. Change the "Deployment Target Version" to SQL Server 2019.
1. If Xtract IS components are not displayed correctly in the Data Flow Task, close the Solution and reopen it. If the Xtract IS components are still not displayed correctly, close and restart Visual Studio.

Saving the project before and after the import of SSIS packages is necessary for the migration to work correctly.

This page shows how to backup and update an already installed Xtract IS version.

### Preparations

Recommendations:

- Use a working test environment with a valid license and maintenance. The test environment is a copy of the current production environment.
- Update the software regularly, see [recommended update interval](../../../changelog/#recommended-update-interval).
- Create a [backup](#create-a-backup) of the current installation.

Before updating, check the [Changelog](../../../changelog/) for breaking changes:

- Make any necessary preparations and changes as described in the Release Notes.
- Note the current product version so that you can switch back to the same version in the event of an error.

Tip

Subscribe to our [technical newsletter](https://theobald-software.com/en/newsletter/) that informs you about new software releases.

### Create a Backup

Copy all SSIS packages that use Xtract IS components. It is recommended to create backups at regular intervals to switch back to the previous version, if necessary.

### Update a Test Environment

A newer version can be installed over the old version. It is not necessary to uninstall the previous version. New versions are available in the [Theobald Software Customer Portal](https://my.theobald-software.com).

During the installation, the setup program checks whether other processes are running in the background that are related to the software being installed. If this is the case, a message with various options is displayed:

| Option | Description | | --- | --- | | **Check Again** | Close the affected programs and click **[Check Again]** to continue the installation. | | **Kill Process** | Kill the affected process and continue with the installation. | | **Ignore** | Ignore the message, but the installation may be canceled due to the locking of certain files. | | **Quit Install** | Cancel the installation and resume it at another time. |

#### Upgrade with Breaking Changes

The setup checks if an older version of Xtract IS is already installed on the machine. If an older version is found, the setup displays a list of all (breaking) changes that were released between the old version and the current version. If there are breaking changes, make sure to follow the instructions in the release notes of the breaking changes to ensure a smooth update.

#### Test the Update

Install the software update on the test environment and test the new version carefully.

1. Test all your existing SSIS packages.
1. After successful testing, install the current version on the production environment.
1. In the case of an error, create a ticket in the [Support Portal](https://support.theobald-software.com).\
   Register if you do not have a customer account yet. Use your backup until a solution is provided.

### Update a Production Environment

After successfully testing the update on the test environment, install the update on the production environment. Make sure to create a backup beforehand and conduct all the necessary preparations and changes.

______________________________________________________________________

#### Related Links

- [Customer Portal](https://my.theobald-software.com)
- [Changelog](../../../changelog/)
- [Support Portal](https://support.theobald-software.com)

This section covers [user rights](sap-authority-objects/) and customization topics for the SAP Basis.\
For information on [supported SAP systems](../setup/requirements/#supported-sap-systems-and-releases) and other IT topics, see [Setup](../setup/).

### Custom Function Modules

The following components require the installation of a custom function module:

| Component | Custom Function Module | Installation | | --- | --- | --- | | Xtract Report | [Z_XTRACT_IS_REMOTE_REPORT](custom-function-module-for-reports/) | Required | | Xtract Table | [/THEO/READ_TABLE](custom-function-module-for-table-extraction/) | Recommended | | Xtract TableCDC | [/THEO/READ_TABLE](custom-function-module-for-table-extraction/) and [THEO_CDC](custom-function-module-for-tablecdc/) | Required |

Theobald Software distributes custom function modules as part of Xtract IS. The custom function modules can be installed in SAP using transport requests. The transport requests are available in the installation directory of Xtract IS, e.g., `C:\Program Files\XtracIS\ABAP\`.

For information on how to use transport request, see [Import an SAP Transport Request](/xtract-is/knowledge-base/import-an-sap-transport-request).

Note

All objects that come with any of the transport requests, can be deleted by importing the `Z_THEO_READ_TABLE-deletion_request.zip` transport request.

### Customizations in SAP

The following components require a customization in the SAP system:

- Xtract DeltaQ, see [Customization for DeltaQ](customization-for-deltaq/).
- Xtract OHS, see [Customization for OHS in BW](customization-for-ohs-in-bw/).

### Popular Topics

- [SAP User Rights](sap-authority-objects/)
- [Download SAP Roles](sap-authority-objects/#sap-authorization-profiles)
- [Function Module for Table Extractions](custom-function-module-for-table-extraction/)
- [Function Module for TableCDC Extractions](custom-function-module-for-tablecdc/)
- [Function Module for Report Extractions](custom-function-module-for-reports/)
- [Customization for DeltaQ](customization-for-deltaq/)
- [Customization for OHS](customization-for-ohs-in-bw/)

The extraction of reports requires the installation of a custom function module in your SAP system.\
If you cannot install the function module, turn to your SAP Basis team for help.

Note

As of version 1.2 of the custom function module `Z_XTRACT_IS_REMOTE_REPORT` access to reports must be explicitly granted, see [Authority Objects for Z_XTRACT_IS_REMOTE_REPORT](#authority-objects-for-z_xtract_is_remote_report).

### Installation of Z_XTRACT_IS_REMOTE_REPORT

Install the function module using the transport request *Z_XTRACT_IS_REMOTE_REPORT-transport.zip*.\
The transport request is located in the following installation directory: `C:\Program Files\[XtractProduct]\ABAP\Report\Z_XTRACT_IS_REMOTE_REPORT-transport.zip`.

The transport request needs to be imported into SAP by your SAP Basis team.

### Authority Objects for Z_XTRACT_IS_REMOTE_REPORT

As of Z_XTRACT_IS_REMOTE_REPORT version 1.2 access to reports must be explicitly granted.\
There are 2 ways to verify that the SAP user is allowed to extract a report:

- Use authentication groups, see [Authorizing Access to Reports via Authorization Groups](../../../knowledge-base/authorize-access-to-specific-reports/).
- Use the custom authorization object Z_TS_PROG.

______________________________________________________________________

#### Related Links

- [Knowledge Base: Import an SAP Transport Request](../../../knowledge-base/import-an-sap-transport-request/)
- [Knowledge Base: Authorizing Access to Specific Reports](../../../knowledge-base/authorize-access-to-specific-reports/)
- [SAP Help: Create Function Group](https://help.sap.com/viewer/bd833c8355f34e96a6e83096b38bf192/7.52.0/en-US/d1801ef5454211d189710000e8322d00.html)

SAP customization for the Xtract Table component is optional. The installation of the custom function module `/THEO/READ_TABLE` is recommended to improve performance and to bypass restrictions of the SAP standard function module RFC_READ_TABLE.

### RFC_READ_TABLE Restrictions

Especially with older SAP releases you may encounter a few restrictions when using the SAP standard function module (RFC_READ_TABLE) for table extraction:

- The overall width of all columns to be extracted must not exceed 512 bytes.
- It is not possible to extract data from tables that contain one or more columns of the data type f (FLTP, floating point), DEC (decimal, e.g. for percentage) or x (RAW, LRAW).
- Poor extraction performance with larger tables. Can cause also duplicates.
- Depending on the SAP version there may be other restrictions.

When facing restrictions, install the Theobald Software custom function module [/THEO/READ_TABLE](./#installation-of-theoread_table) on your SAP system.

Warning

**Converting issues**\
Error while converting value '\*.0' of row 1530, column 3.\
The SAP standard module *RFC_READ_TABLE* for table extraction can only extract the ABAP data type DEC to a limited extent. This leads to the mentioned example error during extraction. Use the function module */THEO/READ_TABLE*.

### Installation of /THEO/READ_TABLE

An SAP transport request for the installation of the function module is provided in the installation directory of Xtract IS: `C:\Program Files\XtracIS\ABAP\`.\
Transport requests are imported into SAP by your SAP Basis team. For more information, see [Knowledge Base: Import an SAP Transport Request](/xtract-is/knowledge-base/import-an-sap-transport-request/).

Note

Take a look at the README.pdf in the installation directory (e.g.,`C:\Program Files\XtracIS\ABAP\README.pdf`) before installing any custom function modules.

It is recommended to install the latest custom function module THEO/READ_TABLE:

| Transport Request | Compatible SAP Systems | | --- | --- | | `THEO_READ_TABLE_740SP05.zip` | ABAP version 7.40 SP05 and higher | | `THEO_READ_TABLE_710.zip` | ABAP version 7.10 to 7.40 SP04 | | `THEO_READ_TABLE_640.zip` | ABAP versions from 6.40 until 7.03 | | `THEO_READ_TABLE_46C.zip` | ABAP versions from 4.6C |

When importing the transport requests on older SAP releases a syntax error may occur. Contact [Theobald Support](https://support.theobald-software.com) and send the dedicated error message text.

Warning

**Generating Short Dumps.**\
Testing the function modules on an SAP system is not possible. Function modules /THEO/READ_TABLE and Z_THEO_READ_TABLE can only be called by Theobald Software products due to the callback function of the module. Avoid calling function modules /THEO/READ_TABLE and Z_THEO_READ_TABLE directly from an SAP system.

### Supported Features

| Supported Features by THEO_READ_TABLE | \_740SP05 | \_710 | \_640 | 46C | | --- | --- | --- | --- | --- | | WHERE Clause | | | | | | HAVING Clause | | | | | | INNER JOIN | | | | | | LEFT OUTER JOIN | | | | | | Conversion exits | | | | | | Aggregate functions | | | | | | SQL expressions (subqueries) | | | | | | Background jobs | | | | |

______________________________________________________________________

#### Related Links

- [Knowledge Base: Import an SAP Transport Request](/xtract-is/knowledge-base/import-an-sap-transport-request/)
- [Xtract Table Component](../../table/)

The Xtract TableCDC component requires the installation of the custom function modules /THEO/CDC and /THEO/READ_TABLE in your SAP system. If you cannot install the function modules, turn to your SAP Basis team for help.

### Installation of THEO_CDC_ECC or THEO_CDC_S4

All transport requests for the custom function groups are provided in the installation directory of Xtract IS, e.g., `C:\Program Files\XtracIS`. Make sure to install the correct transport request for your SAP system:

| SAP System | Function Group | Directory | | --- | --- | --- | | SAP ECC Systems | THEO_CDC_ECC | *C:\\Program Files\\XtracIS\\ABAP\\TableCDC\\THEO_CDC_ECC.zip* | | SAP S/4 Systems with SAP_BASIS Version < 7.55 | THEO_CDC_S4 | *C:\\Program Files\\XtracIS\\ABAP\\TableCDC\\THEO_CDC_S4.zip* | | SAP S/4 Systems with SAP_BASIS Version ≥ 7.55 | THEO_CDC_S4_755 | *C:\\Program Files\\XtracIS\\ABAP\\TableCDC\\THEO_CDC_S4_755.zip* |

The transport request needs to be imported into SAP by your SAP Basis team.\
The function groups /THEO/CDC_ECC and /THEO/CDC_S4 both contain the following function modules:

| Function Modules | Description | | --- | --- | | /THEO/CLEAR_LOGTAB | Clear entries of log tab up to a given sequence number | | /THEO/COUNT_LOGTAB_ENTRIES | Count log table entries | | /THEO/CREATE_LOG_TABLE | Function module for creating log tables | | /THEO/CREATE_TRIGGERS | Function module for creating DB triggers for CDC | | /THEO/DELETE_LOG_TABLE | Function module for deleting log tables | | /THEO/DELETE_TRIGGERS | Function module for deleting DB triggers for CDC | | /THEO/GET_DB | Get database system identifier | | /THEO/GET_INFO | Get package information | | /THEO/GET_TRIGGERS | Function module to retrieve triggers |

Note

Take a look at the README.pdf in the installation directory (e.g.,`C:\Program Files\XtracIS\ABAP\README.pdf`) before installing any custom function modules.

### Installation of /THEO/READ_TABLE

Install the custom function module /THEO/READ_TABLE, see [Function Module for Tables](../custom-function-module-for-table-extraction/#installation-of-theoread_table).

Note

Take a look at the README.pdf in the installation directory (e.g.,`C:\Program Files\XtracIS\ABAP\README.pdf`) before installing any custom function modules.

______________________________________________________________________

#### Related Links

- [Knowledge Base: Import an SAP Transport Request](../../../knowledge-base/import-an-sap-transport-request/)
- [Knowledge Base: Delta Mechanism of Table CDC](../../../knowledge-base/table-cdc-mechanism/)
- [Table CDC - Prerequisites](../../table-cdc/#prerequisites)

Before using the Xtract DeltaQ component, an RFC destination has to be created in the SAP system. This page shows how to create and configure the RFC destination.

Follow the steps on this page in the following order:

1. [Create an RFC Destination of Type R/3](#create-an-rfc-destination-of-type-r3)
1. [Execute the Function Module RSAP_BIW_CONNECT_40](#execute-the-function-module-rsap_biw_connect_40)
1. [Delete the RFC Destination](#delete-the-rfc-destination)
1. [Create an RFC Destination of Type T](#create-an-rfc-destination-of-type-t)
1. [Execute the Function Module RSAS_RBWBCRL_STORE](#execute-the-function-module-rsas_rbwbcrl_store)
1. [Register the RFC Server](#register-the-rfc-server)
1. [qRFC Monitor (QOUT Scheduler)](#qrfc-monitor-qout-scheduler)

### Create an RFC Destination of Type R/3

1. Go to SAP transaction *SM59* to create an RFC destination of type *R/3*.
1. Enter a name in the field **RFC Destination**, e.g., *XTRACT01*. The name of the RFC Destination is needed again for later configuration.

### Execute the Function Module RSAP_BIW_CONNECT_40

Note

Executing the Function Module RSAP_BIW_CONNECT_40 can be performed on modifiable that the SAP systems.

The function module RSAP_BIW_CONNECT_40 creates a connection to a Business Information Warehouse. Go to SAP transaction *SE37* and execute the function module RSAP_BIW_CONNECT_40 with the following import parameters:

| Import Parameter | Example Value | Comment | | --- | --- | --- | | I_LANGU | EN | | | I_SLOGSYS | T90CLNT090 | Logical name of the source system. If you do not know this, look in table **T000** for the respective client (LOGSYS field). | | I_LOGSYS | XTRACT01 | | | I_STEXT | Xtract Destination | | | I_BASIC_IDOC | ZXTIDOC | Unique name of the RFC destinations. | | I_TSPREFIX | XT | Unique name of the RFC destinations. | | I_SAPRL | 700 | Automatically set by the SAP system. | | I_RESTORE | X | |

### Delete the RFC Destination

Go to SAP transaction *SM59* and delete the RFC destination of type *R/3* via **Detailed View > Menu > Delete**.

### Create an RFC Destination of Type T

1. Go to SAP transaction *SM59* to create an RFC destination of type *T=TCP/IP* that has the same name as the deleted RFC destination of type *R/3*.

1. Select the activation type **Registered Server Program**.

1. Set the following parameters:

   | Tab | Field | Example Value | Comment | | --- | --- | --- | --- | | Technical Settings | RFC Destination | XTRACT01 | | | Technical Settings | Connection Type | TCP/IP Connection | | | Technical Settings | Description 1 | Xtract Destination | | | Technical Settings | Activation Type | Registered Server Program | | | Technical Settings | Program ID | XTRACT01 | | | Technical Settings | Gateway Host | sap-erp-as05.example.com | Name or IP address of the SAP system. | | Technical Settings | Gateway service | sapgw00 | In the form sapgwnn, where nn is the SAP instance number (between *00* and *99*). | | Special Options | Serializer | Classic Serializer | Select the "Classic serializer". |

### Execute the Function Module RSAS_RBWBCRL_STORE

Go to SAP transaction *SE37* and execute the function module **RSAS_RBWBCRL_STORE** to activate the target system.

| Import Parameter | Example Value | Comment | | --- | --- | --- | | I_RBWBCRL | 700 | The current SAP system release number | | I_RLOGSYS | XTRACT01 | |

### Register the RFC Server

Note

Registering an RFC Server in SAP Releases is only necessary for SAP kernel version 720 and higher.

1. [Set the profile parameter *gw/acl_mode*](../../../knowledge-base/register-rfc-server-in-sap-releases-in-kernel-release-720-and-higher/#change-the-profile-parameter-gwacl_mode) to 0 (default is 1).
1. [Add the RFC Destination to the whitelist](../../../knowledge-base/register-rfc-server-in-sap-releases-in-kernel-release-720-and-higher/#define-a-whitelist-of-programs-at-the-sap-gateway) of programs that can register at the SAP Gateway.

For more information, refer to the [Knowledge Base Article: Register an RFC Server in SAP with Kernel Release 720 and higher](../../../knowledge-base/register-rfc-server-in-sap-releases-in-kernel-release-720-and-higher/).

### qRFC Monitor (QOUT Scheduler)

1. Go to SAP transaction *SMQS*.
1. Select the created RFC destination, e.g., *XTRACT01*.
1. Click **Register without activation** and set the parameter **Max.Verb.** to 10. Increase this value in case of parallel execution of several Xtract DeltaQ components on the same RFC destination.

Note

For DeltaQ customizing errors, refer to the [DeltaQ Troubleshooting](../../../troubleshooting/#deltaq-troubleshooting).

Before using the Xtract OHS component, an RFC destination has to be created in the SAP system. This page shows how to set up the RFC destination and SAP process chain.

Depending on the SAP release, Xtract OHS can be used as follows:

| SAP Release | SAP Object | Details | | --- | --- | --- | | BI < 7.0 | InfoSpoke | [InfoSpokes and Process Chains (BI < 7.0)](#infospokes-and-process-chains-bi-70) | | BI >= 7.0 | OHS-Destination | [OHS Destinations and Data Transfer Processes (BI >= 7.0)](#ohs-destinations-and-data-transfer-processes-bi-70) |

### Create an RFC destination

1. Go to SAP transaction *SM59* to create an RFC destination of type *TCP/IP* .
1. Select the activation type **Registered Server Program** .
1. Enter a name in the field **Program ID** , e.g., *XTRACT01*. The name of the Program ID is needed again for later configuration.

### InfoSpokes and Process Chains (BI < 7.0)

1. Go to SAP transaction *RSA1* to open the Administrator Workbench.
1. Navigate to **Tools > Open Hub Service > Infospoke** to create an InfoSpoke.
1. Store data source in the InfoSpoke, e.g. an ODS object or a cube.
1. Define an InfoSpoke for data extraction into an external system in the *Destination* tab.
1. Specify the RFC destination created in advance.
1. Fill in the columns to be transferred and, if necessary, a selection.
1. Save and activate the InfoSpoke.
1. Generate a process chain with transaction *RSA1* in the menu **Edit -> Process Chains**.
1. Activate **Start by API** in the variant for the process chain.
1. Insert the created InfoSpoke into the process chain.
1. Save and activate the process chain.

### OHS Destinations and Data Transfer Processes (BI >= 7.0)

1. Go to SAP transaction *RSA1* to open the Administrator Workbench.
1. Navigate to **Open Hub Destination** in the left tree and right-click on an InfoArea. Select **Create Open Hub Destination** in the context menu.
1. In the edit mode of the destination, set the *Destination Type* to **Third Party Tool** and select your RFC destination.
1. Save and activate the OHS destination.
1. Click on the newly created OHS destination in the middle tree of the InfoAreas and select **Create Data Transfer Process** to create a new data transfer process (DTP).
1. Save and activate the DTP. If necessary, change the extraction type from *Delta* to *Full* before activating) The arrangement of Destination, Transformations and DTP in the OHS tree is done afterwards.
1. Create a process chain that contains the new DTP.
1. Make sure that the planning option **Start Using Meta Chain or API** is selected in the process chain start variant.
1. Activate the process chain.

______________________________________________________________________

#### Related Links

- [SAP Note 2437637](https://launchpad.support.sap.com/#/notes/2437637)
- [SAP Note 1983356](https://launchpad.support.sap.com/#/notes/1983356)

Before using the Xtract DeltaQ component, an RFC destination has to be created in the SAP system. This page shows how to create and configure the RFC destination.

Follow the steps on this page in the following order:

1. [Create an RFC Destination of Type R/3](#create-an-rfc-destination-of-type-r3)
1. [Execute the Function Module RSAP_BIW_CONNECT_40](#execute-the-function-module-rsap_biw_connect_40)
1. [Delete the RFC Destination](#delete-the-rfc-destination)
1. [Create an RFC Destination of Type T](#create-an-rfc-destination-of-type-t)
1. [Execute the Function Module RSAS_RBWBCRL_STORE](#execute-the-function-module-rsas_rbwbcrl_store)
1. [Register the RFC Server](#register-the-rfc-server)
1. [qRFC Monitor (QOUT Scheduler)](#qrfc-monitor-qout-scheduler)

### Create an RFC Destination of Type R/3

1. Go to SAP transaction *SM59* to create an RFC destination of type *R/3*.
1. Enter a name in the field **RFC Destination**, e.g., *XTRACT01*. The name of the RFC Destination is needed again for later configuration.

### Execute the Function Module RSAP_BIW_CONNECT_40

Note

Executing the Function Module RSAP_BIW_CONNECT_40 can be performed on modifiable that the SAP systems.

The function module RSAP_BIW_CONNECT_40 creates a connection to a Business Information Warehouse. Go to SAP transaction *SE37* and execute the function module RSAP_BIW_CONNECT_40 with the following import parameters:

| Import Parameter | Example Value | Comment | | --- | --- | --- | | I_LANGU | EN | | | I_SLOGSYS | T90CLNT090 | Logical name of the source system. If you do not know this, look in table **T000** for the respective client (LOGSYS field). | | I_LOGSYS | XTRACT01 | | | I_STEXT | Xtract Destination | | | I_BASIC_IDOC | ZXTIDOC | Unique name of the RFC destinations. | | I_TSPREFIX | XT | Unique name of the RFC destinations. | | I_SAPRL | 700 | Automatically set by the SAP system. | | I_RESTORE | X | |

### Delete the RFC Destination

Go to SAP transaction *SM59* and delete the RFC destination of type *R/3* via **Detailed View > Menu > Delete**.

### Create an RFC Destination of Type T

1. Go to SAP transaction *SM59* to create an RFC destination of type *T=TCP/IP* that has the same name as the deleted RFC destination of type *R/3*.

1. Select the activation type **Registered Server Program**.

1. Set the following parameters:

   | Tab | Field | Example Value | Comment | | --- | --- | --- | --- | | Technical Settings | RFC Destination | XTRACT01 | | | Technical Settings | Connection Type | TCP/IP Connection | | | Technical Settings | Description 1 | Xtract Destination | | | Technical Settings | Activation Type | Registered Server Program | | | Technical Settings | Program ID | XTRACT01 | | | Technical Settings | Gateway Host | sap-erp-as05.example.com | Name or IP address of the SAP system. | | Technical Settings | Gateway service | sapgw00 | In the form sapgwnn, where nn is the SAP instance number (between *00* and *99*). | | Special Options | Serializer | Classic Serializer | Select the "Classic serializer". |

### Execute the Function Module RSAS_RBWBCRL_STORE

Go to SAP transaction *SE37* and execute the function module **RSAS_RBWBCRL_STORE** to activate the target system.

| Import Parameter | Example Value | Comment | | --- | --- | --- | | I_RBWBCRL | 700 | The current SAP system release number | | I_RLOGSYS | XTRACT01 | |

### Register the RFC Server

Note

Registering an RFC Server in SAP Releases is only necessary for SAP kernel version 720 and higher.

1. [Set the profile parameter *gw/acl_mode*](../../../knowledge-base/register-rfc-server-in-sap-releases-in-kernel-release-720-and-higher/#change-the-profile-parameter-gwacl_mode) to 0 (default is 1).
1. [Add the RFC Destination to the whitelist](../../../knowledge-base/register-rfc-server-in-sap-releases-in-kernel-release-720-and-higher/#define-a-whitelist-of-programs-at-the-sap-gateway) of programs that can register at the SAP Gateway.

For more information, refer to the [Knowledge Base Article: Register an RFC Server in SAP with Kernel Release 720 and higher](../../../knowledge-base/register-rfc-server-in-sap-releases-in-kernel-release-720-and-higher/).

### qRFC Monitor (QOUT Scheduler)

1. Go to SAP transaction *SMQS*.
1. Select the created RFC destination, e.g., *XTRACT01*.
1. Click **Register without activation** and set the parameter **Max.Verb.** to 10. Increase this value in case of parallel execution of several Xtract DeltaQ components on the same RFC destination.

Note

For DeltaQ customizing errors, refer to the [DeltaQ Troubleshooting](../../../troubleshooting/#deltaq-troubleshooting).

To use Xtract IS you need an SAP connection user with sufficient authorization in SAP. Authorizations are assigned via authorization objects in SAP. Redirect this page to your SAP Basis administrators to get the relevant authorization objects for your SAP connection user.

The authorizations in the section [General authorization objects](#general-authorization-objects) are required to establish an SAP connection with the SAP application server. The required authorizations for each component are listed in their respective section.

### SAP Authorization Profiles

Theobald Software collected and combined the necessary authorizations for all components into SAP roles. You can download the SAP profiles and upload them to your SAP system:

| Component | SAP Role File | | --- | --- | | [General Authorization Objects](#general-authorization-objects) | [ZXTGENERAL.SAP](/xtract-is/assets/files/sap_roles/ZXTGENERAL.SAP) | | [BAPI](#bapi) | [ZXTBAPI.SAP](/xtract-is/assets/files/sap_roles/ZXTBAPI.SAP) | | [BW Cube](#bw-cube-bw-query) | [ZXTBWCUBE.SAP](/xtract-is/assets/files/sap_roles/ZXTBWCUBE.SAP) | | [BW Hierarchy](#bw-hierarchy) | [ZXTBWHIERARCHY.SAP](/xtract-is/assets/files/sap_roles/ZXTBWHIERARCHY.SAP) | | [ODP (Operational Data Provisioning)](#odp) | [ZXTODP.SAP](/xtract-is/assets/files/sap_roles/ZXTODP.SAP) | | [OHS (Open Hub Services)](#ohs) | [ZXTOHS.SAP](/xtract-is/assets/files/sap_roles/ZXTOHS.SAP) | | [Query](#query) | [ZXTQUERY.SAP](/xtract-is/assets/files/sap_roles/ZXTQUERY.SAP) | | [Report](#report) | [ZXREPORT.SAP](/xtract-is/assets/files/sap_roles/ZXREPORT.SAP) | | [Table](#table) | [ZXTABLE.SAP](/xtract-is/assets/files/sap_roles/ZXTABLE.SAP) | | [Table CDC](#table-cdc) | [ZXTABLECDC.SAP](/xtract-is/assets/files/sap_roles/ZXTABLECDC.SAP) | | [DeltaQ](#deltaq) | [ZXTDELTAQ.SAP](/xtract-is/assets//files/sap_roles/ZXTDELTAQ.SAP), [DELTAQ_CUSTOMIZING_CHECK](/xtract-is/assets/files/sap_roles/DELTAQ_CUSTOMIZING_CHECK.SAP) |

Note

If you still get an authorization error, ask SAP Basis to record an ST01-/ or SU53-authorization trace in SAP. This trace shows which authorizations objects are missing.

### General Authorization Objects

The following authorization objects are required to establish a connection to SAP.

Necessary SAP authorizations

```text
S_RFC           RFC_TYPE=FUGR; RFC_NAME=SYST; ACTVT=16
S_RFC           RFC_TYPE=FUGR; RFC_NAME=SRFC; ACTVT=16
S_RFC           RFC_TYPE=FUGR; RFC_NAME=RFC1; ACTVT=16
S_RFC           RFC_TYPE=FUGR; RFC_NAME=OCS_CRM; ACTVT=16

```

[Download SAP profile for general authorization](/xtract-is/assets/files/sap_roles/ZXTGENERAL.SAP)

### BAPI

Necessary SAP authorizations

```text
S_RFC            ACTVT=16; RFC_TYPE=FUGR; RFC_NAME=DDIF_FIELDINFO_GET, SDIFRUNTIME     

```

[Download SAP profile for BAPI Extractions](/xtract-is/assets/files/sap_roles/ZXTBAPI.SAP)

### BW Cube / BW Query

Authorizations for the underlying Queries, Cubes, InfoAreas and analysis need to be assigned via:

- `S_RS_COMP`
- `S_RS_COMP1`
- `S_RS_AUTH`

Necessary SAP authorizations

```text
S_RFC            RFC_TYPE=FUGR; RFC_NAME=RSOB; ACTVT=16
S_RFC            RFC_TYPE=FUGR; RFC_NAME=RRX1; ACTVT=16
S_TABU_NAM       ACTVT=03; TABLE=RSRREPDIR
S_TABU_NAM       ACTVT=03; TABLE=RSZGLOBV
S_TABU_NAM       ACTVT=03; TABLE=RSADMINC

```

Necessary SAP authorizations

```text
S_RFC            RFC_TYPE=FUGR;RFC_NAME=SYST;ACTVT=16;type=RF;name=RFCPING;
S_RFC            RFC_TYPE=FUGR; RFC_NAME=RSOBJS_RFC_INTERFACE; ACTVT=16; type=RF;name=RSOBJS_GET_NODES;
S_RFC            RFC_TYPE=FUGR;RFC_NAME=RSAO_CORE;ACTVT=16;type=RF;name=RSAO_BICS_SESSION_INITIALIZE
S_RFC            RFC_TYPE=FUGR;RFC_NAME=RSBOLAP_BICS_CONSUMER;ACTVT=16;type=RF;name=BICS_CONS_CREATE
S_RFC            RFC_TYPE=FUGR;RFC_NAME=RSBOLAP_BICS_PROVIDER;ACTVT=16;type=RF;name=BICS_PROV_OPEN;
S_RFC            RFC_TYPE=FUGR;RFC_NAME=RSBOLAP_BICS_PROVIDER_VAR;ACTVT=16;type=RF;name=BICS_PROV_VA
S_ADMI_FCD       S_ADMI_FCD=PADM;

```

Necessary SAP authorizations

```text
S_TABU_NAM       ACTVT=03; TABLE=DD03L

```

Alternatively, you can assign the SAP role template `S_RS_RREPU`.

[Download SAP profile for BW Cube / BW Query](/xtract-is/assets/files/sap_roles/ZXTBWCUBE.SAP)

### BW Hierarchy

Necessary SAP authorizations

```text
S_RFC          RFC_TYPE=FUNC, FUGR; RFC_NAME=RSNDI_SHIE; ACTVT=16
S_RFC          RFC_TYPE=FUNC, FUGR; RFC_NAME=BAPI_IOBJ_GETDETAIL; ACTVT=16
S_RFC          RFC_TYPE=FUNC, FUGR; RFC_NAME=DDIF_FIELDINFO_GET; ACTVT=16
S_RFC          RFC_TYPE=FUNC, FUGR; RFC_NAME=RFC1; ACTVT=16
S_RFC          RFC_TYPE=FUNC, FUGR; RFC_NAME=RFC_GET_FUNCTION_INTERFACE; ACTVT=16
S_RFC          RFC_TYPE=FUNC, FUGR; RFC_NAME=RFC_READ_TABLE; ACTVT=16
S_RFC          RFC_TYPE=FUNC, FUGR; RFC_NAME=RSBAPI_IOBJ; ACTVT=16 
S_RFC          RFC_TYPE=FUNC, FUGR; RFC_NAME=RSNDI_SHIE; ACTVT=16
S_RFC          RFC_TYPE=FUNC, FUGR; RFC_NAME=SDIFRUNTIME; ACTVT=16
S_RFC          RFC_TYPE=FUNC, FUGR; RFC_NAME=SDTX; ACTVT=16
S_RFC          RFC_TYPE=FUNC, FUGR; RFC_NAME=SYST; ACTVT=16
S_RS_ADMWB     RSADMWBOBJ=INFOOBJECT; ACTVT=03
S_TABU_DIS     ACTVT=03; DICBERCLS=BWC
S_TABU_DIS     ACTVT=03; DICBERCLS=BWG
S_TABU_NAM     ACTVT=03; TABLE=/BIC/*
S_TABU_NAM     ACTVT=03; TABLE=ENLFDIR
S_TABU_NAM     ACTVT=03; TABLE=RSHIEDIR

```

[Download SAP profile for BW Hierarchy](/xtract-is/assets/files/sap_roles/ZXTBWHIERARCHY.SAP)

### ODP

For a complete and detailed list of authorization objects refer to [SAP Note 2855052](https://launchpad.support.sap.com/#/notes/2855052) - Authorizations required for ODP Data Replication API 2.0.

Necessary SAP authorizations

```text
S_TABU_NAM       ACTVT=03; TABLE=TCURX

```

[Download SAP profile for ODP](/xtract-is/assets/files/sap_roles/ZXTODP.SAP)

### OHS

Alternatively, you can assign the SAP role template `S_BI-WHM_RFC`.

Necessary SAP authorizations

```text
S_RFC      RFC_TYPE=FUGR; RFC_NAME=RSB3RD; ACTVT=16
S_RFC      RFC_TYPE=FUGR; RFC_NAME=SDTX; ACTVT=16
S_RFC      RFC_TYPE=FUGR; RFC_NAME=BAPT; ACTVT=16
S_RFC      RFC_TYPE=FUGR; RFC_NAME=BATG; ACTVT=16
S_RFC      RFC_TYPE=FUGR; RFC_NAME=RSPC_API; ACTVT=16
S_TABU_DIS RC=0 ACTVT=03; DICBERCLS=&NC& 
S_RS_PC    RSPCCHAIN=*;RSPCAPPLNM=*; RSPCPART=DEFINITION; ACTVT=03
S_RS_PC    RSPCCHAIN=*;RSPCAPPLNM=*; RSPCPART=RUNTIME; ACTVT=16
S_CTS_ADMI CTS_ADMFCT=TABL
S_RS_DTP   RSTLDTPSRC=CUBE; RSSTDTPSRC=*; RSONDTPSRC=0D_DECU; RSTLDTPTGT=DEST; RSSTDTPTGT=*; ACTVT=16
S_BTCH_ADM BTCADMIN=Y
S_BTCH_JOB JOBGROUP=*; JOBACTION=RELE
S_RS_TR    RSTLOGOSRC=CUBE; RSSTTRSRC=*; RSOBJNMSRC=0D_DECU; RSTLOGOTGT=DEST; RSSTTRTGT=' '; RSOBJNMTG=*; ACTVT=16
S_RS_AUTH  BIAUTH=0BI_ALL
S_ADMI_FCD S_ADMI_FCD=ST0R

```

[Download SAP profile for OHS](/xtract-is/assets/files/sap_roles/ZXTOHS.SAP)

### Query

Necessary SAP authorizations

```text
S_RFC            RFC_TYPE=FUGR; RFC_NAME=AQRC; ACTVT=16 

```

[Download SAP profile for SAP Query](/xtract-is/assets/files/sap_roles/ZXTQUERY.SAP)

### Report

Necessary SAP authorizations

```text
S_RFC            RFC_TYPE=FUGR; RFC_NAME=ZXTRACTABAP; ACTVT=16
S_TABU_NAM       ACTVT=03; TABLE=TRDIR, TRDIRT, TSTC, VARID
S_GUI            ACTVT=61 
S_TABU_DIS       ACTVT=03; DICBERCLS=&NC& 
S_TABU_DIS       ACTVT=03; DICBERCLS=SS
S_BTCH_ADM       BTCADMIN=Y
S_BTCH_JOB       JOBGROUP=*; JOBACTION=RELE

```

Note

The necessary transport request for function group *ZXTRACTABAP* is located in the following path: `C:\Program Files\[XtractProduct]\ABAP\Report\Z_XTRACT_IS_REMOTE_REPORT-transport.zip` of the default installation.

[Download SAP profile for Report](/xtract-is/assets/files/sap_roles/ZXREPORT.SAP)

To execute a report with Xtract IS, the SAP connection user needs explicit authorization to execute the report. Authorization can be granted using one of the following methods:

- [Assign the authorization object Z_TS_PROG](../../../knowledge-base/create-the-custom-authority-object-z-ts-prog/)
- [Assign an authorization group](../../../knowledge-base/authorize-access-to-specific-reports/)

### Table

Necessary SAP authorizations

```text
S_RFC            ACTVT=16; RFC_TYPE=FUGR; RFC_NAME=SDTX, SDIFRUNTIME, /THEO/READ_TABLE                   
S_TABU_DIS       ACTVT=03; DICBERCLS=XXXX
S_TABU_NAM       ACTVT=03; TABLE=DD02V, DD17S, DD27S, ENLFDIR
S_DSAUTH         ACTVT=16;    

```

XXXX (stands for a placeholder) is the authorization group for the table. To determine, which authorization group belongs to which table, check the table TDDAT - Maintenance Areas for Tables. If the table is not listed, the authorization group is &NC&. For authorizing specific tables use authorization object S_TABU_NAM instead of S_TABU_DIS.

Note

The transport request for function group */THEO/READ_TABLE* and *Z_THEO_READ_TABLE* is located in the following path: `C:\Program Files\[XtractProduct]\ABAP\Table` of the default installation.

Additional options:

Necessary SAP authorizations

```text
S_BTCH_ADM       BTCADMIN=Y
S_BTCH_JOB       JOBGROUP=*; JOBACTION=RELE

```

Necessary SAP authorizations

```text
S_RFC            RFC_TYPE=FUNC; RFC_NAME=EM_GET_NUMBER_OF_ENTRIES; ACTVT=16  

```

Necessary SAP authorizations

```text
S_TABU_NAM       ACTVT=03; TABLE=TCURX

```

[Download SAP profile for Table](/xtract-is/assets/files/sap_roles/ZXTABLE.SAP)

### Table CDC

Necessary SAP authorizations

```text
S_RFC            ACTVT=16; RFC_TYPE=FUGR, FUNC; RFC_NAME=SDTX, SDIFRUNTIME, /THEO/CDC_*, /THEO/READ_TABLE            
S_TABU_DIS       ACTVT=02, 03; DICBERCLS=*
S_TABU_CLI       CLIIDMAINT=X 
S_TABU_NAM       ACTVT=03; TABLE=DD02V, D17S, D27S, ENLFDIR
S_DEVELOP        ACTVT=02; DEVCLASS=$TMP; OBJNAME=ZTSCDC_*; OBJTYPE=*; P_GROUP=*

```

XXXX (stands for a placeholder) is the authorization group for the source table. To determine, which authorization group belongs to which table, check the table TDDAT - Maintenance Areas for Tables. If the table is not listed, the authorization group is &NC&. For authorizing specific tables use authorization object S_TABU_NAM instead of S_TABU_DIS.

Note

The transport requests for the required function groups */THEO/READ_TABLE* are located in `C:\Program Files\[XtractProduct]\ABAP\TableCDC` and `C:\Program Files\[XtractProduct]\ABAP\Table`.

[Download SAP profile for Table CDC](/xtract-is/assets/files/sap_roles/ZXTABLECDC.SAP)

### DeltaQ

Necessary SAP authorizations

```text
S_RFC           RFC_TYPE=FUGR; RFC_NAME=SUSR; ACTVT=16  
S_RFC           RFC_TYPE=FUNC; RFC_NAME=RFC_GET_SYSTEM_INFO; ACTVT= 16 
S_ADMI_FCD      S_ADMI_FCD=NADM
S_TABU_DIS      ACTVT = 02; DICBERCLS=SA
S_TABU_DIS      ACTVT = 03; DICBERCLS=SA
S_TABU_NAM      ACTVT = 02; TABLE=EDIPOA
S_TABU_NAM      ACTVT = 03; TABLE=EDIPOA

```

Necessary SAP authorizations

```text
S_RFC            RFC_TYPE=FUGR; RFC_NAME=SDIFRUNTIME; ACTVT=16 
S_RFC            RFC_TYPE=FUGR; RFC_NAME=RSAG; ACTVT=16 
S_TABU_DIS       ACTVT=03; DICBERCLS=SS                                                
S_TABU_DIS       ACTVT=03; DICBERCLS=SC                                               
S_IDOCDEFT       EDI_TCD=WE30; ACTVT=01; EDI_CIM=*; EDI_DOC=*                            
S_IDOCDEFT       EDI_TCD=WE30; ACTVT=03; EDI_CIM=*; EDI_DOC=*   

```

Necessary SAP authorizations

```text
S_RFC           RFC_TYPE=FUGR; RFC_NAME=SDIFRUNTIME; ACTVT=16
S_TABU_DIS      ACTVT=03; DICBERCLS=SS                                 
S_TABU_DIS      ACTVT=03; DICBERCLS=SC                                               
S_IDOCDEFT      EDI_TCD=WE30; ACTVT=02; EDI_CIM=*; EDI_DOC=*

```

Necessary SAP authorizations

```text
S_RFC            RFC_TYPE=FUGR; RFC_NAME=EDI1; ACTVT=16
S_RFC            RFC_TYPE=FUGR; RFC_NAME=BATG; ACTVT=16
S_RFC            RFC_TYPE=FUGR; RFC_NAME=EDIMEXT; ACTVT=16 
S_RFC            RFC_TYPE=FUGR; RFC_NAME=ARFC; ACTVT=16 
S_RFC            RFC_TYPE=FUGR; RFC_NAME=ERFC; ACTVT=16 
S_RFC            RFC_TYPE=FUGR; RFC_NAME=EDIN; ACTVT=16 
S_RFC            RFC_TYPE=FUGR; RFC_NAME=/BIC/*; ACTVT=16 
S_RFC            RFC_TYPE=FUGR; RFC_NAME=/BI0/*; ACTVT=16
S_RFC            RFC_TYPE=FUGR; RFC_NAME=RSAK; ACTVT=16
S_RFC            RFC_TYPE=FUGR; RFC_NAME=EDIW; ACTVT=16
S_RFC            RFC_TYPE=FUGR; RFC_NAME=SDTX; ACTVT=16
S_RFC            RFC_TYPE=FUGR; RFC_NAME=EDIMEXT; ACTVT=16
S_RFC            RFC_TYPE=FUGR; RFC_NAME=SYSU; ACTVT=16
S_RFC            RFC_TYPE=FUGR; RFC_NAME=RSC1; ACTVT=16
S_RFC            RFC_TYPE=FUNC; RFC_NAME=RSAP_REMOTE_HIERARCHY_CATALOG;  ACTVT=16
S_RFC            RFC_TYPE=FUNC; RFC_NAME=RSA1_OLTPSOURCE_GET_ALL;  ACTVT=16
S_RFC            RFC_TYPE=FUNC; RFC_NAME=RSA1_OLTPSOURCE_GET_SELECTIONS;  ACTVT=16
S_RFC_ADM        ACTVT=03; RFCDEST=XTRACT*; RFCTYPE = T; ICF_VALUE=* 
B_ALE_RECV       EDIMES=RSRQST
S_IDOCMONI       ACTVT=03; EDI_DIR=*; EDI_MES=*; EDI_PRN=*; EDI_PRT=*; EDI_TCD=WE*
S_IDOCDEFT       EDI_TCD=WE30; ACTVT=02; EDI_CIM=*; EDI_DOC=*
S_IDOCDEFT       EDI_TCD=WE30; ACTVT=03; EDI_CIM=*; EDI_DOC=*
S_TABU_DIS       ACTVT=03; DICBERCLS=SS                                   
S_TABU_DIS       ACTVT=03; DICBERCLS=SC
S_TABU_DIS       ACTVT=03; DICBERCLS=&NC&  
S_BTCH_ADM       BTCADMIN=Y          
S_BTCH_JOB       JOBGROUP=*; JOBACTION=RELE
S_SPO_DEV        SPODEVICE=*
S_RO_OSOA        OLTPSOURCE=*; OSOAAPCO=*; OSOAPART=DATA; ACTVT=03;  | Only in SAP Releases  7.0 and higher

```

[Download SAP profile for DeltaQ](/xtract-is/assets/files/sap_roles/ZXTDELTAQ.SAP)

[Download SAP profile for DeltaQ Customizing Check](/xtract-is/assets/files/sap_roles/DELTAQ_CUSTOMIZING_CHECK.SAP)

______________________________________________________________________

#### Related Links

- [SAP Help: Role Administration](https://help.sap.com/doc/saphelp_nw74/7.4.16/en-us/52/6714a9439b11d1896f0000e8322d00/content.htm)
- [SAP ONE Support Launchpad](https://launchpad.support.sap.com/#/notes/2855052)

This page shows how to use the Xtract Table component.\
The Xtract Table component can be used to extract data from SAP Tables and Views.

### Supported SAP Objects

- Transparent tables
- Views
- ABAP CDS Views (without parameters)
- HANA CDS Views
- Pool tables (joining not possible)
- Cluster tables (joining not possible)

### RFC_READ_TABLE Restrictions

Especially with older SAP releases you may encounter a few restrictions when using the SAP standard function module (RFC_READ_TABLE) for table extraction:

- The overall width of all columns to be extracted must not exceed 512 bytes.
- It is not possible to extract data from tables that contain one or more columns of the data type f (FLTP, floating point), DEC (decimal, e.g. for percentage) or x (RAW, LRAW).
- Poor extraction performance with larger tables. Can cause also duplicates.
- Depending on the SAP version there may be other restrictions.

When facing restrictions, install the Theobald Software custom function module [/THEO/READ_TABLE](../setup-in-sap/custom-function-module-for-table-extraction/#installation-of-theoread_table) on your SAP system.

Warning

**Converting issues**\
Error while converting value '\*.0' of row 1530, column 3.\
The SAP standard module *RFC_READ_TABLE* for table extraction can only extract the ABAP data type DEC to a limited extent. This leads to the mentioned example error during extraction. Use the function module */THEO/READ_TABLE*.

### Prerequisites

- A connection to an SAP system is available, see [SAP Connection](../sap-connection/).
- The SAP user has sufficient user rights, see [SAP Authority Objects](../setup-in-sap/sap-authority-objects/#table).

Warning

**Missing Authorization.**\
To use the Xtract Table component, access to the designated authority objects (RFC) in SAP must be available. Adjust [SAP Authority Objects](../setup-in-sap/sap-authority-objects/#table) accordingly.

### Add an Xtract Table Component

Follow the steps below to add an Xtract Table component to your SSIS package:

1. Drag&drop the Xtract Table component from the SSIS toolbox into your data flow task.

1. Double-click the component. A connection manager is automatically assigned to the component and the main window of the component opens.

   Note

   If there are multiple connection managers, the window "Select Connection Manager" opens, see [SAP Connection](../sap-connection/#assign-connection-managers-to-xtract-components). Once a connection manager is selected, the main window of the component opens.

The majority of the functions of the component can be accessed in the main window.

### Look up an SAP Table

1. In the main window of the component, click **[Add]** to add a table. The window "Table Lookup" opens.
1. In the field **Table Name**, enter the name of the table to extract . Use wildcards (\*) if needed.
1. Click **[]** . Search results are displayed.
1. Select a table and click **[OK]**.

All relevant metadata information of the table is retrieved from SAP. The application returns to the main window of the component.

### Define the Xtract Table Component

The Xtract Table component offers the following options for table extractions:

1. Select the columns you want to extract. By default all columns are selected. Deselect the columns you do not want to extract.
1. Optional: Define a [WHERE clause](where-clause/) or a [HAVING clause](having-clause/) to filter table records. By default all data is extracted.
1. Optional: Join two or more tables and extract the result of the join. For more information, see [Table Joins](table-join/).
1. Click **[Load live preview]** to display a live preview of the first 100 records.
1. Check the [Settings](settings/) before running the SSIS package.
1. Click **[OK]** to save the component.

You can now run the SSIS package.

______________________________________________________________________

#### Related Links

- [Knowledge Base Article: Delta Table Extraction](../../knowledge-base/delta-table-extraction/)
- [Knowledge Base Article: Read data from Cluster Fields in Tables PCL1 and PCL2 (Payroll)](../../knowledge-base/read-data-from-cluster-fields-in-the-tables-pcl1-and-pcl2-payroll/)

The HAVING clause can be used to filter groups of rows, see [SAP ABAP Documentation: SELECT-HAVING](https://help.sap.com/doc/abapdocu_750_index_htm/7.50/en-US/abaphaving_clause.htm).

### Create a HAVING Clause

The following example shows how many materials are assigned to a material type (MTART). After applying the HAVING Clause, the preview shows only the material types with more than 10 materials assigned.

1. Select an aggregate function for a field you want to use in the HAVING-clause.

   Note

   Aggregate functions are only supported for numeric field types, which is why the field BRGEW (Gross Weight) is used in the example.

1. Navigate to tab *HAVING Clause* .

1. Enter a HAVING Clause using the [syntax](#having-clause-syntax) in accordance to your SAP Release, e.g., `COUNT(BRGEW) > 10`.

1. Click **[Load live preview]** to display the results in the *Preview* section.

Note

When fields with the same name exist in different tables, the field names must be formatted as [Table]~[Column], e.g., MAKT~MATNR. This can be the case with [table joins](../table-join/).

### HAVING Clause Syntax

With regard to syntax and formulas, the same rules apply as for the [WHERE Clause](../where-clause/#where-clause-syntax). Depending on your SAP release the syntax may varry, see [SAP Help - ABAP SQL - SQL Expressions sql_exp](https://help.sap.com/doc/abapdocu_latest_index_htm/latest/en-US/abenabap_sql_strictmode_754.htm) .

This section contains an overview and description of the *Tables and Fields* tab in the main window of the Xtract Table component.

### Tables

The subsection *Tables* lists all SAP Tables and Views that were added to the component.

- Click **[Add]** to add an SAP Table or View to the component.
- Click **[Remove]** to remove an SAP Table or View from the component.

Tip

Select an SAP Table to define the corresponding settings, e.g, output columns, WHERE clause, etc. You can switch between the SAP Tables.

### Fields

The subsection *Fields* displays all columns in the selected SAP Table or View.

The Xtract Table component imports and highlights the dedicated indexes of an SAP Table, such as primary key and/or sorting options.

Note

Use the indicated fields for filtering increases performance when applying WHERE-clause.

| Columns | Description | | --- | --- | | / | Defines whether or not a table column is added to the output of the component. By default, all table columns are extracted. | | **Name** | Name of a column in the SAP Table. The column name can be filtered. | | **Description** | Description of the column. The column description can be filtered. | | **Aggregate Function** | Applies [aggregate functions](#aggregate-functions) to numeric fields. | | **Conv.** | Activates SAP [conversion routines](#conversion-routines). |

#### Aggregate Functions

Aggregate functions are only available for numeric field data types, e.g., INT, FLOAT, DECIMAL. The following aggregation functions are available:

- *None*: No aggregation
- *MEAN*: Average
- *COUNT*: Number
- *MAX*: Maximum
- *MIN*: Minimum
- *SUM*: Total

#### Conversion Routines

Conversion routines are stored in the Data Dictionary that is used for the respective fields. Activating the conversion routines in SAP leads to significant performance decrease. After the conversion, the value is displayed as it appears in the transaction *SE16N* in the SAP GUI.

Examples:

- Language keys, e.g., `D` in the database becomes `DE` after conversion
- Project numbers, e.g., `T000012738GT` becomes `T/12738/GT` after conversion.

| State | Description | Safety | | --- | --- | --- | | | no conversion routines selected | - | | | conversion routines enabled requires the function module Z_XTRACT_IS_TABLE_COMPRESSION | no data type safety | | | conversion routines enabled requires the function module [/THEO/READ_TABLE](../../setup-in-sap/custom-function-module-for-table-extraction/) | assured data type safety |

### Preview

The subsection *Preview* displays a real-time preview of the first 100 fields of the SAP table when clicking the button **[Load live preview]**.

Note

The use non-indexed fields in the WHERE-clause can lead to timeouts during the preview of large tables.

### Buttons

**[Load live preview]**\
Allows a real-time preview of the extraction data without executing the extraction.\
You can also preview the data with aggregation functions.

**[Count rows]**\
Returns the number of rows/data records of an extraction, considering the WHERE and HAVING clauses stored.

**[Refresh metadata]**\
A new lookup is performed on the selected table(s). Existing mappings and field selections are retained, which is not the case when the table is added again.\
It can be necessary to refresh the metadata when a table has been adjusted in SAP, when another source system is assigned to the component, or when the source system was updated. In such cases, data inconsistencies can occur that are resolved by this function.

This page shows how to parameterize the Xtract Table component using SSIS variables directly in the component and by using SSIS expressions to set *Data Flow Properties*.

### Parameterization using SSIS Variables

SSIS variables can be used to parameterize the WHERE Clause in the Xtract Table component, see [Dynamic WHERE Clause with SSIS Variables](../where-clause/#dynamic-where-clause-with-ssis-variables).

### Parameterization using Expression Properties

The recommended way of parameterization is to use SSIS expressions to set *Data Flow Properties*. *Data Flow Properties* are displayed in the "Properties" window of the Data Flow Task.

Note

*Data Flow Properties* are not to be confused with *Custom Properties* that are displayed in the "Properties" window of the component. When parameterizing the *Data Flow Properties*, the *Custom Properties* are overwritten.

For more information on property expressions, see [Microsoft Documentation: Use Property Expressions in Packages](https://learn.microsoft.com/en-us/sql/integration-services/expressions/use-property-expressions-in-packages).

1. Right-click the Data Flow canvas and select **Properties**. The window "Properties" opens.
1. Add an *Expression* by clicking using **[…]**. The window "Property Expression Editor" opens.
1. Select a property from the drop-down list under *Property*.
1. Open the "Expression Builder" using the **[…]** button under *Expression*.
1. Build your Expression and click **[Evaluate Expression]** to check for correct syntax.
1. Confirm your input with **[OK]**.

### Data Flow Properties of Xtract Table

List of *Data Flow Properties* that can be parameterized:

| Property Name | Description | | --- | --- | | *[Xtract Table].[WhereClause]* | Corresponds to the tab *WHERE clause* in the Table component. Allows parameterization of the complete WHERE clause, see [Knowledge Base Article: Dynamization of WHERE Conditions](../../../knowledge-base/dynamization-of-where-conditions/). | | *[Xtract Table].[ConvertsDates]* | Enable or disable conversion of SAP dates, see [ConvertsDates](#convertsdates). | | *[Xtract Table].[CustomFunctionName]* | Corresponds to the setting [Function Module](../settings/#function-module) in the Xtract Table component. | | *[Xtract Table].[MaxRows]* | Corresponds to the setting [Row Limit](../settings/#row-limit) in the Xtract Table component. | | *[Xtract Table].[MinDateReplacement]* | Converts the SAP date 00000000 to the entered value, see [MinDateReplacement](#mindatereplacement). | | *[Xtract Table].[MaxDateReplacement]* | Converts the SAP date 9999XXXX to the entered value, see [MaxDateReplacement](#maxdatereplacement). | | *[Xtract Table].[InvalidDateReplacement]* | Every invalid value will be converted into the entered value, see [InvalidDateReplacement](#invaliddatereplacement). | | *[Xtract Table].[PackageSize]* | Corresponds to the setting [Package Size](../settings/#package-size) in the Xtract Table component. |

### Custom Properties of Xtract Table

The *Custom Properties* are properties that are unique to the component. When parameterizing the component using SSIS variables, the *Custom Properties* are overwritten.

The *Custom Properties* of the Xtract Table component are displayed in the "Properties" window.

#### ColumnNameStyle

- *Code*: the SAP technical column name is used as column name in the output, e.g., MAKTX.
- *PrefixedCode*: the SAP technical column name is prefixed by SAP object name and the tilde character, e.g., MAKT~MAKTX.
- *CodeAndText*: the SAP technical column name and the SAP description separated by an underscore are used as column name in the output, e.g., MAKTX_Material Description (Short Text).
- *TextAndCode*: the SAP description and the SAP technical column name description separated by an underscore are used as column name in the destination e.g., Material Description (Short Text)\_MAKTX.

#### ConvertsDates

When this property is set to *True* (default) SAP date fields (YYYYMMDD) assume the SSIS pipeline type DT_DBDATE instead of DT_WSTR. For the date conversions to apply, set the property *UseLegacyDateConversion* to *False*. In case of invalid data in SAP date fields, the following date conversions are applied:

- *InvalidDateReplacement*
- *MaxDateReplacement*
- *MinDateReplacement*

#### CustomFunctionName

Corresponds to the setting [Function Module](../settings/#function-module) in the Xtract Table component.

#### ExtractInBackgroundJob

Corresponds to the setting [Extract data in background job](../settings/#extract-data-in-background-job).

#### InvalidDateReplacement

Replaces an invalid date format. The default value is *1970-01-02*. To use the property enter a replacement value for invalid SAP dates, such as '20190132' (January 32nd 2019) in the format yyyy-mm-dd. The value NULL is supported.

#### MaxDateReplacement

Replaces SAP dates with the year 9999. The default value is *2099-12-31*. To use the property enter a replacement value in the format yyyy-mm-dd that contains the year ‘9999’. Example: ‘99990101’ (January 1st 9999). The value NULL is supported.

#### MinDateReplacement

Replaces SAP dates with the year *0000*. The default value is *1970-01-01*. To use the property enter a replacement value in the format yyyy-mm-dd that contains the year '0000'. Example: '00000000'. The value NULL is supported.

#### MaxRows

Corresponds to the setting [Row Limit](../settings/#row-limit) in the Xtract Table component.

#### OrderBy

Defines the table field that is used as the sort criterion for the result.

#### PackageSize

Corresponds to the setting [Package Size](../settings/#package-size) in the Xtract Table component.

#### UseWideStrings

Defines whether DT_WSTR / DT_NTEXT (*true*) or DT_STR / DT_TEXT (*false*) is used as the data type for string columns.

#### UseLegacyDateConversion

The property *UseLegacyDateConversion* is used for migration of table extractions from Xtract IS versions < 5.0.0. The default value of this property is *False*. As a prerequisite for using *UseLegacyDateConversion* property, the *ConvertsDates* property must be set to *True*. Setting *UseLegacyDateConversion* to *true* does the following:

- Invalid SAP date values are replaced with the value entered in the *InvalidDateReplacement* property.
- There is no replacement for SAP dates that contain the year '9999'. The value entered in the *MaxDateReplacement* property is *not* considered.
- SAP dates that contain the year '0000' are replaced with *NULL*. The value entered in the *MinDateReplacement* property is *not* considered.

#### WhereClause

Corresponds to the tab *WHERE clause* in the Xtract Table component. This property allows parameterization of the complete WHERE clause, see [Knowledge Base Article: Dynamization of WHERE Conditions](../../../knowledge-base/dynamization-of-where-conditions/).|

______________________________________________________________________

#### Related Links

- [Xtract Table Settings](../settings/)
- [Knowledge Base Article: Dynamization of WHERE Conditions](../../../knowledge-base/dynamization-of-where-conditions/)

This page contains an overview of the settings in the Xtract Table component.\
The settings are located in the tab *Extraction Settings*.

Warning

**Could not load list of available function modules because permission for table ENLFDIR is missing**\
This warning appears if a technical SAP user does not have authorization rights to access the SAP table *ENLFDIR*. Confirm the warning as the user can **still** adjust the extraction settings.

### Extraction Settings

#### Package Size

The extracted data is split into packages of the defined size. The default value is 50000 lines.\
A package size between 20000 and 50000 is advisable for large amounts of data. 0 means no packaging. Not using packaging can lead to an RFC timeout for large data extractions.

Warning

**RFC_ERROR_SYSTEM_FAILURE - No more storage space available for extending an internal table**\
To avoid a memory overflow on the SAP source system and to avoid huge overheads, choose a package size that suits your memory capacity.

#### Row Limit

Specifies the maximum number of extracted records. 0 extracts all data. You can use this option to perform tests with a small amount of data by entering a row limit of e.g., 1000.

### Function Module

Specifies the name of the function module used for data extraction. This field is filled automatically depending on what function modules are installed on your SAP system. Custom function modules are supported.

The following function modules can be used to extract tables:

- RFC_READ_TABLE (TAB512)
- /BODS/RFC_READ_TABLE (TAB2048)
- /SAPDS/RFC_READ_TABLE (TAB2048)
- /BODS/RFC_READ_TABLE2
- /SAPDS/RFC_READ_TABLE2
- Z_THEO_READ_TABLE
- [/THEO/READ_TABLE](/xtract-is/documentation/setup-in-sap/custom-function-module-for-table-extraction) (recommended)

Warning

**Duplicates in the target environment.**\
The SAP standard modules for table extraction do not have pointers for table fields. In larger tables this may cause low performance and duplicates in the target environment. Use the function module [THEO/READ_TABLE](../../setup-in-sap/custom-function-module-for-table-extraction/#installation-of-theoread_table) from Theobald Software to ensure smooth extractions.

Note the necessary [SAP Authority Objects](../../setup-in-sap/sap-authority-objects/#table):

```text
S_TABU_NAM ACTVT=03; TABLE=ENLFDIR

```

### Extract Data in Background Job

If *Background job timeout (seconds)* checkbox is activated, the table extraction is executed as a background job in SAP. This setting is optional and is supported in combination with function module THEO/READ_TABLE or Z_THEO_READ_TABLE version 2.0. Activate the setting *Background job timeout (seconds)* for long-running extractions with a large amounts of data that may run into a timeout error (“Time limit exceeded”), when using the foreground mode.

Tip

The extraction jobs can be found in the SAP JobLog (**SM37**) under the JobName *theo_read_table*.

Warning

**Shared Memory ran out of memory!**\
If this error message pops up when running an extraction in the background, adjust the size of the Shared Memory. SAP recommends a Shared Memory size of 800MB~1.5GB for a production/test system or 2GB~4GB for S/4 systems, see [SAP Support: How to solve SYSTEM_NO_SHM_MEMORY runtime error](https://ga.support.sap.com/dtp/viewer/#/tree/1080/actions/12107).

### Advanced Settings

#### Background Job Timeout (seconds)

Sets a timeout period for extractions that run in background mode.\
The default value is 180 seconds. The maximum timeout value is 3600 seconds.

Note

The background job timeout setting only takes effect if the extractions run in background mode using [/THEO/READ_TABLE](../../setup-in-sap/custom-function-module-for-table-extraction/).

#### Adjust Currency Decimals

The default number of decimal places for a currency in the SAP database is 2 decimals. Currencies that do not have decimals are also stored in this format, e.g. JPY, VND, KRW, etc.

Example:

| Currency | Actual Amount | Amount stored in SAP database | | --- | --- | --- | | JPY | 100 | 1.00 | | KRW | 10000 | 100.00 |

When extracting currencies with no decimals, the amount stored in SAP is returned e.g., 100 JPY are extracted as 1.00. To correct the decimal placement of the extracted data, activate **Adjust Currency Decimals**. If **Adjust Currency Decimals** is active, currencies without decimals are multiplied by a factor that balances out the decimals.

**Adjust Currency Decimals** also requires the extraction of the corresponding CURRENCY field that can be used as a reference for the multiplication factor. Use the **[Load live preview]** function to find the correct currency field/s.

- If the currency field is part of the table, add it to the output.
- If the currency field is in another table, join the tables.
- If the reference is not part of a table, **Adjust Currency Decimals** cannot be used.

Note

The multiplication factor used in *Adjust Currency Decimals* is determined by the SAP currency table TCURX. To access the table, the following SAP Authority objects must be set in SAP: *S_TABU_NAM ACTVT=03; TABLE=TCURX*.

The *Join* functionality allows joining two or more tables and extract the result of the join. To perform the extraction the corresponding SQL command is generated dynamically and the join is executed on the SAP server.

Possible scenarios can be joining tables for header and item data or tables for master data and texts.

### Supported Join Types

The following join types are supported:

- Inner Join
- Left Outer Join, also referred to as *Left Join*.

For more information on join types see [SAP Help: Inner Join and Outer Join](https://help.sap.com/doc/saphelp_nwpi71/7.1/en-US/cf/21ec77446011d189700000e8322d00/content.htm?no_cache=true).

Note

Joining of cluster or pool tables is not supported. Cluster or pool tables need to be extracted individually and joined in the destination.

### Prerequisites

To use table join, the function module [/THEO/READ_TABLE](../../setup-in-sap/custom-function-module-for-table-extraction/#installation-of-theoread_table) needs to be available in SAP.

### Join Tables

The following example shows how to join the tables KNA1 and KNVV.

1. In the tab *Tables and Fields*, click **[Add]** to add two tables (e.g., KNA1 and KNVV).

1. Select both tables on the left and check the fields you want to extract .

1. Optional: Switch to the *WHERE clause* tab and specify a [WHERE clause](../where-clause/).

1. Switch to the *Joins* tab . A Join condition with default values is automatically available. The join condition is based on the foreign key relationship of the joined tables.

1. Click **[]** to edit the join condition. The window "Join" opens.

1. Select a table column in the *Left Table* field and in the *Right Table* field to map the table contents. In the depicted example a left outer join on tables KNA1 (left table) and KNVV (right table) on the field KUNNR is performed. It is possible to add multiple join conditions.

   - Click **[Add]** to extend the join condition to more fields.
   - Click **[]** to delete existing joins.

   Tip

   Different tables can have identical field / column names. Defining a join condition based on the identical field names not always delivers the expected result, e.g., VBAK~VBELN \<> LIPS~VBELN. Make sure the fields you use in a join condition contain the same content/data.

1. Click **[OK]** to save the join.

You can join additional tables by adding tables more in the tab *Tables and Fields*.

Warning

**RFC_ERROR_SYSTEM_FAILURE - Illegal access to the right table of a LEFT OUTER JOIN.**\
Using a WHERE clause on the right table of a LEFT OUTER JOIN is only possible as of SAP Release 7.40, SP05.

#### Auto Mapping

The **[Auto-map]** button deletes existing join conditions and performs a new field mapping based on the foreign key relationship of the joined tables.

Recommendation

To avoid poor extraction performance, do not join more than five tables.

A WHERE clause can be used to filter table records, see [SAP ABAP Documentation: SELECT-WHERE](https://help.sap.com/doc/abapdocu_750_index_htm/7.50/en-us/abapwhere.htm). Enter WHERE clauses manually in *Text mode* or use the [WHERE Clause Editor](#where-clause-editor) in *Editor Mode*.

## Create a WHERE Clause

1. Open a Xtract Table component.
1. Navigate to the tab *WHERE Clause*.
1. Enter a WHERE clause [manually](#where-clause-text-mode) or use the [WHERE Clause Editor](#where-clause-editor).
1. Click **[Load live preview]** to display the results in the *Preview* section.

## WHERE Clause Text Mode

The WHERE clause text mode allows you to directly enter a WHERE clauses. The text mode of the WHERE clause supports script expressions.

Warning

**Extraction fails due to incorrect syntax.**\
The extractions fail, if incorrect syntax is used in the WHERE clause.\
Make sure to use correct SAP OpenSQL syntax. Several important syntax rules are listed in this help section.

Tip

To check the syntax of the WHERE clause, click **[Load live preview]**. This way there is no need to run an extraction to see, if the syntax is correct.

### WHERE Clause Syntax

The WHERE Clause syntax generally uses the following structure:

```bash
[Table]~[Column][Space][Operator][Space][Filter-Value]

```

**Example:**

```text
KNA1~LAND1 = 'US'

```

The following rules apply to filter values:

| Rule | Correct | Wrong | | --- | --- | --- | | Enter a space before and after the equal sign | *YEAR = '1999'* | *YEAR= '1999 '*, *YEAR ='1999'* or *YEAR='1999'* | | Set floating point numbers in single quotation mark | *KMENG > '10.3'* | *KMENG > 10.3* | | Values must use the internal SAP representation: Date: YYYYMMDD Year Period: YYYYPPP Numbers with leading zeroes, e.g., customer numbers | 19990101 1999001 0000001000 | 01.01.1999 001.1999 1000 |

The following operations are supported in the WHERE clause:

| Operator | Description | | --- | --- | | =, EQ | True if the content of operand1 is equal to the content of operand2. | | \<>, NE | True if the content of operand1 is not equal to the content of operand2. | | \<, LT | True if the content of operand1 is less than the content of operand2. | | >, GT | True if the content of operand1 is greater than the content of operand2. | | \<=, LE | True if the content of operand1 is less than or equal to the content of operand2. | | >=, GE | True if the content of operand1 is greater than or equal to the content of operand2. | | (NOT) LIKE | True if the value of operand1 matches (does not match) the pattern in operand2. | | (NOT) IN | True if the content of operand1 is (not) part of the content of operand2. Operand2 must be of type LIST or SQL. |

For more details on the OpenSQL syntax, see [SAP Help: Select WHERE](https://help.sap.com/doc/abapdocu_752_index_htm/7.52/en-US/abapwhere.htm?file=abapwhere.htm)

Tip

To increase extracting performance, make sure to place the indexed fields as the first selection filter operation in the WHERE clause.

Note

When fields with the same name exist in different tables, the field names must be formatted as [table name]~[field name], e.g., MARC~MATNR. This can be the case when extracting multiple tables.

### Subqueries

Note

The usage of subqueries is only possible as of SAP Release 7.40, SP05.

A subquery is an SQL query nested inside a larger query. Subqueries are nested queries that provide data to the enclosing query. Subqueries need be enclosed with parenthesis and can return individual values or a list of records. Get more details about subqueries on the [SAP Help: Conditions](https://help.sap.com/doc/abapdocu_752_index_htm/7.52/en-US/abenwhere_logexp_in_subquery.htm).

**Example:**

In the following example a subquery is used with the *IN* operator. The following statement returns all the *active* customers (rows in the table KNA1) that have i.e. a sales document in the table VBAK for sales document header data.

```text
KUNNR IN ( SELECT KUNNR FROM VBAK )

```

## WHERE Clause Editor

The WHERE clause editor offers a toolkit for those who are not familiar with the syntax of the WHERE clause. Click **[Editor mode]** to open the editor.

There are 2 options for adding criteria to the WHERE clause:

- **[Add Criteria]** adds single criteria.
  - The default structure for a single criteria with static values is `[Table~Column][Operator][Filer-Value]` e.g., *MARC~WERKS = 1000*.
  - The default structure for a single criteria with parameters is `[Column][Operator][Parameter]` e.g., *MARC~WERKS = [p_WERKS]*.
- **[Add Criteria Group]** adds a group of criteria.
  - The default structure for a criteria group is `([Table~Column1][Operator1][Filter-Value1][Boolean][Table~Column2][Operator2][Filter-Value2])` e.g., *(MARC~PSTAT = 'L' OR MARC~PSTAT = 'LB')*.

Tip

Combine multiple criteria and criteria groups to create complex filters e.g., *MARC~WERKS = 1000 AND (MARC~PSTAT = 'L' OR MARC~PSTAT = 'LB')* extracts only data where the column WERKS equals 1000 and the column PSTAT equals either 'L' or 'LB'.

### Components of the WHERE Clause Editor

The following buttons and options are available in the WHERE Clause Editor:

| Icon | Component | Function | | --- | --- | --- | | | Delete row | deletes a criteria. | | | Move row up | changes the sequence of the criteria. The selected criteria moves up. The sequence of criteria can also be changed with Drag and drop. | | | Move row down | changes the sequence of the criteria. The selected criteria moves down. The sequence of criteria can also be changed with Drag and drop. | | | Column | adds a column. Click on the component to select a column from the available tables. | | | SQL | adds an Open SQL statement, see [SAP Help: Open SQL](https://help.sap.com/doc/abapdocu_750_index_htm/7.50/en-us/abenopensql.htm). | | | Operator | adds an operator e.g., =, \<, >, etc. | | | Value | adds a static value of type *String*, *Number*, *Flag* or *List*. *List* offers a separate editor to create lists of type *String*, *Number* or *Select*. *Select* enables usage of SELECT statements. For more information, see [Working with Lists in the WHERE-Clause Editor](../../../knowledge-base/where-clause-editor-lists/). | | | Criteria | adds a new criteria after the selected criteria. | | | Group | adds a new group of criteria the selected criteria. | | | Parameter | adds a previously defined SSIS variable, see [Parameterization using SSIS Variables](../parameterization/#parameterization-using-ssis-variables). |

Note

When adding or editing a criteria only the relevant components are displayed e.g., **Add Operator** is only available if there is a column or SQL statement to use an operator on.

#### Edit and Delete Components

- Click on a component to edit it. All areas that are marked green can be edited.
- To delete a component, click the (x) icon above the component.

### SAP System Fields

You can use [SAP system fields for date and time](https://help.sap.com/doc/abapdocu_751_index_htm/7.51/en-US/abentime_system_fields.htm) in a WHERE clause. The usage of SAP system fields requires SAP NW 7.4 SP5 or higher and the custom function module [/THEO/READ_TABLE](../../setup-in-sap/custom-function-module-for-table-extraction/#installation-of-theoread_table).

Example:

1. Navigate to [WHERE Clause Editor](#where-clause-editor) and select a column of the type Date *here: BUDAT* .
1. Delete the criterion "Value" and use the criterion "SQL" .
1. Within the "SQL" criterion, use the supported system fields for date and time with a preceding "@" character, *here: @sy-datum* .
1. Click **[Load live preview]** to check the result.

### Dynamic WHERE Clause with SSIS Variables

You can use SSIS variables and parameters as placeholders for filter values in the WHERE Clause. To parameterize the whole WHERE Clause, see [Parameterization using Expression Properties](../parameterization/#parameterization-using-expression-properties).

1. Define an SSIS variable / parameter. Make sure the data type of the variable matches the data type of the table records you want to filter.
1. Open the Xtract Table component and navigate to the WHERE Clause tab.
1. Click **[Editor mode]** to open the WHERE Clause Editor.
1. Add a new filter criteria and use the **[Default with Parameter]** template.
1. Click inside the *Parameter* component. A drop-down-list that displays all available SSIS variables and parameters opens. Select your SSIS variable / parameter from the list.
1. To test the WHERE clause, assign a default value for the SSIS variable and click **[Load live preview]**.
1. Click **[OK]** to save the component.

______________________________________________________________________

#### Related Links

- [Knowledge Base Article: Delta Table Extraction](../../../knowledge-base/delta-table-extraction/)
- [Knowledge Base Article: Working with Lists in the WHERE-Clause Editor](../../../knowledge-base/where-clause-editor-lists/)
- [Knowledge Base Article: LIKE Operand in WHERE Clauses](../../../knowledge-base/like-operand-where-clause/)

This page shows how to use the Xtract TableCDC component.\
The Xtract TableCDC component can be used to map data from SAP Tables to various target environments. Unlike a full data load, where all records in a table are transferred from the source to the target environment, Table CDC captures only the data changes since the last load.

Note

Table CDC is an Add-On that requires a separate license. For more information, contact Theobald Software's sales team at [sales@theobald-software.com](mailto:sales@theobald-software.com).

### About Table CDC

Change Data Capture (CDC) is a method to keep track of data changes such as insert, update and delete in SAP tables. The Table CDC component creates a log table in SAP that records any changes made to a selected table. The content of the log table is cleared after every successful run of the extraction. Data that was not extracted is not cleared from the log table.

For a detailed overview of this process, refer to the Knowledge Base article [Delta Mechanism of TableCDC](../../knowledge-base/table-cdc-mechanism/).

Note

Clusters, pool tables and views are not supported by the Xtract TableCDC component.

### System Requirements

- The Xtract TableCDC component is compatible with SAP ECC 5.0 and higher
- Supported databases:
  - HANA
  - SQL Server
  - Oracle
  - IBM Db2
  - IBM for i (Db4)
  - IBM for z/os (Db6)
  - MaxDB

### Prerequisites

- SAP custom function module [/THEO/CDC_ECC or /THEO/CDC_S4](../setup-in-sap/custom-function-module-for-tablecdc/) is installed in SAP.
- SAP custom function module [/THEO/READ_TABLE](../setup-in-sap/custom-function-module-for-table-extraction/) is installed in SAP.
- A connection to an SAP system is available, see [SAP Connection](../sap-connection/).
- The SAP user has sufficient user rights, see [SAP Authority Objects](../setup-in-sap/sap-authority-objects/#table-cdc).

The SAP transport requests for the function modules are provided in the installation directory: `C:\Program Files\XtracIS\ABAP\`, see [Custom function module for TableCDC](../setup-in-sap/custom-function-module-for-tablecdc/).

Warning

**Missing Authorization.**\
To use the Xtract Table CDC component, access to the designated authority objects (RFC) in SAP must be available. Adjust [SAP Authority Objects](../setup-in-sap/sap-authority-objects/#table) accordingly.

### Add an Xtract Table CDC Component

Follow the steps below to add an Xtract Table component to your SSIS package:

1. Drag&drop the Xtract Table CDC component from the SSIS toolbox into your data flow task.

1. Double-click the component. A connection manager is automatically assigned to the component and the main window of the component opens.

   Note

   If there are multiple connection managers, the window "Select Connection Manager" opens, see [SAP Connection](../sap-connection/#assign-connection-managers-to-xtract-components). Once a connection manager is selected, the main window of the component opens.

The majority of the functions of the component can be accessed in the main window.

### Look Up a Table

1. In the main window of the component, click **[]**. The window “Table Lookup” opens.
1. In the field **Table Name**, enter the name of the table to track and extract . Use wildcards (\*) if needed.
1. Click **[]** . Search results are displayed.
1. Select a table and click **[OK]**.

All relevant metadata information of the table is retrieved from SAP. The application returns to the main window of the component.

### Define the Xtract TableCDC Component

The Xtract TableCDC component offers the following options for tracking SAP tables:

1. Select the table columns you want to track and extract. By default all columns are selected. Deselect the columns you do not want to extract.

1. If you want to extract the table when first running the extraction, activate **[Extract table on first run]**.

1. Optional: You can set a maximum number of rows that the log table can contain. The default is disabled (Value 0). If the row limit is reached, the extraction fails with an exception. The maximum row limit of a log table is 500.000.

   Note

   Once a log table is initialized, you cannot change the size limit anymore.

1. Optional: Define a [WHERE Clause](where-clause/) to filter table records. By default all data is extracted.

1. Click **[Load live preview]** to display a live preview of the first 1000 records.

   - The column *TS_TIMESTAMP* contains a timestamp of when the data was last changed.
   - The column *TS_OPERATION* indicates if a row was inserted (I), updated (U) or deleted (D).

1. Check the [Settings](settings/) before running the SSIS package.

1. Click **[OK]** to confirm your settings.

To initialize the tracking of the selected SAP table, run the SSIS package once.

### Run the Extraction for the First Time

Run the extraction for the first time to create a log table in SAP that records any changes made to a selected table or view.

- If the option **[Extract table on first run]** in the Xtract TableCDC component is active, the extracted table contains the original SAP table.
- If the option **[Extract table on first run]** in the Xtract TableCDC component is not active, the extracted table is empty.

The log table in SAP is now available for the Table CDC component. The extracted SAP table is now available in your destination.

Note

When running the extraction regularly the content of the log table in SAP is extracted and written to the destination. The content of the log table in SAP is cleared after every successful run of the extraction. Data that was not extracted is not cleared.

### Delete Log Table and Triggers

When a Table CDC extraction is no longer in use or if you need to change the structure of the source table, simply deleting the extraction is not enough. To delete the log table and all associated triggers from your SAP system, open the Table CDC extraction and click **[Delete CDC resources]**.

To delete the SAP resources of multiple extractions or extractions that are already deleted, see [Active CDC Watches](active-cdc-watches/).

Warning

**Table change not possible**\
The source table cannot be changed, if any CDC-related resources connected to the source table in SAP exist.\
Clear the CDC-related resources connected to the source table in SAP, see [SAP Note 2284776](https://launchpad.support.sap.com/#/notes/2284776).

This page shows how to keep track of Xtract TableCDC log tables and triggers in your SAP system.\
The *Active CDC Watches* menu lists all active log tables and their DB triggers in the SAP source system. All listed Xtract TableCDC resources can be deleted from the SAP source system.

To open the *Active CDC Watches* menu, click **Show Active CDC Watches** in the main window of the extraction type.

### Active CDC Watches

#### Source Table

Name of the source table that is tracked by the Xtract TableCDC component.

#### Log Table

Name of the log table that tracks changes in the source table.

#### Created on

Timestamp when the log table was created.

#### Created by

SAP username that was used to create the initial log table.

#### Rows

Number of rows in the log table.

#### Show Details

Click **[]** to display more information about the DB triggers in the "CDC watch details" window.

#### Delete CDC resources

Click **[]** to delete the log table and all associated triggers from your SAP system.\
It is not possible to delete the log table and the triggers of the current extraction, see [Delete Log Table and DB Triggers](../#delete-log-table-and-triggers).

This page shows how to parameterize the Xtract TableCDC component using SSIS variables directly in the component and by using SSIS expressions to set *Data Flow Properties*.

### Parameterization using SSIS Variables

SSIS variables can be used to parameterize the WHERE Clause in the Xtract Table component, see [Dynamic WHERE Clause with SSIS Variables](../where-clause/#dynamic-where-clause-with-ssis-variables).

### Parameterization using Expression Properties

The recommended way of parameterization is to use SSIS expressions to set *Data Flow Properties*. *Data Flow Properties* are displayed in the "Properties" window of the Data Flow Task.

Note

*Data Flow Properties* are not to be confused with *Custom Properties* that are displayed in the "Properties" window of the component. When parameterizing the *Data Flow Properties*, the *Custom Properties* are overwritten.

For more information on property expressions, see [Microsoft Documentation: Use Property Expressions in Packages](https://learn.microsoft.com/en-us/sql/integration-services/expressions/use-property-expressions-in-packages).

1. Right-click the Data Flow canvas and select **Properties**. The window "Properties" opens.
1. Add an *Expression* by clicking using **[…]**. The window "Property Expression Editor" opens.
1. Select a property from the drop-down list under *Property*.
1. Open the "Expression Builder" using the **[…]** button under *Expression*.
1. Build your Expression and click **[Evaluate Expression]** to check for correct syntax.
1. Confirm your input with **[OK]**.

### Data Flow Properties of Xtract TableCDC

List of *Data Flow Properties* that can be parameterized:

| Property Name | Description | | --- | --- | | *[Xtract Table CDC].[ConvertsDates]* | Enable or disable conversion of SAP dates, see [ColumnNameStyle](#columnnamestyle). | | *[Xtract Table CDC].[InvalidDateReplacement]* | Every invalid value will be converted into the entered value, see [InvalidDateReplacement](#invaliddatereplacement). | | *[Xtract Table CDC].[MinDateReplacement]* | Converts the SAP date 00000000 to the entered value, see [MinDateReplacement](#mindatereplacement). | | *[Xtract Table CDC].[MaxDateReplacement]* | Converts the SAP date 9999XXXX to the entered value, see [MaxDateReplacement](#maxdatereplacement). |

### Custom Properties of Xtract TableCDC

The *Custom Properties* are properties that are unique to the component. When parameterizing the component using SSIS variables, the *Custom Properties* are overwritten.

The *Custom Properties* of the Xtract TableCDC component are displayed in the "Properties" window.

#### ColumnNameStyle

- *Code*: the SAP technical column name is used as column name in the output, e.g., MAKTX.
- *PrefixedCode*: the SAP technical column name is prefixed by SAP object name and the tilde character, e.g., MAKT~MAKTX.
- *CodeAndText*: the SAP technical column name and the SAP description separated by an underscore are used as column name in the output, e.g., MAKTX_Material Description (Short Text).
- *TextAndCode*: the SAP description and the SAP technical column name description separated by an underscore are used as column name in the destination e.g., Material Description (Short Text)\_MAKTX.

#### ConvertsDates

When this property is set to *True* (default) SAP date fields (YYYYMMDD) assume the SSIS pipeline type DT_DBDATE instead of DT_WSTR. For the date conversions to apply, set the property *UseLegacyDateConversion* to *False*. In case of invalid data in SAP date fields, the following date conversions are applied:

- *InvalidDateReplacement*
- *MaxDateReplacement*
- *MinDateReplacement*

#### InvalidDateReplacement

Replaces an invalid date format. The default value is *1970-01-02*. To use the property enter a replacement value for invalid SAP dates, such as '20190132' (January 32nd 2019) in the format yyyy-mm-dd. The value NULL is supported.

#### MaxDateReplacement

Replaces SAP dates with the year 9999. The default value is *2099-12-31*. To use the property enter a replacement value in the format yyyy-mm-dd that contains the year ‘9999’. Example: ‘99990101’ (January 1st 9999). The value NULL is supported.

#### MinDateReplacement

Replaces SAP dates with the year *0000*. The default value is *1970-01-01*. To use the property enter a replacement value in the format yyyy-mm-dd that contains the year '0000'. Example: '00000000'. The value NULL is supported.

______________________________________________________________________

#### Related Links

- [Xtract TableCDC Settings](../settings/)
- [Knowledge Base Article: Dynamization of WHERE Conditions](../../../knowledge-base/dynamization-of-where-conditions/)

This page contains an overview of the settings in the Xtract Table CDC component.\
To open the settings, click ****Settings**** in the main window of the component.

### Initial Load

#### Package size

The extracted data is split into packages of the defined size. The default value is 50000 lines.\
A package size between 20000 and 50000 is advisable for large amounts of data. 0 means no packaging. Not using packaging can lead to an RFC timeout for large data extractions.

Warning

**RFC_ERROR_SYSTEM_FAILURE - No more storage space available for extending an internal table**\
To avoid a memory overflow on the SAP source system and to avoid huge overheads, choose a package size that suits your memory capacity.

#### Extract data in background job

If *Background job timeout (seconds)* checkbox is activated, the table extraction is executed as a background job in SAP. This setting is optional and is supported in combination with function module THEO/READ_TABLE or Z_THEO_READ_TABLE version 2.0. Activate the setting *Background job timeout (seconds)* for long-running extractions with a large amounts of data that may run into a timeout error (“Time limit exceeded”), when using the foreground mode.

Tip

The extraction jobs can be found in the SAP JobLog (**SM37**) under the JobName *theo_read_table*.

Warning

**Shared Memory ran out of memory!**\
If this error message pops up when running an extraction in the background, adjust the size of the Shared Memory. SAP recommends a Shared Memory size of 800MB~1.5GB for a production/test system or 2GB~4GB for S/4 systems, see [SAP Support: How to solve SYSTEM_NO_SHM_MEMORY runtime error](https://ga.support.sap.com/dtp/viewer/#/tree/1080/actions/12107).

#### Background job timeout (seconds)

Sets a timeout period for extractions that run in background mode.\
The default value is 180 seconds. The maximum timeout value is 3600 seconds.

Note

The background job timeout setting only takes effect if the extractions run in background mode using [/THEO/READ_TABLE](../../setup-in-sap/custom-function-module-for-table-extraction/).

A WHERE clause can be used to filter table records, see [SAP ABAP Documentation: SELECT-WHERE](https://help.sap.com/doc/abapdocu_750_index_htm/7.50/en-us/abapwhere.htm). Enter WHERE clauses manually in *Text mode* or use the [WHERE Clause Editor](#where-clause-editor) in *Editor Mode*.

## Create a WHERE Clause

1. Open a Xtract Table CDC component.
1. Navigate to the tab *WHERE Clause*.
1. Enter a WHERE clause using the [WHERE Clause Editor](#where-clause-editor).
1. Click **[Load live preview]** to display the results in the *Preview* section.

## WHERE Clause Syntax

The WHERE Clause syntax generally uses the following structure:

```bash
[Table~Column][Operator][Filter-Value]

```

Filter values in the WHERE clause must use the internal SAP representation:

| Examples | Correct | Wrong | | --- | --- | --- | | Date: YYYYMMDD | 19990101 | 01.01.1999 | | Year Period: YYYYPPP | 1999001 | 001.1999 | | Numbers with leading zeroes, e.g., customer numbers | 0000001000 | 1000 |

The following operations are supported in the WHERE clause:

| Operator | Description | | --- | --- | | =, EQ | True if the content of operand1 is equal to the content of operand2. | | \<>, NE | True if the content of operand1 is not equal to the content of operand2. | | \<, LT | True if the content of operand1 is less than the content of operand2. | | >, GT | True if the content of operand1 is greater than the content of operand2. | | \<=, LE | True if the content of operand1 is less than or equal to the content of operand2. | | >=, GE | True if the content of operand1 is greater than or equal to the content of operand2. | | (NOT) LIKE | True if the value of operand1 matches (does not match) the pattern in operand2. | | (NOT) IN | True if the content of operand1 is (not) part of the content of operand2. Operand2 must be of type LIST or SQL. |

For more details on the OpenSQL syntax, see [SAP Help: Select WHERE](https://help.sap.com/doc/abapdocu_752_index_htm/7.52/en-US/abapwhere.htm?file=abapwhere.htm)

Tip

To increase extracting performance, make sure to place the indexed fields as the first selection filter operation in the WHERE clause.

## WHERE Clause Editor

There are 2 options for adding criteria to the WHERE clause:

- **[Add Criteria]** adds single criteria.

  - The default structure for a single criteria with static values is `[Table~Column][Operator][Filer-Value]` e.g., *MARC~WERKS = 1000*.

- **[Add Criteria Group]** adds a group of criteria.

  - The default structure for a criteria group is `([Table~Column1][Operator1][Filter-Value1][Boolean][Table~Column2][Operator2][Filter-Value2])` e.g., *(MARC~PSTAT = 'L' OR MARC~PSTAT = 'LB')*.

Tip

Combine multiple criteria and criteria groups to create complex filters e.g., *MARC~WERKS = 1000 AND (MARC~PSTAT = 'L' OR MARC~PSTAT = 'LB')* extracts only data where the column WERKS equals 1000 and the column PSTAT equals either 'L' or 'LB'.

### Components of the WHERE Clause Editor

The following buttons and options are available in the WHERE Clause Editor:

| Icon | Component | Function | | --- | --- | --- | | | Delete row | deletes a criteria. | | | Move row up | changes the sequence of the criteria. The selected criteria moves up. The sequence of criteria can also be changed with Drag and drop. | | | Move row down | changes the sequence of the criteria. The selected criteria moves down. The sequence of criteria can also be changed with Drag and drop. | | | Column | adds a column. Click on the component to select a column from the available tables. | | | SQL | adds an Open SQL statement, see [SAP Help: Open SQL](https://help.sap.com/doc/abapdocu_750_index_htm/7.50/en-us/abenopensql.htm). | | | Operator | adds an operator e.g., =, \<, >, etc. | | | Value | adds a static value of type *String*, *Number*, *Flag* or *List*. *List* offers a separate editor to create lists of type *String*, *Number* or *Select*. *Select* enables usage of SELECT statements. For more information, see [Working with Lists in the WHERE-Clause Editor](../../../knowledge-base/where-clause-editor-lists/). | | | Criteria | adds a new criteria after the selected criteria. | | | Group | adds a new group of criteria the selected criteria. |

Note

When adding or editing a criteria only the relevant components are displayed e.g., **Add Operator** is only available if there is a column or SQL statement to use an operator on.

#### Edit and Delete Components

- Click on a component to edit it. All areas that are marked green can be edited.
- To delete a component, click the (x) icon above the component.

### SAP System Fields

You can use [SAP system fields for date and time](https://help.sap.com/doc/abapdocu_751_index_htm/7.51/en-US/abentime_system_fields.htm) in a WHERE clause. The usage of SAP system fields requires SAP NW 7.4 SP5 or higher and the custom function module [/THEO/READ_TABLE](../../setup-in-sap/custom-function-module-for-table-extraction/#installation-of-theoread_table).

Example:

1. Navigate to [WHERE Clause Editor](#where-clause-editor) and select a column of the type Date *here: BUDAT* .
1. Delete the criterion "Value" and use the criterion "SQL" .
1. Within the "SQL" criterion, use the supported system fields for date and time with a preceding "@" character, *here: @sy-datum* .
1. Click **[Load live preview]** to check the result.

### Dynamic WHERE Clause with SSIS Variables

You can use SSIS variables and parameters as placeholders for filter values in the WHERE Clause. To parameterize the whole WHERE Clause, see [Parameterization using Expression Properties](../parameterization/#parameterization-using-expression-properties).

1. Define an SSIS variable / parameter. Make sure the data type of the variable matches the data type of the table records you want to filter.
1. Open the Xtract Table component and navigate to the WHERE Clause tab.
1. Click **[Editor mode]** to open the WHERE Clause Editor.
1. Add a new filter criteria and use the **[Default with Parameter]** template.
1. Click inside the *Parameter* component. A drop-down-list that displays all available SSIS variables and parameters opens. Select your SSIS variable / parameter from the list.
1. To test the WHERE clause, assign a default value for the SSIS variable and click **[Load live preview]**.
1. Click **[OK]** to save the component.

______________________________________________________________________

#### Related Links

- [Knowledge Base Article: Working with Lists in the WHERE-Clause Editor](../../../knowledge-base/where-clause-editor-lists/)
- [Knowledge Base Article: LIKE Operand in WHERE Clauses](../../../knowledge-base/like-operand-where-clause/)
# Knowledge Base Articles

This section contains in-depth articles and sample use cases for Xtract IS.

### Xtract IS

- [Determine the Azure SSIS-IR Cluster ID](determine-the-azure-cluster-ID/)
- [Execute SSIS Packages between Cloud Data Stores and a Private Network Data Storage](execute-ssis-packages-between-cloud-data-stores-and-a-private-network-data-storage/)

______________________________________________________________________

### SAP

- [Check the Accessibility to an SAP System](check-the-accessibility-to-an-sap-system/)
- [Authorize Access to Reports via Authorization Groups](authorize-access-to-specific-reports/)
- [Create /Configure the Custom Authorization Object Z_TS_PROG](create-the-custom-authority-object-z-ts-prog/)
- [Enable Secure Network Communication (SNC) via X.509 certificate](enable-snc-using-pse-file/)
- [Import an SAP Transport Request](import-an-sap-transport-request/)
- [Register an RFC Server in SAP with Kernel Release 720 and higher](register-rfc-server-in-sap-releases-in-kernel-release-720-and-higher/)
- [Supported SAP S/4HANA Versions](supported-sap-and-hana-versions/)

______________________________________________________________________

### Xtract BAPI

- [Read Data from Cluster Fields in Tables PCL1 and PCL2 (Payroll)](read-data-from-cluster-fields-in-the-tables-pcl1-and-pcl2-payroll/)
- [Write CATS Data to SAP](write-cats-data-to-sap/)
- [Write Product Data to SAP](write-product-data-to-sap/)

______________________________________________________________________

### Xtract DeltaQ

- [Create Generic DataSources](create-generic-datasource-using-function-module-and-timestamps/)
- [Register an RFC Server in SAP with Kernel Release 720 and higher](register-rfc-server-in-sap-releases-in-kernel-release-720-and-higher/)
- [SNC Authentication for DeltaQ and OHS](snc-authentication-for-deltaq/)

______________________________________________________________________

### ODP

- [Alternatives for Xtract ODP](alternatives-for-odp/)

______________________________________________________________________

### Xtract Report

- [Authorize Access to Reports via Authorization Groups](authorize-access-to-specific-reports/)
- [Create / Configure the Custom Authorization Object Z_TS_PROG](create-the-custom-authority-object-z-ts-prog/)
- [Extract Reports with ALV Layouts](extract-report-layouts/)
- [Parse Reports in Xtract IS](parse-reports/)

______________________________________________________________________

### Xtract Table

- [Extraction Mechanism of Table](table-extraction-mechanism/)
- [Delta Table Extraction](delta-table-extraction/)
- [Dynamization of WHERE Conditions](dynamization-of-where-conditions/)
- [Read Data from Cluster Fields in Tables PCL1 and PCL2 (Payroll)](read-data-from-cluster-fields-in-the-tables-pcl1-and-pcl2-payroll/)
- [Working with Lists in the WHERE-Clause Editor](where-clause-editor-lists/)
- [Working with LIKE operand in WHERE-Clauses](like-operand-where-clause/)

______________________________________________________________________

### Xtract Table CDC

- [Delta Mechanism of Table CDC](table-cdc-mechanism/)
- [Initial Table Load in SAP Versions < 7.10](table-cdc-initial-table-load/)

The following article shows how to replace most Xtract ODP [provider contexts](../../documentation/odp/provider-context/) with other components.

| Provider Context | Alternative | | --- | --- | | ABAP Core Data Services \[[ABAP_CDS](../../documentation/odp/provider-context/#abap-cds-views)\] | [Xtract Table](../../documentation/table/) | | HANA Information Views \[[HANA](../../documentation/odp/provider-context/#hana-views)\] | [Xtract Table](../../documentation/table/) [Xtract BWCube](../../documentation/bwcube/) | | SAP NetWeaver Business Warehouse or BW4/HANA \[[BW](../../documentation/odp/provider-context/#bw-infoproviders)\] | [Xtract BWCube](../../documentation/bwcube/) [Xtract Table](../../documentation/table/) [Xtract TableCDC](../../documentation/table-cdc/) [Xtract DeltaQ](../../documentation/deltaq/) [Xtract OHS](../../documentation/ohs/) | | Datasources/Extractors \[[SAPI](../../documentation/odp/provider-context/#extractors)\] | [Xtract DeltaQ](../../documentation/deltaq/) | | SAP LT Queue Alias \[[SLT~your_queue_alias](../../documentation/odp/provider-context/#slt-server)\] | [Xtract Table](../../documentation/table/) [Xtract TableCDC](../../documentation/table-cdc/) |

### Extract Data from CDS Views

Alternative for the *ABAP Core Data Services [ABAP_CDS]* provider context:\
To extract data from CDS Views, use the [Xtract Table](../../documentation/table/) component.

Note

When looking up CDS Views in Xtract IS, make sure to look up the name of the DDL SQL View (CDS Database View) instead of the CDS View name.

### Extract Data from HANA Views

Alternative for the *HANA Information Views [HANA]* provider context:\
To extract data from HANA Views, use the [Xtract BWCube](../../documentation/bwcube/) component or the [Xtract Table](../../documentation/table/) component.

- **Extraction via Xtract Table**

  ______________________________________________________________________

  - In SAP, expose the HANA View to ABAP CDS Views, see [SAP Community: How to consume HANA Calculation views in S/4HANA CDS views](https://community.sap.com/t5/technology-blogs-by-members/how-to-consume-hana-calculation-views-in-s-4hana-cds-views/ba-p/13476798).
  - Extract the CDS View using the [Xtract Table](../../documentation/table/) component.

- **Extraction via Xtract BWCube**

  ______________________________________________________________________

  - In SAP, expose the HANA View to CompositeProviders, see [SAP Learning: Consuming a Calculation View with SAP BW/4HANA](https://learning.sap.com/learning-journeys/upgrading-your-sap-bw-skills-to-sap-bw-4hana/consuming-a-calculation-view-with-sap-bw-4hana_ac069075-173b-41fb-bb35-b950b213d407)
  - Extract the CompositeProvider using the [Xtract BWCube](../../documentation/table/) component.

### Extract Data from BW Systems (CompositeProviders, Cubes, InfoObjects, etc.)

Alternative for the *SAP NetWeaver Business Warehouse or BW4/HANA [BW]* provider context:

- To extract data from CompositeProviders, InfoCubes, MultiProviders, aDSO/DSOs etc., use the [Xtract BWCube](../../documentation/bwcube/) component.
- To extract data from InfoObjects (Master data, Text data or Hierarchies), look up the respective tables (P, T, H) in the [Xtract Table](../../documentation/table/) component.
- To extract data from Hierarchy InfoObjects, use the [Xtract Hierarchy](../../documentation/hierarchy/) component.
- To extraxt data from Infocubes and DSOs, convert the Infocubes and DSOs to DataSources and extract the DataSources using the [Xtract DeltaQ](../../documentation/table/) component.
- If you use Open Hub Service (OHS) destinations that can receive data from Cubes, DSOs, aDSOs etc., the data can be extracted using the [Xtract OHS](../../documentation/ohs/) component. You can also run the process chain that writes data to OHS within SAP BW.
  - To extract the data from OHS tables, use the [Xtract Table](../../documentation/table/) component.
  - To extract delta changes (Inserts, Updates, Deletes) from an OHS table, use the [Xtract TableCDC](../../documentation/table-cdc/) component.

### Extract Data from Extractors

Alternative for the *Datasources/Extractors [SAPI]* provider context:\
To extract data from Extractors, use the [Xtract DeltaQ](../../documentation/deltaq/) component.

### Extract Data from Tables

Alternative for the *SAP LT Queue Alias [SLT~your_queue_alias]* provider context:

- To extract data from regular (application) tables, cluster or pooled tables, use the [Xtract Table](../../documentation/table/) component.
- To extract delta changes (Inserts, Updates, Deletes), use the [Xtract TableCDC](../../documentation/table-cdc/) component.

______________________________________________________________________

#### Related Links

- [Guidance on SAP Note 3255746 for Theobald Software Xtract Products](https://theobald-software.com/en/products-technology-en/guidance-on-sap-note-3255746-for-theobald-software-xtract-products/).

The following article shows how to set up access to reports by assigning authorization groups to reports.\
Access is then granted through the S_PROGRAM authorization object, see [SAP Note 338177](https://launchpad.support.sap.com/#/notes/338177).

### Set Up Access to Specific Reports

1. Log into SAP and use transaction code SE38 to open the ABAP Editor.
1. Enter the name of the report you want to access and select **Attributes** as the *Subobjects*.
1. Click **[Change]**. A window that contains the program attributes opens.
1. Assign an authorization group.
1. Edit or create a user role you want to grant access to (transaction code PFCG).
1. Manually assign the authorization object S_PROGRAM to the user role.
1. Select the actions **SUBMIT** and **BTCSUBMIT** in the S_PROGRAM object field *P_ACTION*.
1. Assign the same authorization group that is assigned to the report to the S_PROGRAM object field *P_GROUP*.
1. Save and generate the authorization.
1. Assign the user role to users.

______________________________________________________________________

#### Related Links

- [Create the Custom Authorization Object Z_TS_PROG](../create-the-custom-authority-object-z-ts-prog/)
- [SAP Authorization Objects for Reports](../../documentation/setup-in-sap/sap-authority-objects/#report)
- [Documentation: Report](../../documentation/report/)

The following article shows how to load data incrementally (daily) from an SAP Table with no delta pointers / date fields. The depicted example scenario uses two tables:

- MAKT (Material Descriptions), which has no date fields.
- CDHDR (Change Documents Header), which holds the header information of the changed records. CDHDR is used to determine the delta information of MAKT and other tables.

### Prerequisites

- Prepare a record for the delta extraction:\
  Change the description of a material in MAKT, e.g., change the description “ABC” of material 2593 to "Test_delta”.
- Check if CDHDR registered the change:\
  Filter the field UPDATE for today's date. The change made in MAKT should be listed.

### Daily Data Extraction

The following steps describe how to only extract the data from MAKT that has been changed on today’s date.

1. Create a new Table extraction.

1. Look up the tables MAKT and CDHDR.

1. Select the fields OBJECTID and UDATE from CDHDR for the output.

   - OBJECTID contains information about the Key on which the changes are made. This field is used for joining the tables and to get the delta data from MAKT.
   - UDATE contains the date on which updates occurred. This field is used to filter the data for specific dates.

1. Select the fields you want to extract from MAKT for the output (MATNR is mandatory).

1. Open the tab *Joins* and click **[Add]**. The window "Join" opens.

1. Select the join type *INNER_JOIN* to combine the tables CDHDR and MAKT. The OBJECTID from CDHDR and MATNR from MAKT have same entries and thus form an inner join condition.

1. Click **[Add]** and confirm your selection with **[OK]**.

1. Open the tab *WHERE Clause* and enter the following filter criteria:

   ```text
   CDHDR~UDATE = '#{ DateTime.Now.ToString("yyyyMMdd") }#'

   ```

   This criteria uses script expressions to get the current date in the SAP format ("yyyyMMdd").

1. Click **[Load live review]** to check the results. Only the data in MAKT that has been changed on today's date is extracted.

1. Schedule the SSIS package daily.

Tip

To extract all changes of the day before, change the WHERE clause to `CDHDR~UDATE >= '#{ DateTime.Now.AddDays(-1).ToString("yyyyMMdd") }#'` and schedule the extraction every night at 1p.m. or later.

______________________________________________________________________

#### Related Links

- [Delta Table Extraction](../delta-table-extraction/)
- [Xtract Table: WHERE Clause](../../documentation/table/where-clause/)

The following article shows how to check the accessibility of an SAP system using the [paping.exe](https://code.google.com/archive/p/paping) tool. Alternatively, you can also use the Microsoft [telnet](https://learn.microsoft.com/de-de/windows-server/administration/windows-commands/telnet) tool.

Sometimes the firewall is blocking the traffic to the SAP System. This could be a local firewall, but also a firewall in the destination network. You can use the paping.exetool to ping the port and to check if the firewall is open.

### Ping the SAP System

Use the following syntax with paping.exe:

```console
paping.exe SAPServer -p port -c 3*

```

```console
paping.exe 192.168.0.9 -p 3305 -c 3

```

### Port Numbers

If an SAP-Router is used, the ports are 3299 and 3399.\
If not, the ports are 32XX and 33XX. XX is usually the system number, e.g., 00, or 05.

Some important port numbers:

```console
sapdp00 3200/tcp # SAP Dispatcher. 3200 + Instance-Number
sapgw00 3300/tcp # SAP Gateway. 3300 + Instance-Number
sapsp00 3400/tcp # 3400 + Instance-Number
sapms00 3500/tcp # 3500 + Instance-Number
sapmsSID 3600/tcp # SAP Message Server. 3600 + Instance-Number
sapgw00s 4800/tcp # SAP Secure Gateway 4800 + Instance-Number

```

This article shows how to create generic DataSources for delta extractions in SAP using a function module and timestamps.

### About Delta Functionality with Delta fields

To use the delta functionality, a delta field is required. Certain tables like VBAK (Sales Document: Header Data) do not have a timestamp field for creation/change that can be uses as a unique delta field, but they have separate fields for creation date (**ERDAT**), creation time (**ERZET**) and change date (**AEDAT**). To get the delta data of the VBAK table, we create a generic DataSource using a custom function module that implements the necessary logic.

This article leads you through all necessary steps to create an extraction structure that has a timestamp field that can be used to implement the delta functionality.

There are two template function modules that can be copied and used:

- RSAX_BIW_GET_DATA_SIMPLE: A function module with simple interface for *Full Load* with no support of delta loads.
- RSAX_BIW_GET_DATA: : A function module with complete interface that supports *Delta Load*.

### Step 1: Create an Extract Structure

Follow the steps below to create the extract structure for the DataSource:

1. Use SAP transaction SE11 to create a new structure ZZVBAK.
1. Insert the table VBAK as an include into the structure.
1. Add a field ZTMSTMP(Data element: TZNTSTMPS, it is of datatype DEC with Length 15). This field holds the timestamp and allow us to use the extraction for delta purposes.
1. Save and activate the structure.

### Step 2: Create the Function Module

1. Use SAP transaction SE80 to copy the function group RSAX to the new function group Z_RSAX and to copy the function module RSAX_BIW_GET_DATA to Z_RSAX_BIW_GET_DATA_VBAK.

1. Be sure to copy and activate all the related objects (interfaces, datatypes etc.).

1. Use SAP transaction SE37 to open and edit the function module Z_RSAX_BIW_GET_DATA_VBAK. In the tab *Tables*, set the parameter E_T_DATA to associated type ZZVBAK.

1. Navigate to the tab *source code* and paste the following ABAP Code.

   ABAP Code for the Custom Function Module

   ```ABAP
   FUNCTION Z_RSAX_BIW_GET_DATA_VBAK.
   *"----------------------------------------------------------------------
   *"*"Local Interface:
   *"  IMPORTING
   *"     VALUE(I_REQUNR) TYPE  SBIWA_S_INTERFACE-REQUNR
   *"     VALUE(I_ISOURCE) TYPE  SBIWA_S_INTERFACE-ISOURCE OPTIONAL
   *"     VALUE(I_MAXSIZE) TYPE  SBIWA_S_INTERFACE-MAXSIZE OPTIONAL
   *"     VALUE(I_INITFLAG) TYPE  SBIWA_S_INTERFACE-INITFLAG OPTIONAL
   *"     VALUE(I_UPDMODE) TYPE  SBIWA_S_INTERFACE-UPDMODE OPTIONAL
   *"     VALUE(I_DATAPAKID) TYPE  SBIWA_S_INTERFACE-DATAPAKID OPTIONAL
   *"     VALUE(I_PRIVATE_MODE) OPTIONAL
   *"     VALUE(I_CALLMODE) LIKE  ROARCHD200-CALLMODE OPTIONAL
   *"     VALUE(I_REMOTE_CALL) TYPE  SBIWA_FLAG DEFAULT SBIWA_C_FLAG_OFF
   *"  TABLES
   *"      I_T_SELECT TYPE  SBIWA_T_SELECT OPTIONAL
   *"      I_T_FIELDS TYPE  SBIWA_T_FIELDS OPTIONAL
   *"      E_T_ZZVBAK STRUCTURE  ZZVBAK OPTIONAL
   *"  EXCEPTIONS
   *"      NO_MORE_DATA
   *"      ERROR_PASSED_TO_MESS_HANDLER
   *"----------------------------------------------------------------------


   * THE INPUT PARAMETER I_DATAPAKID IS NOT SUPPORTED YET !


   * EXAMPLE: INFOSOURCE CONTAINING TADIR OBJECTS
   *  TABLES: TADIR.


   * AUXILIARY SELECTION CRITERIA STRUCTURE
     DATA: L_S_SELECT TYPE SBIWA_S_SELECT,
           STARTDATE LIKE SY-DATUM,
           STARTTIME LIKE SY-UZEIT,
           ENDDATE LIKE SY-DATUM,
           ENDTIME LIKE SY-UZEIT,
           TSTAMP LIKE TZONREF-TSTAMPS.


   * MAXIMUM NUMBER OF LINES FOR DB TABLE
     STATICS: L_MAXSIZE TYPE SBIWA_S_INTERFACE-MAXSIZE.


   * SELECT RANGES
     RANGES:  L_R_TMPSTMP FOR ZZVBAK-ZTMSTMP.


   * PARAMETER I_PRIVATE_MODE:
   * SOME APPLICATIONS MIGHT WANT TO USE THIS FUNCTION MODULE FOR OTHER
   * PURPOSES AS WELL (E.G. DATA SUPPLY FOR OLTP REPORTING TOOLS). IF THE
   * PROCESSING LOGIC HAS TO BE DIFFERENT IN THIS CASE, USE THE OPTIONAL
   * PARAMETER I_PRIVATE_MODE (NOT SUPPLIED BY BIW !) TO DISTINGUISH
   * BETWEEN BIW CALLS (I_PRIVATE_MODE = SPACE) AND OTHER CALLS
   * (I_PRIVATE_MODE = X).
   * IF THE MESSAGE HANDLING HAS TO BE DIFFERENT AS WELL, DEFINE YOUR OWN
   * MESSAGING MACRO WHICH INTERPRETS PARAMETER I_PRIVATE_MODE. WHEN
   * CALLED BY BIW, IT SHOULD USE THE LOG_WRITE MACRO, OTHERWISE DO WHAT
   * YOU WANT.


   * INITIALIZATION MODE (FIRST CALL BY SAPI) OR DATA TRANSFER MODE
   * (FOLLOWING CALLS) ?
     IF I_INITFLAG = SBIWA_C_FLAG_ON.

   ************************************************************************

   * INITIALIZATION: CHECK INPUT PARAMETERS
   *                 BUFFER INPUT PARAMETERS
   *                 PREPARE DATA SELECTION
   ************************************************************************


   * THE INPUT PARAMETER I_DATAPAKID IS NOT SUPPORTED YET !


   * INVALID SECOND INITIALIZATION CALL -> ERROR EXIT
       IF NOT G_FLAG_INTERFACE_INITIALIZED IS INITIAL.

         IF 1 = 2. MESSAGE E008(R3). ENDIF.
         LOG_WRITE 'E'                    "MESSAGE TYPE
                   'R3'                   "MESSAGE CLASS
                   '008'                  "MESSAGE NUMBER
                   ' '                    "MESSAGE VARIABLE 1
                   ' '.                   "MESSAGE VARIABLE 2
         RAISE ERROR_PASSED_TO_MESS_HANDLER.
       ENDIF.


   * CHECK INFOSOURCE VALIDITY
       CASE I_ISOURCE.
         WHEN 'ZDSVBAK' OR ''.
         WHEN OTHERS.
           IF 1 = 2. MESSAGE E009(R3). ENDIF.
           LOG_WRITE 'E'                  "MESSAGE TYPE
                     'R3'                 "MESSAGE CLASS
                     '009'                "MESSAGE NUMBER
                     I_ISOURCE            "MESSAGE VARIABLE 1
                     ' '.                 "MESSAGE VARIABLE 2
           RAISE ERROR_PASSED_TO_MESS_HANDLER.
       ENDCASE.


   * CHECK FOR SUPPORTED UPDATE MODE
       CASE I_UPDMODE.
         WHEN 'F' OR ''.
         WHEN 'C'.  "
         WHEN 'R'.  "
         WHEN 'S'.  " DELTA INITIALIZATION
         WHEN 'I'.    " DELTA INIT FOR NON CUMMULATIVE
         WHEN 'D'.   " DELTA UPDATE
         WHEN OTHERS.
           IF 1 = 2. MESSAGE E011(R3). ENDIF.
           LOG_WRITE 'E'                  "MESSAGE TYPE
                     'R3'                 "MESSAGE CLASS
                     '011'                "MESSAGE NUMBER
                     I_UPDMODE            "MESSAGE VARIABLE 1
                     ' '.                 "MESSAGE VARIABLE 2
           RAISE ERROR_PASSED_TO_MESS_HANDLER.
       ENDCASE.


   * CHECK FOR OBLIGATORY SELECTION CRITERIA
   *    READ TABLE I_T_SELECT INTO L_S_SELECT WITH KEY FIELDNM = 'ZTMSTMP'.
   *    IF SY-SUBRC <> 0.
   *      IF 1 = 2. MESSAGE E010(R3). ENDIF.
   *      LOG_WRITE 'E'                    "MESSAGE TYPE
   *                'R3'                   "MESSAGE CLASS
   *                '010'                  "MESSAGE NUMBER
   *                'PGMID'                "MESSAGE VARIABLE 1
   *                ' '.                   "MESSAGE VARIABLE 2
   *      RAISE ERROR_PASSED_TO_MESS_HANDLER.
   *    ENDIF.

       APPEND LINES OF I_T_SELECT TO G_T_SELECT.


   * FILL PARAMETER BUFFER FOR DATA EXTRACTION CALLS
       G_S_INTERFACE-REQUNR    = I_REQUNR.
       G_S_INTERFACE-ISOURCE   = I_ISOURCE.
       G_S_INTERFACE-MAXSIZE   = I_MAXSIZE.
       G_S_INTERFACE-INITFLAG  = I_INITFLAG.
       G_S_INTERFACE-UPDMODE   = I_UPDMODE.
       G_S_INTERFACE-DATAPAKID = I_DATAPAKID.
       G_FLAG_INTERFACE_INITIALIZED = SBIWA_C_FLAG_ON.


   * FILL FIELD LIST TABLE FOR AN OPTIMIZED SELECT STATEMENT
   * (IN CASE THAT THERE IS NO 1:1 RELATION BETWEEN INFOSOURCE FIELDS
   * AND DATABASE TABLE FIELDS THIS MAY BE FAR FROM BEEING TRIVIAL)
       APPEND LINES OF I_T_FIELDS TO G_T_SEGFIELDS.

     ELSE.                 "INITIALIZATION MODE OR DATA EXTRACTION ?

   ************************************************************************

   * DATA TRANSFER: FIRST CALL      OPEN CURSOR + FETCH
   *                FOLLOWING CALLS FETCH ONLY
   ************************************************************************


   * FIRST DATA PACKAGE -> OPEN CURSOR
       IF G_COUNTER_DATAPAKID = 0.
         "LOOP AT I_T_SELECT INTO L_S_SELECT WHERE FIELDNM = 'ZTMSTMP'.
          LOOP AT G_T_SELECT INTO L_S_SELECT WHERE FIELDNM = 'ZTMSTMP'.

           TSTAMP = L_S_SELECT-LOW.
           CONVERT TIME STAMP TSTAMP TIME ZONE SY-ZONLO INTO DATE STARTDATE TIME STARTTIME.
           TSTAMP = L_S_SELECT-HIGH.
           CONVERT TIME STAMP TSTAMP TIME ZONE SY-ZONLO INTO DATE ENDDATE TIME ENDTIME.
         ENDLOOP.

   * FILL RANGE TABLES FOR FIXED INFOSOURCES. IN THE CASE OF GENERATED
   * INFOSOURCES, THE USAGE OF A DYNAMICAL SELECT STATEMENT MIGHT BE
   * MORE REASONABLE. BIW WILL ONLY PASS DOWN SIMPLE SELECTION CRITERIA
   * OF THE TYPE SIGN = 'I' AND OPTION = 'EQ' OR OPTION = 'BT'.
   *      LOOP AT G_T_SELECT INTO L_S_SELECT WHERE FIELDNM = 'PGMID'.
   *        MOVE-CORRESPONDING L_S_SELECT TO L_R_PGMID.
   *        APPEND L_R_PGMID.
   *      ENDLOOP.


   *      LOOP AT G_T_SELECT INTO L_S_SELECT WHERE FIELDNM = 'OBJECT'.
   *        MOVE-CORRESPONDING L_S_SELECT TO L_R_OBJECT.
   *        APPEND L_R_OBJECT.
   *      ENDLOOP.


   * DETERMINE NUMBER OF DATABASE RECORDS TO BE READ PER FETCH STATEMENT
   * FROM INPUT PARAMETER I_MAXSIZE. IF THERE IS A ONE TO ONE RELATION
   * BETWEEN INFOSOURCE TABLE LINES AND DATABASE ENTRIES, THIS IS TRIVIAL.
   * IN OTHER CASES, IT MAY BE IMPOSSIBLE AND SOME ESTIMATED VALUE HAS TO
   * BE DETERMINED.
         L_MAXSIZE = G_S_INTERFACE-MAXSIZE.
         IF ENDDATE <> '00000000' AND ENDTIME <> '000000'.
           OPEN CURSOR WITH HOLD G_CURSOR FOR
       SELECT * FROM VBAK
         WHERE
         (
           ( ERDAT >= STARTDATE AND ERZET >= STARTTIME AND ERDAT <= ENDDATE AND ERZET <= ENDTIME )
           OR ( AEDAT >= STARTDATE AND  AEDAT <= ENDDATE )
         ).
         ELSE.
           OPEN CURSOR WITH HOLD G_CURSOR FOR
            SELECT * FROM VBAK.
         ENDIF.
       ENDIF.                             "FIRST DATA PACKAGE ?


   * FETCH RECORDS INTO INTERFACE TABLE. THERE ARE TWO DIFFERENT OPTIONS:
   * - FIXED INTERFACE TABLE STRUCTURE FOR FIXED INFOSOURCES HAVE TO BE
   *   NAMED E_T_'NAME OF ASSIGNED SOURCE STRUCTURE IN TABLE ROIS'.
   * - FOR GENERATING APPLICATIONS LIKE LIS AND CO-PA, THE GENERIC TABLE
   *   E_T_DATA HAS TO BE USED.
   * ONLY ONE OF THESE INTERFACE TYPES SHOULD BE IMPLEMENTED IN ONE API !
       FETCH NEXT CURSOR G_CURSOR
                  APPENDING CORRESPONDING FIELDS
                  OF TABLE E_T_ZZVBAK
                  PACKAGE SIZE 1000.
   * PACKAGE SIZE L_MAXSIZE.

       IF SY-SUBRC <> 0.
         CLOSE CURSOR G_CURSOR.
         RAISE NO_MORE_DATA.
       ENDIF.

       G_COUNTER_DATAPAKID = G_COUNTER_DATAPAKID + 1.

     ENDIF.              "INITIALIZATION MODE OR DATA EXTRACTION ?

   ENDFUNCTION.

   ```

1. Save and activate the function module.

### Step 3: Create the DataSource

1. Use SAP transaction RSO2 to create a new DataSource for transaction data and name it to ZDSVBAK.

1. Set the Application component and the description texts.

1. Click **[Extraction by FM]**. Enter the name of the function module Z_RSAX_BIW_GET_DATA_VBAK and the extract structure ZZVBAK.

1. Click **[Generic Delta]**. Select the timestamp field ZTMSTMP and activate the option **[Time stamp]**.

1. Optional: set the *Safety Interval Lower Limit*.

1. Click **[Save]** twice. In the following screen you can set the selection fields. The timestamp field is disabled, because it is automatically populated as part of the delta process.

1. Use SAP transaction RSA2 to see the details of our DataSource ZDSVBAK. The extraction method is set to *F2 (Simple Interface)*. Change it to *F1 (Complete Interface)* by executing the following ABAP code.

   Tip

   Use SAP transaction SE38 to create a new report with this ABAP code. Unfortunately this is not possible in the GUI.

   ```ABAP
   REPORT ZABAPDEMO
   UPDATE roosource
   SET delta = 'E'
   exmethod = 'F1'
   genflag = 'X'
   WHERE oltpsource = 'ZDSVBAK'

   ```

1. Use SAP transaction RSA2 to display the status of the DataSource ZDSVBAK. Confirm that the **Extraction Mode** is set to *F1*.

1. Check for errors.

1. Optional: use SAP transaction SE37 and call it twice to test the function module. The first call is for the initialization and the second call reads the data. Make sure that the table E_T_DATA contains the data.

### Step 4: Test the DataSource

Use SAP transaction RSA3 to test the datasource.

Now the DataSource is created and you can use the Xtract DeltaQ component to read it. Be sure to activate the DataSource using the **[Activate]** button in the main window of the component.

### Result

The DataSource supports the *Full* and *Update Delta* mode. To use the*Update Delta* mode, the first call must have the update type *C (Delta Initialization)*. All following calls must have the update type *D (Delta Update)*.

The delta process of the DataSource can be monitored and maintained in SAP transaction RSA7 (Delta Queue).

The following article shows how to create the Z_TS_PROG authorization object for the custom function module The Theobald Software custom function module [Z_XTRACT_IS_REMOTE_REPORT](../../documentation/setup-in-sap/custom-function-module-for-reports/) enables the extractions of reports from SAP systems.

The Theobald Software custom function module Z_XTRACT_IS_REMOTE_REPORT enables the extractions of reports from SAP systems. If no authorization group is assigned to a report, Z_XTRACT_IS_REMOTE_REPORT uses a custom authorization object Z_TS_PROG to verify whether the SAP user is allowed to extract a report. The access to reports is granted based on the name of the report.

### Create the Custom Authorization Object Z_TS_PROG

1. Use transaction SU21 to create a new authorization object.
1. Expand the *Create* menu and click **[Authorization Object]**. The window "Create Authorization Object" opens.
1. Enter the following values:\
   **Object:** Z_TS_PROG\
   **Text:** Theobald Software Report Authorization
1. Click **[Continue]** to enable editing of the section *Authorization fields*.
1. Manually enter S_NAME as the first entry in *Authorization fields*.
1. Click **[Save]** to save the authorization object.

### Configure the Custom Authorization Object Z_TS_PROG

1. Either download the provided [SAP role](../../documentation/setup-in-sap/sap-authority-objects/#sap-authorization-profiles) or manually [create the Custom Authorization Object Z_TS_PROG](#create-the-custom-authorization-object-z_ts_prog).
1. Enter the change mode within the "Role Maintenance" window to configure the object.
1. Navigate to *Authorizations* and click *Change Authorization Data* (). The window "Change Role: Authorizations" opens.
1. Expand the tree view **Basis: Administration > Theobald Software authorization for reports**.
1. Click **[]**. The window "Field values" opens.
1. Enter the names of relevant ABAP reports and transfer the corresponding values.

______________________________________________________________________

#### Related Links

- [Authorize Access to Reports via Authorization Groups](../authorize-access-to-specific-reports/)
- [SAP Authorization Objects for Reports](../../documentation/setup-in-sap/sap-authority-objects/#report)

The following article shows how to load data incrementally (daily) from an SAP Table based on date fields. The depicted example scenarios use the table VBAK (SAP Sales Document Header), which has two date fields:

- ERDAT for creation date
- AEDAT for update date

### Extract Data using a Date Parameter

The depicted example extracts data that was created or changed after a specific date. The date is provided as a parameter at runtime.

1. Create a new Xtract Table extraction.

1. Look up a table you want to extract data from, e.g., VBAK.

1. Open the WHERE clause tab of theXtract Table component and enter the following criterion:

   ```text
   ( VBAK~ERDAT GE @LastDate AND VBAK~AEDAT EQ '00000000' ) OR VBAK~AEDAT GE @LastDate

   ```

   This criterion extracts data if one of the following conditions is true:

   - The data was created (ERDAT) after the date provided by the parameter `@LastDate` and it has not been changed (AEDAT).
   - The data has changed (ARDAT) after the date provided by the parameter `@LastDate`.

1. Click **[OK]** to confirm your input.

1. Create a SSIS variable `LastDate` of type string.

1. Enter a value for `LastDate` in the format `YYYYmmDD` when running the SSIS package.

1. Check the results.

### Daily Data Extraction

The depicted example extracts data that was created or changed the day before. The depicted example uses script expressions to query the current date.

1. Create a new Table extraction.

1. Look up a table you want to extract data from, e.g., VBAK.

1. Open the WHERE clause tab of the Table component and enter the following criterion:

   ```text
   (ERDAT >= '#{ DateTime.Now.AddDays(-1).ToString("yyyyMMdd") }#' AND AEDAT = '00000000') OR AEDAT >= '#{ DateTime.Now.AddDays(-1).ToString("yyyyMMdd") }#'` <br>

   ```

   This criterion extracts data if one of the following conditions is true:

   - The data was created (ERDAT) the day before the current date and it has not been changed (AEDAT).
   - The data has changed (ARDAT) the day before the current date.

1. Click **[OK]** to confirm your input.

1. Run the SSIS package.

The extraction can be scheduled every night at 1p.m. or later to extract all changes of the day before. Providing extraction dates is not necessary.

______________________________________________________________________

#### Related Links

- [Xtract Table: WHERE Clause](../../documentation/table/where-clause/)

The following article shows how to access the Azure SSIS-IR Cluster ID. The Azure SSIS-IR ClusterID is needed to create a customer bound license.

### Azure SSIS-IR Cluster ID in the Azure Portal

The Azure SSIS-IR Cluster ID is composed of the name of the Data Factory and the name of the Integration Runtime.\
Syntax example: `Microsoft.DataFactory/factories/[data factory name]/integrationruntimes/[integration runtime name]`.

1. Login to your [Azure Data Factory](https://adf.azure.com/) (ADF) account.
1. Navigate to **[Launch Studio]** and select **Configure SSIS**. Data factory window opens .
1. Select your Data Factory, e.g., *Xtract-ADF* in the depicted example.
1. In the general menu, select *Integration Runtimes* > *[Name-of-the-IR]*, e.g., *XTRACT-IR* in the depicted example . The integration runtime window opens and all possible runtimes are displayed, including the type, the status and further information.
1. The Azure SSIS-IR Cluster ID of the depicted example is: `Microsoft.DataFactory/factories/Xtract-ADF/integrationruntimes/XTRACT-IR`

______________________________________________________________________

#### Related Links

- [SSIS Integration Runtime](https://docs.microsoft.com/en-us/azure/data-factory/concepts-integration-runtime#azure-ssis-integration-runtime)

The following article shows how to define dynamic WHERE conditions for Table extractions.

The dynamization of the Xtract Table components increases the maintainability of SSIS packages. So-called SSIS expressions based on table properties are used for this functionality. The following table lists all defined table properties that can be used dynamically at runtime of the SSIS package:

| Property | Description | | --- | --- | | `[Xtract Table].[WhereClause]` | Restricts the number of rows included in the results set by the statement SELECT of a query, by using a logical expression. | | `[Xtract Table].[ConvertsDates]` | Converts the character-type SAP date to a special date format. | | `[Xtract Table].[CustomFunctionName]` | Specifies the name of the function module used for data extraction. | | `[Xtract Table].[MaxRows]` | Specifies the maximum number of extracted records. | | `[Xtract Table].[MinDateReplacement]` | Date conversions are applied in case of invalid data in SAP date fields. | | `[Xtract Table].[MaxDateReplacement]` | Date conversions are applied in case of invalid data in SAP date fields. | | `[Xtract Table].[PackageSize]` | Specifies the number of records retrieved per data package. |

### How to use [Xtract Table].[WhereClause]

In the depicted example, only results until 01.01 of the current fiscal year are extracted. The SAP standard table *BKPF - Accounting Document Header* and the table field *BUDAT - Posting Date in the Document* are used.

1. Create an SSIS package and add an Xtract Table component.

1. Look up the table you want to extract, e.g., BKPF.

1. Right-click on the Data Flow canvas and open **Properties**.

1. Add an SSIS expression using the *Expressions* property. Click **[...]** next to the *Expressions* property. The window "Property Expressions Editor" opens.

1. Select the property `[Xtract Table].[WhereClause]`.

1. Open the Expression Builder by clicking **[...]**.

1. Copy & paste following expression:

   ```text
   "BUDAT <= " + "'" +  (DT_STR, 4, 1252) DATEPART("yy" , GETDATE())  + "0101'"

   ```

1. Click **[Evaluate Expression]** to check if the syntax is correct.

1. Click **[OK]** in the Expression Builder and the Property Expression Editor to confirm the input.

1. Check the WHERE-Clause of the table extraction in tab *WHERE Clause*.

1. Run the SSIS package.

### SSIS Expression Samples

| SSIS Expression | Output | Description | | --- | --- | --- | | `"BUDAT >= " + "'" + (DT_STR, 4, 1252) DATEPART( "yy", DATEADD( "yy", -1, GETDATE() ) ) + "%'" ` | BUDAT >= ‘2019%’ | All values of the last 2 years. | | `"BUDAT = " + "'" +(DT_STR, 4, 1252) DATEPART("yy" , GETDATE()) + RIGHT("0" + (DT_STR, 2, 1252) DATEPART("mm" , GETDATE()), 2) +RIGHT("0" + (DT_STR, 2, 1252) DATEPART("dd" , GETDATE()), 2) + "'"` | BUDAT = ‘20200726’ | All values of the current day. | | `"BUDAT >= " + "'" + (DT_STR, 4, 1252) DATEPART( "yy", GETDATE() ) + "01%'" + " AND BUDAT < " + "'" + (DT_STR, 4, 1252) DATEPART( "yy", GETDATE() ) + "04%'"` | BUDAT >= ‘202001%’ AND BUDAT < ‘202004%’ | All values in Q1 of the current year. | | `"BUDAT LIKE " + "'" + (DT_STR, 4, 1252) DATEPART("yy" , GETDATE()) + RIGHT("0" + (DT_STR, 2, 1252) DATEPART("mm" , GETDATE()), 2) + "%'"` | BUDAT LIKE ‘202007%’ | All values of the current month. | | `"BUDAT LIKE " + "'" + (DT_STR, 4, 1252) DATEPART("yy" , GETDATE()) + "%'"` | BUDAT LIKE ‘2020%’ | All values of the current year. | | `(DT_WSTR, 4) YEAR( GETDATE() )` | 2022 | Current year value. | | `(DT_WSTR, 4) DATEPART( "yy", DATEADD( "yy", -9, GETDATE() ) )` | 2013 | Annual calculation based on the number parameter used. |

The following article describes how to establish an SNC connection to an SAP source system.

The depicted approach uses an X.509 certificate that provides the logon data of the Windows AD user. The correctness of this X.509 certificate is ensured via the company's internal certification authority (ca).

### Workflow

1. Upon connection start, the Secure Login Client retrieves the SNC name from the SAP NetWeaver AS ABAP.
1. The Secure Login Client uses the authentication profile for this SNC name.
1. The user unlocks the security token, for example, by entering the PIN or password.
1. The Secure Login Client receives the X.509 certificate from the user security token.
1. The Secure Login Client provides the X.509 certificate for single sign-on and secure communication between SAP GUI or Web GUI and the AS ABAP.
1. The user is authenticated and the communication is secured.

Tip

The configuration of the X.509 certificate should be implemented by the network & SAP Basis team and requires basic knowledge in this area.

### Requirements

The following system settings are a prerequisite for using this SNC solution:

- Install the [Secure Login Client](https://help.sap.com/viewer/df185fd53bb645b1bd99284ee4e4a750/3.0/en-US/da610fd072e4409baa8b6a96973b5c67.html).
- The SAP application server is configured and activated for Secure Network Communication (SNC).
- The SNC standard library *sapcryptolib* is used as the SNC solution.
- The following SNC parameters are configured:

| SNC parameter | Value | Example | | --- | --- | --- | | snc/gssapi_lib | Path and file name where the SAP Cryptographic Library is located. | *$(DIR_EXECUTABLE)\\sapcrypto.dll* | | snc/identity/as | Application server's SNC name Syntax: p:\<Distinguished_Name> The Distinguished Name part must match the Distinguished Name that you specify when creating the SNC PSE. | *p:CN=saperp.theobald.local* |

### Step-by-Step Guide

Follow the steps below to set up the SNC connectivity ins SAP:

1. Generate the certificate for the application server and AD-user context from common Certificate Authority (ca).

   Note

   The X.509 certificate is available when placed in folder **Certmgr > Personal > Certificates** within Windows certificate store (user).

1. Convert the .pfx file to SAP PSE format e.g., `sapgenpse.exe import_p12 -p cert.pse cert.pfx`.

1. Import the created PSE file via **TA STRUST > Edit mode > PSE Import > PSE Save as SNC Libcrypto**.

1. Edit the SNC configuration of the corresponding SAP user via transaction SU01 > **SNC** > **SNC Name** = p:\<Full Distinguished_Name>, e.g., `p:EMAIL="RandomUser@domain",CN="Random User",OU="Users",OU="TheobaldSoftware",DC="theobald",DC="local"`.

1. Set up SNC authentication in the Xtract IS SAP connection settings.

______________________________________________________________________

#### Releated Links

- [SAP Help: Workflow with X.509 Certificate without Secure Login Server](https://help.sap.com/viewer/df185fd53bb645b1bd99284ee4e4a750/3.0/en-US/06d9e59a0fd44aa4aa082ffad7d618e3.html)
- [SAP Help: Secure Network Communications (SNC)](https://help.sap.com/doc/saphelp_nw70/7.0.31/en-us/e6/56f466e99a11d1a5b00000e835363f/content.htm?no_cache=true)
- [SAP Help: Configuring SNC: External Programs AS ABAP Using RFC](https://help.sap.com/doc/saphelp_nwpi71/7.1/en-US/d9/e8a740bbaa4d8f8bee6f7b173bd99f/content.htm?loaded_from_frameset=true)
- [SAP Help: Setting the SNC Profile Parameters](https://help.sap.com/doc/saphelp_nw73ehp1/7.31.19/en-US/19/164442c1a1c353e10000000a1550b0/content.htm?no_cache=true)
- [SAP Help: Configuring SAP GUI and SAP Logon for Single Sign-On](https://help.sap.com/doc/saphelp_nw73ehp1/7.31.19/en-US/44/0ea40dc6970d1ce10000000a114a6b/content.htm?no_cache=true)
- [SAP Help: Secure Login Client](https://help.sap.com/viewer/df185fd53bb645b1bd99284ee4e4a750/3.0/en-US/ba21970855064e54a9246b6c6de67fb2.html)
- [SAP Additional Content: List of SNC Error Codes](https://wiki.scn.sap.com/wiki/display/Security/List+of+SNC+Error+Codes)

The following article describes a secure data integration approach to execute SSIS packages that access an SAP source system located in a private network (domain).

To perform data integration securely in a private network environment without a direct line-of-sight from the public cloud environment, you can install a self-hosted IR in your on-premises environment behind a firewall, or inside a virtual private network. The self-hosted integration runtime only makes outbound HTTP-based connections to the internet. The Xtract Connection (SAP connection) with the property *ConnectByProxy = True* is used to implement access to the local network using the Self-Hosted Integration Runtime (SHIR).

### Prerequisites

The following prerequisites are mostly based on the official Microsoft documentation for using Azure integration runtime (IR) as well as Self-Hosted Integration Runtime (SHIR).

- Download and install the latest version of self-hosted IR and the additional drivers and runtime on your on-premises machine or Azure virtual machine (VM).
- Create an SSIS package on a development environment (Visual Studio) and execute it successfully.
- Publish the SSIS project to an SSIS in Azure Data Factory (ADF).

### Step-by-Step Instructions

1. Configure and start the Azure Data Factory IR with the necessary files to run the [Xtract IS for Azure extension in ADF](../../xtract-is-for-azure/).

1. Download and install the SHIR on the local Windows server (on-prem), see [Microsoft Integration Runtime](https://www.microsoft.com/en-us/download/details.aspx?id=39717).

1. Register the Integration Runtime (Self-hosted), see [Configure a self-hosted IR via UI](https://learn.microsoft.com/en-US/azure/data-factory/create-self-hosted-integration-runtime?tabs=data-factory#configure-a-self-hosted-ir-via-ui).

1. If applicable: Enable SSIS package execution on self-hosted IR node using the following cmd command:

   ```text
   C:\Program Files\Microsoft Integration Runtime\5.0\Shared>dmgcmd -eesp

   ```

1. Execute the *XtractISSetup.exe* file to install Xtraxt IS and use Xtract IS Data Flow Tasks.

1. If your SSIS package uses one of the following components, download and install the relevant drivers:

   - Object Linking and Embedding Database (OLEDB), see [OLE DB Driver 18 for SQL Server](https://learn.microsoft.com/en-us/sql/connect/oledb/download-oledb-driver-for-sql-server?view=sql-server-ver16)
   - Open Database Connectivity (ODBC)
   - ADO.NET connectors
   - Azure Feature Pack, see [SSIS 2017 Feature Pack for Azure](https://www.microsoft.com/en-us/download/details.aspx?id=54798)

Note

If the Integration Runtime (Self-hosted) node encouters errors during execution, error logs are provided using the Windows Event Viewer.

______________________________________________________________________

#### Related Links:

- [Microsoft Documentation: .NET Framework system requirements](https://learn.microsoft.com/en-us/dotnet/framework/get-started/system-requirements)
- [Microsoft Documentation: Integration runtime in Azure Data Factory](https://learn.microsoft.com/en-US/azure/data-factory/concepts-integration-runtime#self-hosted-integration-runtime)
- [Microsoft Documentation: Self-hosted integration runtime](https://learn.microsoft.com/en-US/azure/data-factory/concepts-integration-runtime#self-hosted-integration-runtime)
- [Microsoft Documentation: Troubleshoot self-hosted integration runtime](https://learn.microsoft.com/en-us/azure/data-factory/self-hosted-integration-runtime-troubleshoot-guide?tabs=data-factory)
- [Microsoft Documentation: Assess SSIS project\\packages for executions in Azure](https://learn.microsoft.com/en-us/azure/data-factory/how-to-invoke-ssis-package-ssdt#assess-ssis-projectpackages-for-executions-in-azure)

The following article shows how to extract ABAP reports that use an SAP ABAP List Viewer (ALV) layout.

### About Layouts

Layouts in ABAP reports define and control the visual presentation of report data. They determine how data is displayed to the user, including column visibility, column order, column width, aggregation (totals, subtotals), sorting, filtering and other formatting options. Layouts do not affect the actual data.

### Option 1 - Use Layouts in Variants

Some ALV-based reports have a **Layout** field in the selection screen . This field can be used to select a layout before running the report. If the selection screen includes a **Layout** field, that field's value can be saved as part of a [Report Variant](../../documentation/report/variants-and-selections/) . This way, every time the report is executed using that variant, it will automatically use this layout.

Make sure to select the variant in your Xtract IS [Report extraction](../../documentation/report/variants-and-selections/#choose-a-variant).

### Option 2 - User-Specific Default Layouts

A user-specific default layout is a layout that is saved together with your SAP user ID. This way, SAP automatically applies the layout each time your SAP user runs the report, if no layout is explicitly chosen.

To use a user-specific default layout in Xtract IS, create the layout for the SAP user that is used in your [SAP Connection](../../documentation/sap-connection/).

For more information on how to create a user-specific layout in ALV, see [SAP Help: Working with the SAP List Viewer (ALV) - Saving Layouts](https://help.sap.com/docs/ABAP_PLATFORM_NEW/b1c834a22d05483b8a75710743b5ff26/4d620265d79751b0e10000000a42189c.html?utm_source=chatgpt.com).

______________________________________________________________________

#### Related Links

- [Report Component](../../documentation/report/)
- [SAP Help: Working with the SAP List Viewer (ALV)](https://help.sap.com/docs/ABAP_PLATFORM_NEW/b1c834a22d05483b8a75710743b5ff26/4d5edc88767161bee10000000a42189b.html?utm_source=chatgpt.com)

The following article shows how to import transport requests for custom functions modules that are included in the installation directory of your product, e.g., `C:\Program Files\XtracIS\ABAP`.

### Upload SAP Transport Requests to SAP

If you have access to the file system of SAP, you can copy and paste the files of your transport request directly into the `data` and `cofiles` folders of your SAP system. If you don't have access to the file system, follow the steps below to upload the files of your transport request using the SAP function module ARCHIVFILE_CLIENT_TO_SERVER:

1. Unzip the transport request provided in the installation directory of your product, e.g., `C:\Program Files\XtracIS\ABAP`.
1. Open SAP and go to transaction AL11.
1. Find the entry DIR_TRANS in the column *Name of Directory Parameter*. Note or copy the path shown in the column *Directory*.
1. Go to SAP transaction SE37.
1. Enter name of function module ARCHIVFILE_CLIENT_TO_SERVER and click **[Test/Execute]**.
1. In the field **PATH** you select your request file from from step 1. The name of the file starts with an "R", e.g., R900472.
1. In the field **TARGET PATH** you construct your target path using the following pattern:\
   `{copied path from step 2}\data\{request file name}`.
1. Enable case-sensitivity and click **[Execute]**. When prompted, confirm the upload.
1. In the field **PATH** you select your cofile from from step 1. The name of the file starts with a "K", e.g., K900472.
1. In the field **TARGET PATH** you construct your target path using the following pattern:\
   `{copied path from step 2}\cofiles\{cofile name}`.
1. Enable case-sensitivity and click **[Execute]**. When prompted, confirm the upload.

The files are now available in SAP.

Note

Another method for uploading files to SAP is the SAP transaction CG3Z. This transaction is only available on ERP systems.

### Import SAP Transport Requests

Follow the steps below to add the transport requests to the import queue and import them:

1. Go to SAP transaction STMS to open the transport management system.
1. Click **[Import Overview]** ( icon).
1. Double click on the import queue in which you want to load the transport request into.
1. Open the transport request selection dialog via **More > Extras > Other Requests > Add**.
1. Select the transport request and confirm. If prompted, confirm the import.
1. Select your transport request from the list and click **[Import Request]** ( icon). The window "Import Transport Request" opens.
1. Enter the target client. If the version of the SAP system where the transport request was created differs from your SAP system version, select the option **Ignore Invalid Component Version**.
1. Confirm your settings.

The transport request is imported.

### Check the Status of Transport Requests

The import overview of the transport management system (transaction STMS) lists all transport requests.\
The status of the transport requests is displayed in the column "RC".

A green bar indicates that the import was successful. In case of warnings or errors, double click on the icon to view the error messages.

The following article shows how to use the LIKE operand in WHERE-Clauses of the Xtract Table component.\
The LIKE operand represents a pattern using the following wildcard characters:

- "%" is any character string (including an empty string)
- "\_" is any character

The pattern is case-sensitive. Trailing blanks in operands are ignored. This also applies in particular to operands of the type string with trailing blanks that are otherwise respected in ABAP.

### Examples

| WHERE-Condition | Description | | --- | --- | | `MSEG~MJAHR LIKE '20__'` | Filter back all fiscal years of the table column MSEG~MJAHR that start with *20*. | | `MSEG~MBLNR LIKE '0049%'` | Filters all records of the table column MSEG~MBLNR that return the Number of Material Document starting with the value *0049*. | | `BKPF~BUKRS LIKE '__1_'` | Filters all records that have a *1* in the third digit of the value for the company code (BKPF~BUKRS). |

______________________________________________________________________

#### Related Links

- [SAP Help: Open SQL - Operands and Expressions - LIKE](https://help.sap.com/doc/abapdocu_752_index_htm/7.52/en-US/abenwhere_logexp_like.htm)

This articles shows how to use Xtract IS to parse ABAP reports that contain groups of data sets and merge them into a single data set. The depicted example uses the report *FBL3N* that contains multiple groups where each group has its own header and calculation rows.

The article leads you through the following steps to merge all groups into a single data set:

- [Remove rows](#remove-rows) that calculate the content of the rows before.
- [Select a header](#select-a-header) for the report and remove duplicates.
- [Parse rows that contain additional headers as columns.](#parse-rows-with-additional-headers-as-columns)

### Remove Rows

Follow the steps below to remove rows that calculate the content of the rows before. Calculation rows are marked with an * symbol.

1. [Look up](../../documentation/report/#look-up-a-report-or-transaction) a report that contains groups of data. The depicted example uses report FBL3N (RFITEMGL).
1. If the report has variants, [select a variant](../../documentation/report/variants-and-selections/#choose-a-variant).
1. Click **[Load Preview]** to load a preview of the first 100 rows.
1. Click **[Automatically detect columns]** to define the columns of the report.
1. Open the tab *Skip and Parse Rows*.
1. Click **[Add rows to skip]**.
1. To remove calculation rows, enter the keyword \*.\
   All rows that contain the keyword are displayed in a gray font in the preview section.
1. To remove additional rows that separate calculation rows and headers, enter the keyword ---.
1. Click **[OK]** to save the changes.

The calculation rows are skipped during the report extraction.\
For more information on how to manipulate rows in report extractions, see [Documentation: Define Rows](../../documentation/report/report-rows-define/).

### Select a Header

Follow the steps below to select one of multiple available headers as the report header:

1. Open the report extraction from [Remove Rows](#remove-rows) or any other report that contains multiple headers.

1. Click **[Load Preview]** to load a preview of the first 100 rows.

1. Open the tab *Skip and Parse Rows*.

1. In the preview section, right-click the header row and select **Select as header** from the context menu. All rows that contain the header are displayed in a blue font in the preview section.

   Tip

   If the header is not part of the preview (first 100 rows of the report), enter a pattern in the field [**Header pattern**](../../documentation/report/report-rows-define/#header-pattern) to scan all report rows for the pattern.

1. Click **[OK]** to save the changes.

The report parses the selected header as the report header during report extraction.\
Any duplicates of the header are removed from the result set.

### Parse Rows with Additional Headers as Columns

Follow the steps below to parse header rows that contain information about a data set as columns. The depicted example parses the header rows containing the *G/L Account* number and the *Company Code* of a data set as columns.

1. Open the report extraction from [Select a Header](#select-a-header) or any other report that contains multiple headers.

1. Click **[Load Preview]** to load a preview of the first 100 rows.

1. Open the tab *Skip and Parse Rows*.

1. Click **[Add row to parse as column]** to add a new column.

1. Click **[]**. The window "Parse Helper" opens and a new preview of the report data is fetched. This can take a while.

1. Under **Search keyword** enter a unique keyword from the row you want to parse as a column. Matching rows are displayed in the preview section of the window.

1. Make sure only header rows are displayed in the preview section. If the preview includes regular rows, edit the keyword until only header rows remain.

1. Under **New Column Name** enter a name for the new column.

1. Mark the content of the column in the preview section by pressing and dragging the mouse pointer over the length of the content.

1. Click **[OK]** to save the column properties. All rows that will be parsed as a column are displayed in a blue font in the preview section.

1. Repeat steps 4 to 9 for the *Company Code*.

   Tip

   If the *Company Code* is not relevant for your report analysis, remove the corresponding header row from the result set, see [Remove Rows](#remove-rows).

1. Click **[OK]** to save the changes.

1. Run the SSIS package and check if the rows are parsed correctly.

The extracted report returns a single data set that includes the content of all original data set groups.

______________________________________________________________________

#### Related Links

- [Xtract Report](../../documentation/report/)
- [Skip Rows by Keyword](../../documentation/report/report-rows-define/#skip-rows-by-keyword)

The following article shows how to extract data from the SAP HCM tables PCL1 and PCL2.\
The data can only be extracted using a custom function module and the Xtract BAPI component. Data extraction via Xtract Table component is not supported.

### Custom Function Module Z_HR_CLUSTER_READ

Create the following custom function module in SAP:

1. Use SAP transaction SE37 to create a remote enabled custom function module Z_HR_CLUSTER_READ.

1. Create the following parameters:

   ```text
   PERNR            TYPE=PC2B0-PERNR;
   ACTIONID         TYPE=CHAR2; DEFAULT = 'P1'
   STARTDATE        TYPE=DATS;
   ENDDATE          TYPE=DATS;

   ```

   ```text
   ERT        LIKE=PC2B8
   ST         LIKE=PC2B5
   CRT        LIKE=PC208

   ```

1. Copy and paste the following ABAP source code into the source code area of the function module.

   ```abap
        FUNCTION Z_HR_CLUSTER_READ.

        *"----------------------------------------------------------------------

        *"*"Local Interface:
        *"  IMPORTING
        "     VALUE(PERNR) TYPE  PC2B0-PERNR OPTIONAL
        *"     VALUE(ACTIONID) TYPE  CHAR2 DEFAULT 'P1'
        *"     VALUE(STARTDATE) TYPE  DATS OPTIONAL
        *"     VALUE(ENDDATE) TYPE  DATS OPTIONAL
        *"  TABLES
        *"      ERT STRUCTURE  PC2B8 OPTIONAL
        *"      ST STRUCTURE  PC2B5 OPTIONAL
        *"      CRT STRUCTURE  PC208 OPTIONAL
        *"----------------------------------------------------------------------
        DATA : BEGIN OF it_pcl1 OCCURS 0,
        srtfd TYPE pcl1-srtfd,
        END OF it_pcl1.

        DATA BEGIN OF b1_key.
             INCLUDE STRUCTURE pdc10.
        DATA END OF b1_key.

        IF actionid = 'P1'.

        SELECT srtfd
        FROM pcl1
        INTO TABLE it_pcl1
        WHERE relid EQ 'B1'
        AND srtfd EQ pernr
        AND srtf2 EQ 0.

       LOOP AT it_pcl1.
         MOVE it_pcl1-srtfd TO b1_key.
         IMPORT st ert FROM DATABASE pcl1(b1) ID b1_key.
         IF sy-subrc EQ 0.
         ENDIF.
       ENDLOOP.

        ENDIF.

        IF actionid = 'P2'.
        DATA : it_rgdir TYPE TABLE OF pc261 INITIAL SIZE 0,
              wa_rgdir LIKE LINE OF it_rgdir,
              it_crt TYPE pay99_result-inter-crt,
              wa_crt LIKE LINE OF it_crt,
              wa_payrollresult TYPE pay99_result,
              v_molga TYPE molga.

       DATA : BEGIN OF wa_out,
               pernr TYPE pernr-pernr,
               gross TYPE pc207-betrg, "Amount
               net TYPE pc207-betrg,
              END OF wa_out,
              it_outtab LIKE TABLE OF wa_out.

        wa_out-pernr = PERNR.
        CALL FUNCTION 'CU_READ_RGDIR'
        EXPORTING
        persnr          = PERNR
        IMPORTING
        molga           = v_molga
        TABLES
        in_rgdir        = it_rgdir
        EXCEPTIONS
        no_record_found = 1
        OTHERS          = 2.
        IF sy-subrc = 0.



       LOOP AT it_rgdir INTO wa_rgdir
                          WHERE fpbeg GE startdate AND
                                fpend LE enddate AND
                                srtza EQ 'A'.  "Current result
           CALL FUNCTION 'PYXX_READ_PAYROLL_RESULT'
             EXPORTING
               clusterid                    = 'RD'
               employeenumber               = PERNR
               sequencenumber               = wa_rgdir-seqnr
               READ_ONLY_INTERNATIONAL      = 'X'
             CHANGING

               payroll_result               = wa_payrollresult
             EXCEPTIONS
               illegal_isocode_or_clusterid = 1
               error_generating_import      = 2
               import_mismatch_error        = 3
               subpool_dir_full             = 4
               no_read_authority            = 5
               no_record_found              = 6
               versions_do_not_match        = 7
               error_reading_archive        = 8
               error_reading_relid          = 9
               OTHERS                       = 10.

           IF sy-subrc = 0.
             LOOP AT wa_payrollresult-inter-crt INTO wa_crt.
               CASE wa_crt-lgart.
                 WHEN '/101'.  " Gross
                   APPEND wa_crt TO crt.
               ENDCASE.
               CLEAR wa_out.
             ENDLOOP.
           ENDIF.
         ENDLOOP.
       ENDIF.
     ENDIF.
   ENDFUNCTION.

   ```

1. Save the function module.

### How to use the Custom Function Module

Depending on the table you want to access, define the following parameters:

1. Look up the function module using the Xtract BAPI component.

1. Populate the import parameter ACTIONID with value *P1*.

1. Populate the field PERNR with a value for Personnel Number. The personnel number has to be entered with leading zeroes.

1. Run the SSIS package. The data is available in the table parameter ST.

1. Look up the function module using the Xtract BAPI component.

1. Populate the import parameter ACTIONID with value *P2*.

1. Enter a start date and end date using the parameters STARTDATE and ENDDATE. The date fields have the format YYYYmmDD.

1. Run the SSIS package. The data is available in the table parameter CRT.

The following article shows how to register an RFC server in SAP releases with Kernel release 720 and higher.

Warning

**RFC server is not working, please check gateway info.**\
As of SAP Kernel Release 720, you can use the parameter *gw/acl_mode* to set an initial security environment to start and register external programs, e.g., RFC Server required for DeltaQ processing / customizing check. If this value is set to *1*, the DeltaQ component cannot register the RFC Server and the Customizing Check returns the an error.

There are two options to avoid this error:

- Set the Profile Parameter *gw/acl_mode* to 0.
- Define a whitelist of programs that can register at the SAP Gateway.

### Change the Profile Parameter *gw/acl_mode*

When setting the profile parameter *gw/acl_mode* to 0 (default is 1), all RFC destinations / RFC servers with different Program IDs can register.

1. Use SAP transaction RZ10 to open the "Edit Profile" menu.
1. Select the profile name *Default* and *Extended Maintenance*.
1. Click **[Change]** and set the profile parameter *gw/acl_mode* value to *0*

The Customizing Check now executes without error messages.

### Define a Whitelist of Programs at the SAP Gateway

To define a whitelist of programs that can register at the SAP Gateway, create two files named *secinfo* and *reginfo*. Both files don't exist per default, see the example below.

1. Create the files *secinfo* and *reginfo*. The files must have the following content:

   ```abap
   #VERSION=2
   P TP=* HOST=internal,local CANCEL=internal,local ACCESS=internal,local
   # the following line should be the LAST line in the secinfo file
   P TP=XTRACT01 USER=* USER-HOST=* HOST=* 

   ```

   ```abap
   #VERSION=2
   # the following line should be the LAST line in the reginfo file
   P TP=XTRACT01

   ```

1. Copy both files to the following directory (data path): `/usr/sap/<SID>/<INSTANCE>/data/`

1. Extend the following two parameters to the Profile Parameter in the SAP transaction RZ10:

   - gw/reg_info = $(DIR_DATA)/reginfo
   - gw/sec_info = $(DIR_DATA)/secinfo

1. Restart the gateway or re-read the security parameters using SAP transaction SMGW (navigate to **Menu -> Goto -> Expert Functions -> External Security -> Reread**).

The Customizing Check now executes without error messages.

Warning

**Registration of the RFC-server fails.**\
The content of both files *secinfo* and *reginfo* override the parameter *gw/acl_mode*.\
Make sure that both files *secinfo* and *reginfo* allow the registration of the RFC-server.

______________________________________________________________________

#### Related Links

- [SAP Help: Gateway Security Files secinfo and reginfo](https://help.sap.com/doc/saphelp_crm700_ehp01/7.0.1.15/en-US/48/b2096b7895307be10000000a42189b/frameset.htm)
- [SAP Note 1850230](https://launchpad.support.sap.com/#/notes/0001850230)
- [SAP Community blog](http://scn.sap.com/docs/DOC-42463)

The following article is for users who want to run SSIS packages with SNC Authentication when Xtract DeltaQ or Xtract OHS components are used.

When using Secure Network Connection (SNC), the associated application server, RFC destination (*SM59*) and SAP user need to enable SNC via partner name. This way, the communication between the application server and Xtract IS takes place via an RFC destination for Xtract DeltaQ or Xtract OHS components.

### User Configuration in SAP

Follow the steps below to enable SNC for the SAP user that is used in Xtract IS:

1. Open SAP and run the SAP transaction SU01.
1. Enter the name of the SAP user that is used in the XTRACT Connection Manager and click **[Change]**.
1. Open the SNC tab and provide the SNC Name of the SAP user . In the depicted example, *MALAPATI* is the user and *THEOBALD.LOCAL* is the domain.
1. Click **[Save]**.

### SAP Connection Settings in Xtract IS

Follow the steps below to enable SNC in Xtract IS:

1. Open the Connection Manager of the SAP connection.
1. Provide details of an SAP user that has SNC enabled .
1. Click **Additions**. The window "XTRACT Connection Manager Additions" opens.
   1. Check the box SNC .
   1. Enter the complete path of the Kerberos library in the field **SNC library 32 Bit** .
   1. Enter the complete path of the Kerberos library in the field **SNC library 64 Bit** .
   1. Enter the SPN of the SAP service account in the field **Partner name** .\
      Use the following notation: `p:[SPN]@[Domain-FQDN-Uppercase]`.
   1. Set the **Quality of Protectio** to *8 - Default* .
   1. Click **[OK]** to save your input.
1. Click **[Test connection]** . If the connection is successful, a confirmation window opens.
1. Click **[OK]** to confirm.

### RFC Destination Configuration in SAP

Follow the steps below to enable SNC for the corresponding RFC destination in regard to the Service Principal Name (SPN) of the SAP user account.

1. Open SAP and run the SAP transaction SM59.
1. Double-click on an existing TCP/IP RFC destination, see [Create an RFC Destination](../../documentation/setup-in-sap/customization-for-ohs-in-bw/#create-an-rfc-destination).
1. Navigate to **Edit > SNC Options**. The window "Change View "SNC Extension": Details" opens.
   1. Provide the SPN of the SAP user account in the field **Partners** , e.g., *p:RfcServer/Malapati@THEOBALD.LOCAL*.
   1. Set the **Quality of Protection** to *8 - Default* .
   1. Activate the checkbox **SNC Active** .
1. Open the Unicode tab and activate **Unicode**.
1. Click **[Save]** to save your changes.

______________________________________________________________________

#### Related Links

- [Documentation: Create an RFC Destination](../../documentation/setup-in-sap/customization-for-ohs-in-bw/#create-an-rfc-destination)
- [Documentation: Connect to SAP](../../documentation/sap-connection/#connect-to-sap)
- [Documentation: SAP Connection with SNC](../../documentation/sap-connection/snc-authentication/)
- [SAP Help: Maintaining RFC destinations and their SNC options](https://help.sap.com/viewer/e73bba71770e4c0ca5fb2a3c17e8e229/7.5.8/en-US/57898009a859493a8bce56caaf0f8e13.html)

The following article gives an overview of all SAP S/4HANA systems supported by Xtract IS.

### Supported SAP S/4HANA Cloud Systems

The following table lists all available SAP S/4HANA cloud systems and their compatibility with Xtract IS.\
SAP S/4HANA Cloud Edition (Cloud ERP):

| | S/4HANA Public Cloud | S/4HANA Private Cloud | | --- | --- | --- | | **Compatible with Xtract IS:** | | | | **Limitations:** | - | - |

### SAP S/4HANA On Premise Systems

The following table lists all available SAP S/4HANA on premise systems and their compatibility with Xtract IS.\
SAP S/4HANA AnyPremise (ERP in the Cloud):

| | S/4HANA Private Cloud Managed by SAP (HEC) | SAP HEC Customer Edition | S/4HANA AnyPremise | S/4HANA AnyPremise | | --- | --- | --- | --- | --- | | Additional Information: | On-Premises Edition | Runs on Customer Data Center | Public Cloud (AZURE/AWS/GCP) | called ERP in DC (Customer Data Center) | | Compatible with Xtract IS: | | | | |

The following article shows how to handle the initial table load for delta extractions using the Xtract TableCDC component. The article applies in the following situation:

- The Xtract TableCDC component is run on SAP releases < 7.10
- The option **Extract table on first run** (Delta initialization) is activated.
- The delta initialization takes longer than the maximum processing time specified in the SAP profile parameter **rdisp/max_wprun_time**.
- The extraction aborts with an error message, e.g., `ERPConnect.ABAPRuntimeException: RfcInvoke failed(RFC_ABAP_RUNTIME_FAILURE): TIME_OUT - Time limit exceeded`.

Note

The custom function module /THEO/READ_TABLE used by the Table CDC component to extract the table does not support background mode on SAP releases < 7.10. The background mode avoids the timeout mentioned above.

### Recommended Workflow

1. Create a Xtract TableCDC extraction. Make sure the option **Extract table on first run** is deactivated.
1. Run the Xtract TableCDC extraction to initialize the delta extractions. This ensures that no data is missed between table extraction and delta initialization.
1. Create a regular Xtract Table extraction using the Xtract Table component. Make sure to select an SAP standard function module, e.g., RFC_READ_TABLE.
1. Run the Xtract Table extraction.

______________________________________________________________________

#### Related Links

- [Documentation: Define the Xtract TableCDC Component](../../documentation/table-cdc/#define-the-xtract-tablecdc-component).
- [Documentation: Define the Xtract Table Component](../../documentation/table/#define-the-xtract-table-component).
- [Documentation: Xtract Table Settings - Function modules and Background Jobs](../../documentation/table/settings/#extract-data-in-background-job)

The following article illustrates the process of delta table extractions using the Xtract TableCDC component.

### Table CDC Process

The delta mechanism of Table CDC includes the following processes:

- Lookup process to read SAP metadata for the definition of the Table CDC extraction.
- CDC watch process to create a database trigger on the source table and to create the corresponding log table in SAP.
- Synchronize data process to run Table CDC extractions regularly.

The depicted graphic illustrates the processes in both Xtract IS and in SAP. Click the graphic to zoom in.

Tip

Use the SAP transaction DB02 to view all triggers of Table CDC log tables in SAP.

The following article illustrates the extraction mechanism of the Xtract Table component.

### Table Extraction Process

The extraction mechanism of Table includes the following processes:

- Lookup process to read SAP metadata for the definition of the Table extraction.
- Configuration of the Xtract Table component definition.
- Execution of the asynchron data loading process.

The depicted graphic illustrates the mechanism in both Xtract IS and in SAP. Click the graphic to zoom in.

The following article shows how to use lists and SELECT statements in the [WHERE Clause Editor](../../documentation/table/where-clause/#where-clause-editor) of the Xtract Table component.\
Lists can contain multiple values separated by commas e.g., `1,10` or `“1”, “10”`.

### Static Lists

The depicted example statement returns all active customers (rows in the table KNA1) that have an address in one of the following cities: Berlin, Stuttgart, Paris, Seattle, Hong Kong or Dongguan.

1. Create a Xtract Table extraction.
1. Look up the table KNA1, see [Documentation: Define the Xtract Table Component](../../documentation/table/#define-the-xtract-table-component).
1. Open the *WHERE Clause* tab and click **[Editor Mode]** to open the WHERE clause editor.
1. Click **[Add criteria]**, then **[Default with literal]** to create an empty template in the WHERE clause editor.
1. Select the column *ORT01* from KNA1 as the data you want to filter.
1. Select *IN* as the operator. *IN* is the only operator that can be used for lists.
1. Select *List* as the type of the static filter value.
1. Click **[Press to Edit]** in the static value component of the WHERE clause. The window "Edit List" opens.
1. Select *String* as the **Type** of the list. When working with numbers, select *Number*.
1. Click **[Add]** to add items to the list. You can edit items via double-click.
1. Click **[OK]** to confirm your input.
1. Click **[Load live Preview]** or run the SSIS package to check the output.\
   When providing values for the list parameter, use multiple values separated by commas e.g., `1,10` or `“1”, “10”`.

### SELECT Statement

SELECT statements can be used to select data from SAP tables, see [ABAP Documentation: Open SQL SELECT](https://help.sap.com/doc/abapdocu_750_index_htm/7.50/en-us/abapselect.htm).\
The depicted example statement returns all active customers (rows in the table KNA1) that have a sales document in the table VBAK for sales document header data.

Note

The usage of SELECT statements is only possible as of SAP Release 7.40, SP05.

1. Create a new Xtract Table extraction.

1. Look up the table KNA1, see [Documentation: Define the Xtract Table Component](../../documentation/table/#define-the-xtract-table-component).

1. Open the *WHERE Clause* tab and click **[Editor Mode]** to open the WHERE clause editor.

1. Click **[Add criteria]**, then **[Default with literal]** to create an empty template in the WHERE clause editor.

1. Select the column *KUNNR* from KNA1 as the data you want to filter.

1. Select *IN* as the operator. *IN* is the only operator that can be used for lists.

1. Select *List* as the type of the static filter value.

1. Click **[Press to Edit]** in the static value component of the WHERE clause. The window "Edit List" opens.

1. Select *SELECT* as the **Type** of the list.

1. Enter the following SELECT statement to create a list that contains all items of the column KUNNR from the SAP table VBAK:

   ```text
   SELECT KUNNR FROM VBAK

   ```

1. Click **[OK]** to confirm your input.

1. Click **[Load live Preview]** or run the SSIS package to check the output.

______________________________________________________________________

#### Related Links

- [Documentation: WHERE Clause Editor](../../documentation/table/where-clause/#where-clause-editor)

The following article shows how to upload CATS data from an SQL server table using the BAPI BAPI_CATIMESHEETMGR_INSERT and the Xtract BAPI component.

### About BAPI_CATIMESHEETMGR_INSERT

The BAPI BAPI_CATIMESHEETMGR_INSERT creates Time Sheet entries in SAP.

- Input: Relevant import parameters are PROFILE and TESTRUN and the table CATSRECORDS_IN.
- Output: The results are available in the tables CATSRECORDS_OUT and RETURN.\
  The RETURN table contains different types of messages, e.g., warnings, information, errors, etc.

#### Troubleshooting

If the input records do not have any errors, the table CATSRECORDS_OUT are populated with the same number of input records, otherwise it does not contain any entries.

The ROW fields in the RETURN table can be used to identify errors, see [Checking for Errors](#checking-for-errors).\
Example: If the second and third entries have errors then the ROW of table RETURN will be populated as 2 and 3.

### Input Table

When creating input tables, the format (column names and data types) of the table must be compatible with the table parameters of the function module. The depicted example uses the following input table (BAPICATSINPUT) that is stored on an SQL Server:

### Setup in SSIS

1. Add a data source to your Data Flow Task. The depicted example uses a table stored on an SQL Server, see [Input Table](#input-table).
1. Add an Xtract BAPI component to your Data Flow Task and assign a [Connection Manager](../../documentation/sap-connection/#assign-connection-managers-to-xtract-components) that contains the connection details to your SAP system.
1. Look up the BAPI BAPI_CATIMESHEETMGR_INSERT.
1. Provide the PROFILE "TEST" and TESTRUN " " as import parameters.
1. Add the tables CATSRECORD_OUT and RETURN to the output.
1. Connect the input table to the Xtract BAPI component. The window "Input Output Selection" opens.
1. Select the table CATSRECORD_IN to map the data from the input table to CATSRECORD_IN. The table fields are mapped automatically. For this, the name and data types of the table columns must match.\
   If the input table and CATSRECORD_IN do not match, add a *Deprived Column* component between the OLE DB Source and the Xtract BAPI component to format the input table accordingly.
1. Create two *OLE DB destinations* for the tables CATSRECORDS_OUT and RETURN of the Xtract BAPI component.
1. Run the SSIS package and check the results in SAP (transaction CAT3).

### Checking for Errors

The ROW fields in the RETURN table can be used to identify errors. Example:

1. To produce an error, set the the value for ABS_ATT_TYPE in the input table BAPICATSINPUT to 0005.
1. Run the SSIS package.\
   The output table CATSRECORDS_OUT does not have any entries. This means that the data in SAP is not updated.
1. Query the SQL table RETURN to identify the error.\
   The numbers in the ROW column show which rows contain the erroneous records.\
   The message displayed in the MESSAGE column indicates that the attendance/absence type (0005) is not maintained.

Note

When using BAPI_CATIMESHEETMGR_INSERT, note that only records without errors are posted. If an error occurs during posting, none of the data – including records without errors – is posted. We recommend including only a small number of records in each posting.

______________________________________________________________________

#### Related Links

- [Documentation: Xtract BAPI](../../documentation/bapi/)
- [Write Product data using Xtract BAPI](../write-product-data-to-sap/)

The following article shows how to use the Xtract BAPI component to write product data to SAP.\
The depicted example uses the custom function module Z_ECS_PRODUCT_CREATE_MULTI to add new products to SAP. A table that contains the product information and is stored on an SQL Server is used as input for the function module.

### Custom Function Module Z_ECS_PRODUCT_CREATE_MULTI

The SAP custom function module Z_ECS_PRODUCT_CREATE_MULTI has a table parameter *T_PRODUCTS* that can be used for input.\
The table has the following structure:

### Input Table

When creating input tables, the format (column names and data types) of the table must be compatible with the table parameters of the function module. The custom function module Z_ECS_PRODUCT_CREATE_MULTI uses the following SQL server table as input:

```sql
CREATE TABLE [SAP Products] (
    [MANDT] nvarchar(3), 
    [PRODUCTNR] nvarchar(18),
    [DESCTEXT] nvarchar(40),
    [PRODTYPE] nvarchar(4),
    [STOCKQUAN] numeric(18,3),
    [MEINS] nvarchar(3),
    [ERDAT] nvarchar(8),
    [ERZET] nvarchar(6)
)

```

The table has the following content:

### Setup in SSIS

1. Add a data source to your Data Flow Task. The depicted example uses a table stored on an SQL Server, see [Input Table](#input-table).
1. Add an Xtract BAPI component to your Data Flow Task and assign a [Connection Manager](../../documentation/sap-connection/#assign-connection-managers-to-xtract-components) that contains the connection details to your SAP system.
1. Look up the function module Z_ECS_PRODUCT_CREATE_MULTI.
1. Connect the input table to the Xtract BAPI component.\
   The input table is automatically mapped to the corresponding table in the Xtract BAPI component.
1. Run the SSIS package and check the results in SAP.

______________________________________________________________________

#### Related Links

- [Documentation: Xtract BAPI](../../documentation/bapi/)
- [Write CATS data using Xtract BAPI](../write-cats-data-to-sap/)
# Xtract IS in the Azure SSIS Integration Runtime

This section shows how to set up Xtract IS on an Azure SSIS Integration Runtime environment.

### About Xtract IS for Azure

SSIS packages that contain [Xtract IS](../documentation/introduction/) components can be run on an [Azure SSIS Integration Runtime (IR)](https://docs.microsoft.com/en-us/azure/data-factory/create-azure-ssis-integration-runtime). Instead of deploying the developed packages to an on-prem SSIS server, the packages are deployed to an Azure SSIS-IR to be scheduled and run in the Azure cloud. In this scenario Xtract IS is licensed per Azure SSIS-IR using the [Azure SSIS-IR Cluster ID](../knowledge-base/determine-the-azure-cluster-ID/). This license model is distributed as "Xtract IS for Azure".

How it works:

- **Development of SSIS Packages**

  ______________________________________________________________________

  - Install Xtract IS on an on-prem Visual Studio/SSDT environment, see [Xtract IS - Installation](../documentation/setup/installation/).
  - Develop SSIS packages with Xtract IS and deploy them to an Azure SSIS-IR.

- **Running SSIS Packages**

  ______________________________________________________________________

  - Install Xtract IS on an Azure SSIS-IR, see [Install Xtract IS For Azure](#install-xtract-is-for-azure).
  - Schedule and run the deployed SSIS packages in the Azure cloud.

### Prerequisites

- [Azure-SSIS Integration Runtime (IR), based on Microsoft's Azure Data Factory v2 (ADFv2)](https://docs.microsoft.com/en-us/azure/data-factory/create-azure-ssis-integration-runtime)
- The SAP system needs to be accessible from the Azure SSIS-IR, e.g., through a VPN tunnel or a self-hosted Integration Runtime (SHIR), see [Microsoft Documentation: Configure a self-hosted IR as a proxy for an Azure SSIS-IR in Azure Data Factory](https://docs.microsoft.com/en-us/azure/data-factory/self-hosted-integration-runtime-proxy-ssis).
- When creating the SSIS packages, make sure to use the correct SQL Server Data Tools (SSDT) for your SQL Server Integration Services (SSIS) version, see [Microsoft Documentation: Download SQL Server Data Tools (SSDT) for Visual Studio](https://docs.microsoft.com/en-us/sql/ssdt/download-sql-server-data-tools-ssdt?view=sql-server-ver15) for details.

### Setup an Azure SSIS-IR Environment

Refer to the Microsoft documentation to set up the Azure-SSIS Integration Runtime environment:

- [Provision the Azure-SSIS Integration Runtime in Azure Data Factory with Azure portal UI](https://docs.microsoft.com/en-us/azure/data-factory/tutorial-deploy-ssis-packages-azure)
- [Provision the Azure-SSIS Integration Runtime in Azure Data Factory with PowerShell](https://docs.microsoft.com/en-us/azure/data-factory/tutorial-deploy-ssis-packages-azure-powershell)

Once the environment runs, develop a simple SSIS package that does NOT contain any Xtract IS components and deploy and run the package on the Azure SSIS-IR. If the SSIS package runs is successfully, proceed to set up Xtract IS for Azure on the Azure SSIS-IR.

Note

By default Azure automatically updates the Microsoft integration runtime. To avoid possible compatibility issues with Xtract IS for Azure, disable automatic updates.

### Install Xtract IS for Azure

Follow the steps below to create an Azure Storage container for Xtract IS and add the container to an Azure SSIS-IR:

1. Follow the instructions in the [Microsoft Documentation: Standard Custom Setup](https://docs.microsoft.com/en-us/azure/data-factory/how-to-configure-azure-ssis-ir-custom-setup#standard-custom-setup) to set up 3rd party extensibility for Azure SSIS-IR. Only the part of the Azure storage container setup and the creation of a Shared Access Signature is relevant.

1. Copy the following files provided in the [customer portal](https://my.theobald-software.com/) into the Azure storage container:

   - *XtractISSetup.exe*
   - [main.cmd](https://cdn-files.theobald-software.com/download/XtractIS/main.cmd)
   - [XtractISLicense.json](../documentation/setup/license/) (license file provided after purchasing Xtract IS for Azure)

1. Add Azure Storage Container to SSIS-IR:

   - When provisioning the Azure SSIS-IR via the Azure Portal UI, enter the Azure Storage container's SAS URI in the *Custom setup container SAS URI* field.
   - When provisioning the Azure SSIS-IR via [PowerShell](https://docs.microsoft.com/de-de/azure/data-factory/tutorial-deploy-ssis-packages-azure-powershell#create-an-azure-ssis-integration-runtime) populate the parameter `-SetupScriptContainerSasUri` with the Azure Storage container's SAS URI.

1. Start the Integration Runtime. During the startup of the Integration Runtime the *main.cmd* is executed, which triggers an unattended installation of Xtract IS for Azure on the SSIS-IR.

The startup process of the Azure SSIS-IR might take up to 20 minutes.

Recommendation

A regular update of the software is crucial for stable performance. Check the [changelog](../changelog/) for updates. A newer version can be installed over the older version.

______________________________________________________________________

#### Related Links

- [Knowledge Base Article: Determine the Azure SSIS-IR Cluster ID](../knowledge-base/determine-the-azure-cluster-ID/)
- [Knowledge Base Article: Execute SSIS Packages between Cloud Data Stores and a Private Network Data Storage](../knowledge-base/execute-ssis-packages-between-cloud-data-stores-and-a-private-network-data-storage/)
